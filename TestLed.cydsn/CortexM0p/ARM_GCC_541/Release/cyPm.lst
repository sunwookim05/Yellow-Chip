ARM GAS  C:\Users\PC\AppData\Local\Temp\cc0jDEUP.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"cyPm.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CySysPmSleep,"ax",%progbits
  20              		.align	1
  21              		.global	CySysPmSleep
  22              		.code	16
  23              		.thumb_func
  24              		.type	CySysPmSleep, %function
  25              	CySysPmSleep:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC4\\cyPm.c"
   1:Generated_Source\PSoC4/cyPm.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/cyPm.c **** * \file cyPm.c
   3:Generated_Source\PSoC4/cyPm.c **** * \version 6.0
   4:Generated_Source\PSoC4/cyPm.c **** *
   5:Generated_Source\PSoC4/cyPm.c **** * \brief Provides an API for the power management.
   6:Generated_Source\PSoC4/cyPm.c **** *
   7:Generated_Source\PSoC4/cyPm.c **** * \note Documentation of the API's in this file is located in the System
   8:Generated_Source\PSoC4/cyPm.c **** * Reference Guide provided with PSoC Creator.
   9:Generated_Source\PSoC4/cyPm.c **** *
  10:Generated_Source\PSoC4/cyPm.c **** ********************************************************************************
  11:Generated_Source\PSoC4/cyPm.c **** * \copyright
  12:Generated_Source\PSoC4/cyPm.c **** * Copyright 2011-2018, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/cyPm.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/cyPm.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/cyPm.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/cyPm.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/cyPm.c **** 
  18:Generated_Source\PSoC4/cyPm.c **** #include "cyPm.h"
  19:Generated_Source\PSoC4/cyPm.c **** #include "CyLib.h"
  20:Generated_Source\PSoC4/cyPm.c **** #include "CyFlash.h"
  21:Generated_Source\PSoC4/cyPm.c **** 
  22:Generated_Source\PSoC4/cyPm.c **** 
  23:Generated_Source\PSoC4/cyPm.c **** /*******************************************************************************
  24:Generated_Source\PSoC4/cyPm.c **** * Function Name: CySysPmSleep
  25:Generated_Source\PSoC4/cyPm.c **** ****************************************************************************//**
  26:Generated_Source\PSoC4/cyPm.c **** *
  27:Generated_Source\PSoC4/cyPm.c **** * Puts the part into the Sleep state. This is a CPU-centric power mode.
  28:Generated_Source\PSoC4/cyPm.c **** * It means that the CPU has indicated that it is in the sleep mode and
  29:Generated_Source\PSoC4/cyPm.c **** * its main clock can be removed. It is identical to Active from a peripheral
  30:Generated_Source\PSoC4/cyPm.c **** * point of view. Any enabled interrupts can cause wakeup from the Sleep mode.
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc0jDEUP.s 			page 2


  31:Generated_Source\PSoC4/cyPm.c **** *
  32:Generated_Source\PSoC4/cyPm.c **** *******************************************************************************/
  33:Generated_Source\PSoC4/cyPm.c **** void CySysPmSleep(void)
  34:Generated_Source\PSoC4/cyPm.c **** {
  28              		.loc 1 34 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
  35:Generated_Source\PSoC4/cyPm.c ****     uint8 interruptState;
  36:Generated_Source\PSoC4/cyPm.c **** 
  37:Generated_Source\PSoC4/cyPm.c ****     interruptState = CyEnterCriticalSection();
  36              		.loc 1 37 0
  37 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  38              	.LVL0:
  38:Generated_Source\PSoC4/cyPm.c **** 
  39:Generated_Source\PSoC4/cyPm.c ****     /* CPU enters Sleep mode upon execution of WFI */
  40:Generated_Source\PSoC4/cyPm.c ****     CY_PM_CPU_SCR_REG &= (uint32) (~CY_PM_CPU_SCR_SLEEPDEEP);
  39              		.loc 1 40 0
  40 0006 0421     		movs	r1, #4
  41 0008 034A     		ldr	r2, .L2
  42 000a 1368     		ldr	r3, [r2]
  43 000c 8B43     		bics	r3, r1
  44 000e 1360     		str	r3, [r2]
  41:Generated_Source\PSoC4/cyPm.c **** 
  42:Generated_Source\PSoC4/cyPm.c ****     /* Sleep and wait for interrupt */
  43:Generated_Source\PSoC4/cyPm.c ****     CY_PM_WFI;
  45              		.loc 1 43 0
  46              		.syntax divided
  47              	@ 43 "Generated_Source\PSoC4\cyPm.c" 1
  48 0010 30BF     		WFI 
  49              	
  50              	@ 0 "" 2
  44:Generated_Source\PSoC4/cyPm.c **** 
  45:Generated_Source\PSoC4/cyPm.c ****     CyExitCriticalSection(interruptState);
  51              		.loc 1 45 0
  52              		.thumb
  53              		.syntax unified
  54 0012 FFF7FEFF 		bl	CyExitCriticalSection
  55              	.LVL1:
  46:Generated_Source\PSoC4/cyPm.c **** }
  56              		.loc 1 46 0
  57              		@ sp needed
  58 0016 10BD     		pop	{r4, pc}
  59              	.L3:
  60              		.align	2
  61              	.L2:
  62 0018 10ED00E0 		.word	-536810224
  63              		.cfi_endproc
  64              	.LFE1:
  65              		.size	CySysPmSleep, .-CySysPmSleep
  66              		.section	.text.CySysPmDeepSleep,"ax",%progbits
  67              		.align	1
  68              		.global	CySysPmDeepSleep
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc0jDEUP.s 			page 3


  69              		.code	16
  70              		.thumb_func
  71              		.type	CySysPmDeepSleep, %function
  72              	CySysPmDeepSleep:
  73              	.LFB2:
  47:Generated_Source\PSoC4/cyPm.c **** 
  48:Generated_Source\PSoC4/cyPm.c **** 
  49:Generated_Source\PSoC4/cyPm.c **** /*******************************************************************************
  50:Generated_Source\PSoC4/cyPm.c **** * Function Name: CySysPmDeepSleep
  51:Generated_Source\PSoC4/cyPm.c **** ****************************************************************************//**
  52:Generated_Source\PSoC4/cyPm.c **** *
  53:Generated_Source\PSoC4/cyPm.c **** * Puts the part into the Deep Sleep state. If the firmware attempts to enter
  54:Generated_Source\PSoC4/cyPm.c **** * this mode before the system is ready (that is, when
  55:Generated_Source\PSoC4/cyPm.c **** * PWR_CONTROL.LPM_READY = 0), then the device will go into the Sleep mode
  56:Generated_Source\PSoC4/cyPm.c **** * instead and automatically enter the originally intended mode when the
  57:Generated_Source\PSoC4/cyPm.c **** * holdoff expires.
  58:Generated_Source\PSoC4/cyPm.c **** *
  59:Generated_Source\PSoC4/cyPm.c **** * The wakeup occurs when an interrupt is received from a DeepSleep or
  60:Generated_Source\PSoC4/cyPm.c **** * Hibernate peripheral. For more details, see a corresponding
  61:Generated_Source\PSoC4/cyPm.c **** * peripheral's datasheet.
  62:Generated_Source\PSoC4/cyPm.c **** *
  63:Generated_Source\PSoC4/cyPm.c **** *******************************************************************************/
  64:Generated_Source\PSoC4/cyPm.c **** void CySysPmDeepSleep(void)
  65:Generated_Source\PSoC4/cyPm.c **** {
  74              		.loc 1 65 0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78              	.LVL2:
  79 0000 70B5     		push	{r4, r5, r6, lr}
  80              		.cfi_def_cfa_offset 16
  81              		.cfi_offset 4, -16
  82              		.cfi_offset 5, -12
  83              		.cfi_offset 6, -8
  84              		.cfi_offset 14, -4
  66:Generated_Source\PSoC4/cyPm.c ****     uint8 interruptState;
  67:Generated_Source\PSoC4/cyPm.c ****     #if(CY_IP_SRSSV2)
  68:Generated_Source\PSoC4/cyPm.c ****         volatile uint32 clkSelectReg;
  69:Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_IP_SRSSV2) */
  70:Generated_Source\PSoC4/cyPm.c ****     
  71:Generated_Source\PSoC4/cyPm.c ****     #if(CY_IP_ECO_SRSSLT)
  72:Generated_Source\PSoC4/cyPm.c ****         volatile uint32 pllResoreFlag = 0u;
  73:Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_IP_ECO_SRSSLT) */
  74:Generated_Source\PSoC4/cyPm.c **** 
  75:Generated_Source\PSoC4/cyPm.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
  76:Generated_Source\PSoC4/cyPm.c ****         uint32 regTmp = 0u;
  77:Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
  78:Generated_Source\PSoC4/cyPm.c ****     
  79:Generated_Source\PSoC4/cyPm.c ****     interruptState = CyEnterCriticalSection();
  85              		.loc 1 79 0
  86 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  87              	.LVL3:
  88 0006 0400     		movs	r4, r0
  89              	.LVL4:
  80:Generated_Source\PSoC4/cyPm.c **** 
  81:Generated_Source\PSoC4/cyPm.c ****     #if(CY_IP_ECO_SRSSLT)
  82:Generated_Source\PSoC4/cyPm.c ****         if(0u != (CY_SYS_ECO_CLK_SELECT_REG & CY_SYS_ECO_CLK_SELECT_ECO_PLL_MASK))
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc0jDEUP.s 			page 4


  83:Generated_Source\PSoC4/cyPm.c ****         {
  84:Generated_Source\PSoC4/cyPm.c ****             pllResoreFlag = 1u;
  85:Generated_Source\PSoC4/cyPm.c ****             
  86:Generated_Source\PSoC4/cyPm.c ****             /* Set default state = IMO for HFCLK_SEL bit mask */
  87:Generated_Source\PSoC4/cyPm.c ****             CY_SYS_CLK_SELECT_REG &= (uint32)(~CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
  88:Generated_Source\PSoC4/cyPm.c ****         }
  89:Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_IP_ECO_SRSSLT) */
  90:Generated_Source\PSoC4/cyPm.c **** 
  91:Generated_Source\PSoC4/cyPm.c ****     #if(CY_IP_SRSSV2)
  92:Generated_Source\PSoC4/cyPm.c ****         /* Device enters DeepSleep mode when CPU asserts SLEEPDEEP signal */
  93:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_CONTROL_REG &= (uint32) (~CY_PM_PWR_CONTROL_HIBERNATE);
  94:Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_IP_SRSSV2) */
  95:Generated_Source\PSoC4/cyPm.c **** 
  96:Generated_Source\PSoC4/cyPm.c ****     #if (CY_IP_CPUSS && CY_IP_SRSSV2)
  97:Generated_Source\PSoC4/cyPm.c ****         CY_PM_CPUSS_CONFIG_REG |= CY_PM_CPUSS_CONFIG_FLSH_ACC_BYPASS;
  98:Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_IP_CPUSS && CY_IP_SRSSV2) */
  99:Generated_Source\PSoC4/cyPm.c ****     
 100:Generated_Source\PSoC4/cyPm.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 101:Generated_Source\PSoC4/cyPm.c ****         if (0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE))
  90              		.loc 1 101 0
  91 0008 1648     		ldr	r0, .L14
  92 000a 0368     		ldr	r3, [r0]
  93 000c 5B00     		lsls	r3, r3, #1
  94 000e 0DD5     		bpl	.L5
 102:Generated_Source\PSoC4/cyPm.c ****         {
 103:Generated_Source\PSoC4/cyPm.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
  95              		.loc 1 103 0
  96 0010 154D     		ldr	r5, .L14+4
 104:Generated_Source\PSoC4/cyPm.c ****             CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (((CY_SYS_CLK_IMO_TRIM1_REG + CY_PM_WCO_DPLL_LF_LIM
  97              		.loc 1 104 0
  98 0012 164B     		ldr	r3, .L14+8
 103:Generated_Source\PSoC4/cyPm.c ****             CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (((CY_SYS_CLK_IMO_TRIM1_REG + CY_PM_WCO_DPLL_LF_LIM
  99              		.loc 1 103 0
 100 0014 2E68     		ldr	r6, [r5]
 101              	.LVL5:
 102              		.loc 1 104 0
 103 0016 1968     		ldr	r1, [r3]
 104 0018 FF23     		movs	r3, #255
 105 001a 0431     		adds	r1, r1, #4
 106 001c 9B05     		lsls	r3, r3, #22
 107 001e 8905     		lsls	r1, r1, #22
 108 0020 1940     		ands	r1, r3
 109 0022 0B00     		movs	r3, r1
 110 0024 124A     		ldr	r2, .L14+12
 111 0026 3240     		ands	r2, r6
 112              	.LVL6:
 113 0028 1343     		orrs	r3, r2
 114 002a 2B60     		str	r3, [r5]
 115              	.LVL7:
 116              	.L5:
 105:Generated_Source\PSoC4/cyPm.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX) << 
 106:Generated_Source\PSoC4/cyPm.c ****                                                  CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT));
 107:Generated_Source\PSoC4/cyPm.c ****         }
 108:Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 109:Generated_Source\PSoC4/cyPm.c **** 
 110:Generated_Source\PSoC4/cyPm.c ****     /* Adjust delay to wait for references to settle on wakeup from Deep Sleep */
 111:Generated_Source\PSoC4/cyPm.c ****     CY_PM_PWR_KEY_DELAY_REG = CY_SFLASH_DPSLP_KEY_DELAY_REG;
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc0jDEUP.s 			page 5


 112:Generated_Source\PSoC4/cyPm.c **** 
 113:Generated_Source\PSoC4/cyPm.c ****     /* CPU enters DeepSleep/Hibernate mode upon execution of WFI */
 114:Generated_Source\PSoC4/cyPm.c ****     CY_PM_CPU_SCR_REG |= CY_PM_CPU_SCR_SLEEPDEEP;
 117              		.loc 1 114 0
 118 002c 0421     		movs	r1, #4
 111:Generated_Source\PSoC4/cyPm.c **** 
 119              		.loc 1 111 0
 120 002e 114B     		ldr	r3, .L14+16
 121 0030 114A     		ldr	r2, .L14+20
 122 0032 1B88     		ldrh	r3, [r3]
 123 0034 9BB2     		uxth	r3, r3
 124 0036 1360     		str	r3, [r2]
 125              		.loc 1 114 0
 126 0038 104A     		ldr	r2, .L14+24
 127 003a 1368     		ldr	r3, [r2]
 128 003c 0B43     		orrs	r3, r1
 129 003e 1360     		str	r3, [r2]
 115:Generated_Source\PSoC4/cyPm.c **** 
 116:Generated_Source\PSoC4/cyPm.c ****     #if(CY_IP_SRSSV2)
 117:Generated_Source\PSoC4/cyPm.c ****         /* Preserve system clock configuration and
 118:Generated_Source\PSoC4/cyPm.c ****         * reduce sysclk to <=12 MHz (Cypress ID #158710, #179888).
 119:Generated_Source\PSoC4/cyPm.c ****         */
 120:Generated_Source\PSoC4/cyPm.c ****         clkSelectReg = CY_SYS_CLK_SELECT_REG;
 121:Generated_Source\PSoC4/cyPm.c ****         CySysClkWriteSysclkDiv(CY_SYS_CLK_SYSCLK_DIV4);
 122:Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_IP_SRSSV2) */
 123:Generated_Source\PSoC4/cyPm.c ****     
 124:Generated_Source\PSoC4/cyPm.c ****     /* Sleep and wait for interrupt */
 125:Generated_Source\PSoC4/cyPm.c ****     CY_PM_WFI;
 130              		.loc 1 125 0
 131              		.syntax divided
 132              	@ 125 "Generated_Source\PSoC4\cyPm.c" 1
 133 0040 30BF     		WFI 
 134              	
 135              	@ 0 "" 2
 126:Generated_Source\PSoC4/cyPm.c **** 
 127:Generated_Source\PSoC4/cyPm.c ****     #if(CY_IP_SRSSV2)
 128:Generated_Source\PSoC4/cyPm.c ****         /* Restore system clock configuration */
 129:Generated_Source\PSoC4/cyPm.c ****         CY_SYS_CLK_SELECT_REG = clkSelectReg;
 130:Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_IP_SRSSV2) */
 131:Generated_Source\PSoC4/cyPm.c **** 
 132:Generated_Source\PSoC4/cyPm.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 133:Generated_Source\PSoC4/cyPm.c ****         if (0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE))
 136              		.loc 1 133 0
 137              		.thumb
 138              		.syntax unified
 139 0042 0368     		ldr	r3, [r0]
 140 0044 5B00     		lsls	r3, r3, #1
 141 0046 08D5     		bpl	.L6
 134:Generated_Source\PSoC4/cyPm.c ****         {
 135:Generated_Source\PSoC4/cyPm.c ****             CyDelayUs(CY_PM_WCO_DPLL_WAKEUP_DELAY);
 142              		.loc 1 135 0
 143 0048 2320     		movs	r0, #35
 144 004a FFF7FEFF 		bl	CyDelayUs
 145              	.LVL8:
 136:Generated_Source\PSoC4/cyPm.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 137:Generated_Source\PSoC4/cyPm.c ****             CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX << 
 146              		.loc 1 137 0
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc0jDEUP.s 			page 6


 147 004e FF23     		movs	r3, #255
 136:Generated_Source\PSoC4/cyPm.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 148              		.loc 1 136 0
 149 0050 054A     		ldr	r2, .L14+4
 150              		.loc 1 137 0
 151 0052 9B05     		lsls	r3, r3, #22
 136:Generated_Source\PSoC4/cyPm.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 152              		.loc 1 136 0
 153 0054 1168     		ldr	r1, [r2]
 154              	.LVL9:
 155              		.loc 1 137 0
 156 0056 0B43     		orrs	r3, r1
 157 0058 1360     		str	r3, [r2]
 158              	.LVL10:
 159              	.L6:
 138:Generated_Source\PSoC4/cyPm.c ****                                                  CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT));
 139:Generated_Source\PSoC4/cyPm.c ****         }
 140:Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */    
 141:Generated_Source\PSoC4/cyPm.c ****     
 142:Generated_Source\PSoC4/cyPm.c ****     #if (CY_IP_CPUSS && CY_IP_SRSSV2)
 143:Generated_Source\PSoC4/cyPm.c ****         CY_PM_CPUSS_CONFIG_REG &= (uint32) (~CY_PM_CPUSS_CONFIG_FLSH_ACC_BYPASS);
 144:Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_IP_CPUSS && CY_IP_SRSSV2) */
 145:Generated_Source\PSoC4/cyPm.c **** 
 146:Generated_Source\PSoC4/cyPm.c ****     #if(CY_IP_ECO_SRSSLT)
 147:Generated_Source\PSoC4/cyPm.c ****         if(0u != pllResoreFlag)
 148:Generated_Source\PSoC4/cyPm.c ****         {
 149:Generated_Source\PSoC4/cyPm.c ****             CySysClkWriteHfclkDirect(CY_SYS_CLK_HFCLK_PLL0);
 150:Generated_Source\PSoC4/cyPm.c ****         }
 151:Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_IP_ECO_SRSSLT) */    
 152:Generated_Source\PSoC4/cyPm.c **** 
 153:Generated_Source\PSoC4/cyPm.c ****     CyExitCriticalSection(interruptState);
 160              		.loc 1 153 0
 161 005a 2000     		movs	r0, r4
 162 005c FFF7FEFF 		bl	CyExitCriticalSection
 163              	.LVL11:
 154:Generated_Source\PSoC4/cyPm.c **** }
 164              		.loc 1 154 0
 165              		@ sp needed
 166              	.LVL12:
 167 0060 70BD     		pop	{r4, r5, r6, pc}
 168              	.L15:
 169 0062 C046     		.align	2
 170              	.L14:
 171 0064 00000740 		.word	1074200576
 172 0068 08000740 		.word	1074200584
 173 006c 0C0F0340 		.word	1073942284
 174 0070 FFFF3FC0 		.word	-1069547521
 175 0074 52F1FF0F 		.word	268431698
 176 0078 04000340 		.word	1073938436
 177 007c 10ED00E0 		.word	-536810224
 178              		.cfi_endproc
 179              	.LFE2:
 180              		.size	CySysPmDeepSleep, .-CySysPmDeepSleep
 181              		.section	.text.CySysPmSetWakeupHoldoff,"ax",%progbits
 182              		.align	1
 183              		.global	CySysPmSetWakeupHoldoff
 184              		.code	16
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc0jDEUP.s 			page 7


 185              		.thumb_func
 186              		.type	CySysPmSetWakeupHoldoff, %function
 187              	CySysPmSetWakeupHoldoff:
 188              	.LFB3:
 155:Generated_Source\PSoC4/cyPm.c **** 
 156:Generated_Source\PSoC4/cyPm.c **** 
 157:Generated_Source\PSoC4/cyPm.c **** #if(CY_IP_SRSSV2)
 158:Generated_Source\PSoC4/cyPm.c **** 
 159:Generated_Source\PSoC4/cyPm.c ****     /*******************************************************************************
 160:Generated_Source\PSoC4/cyPm.c ****     * Function Name: CySysPmHibernate
 161:Generated_Source\PSoC4/cyPm.c ****     ****************************************************************************//**
 162:Generated_Source\PSoC4/cyPm.c ****     *
 163:Generated_Source\PSoC4/cyPm.c ****     * Puts the part into the Hibernate state. Only SRAM and UDBs are retained;
 164:Generated_Source\PSoC4/cyPm.c ****     * most internal supplies are off. Wakeup is possible from a pin or a hibernate
 165:Generated_Source\PSoC4/cyPm.c ****     * comparator only.
 166:Generated_Source\PSoC4/cyPm.c ****     *
 167:Generated_Source\PSoC4/cyPm.c ****     * It is expected that the firmware has already frozen the IO-Cells using
 168:Generated_Source\PSoC4/cyPm.c ****     * CySysPmFreezeIo() function before the call to this function. If this is
 169:Generated_Source\PSoC4/cyPm.c ****     * omitted, the IO-cells will be frozen in the same way as they are
 170:Generated_Source\PSoC4/cyPm.c ****     * in the Active to Deep Sleep transition, but will lose their state on wake up
 171:Generated_Source\PSoC4/cyPm.c ****     * (because of the reset occurring at that time).
 172:Generated_Source\PSoC4/cyPm.c ****     *
 173:Generated_Source\PSoC4/cyPm.c ****     * Because all the CPU state is lost, the CPU will start up at the reset vector.
 174:Generated_Source\PSoC4/cyPm.c ****     * To save the firmware state through the Hibernate low power mode, a
 175:Generated_Source\PSoC4/cyPm.c ****     * corresponding variable should be defined with CY_NOINIT attribute. It
 176:Generated_Source\PSoC4/cyPm.c ****     * prevents data from being initialized to zero on startup. The interrupt
 177:Generated_Source\PSoC4/cyPm.c ****     * cause of the hibernate peripheral is retained, such that it can be either
 178:Generated_Source\PSoC4/cyPm.c ****     * read by the firmware or cause an interrupt after the firmware has booted and
 179:Generated_Source\PSoC4/cyPm.c ****     * enabled the corresponding interrupt. To distinguish the wakeup from
 180:Generated_Source\PSoC4/cyPm.c ****     * the Hibernate mode and the general Reset event, the
 181:Generated_Source\PSoC4/cyPm.c ****     * \ref CySysPmGetResetReason() function could be used.
 182:Generated_Source\PSoC4/cyPm.c ****     *
 183:Generated_Source\PSoC4/cyPm.c ****     *******************************************************************************/
 184:Generated_Source\PSoC4/cyPm.c ****     void CySysPmHibernate(void)
 185:Generated_Source\PSoC4/cyPm.c ****     {
 186:Generated_Source\PSoC4/cyPm.c ****         uint8 interruptState;
 187:Generated_Source\PSoC4/cyPm.c **** 
 188:Generated_Source\PSoC4/cyPm.c ****         interruptState = CyEnterCriticalSection();
 189:Generated_Source\PSoC4/cyPm.c **** 
 190:Generated_Source\PSoC4/cyPm.c ****         #if (CY_IP_HOBTO_DEVICE)
 191:Generated_Source\PSoC4/cyPm.c ****             /* Disable input buffers for all ports */
 192:Generated_Source\PSoC4/cyPm.c ****             CySysPmHibPinsDisableInputBuf();
 193:Generated_Source\PSoC4/cyPm.c ****         #endif /* (CY_IP_HOBTO_DEVICE) */
 194:Generated_Source\PSoC4/cyPm.c **** 
 195:Generated_Source\PSoC4/cyPm.c ****         /* Device enters Hibernate mode when CPU asserts SLEEPDEEP signal */
 196:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_CONTROL_REG |= CY_PM_PWR_CONTROL_HIBERNATE;
 197:Generated_Source\PSoC4/cyPm.c **** 
 198:Generated_Source\PSoC4/cyPm.c ****         /* Adjust delay to wait for references to settle on wakeup from hibernate */
 199:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_KEY_DELAY_REG = CY_SFLASH_HIB_KEY_DELAY_REG;
 200:Generated_Source\PSoC4/cyPm.c **** 
 201:Generated_Source\PSoC4/cyPm.c ****         /* CPU enters DeepSleep/Hibernate mode upon execution of WFI */
 202:Generated_Source\PSoC4/cyPm.c ****         CY_PM_CPU_SCR_REG |= CY_PM_CPU_SCR_SLEEPDEEP;
 203:Generated_Source\PSoC4/cyPm.c **** 
 204:Generated_Source\PSoC4/cyPm.c ****         /* Save token that will retain through a STOP/WAKEUP sequence
 205:Generated_Source\PSoC4/cyPm.c ****          * thus could be used by CySysPmGetResetReason() to differentiate
 206:Generated_Source\PSoC4/cyPm.c ****          * WAKEUP from a general RESET event.
 207:Generated_Source\PSoC4/cyPm.c ****          */
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc0jDEUP.s 			page 8


 208:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_STOP_REG = (CY_PM_PWR_STOP_REG & (uint32)(~CY_PM_PWR_STOP_TOKEN_MASK)) | CY_PM_PW
 209:Generated_Source\PSoC4/cyPm.c **** 
 210:Generated_Source\PSoC4/cyPm.c ****         /* Sleep and wait for interrupt. Wakeup from Hibernate is performed
 211:Generated_Source\PSoC4/cyPm.c ****          * through RESET state, causing a normal Boot procedure to occur.
 212:Generated_Source\PSoC4/cyPm.c ****          * The WFI instruction doesn't put the core to sleep if its wake condition
 213:Generated_Source\PSoC4/cyPm.c ****          * is true when the instruction is executed.
 214:Generated_Source\PSoC4/cyPm.c ****          */
 215:Generated_Source\PSoC4/cyPm.c ****         CY_PM_WFI;
 216:Generated_Source\PSoC4/cyPm.c **** 
 217:Generated_Source\PSoC4/cyPm.c ****         CyExitCriticalSection(interruptState);
 218:Generated_Source\PSoC4/cyPm.c ****     }
 219:Generated_Source\PSoC4/cyPm.c **** 
 220:Generated_Source\PSoC4/cyPm.c **** 
 221:Generated_Source\PSoC4/cyPm.c ****     /*******************************************************************************
 222:Generated_Source\PSoC4/cyPm.c ****     * Function Name: CySysPmStop
 223:Generated_Source\PSoC4/cyPm.c ****     ****************************************************************************//**
 224:Generated_Source\PSoC4/cyPm.c ****     *
 225:Generated_Source\PSoC4/cyPm.c ****     * Puts the part into the Stop state. All internal supplies are off;
 226:Generated_Source\PSoC4/cyPm.c ****     * no state is retained.
 227:Generated_Source\PSoC4/cyPm.c ****     *
 228:Generated_Source\PSoC4/cyPm.c ****     * Wakeup from Stop is performed by toggling the wakeup pin, causing
 229:Generated_Source\PSoC4/cyPm.c ****     * a normal boot procedure to occur. To configure the wakeup pin,
 230:Generated_Source\PSoC4/cyPm.c ****     * the Digital Input Pin component should be placed on the schematic,
 231:Generated_Source\PSoC4/cyPm.c ****     * assigned to the wakeup pin, and resistively pulled up or down to the inverse
 232:Generated_Source\PSoC4/cyPm.c ****     * state of the wakeup polarity. To distinguish the wakeup from the Stop mode
 233:Generated_Source\PSoC4/cyPm.c ****     * and the general Reset event, \ref CySysPmGetResetReason() function could be
 234:Generated_Source\PSoC4/cyPm.c ****     * used.  The wakeup pin is active low by default. The wakeup pin polarity
 235:Generated_Source\PSoC4/cyPm.c ****     * could be changed with the \ref CySysPmSetWakeupPolarity() function.
 236:Generated_Source\PSoC4/cyPm.c ****     *
 237:Generated_Source\PSoC4/cyPm.c ****     * This function freezes IO cells implicitly. It is not possible to enter
 238:Generated_Source\PSoC4/cyPm.c ****     * the STOP mode before freezing the IO cells. The IO cells remain frozen after
 239:Generated_Source\PSoC4/cyPm.c ****     * awake from the Stop mode until the firmware unfreezes them after booting
 240:Generated_Source\PSoC4/cyPm.c ****     * explicitly with \ref CySysPmUnfreezeIo() function call.
 241:Generated_Source\PSoC4/cyPm.c ****     *
 242:Generated_Source\PSoC4/cyPm.c ****     *******************************************************************************/
 243:Generated_Source\PSoC4/cyPm.c ****     void CySysPmStop(void)
 244:Generated_Source\PSoC4/cyPm.c ****     {
 245:Generated_Source\PSoC4/cyPm.c ****         (void) CyEnterCriticalSection();
 246:Generated_Source\PSoC4/cyPm.c **** 
 247:Generated_Source\PSoC4/cyPm.c ****         /* Update token to indicate Stop mode transition. Preserve only polarity. */
 248:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_STOP_REG = (CY_PM_PWR_STOP_REG & CY_PM_PWR_STOP_POLARITY) | CY_PM_PWR_STOP_TOKEN_
 249:Generated_Source\PSoC4/cyPm.c **** 
 250:Generated_Source\PSoC4/cyPm.c ****         /* Freeze IO-Cells to save IO-Cell state */
 251:Generated_Source\PSoC4/cyPm.c ****         CySysPmFreezeIo();
 252:Generated_Source\PSoC4/cyPm.c **** 
 253:Generated_Source\PSoC4/cyPm.c ****         /* Initiates transition to Stop state */
 254:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_STOP_REG = CY_PM_PWR_STOP_REG | CY_PM_PWR_STOP_STOP;
 255:Generated_Source\PSoC4/cyPm.c **** 
 256:Generated_Source\PSoC4/cyPm.c ****         /* Depending on the clock frequency and internal timing delays,
 257:Generated_Source\PSoC4/cyPm.c ****          * the final AHB transaction may or may not complete. To guard against
 258:Generated_Source\PSoC4/cyPm.c ****          * accidentally executing an unintended instruction, it is recommended
 259:Generated_Source\PSoC4/cyPm.c ****          * to add 2 NOP cycles after the final write to the STOP register.
 260:Generated_Source\PSoC4/cyPm.c ****          */
 261:Generated_Source\PSoC4/cyPm.c ****         CY_NOP;
 262:Generated_Source\PSoC4/cyPm.c ****         CY_NOP;
 263:Generated_Source\PSoC4/cyPm.c **** 
 264:Generated_Source\PSoC4/cyPm.c ****         /* Should never get to this WFI instruction */
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc0jDEUP.s 			page 9


 265:Generated_Source\PSoC4/cyPm.c ****         CY_PM_WFI;
 266:Generated_Source\PSoC4/cyPm.c **** 
 267:Generated_Source\PSoC4/cyPm.c ****         /* Wakeup from Stop is performed by toggling of Wakeup pin,
 268:Generated_Source\PSoC4/cyPm.c ****          * causing a normal Boot procedure to occur. No need to exit
 269:Generated_Source\PSoC4/cyPm.c ****          * from the critical section.
 270:Generated_Source\PSoC4/cyPm.c ****          */
 271:Generated_Source\PSoC4/cyPm.c ****     }
 272:Generated_Source\PSoC4/cyPm.c **** 
 273:Generated_Source\PSoC4/cyPm.c **** 
 274:Generated_Source\PSoC4/cyPm.c ****     /*******************************************************************************
 275:Generated_Source\PSoC4/cyPm.c ****     * Function Name: CySysPmSetWakeupPolarity
 276:Generated_Source\PSoC4/cyPm.c ****     ****************************************************************************//**
 277:Generated_Source\PSoC4/cyPm.c ****     *
 278:Generated_Source\PSoC4/cyPm.c ****     * Wake up from the stop mode is performed by toggling the wakeup pin,
 279:Generated_Source\PSoC4/cyPm.c ****     * causing a normal boot procedure to occur. This function assigns
 280:Generated_Source\PSoC4/cyPm.c ****     * the wakeup pin active level. Setting the wakeup pin to this level will cause
 281:Generated_Source\PSoC4/cyPm.c ****     * the wakeup from stop mode. The wakeup pin is active low by default.
 282:Generated_Source\PSoC4/cyPm.c ****     *
 283:Generated_Source\PSoC4/cyPm.c ****     * \param polarity
 284:Generated_Source\PSoC4/cyPm.c ****     * - \ref CY_PM_STOP_WAKEUP_ACTIVE_LOW Logical zero will wakeup the chip
 285:Generated_Source\PSoC4/cyPm.c ****     * - \ref CY_PM_STOP_WAKEUP_ACTIVE_HIGH Logical one will wakeup the chip
 286:Generated_Source\PSoC4/cyPm.c ****     *
 287:Generated_Source\PSoC4/cyPm.c ****     *******************************************************************************/
 288:Generated_Source\PSoC4/cyPm.c ****     void CySysPmSetWakeupPolarity(uint32 polarity)
 289:Generated_Source\PSoC4/cyPm.c ****     {
 290:Generated_Source\PSoC4/cyPm.c ****         uint8 interruptState;
 291:Generated_Source\PSoC4/cyPm.c **** 
 292:Generated_Source\PSoC4/cyPm.c ****         interruptState = CyEnterCriticalSection();
 293:Generated_Source\PSoC4/cyPm.c **** 
 294:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_STOP_REG = (CY_PM_STOP_WAKEUP_ACTIVE_LOW != polarity) ?
 295:Generated_Source\PSoC4/cyPm.c ****                             (CY_PM_PWR_STOP_REG | CY_PM_PWR_STOP_POLARITY) :
 296:Generated_Source\PSoC4/cyPm.c ****                             (CY_PM_PWR_STOP_REG & (uint32) (~CY_PM_PWR_STOP_POLARITY));
 297:Generated_Source\PSoC4/cyPm.c **** 
 298:Generated_Source\PSoC4/cyPm.c ****         CyExitCriticalSection(interruptState);
 299:Generated_Source\PSoC4/cyPm.c ****     }
 300:Generated_Source\PSoC4/cyPm.c **** 
 301:Generated_Source\PSoC4/cyPm.c **** 
 302:Generated_Source\PSoC4/cyPm.c ****     /*******************************************************************************
 303:Generated_Source\PSoC4/cyPm.c ****     * Function Name: CySysPmGetResetReason
 304:Generated_Source\PSoC4/cyPm.c ****     ****************************************************************************//**
 305:Generated_Source\PSoC4/cyPm.c ****     *
 306:Generated_Source\PSoC4/cyPm.c ****     * Retrieves the last reset reason - transition from OFF/XRES/STOP/HIBERNATE to
 307:Generated_Source\PSoC4/cyPm.c ****     * the RESET state. Note that waking up from STOP using XRES will be perceived
 308:Generated_Source\PSoC4/cyPm.c ****     * as a general RESET.
 309:Generated_Source\PSoC4/cyPm.c ****     *
 310:Generated_Source\PSoC4/cyPm.c ****     * \return CY_PM_RESET_REASON_UNKN          Unknown reset reason.
 311:Generated_Source\PSoC4/cyPm.c ****     * \return CY_PM_RESET_REASON_XRES          Transition from OFF/XRES to RESET
 312:Generated_Source\PSoC4/cyPm.c ****     * \return CY_PM_RESET_REASON_WAKEUP_HIB    Transition/wakeup from HIBERNATE to RESET
 313:Generated_Source\PSoC4/cyPm.c ****     * \return CY_PM_RESET_REASON_WAKEUP_STOP   Transition/wakeup from STOP to RESET
 314:Generated_Source\PSoC4/cyPm.c ****     *
 315:Generated_Source\PSoC4/cyPm.c ****     *******************************************************************************/
 316:Generated_Source\PSoC4/cyPm.c ****     uint32 CySysPmGetResetReason(void)
 317:Generated_Source\PSoC4/cyPm.c ****     {
 318:Generated_Source\PSoC4/cyPm.c ****         uint32 reason = CY_PM_RESET_REASON_UNKN;
 319:Generated_Source\PSoC4/cyPm.c **** 
 320:Generated_Source\PSoC4/cyPm.c ****         switch(CY_PM_PWR_STOP_REG & CY_PM_PWR_STOP_TOKEN_MASK)
 321:Generated_Source\PSoC4/cyPm.c ****         {
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc0jDEUP.s 			page 10


 322:Generated_Source\PSoC4/cyPm.c ****         /* Power up, XRES */
 323:Generated_Source\PSoC4/cyPm.c ****         case CY_PM_PWR_STOP_TOKEN_XRES:
 324:Generated_Source\PSoC4/cyPm.c ****             reason = CY_PM_RESET_REASON_XRES;
 325:Generated_Source\PSoC4/cyPm.c ****             break;
 326:Generated_Source\PSoC4/cyPm.c **** 
 327:Generated_Source\PSoC4/cyPm.c ****         /* Wakeup from Hibernate */
 328:Generated_Source\PSoC4/cyPm.c ****         case CY_PM_PWR_STOP_TOKEN_HIB:
 329:Generated_Source\PSoC4/cyPm.c ****             reason = CY_PM_RESET_REASON_WAKEUP_HIB;
 330:Generated_Source\PSoC4/cyPm.c ****             break;
 331:Generated_Source\PSoC4/cyPm.c **** 
 332:Generated_Source\PSoC4/cyPm.c ****         /* Wakeup from Stop (through WAKEUP pin assert) */
 333:Generated_Source\PSoC4/cyPm.c ****         case CY_PM_PWR_STOP_TOKEN_STOP:
 334:Generated_Source\PSoC4/cyPm.c ****             reason = CY_PM_RESET_REASON_WAKEUP_STOP;
 335:Generated_Source\PSoC4/cyPm.c ****             break;
 336:Generated_Source\PSoC4/cyPm.c **** 
 337:Generated_Source\PSoC4/cyPm.c ****         /* Unknown reason */
 338:Generated_Source\PSoC4/cyPm.c ****         default:
 339:Generated_Source\PSoC4/cyPm.c ****             break;
 340:Generated_Source\PSoC4/cyPm.c ****         }
 341:Generated_Source\PSoC4/cyPm.c **** 
 342:Generated_Source\PSoC4/cyPm.c ****         return (reason);
 343:Generated_Source\PSoC4/cyPm.c ****     }
 344:Generated_Source\PSoC4/cyPm.c **** 
 345:Generated_Source\PSoC4/cyPm.c **** 
 346:Generated_Source\PSoC4/cyPm.c ****     /*******************************************************************************
 347:Generated_Source\PSoC4/cyPm.c ****     * Function Name: CySysPmFreezeIo
 348:Generated_Source\PSoC4/cyPm.c ****     ****************************************************************************//**
 349:Generated_Source\PSoC4/cyPm.c ****     *
 350:Generated_Source\PSoC4/cyPm.c ****     * Freezes IO-Cells directly to save the IO-Cell state on wake up from the
 351:Generated_Source\PSoC4/cyPm.c ****     * Hibernate or Stop state. It is not required to call this function before
 352:Generated_Source\PSoC4/cyPm.c ****     * entering the Stop mode, since \ref CySysPmStop() function freezes IO-Cells
 353:Generated_Source\PSoC4/cyPm.c ****     * implicitly.
 354:Generated_Source\PSoC4/cyPm.c ****     *
 355:Generated_Source\PSoC4/cyPm.c ****     * This API is not available for PSoC 4000 family of devices.
 356:Generated_Source\PSoC4/cyPm.c ****     *
 357:Generated_Source\PSoC4/cyPm.c ****     *******************************************************************************/
 358:Generated_Source\PSoC4/cyPm.c ****     void CySysPmFreezeIo(void)
 359:Generated_Source\PSoC4/cyPm.c ****     {
 360:Generated_Source\PSoC4/cyPm.c ****         uint8 interruptState;
 361:Generated_Source\PSoC4/cyPm.c **** 
 362:Generated_Source\PSoC4/cyPm.c ****         interruptState = CyEnterCriticalSection();
 363:Generated_Source\PSoC4/cyPm.c **** 
 364:Generated_Source\PSoC4/cyPm.c ****         /* Check FREEZE state to avoid recurrent IO-Cells freeze attempt,
 365:Generated_Source\PSoC4/cyPm.c ****          * since the second call to this function will cause accidental switch
 366:Generated_Source\PSoC4/cyPm.c ****          * to the STOP mode (the system will enter STOP mode immediately after
 367:Generated_Source\PSoC4/cyPm.c ****          * writing to STOP bit since both UNLOCK and FREEZE have been set correctly
 368:Generated_Source\PSoC4/cyPm.c ****          * in a previous call to this function).
 369:Generated_Source\PSoC4/cyPm.c ****          */
 370:Generated_Source\PSoC4/cyPm.c ****         if (0u == (CY_PM_PWR_STOP_REG & CY_PM_PWR_STOP_FREEZE))
 371:Generated_Source\PSoC4/cyPm.c ****         {
 372:Generated_Source\PSoC4/cyPm.c ****             /* Preserve last reset reason and disable overrides the next freeze command by peripher
 373:Generated_Source\PSoC4/cyPm.c ****             CY_PM_PWR_STOP_REG = CY_PM_PWR_STOP_STOP | CY_PM_PWR_STOP_FREEZE | CY_PM_PWR_STOP_UNLOC
 374:Generated_Source\PSoC4/cyPm.c ****                                 (CY_PM_PWR_STOP_REG & (CY_PM_PWR_STOP_TOKEN_MASK | CY_PM_PWR_STOP_P
 375:Generated_Source\PSoC4/cyPm.c **** 
 376:Generated_Source\PSoC4/cyPm.c ****             /* If reading after writing, read this register three times to delay
 377:Generated_Source\PSoC4/cyPm.c ****             *  enough time for internal settling.
 378:Generated_Source\PSoC4/cyPm.c ****             */
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc0jDEUP.s 			page 11


 379:Generated_Source\PSoC4/cyPm.c ****             (void) CY_PM_PWR_STOP_REG;
 380:Generated_Source\PSoC4/cyPm.c ****             (void) CY_PM_PWR_STOP_REG;
 381:Generated_Source\PSoC4/cyPm.c **** 
 382:Generated_Source\PSoC4/cyPm.c ****             /* Second write causes the freeze of IO-Cells to save IO-Cell state */
 383:Generated_Source\PSoC4/cyPm.c ****             CY_PM_PWR_STOP_REG = CY_PM_PWR_STOP_REG;
 384:Generated_Source\PSoC4/cyPm.c ****         }
 385:Generated_Source\PSoC4/cyPm.c **** 
 386:Generated_Source\PSoC4/cyPm.c ****         CyExitCriticalSection(interruptState);
 387:Generated_Source\PSoC4/cyPm.c ****     }
 388:Generated_Source\PSoC4/cyPm.c **** 
 389:Generated_Source\PSoC4/cyPm.c **** 
 390:Generated_Source\PSoC4/cyPm.c ****     /*******************************************************************************
 391:Generated_Source\PSoC4/cyPm.c ****     * Function Name: CySysPmUnfreezeIo
 392:Generated_Source\PSoC4/cyPm.c ****     ****************************************************************************//**
 393:Generated_Source\PSoC4/cyPm.c ****     *
 394:Generated_Source\PSoC4/cyPm.c ****     * The IO-Cells remain frozen after awake from Hibernate or Stop mode until
 395:Generated_Source\PSoC4/cyPm.c ****     * the firmware unfreezes them after booting. The call of this function
 396:Generated_Source\PSoC4/cyPm.c ****     * unfreezes IO-Cells explicitly.
 397:Generated_Source\PSoC4/cyPm.c ****     *
 398:Generated_Source\PSoC4/cyPm.c ****     * If the firmware intent is to retain the data value on the port, then the
 399:Generated_Source\PSoC4/cyPm.c ****     * value must be read and re-written to the data register before calling this
 400:Generated_Source\PSoC4/cyPm.c ****     * API. Furthermore, the drive mode must be re-programmed.  If this is not done,
 401:Generated_Source\PSoC4/cyPm.c ****     * the pin state will change to default state the moment the freeze is removed.
 402:Generated_Source\PSoC4/cyPm.c ****     *
 403:Generated_Source\PSoC4/cyPm.c ****     * This API is not available for PSoC 4000 family of devices.
 404:Generated_Source\PSoC4/cyPm.c ****     *
 405:Generated_Source\PSoC4/cyPm.c ****     *******************************************************************************/
 406:Generated_Source\PSoC4/cyPm.c ****     void CySysPmUnfreezeIo(void)
 407:Generated_Source\PSoC4/cyPm.c ****     {
 408:Generated_Source\PSoC4/cyPm.c ****         uint8 interruptState;
 409:Generated_Source\PSoC4/cyPm.c **** 
 410:Generated_Source\PSoC4/cyPm.c ****         interruptState = CyEnterCriticalSection();
 411:Generated_Source\PSoC4/cyPm.c **** 
 412:Generated_Source\PSoC4/cyPm.c ****         /* Preserve last reset reason and wakeup polarity. Then, unfreeze I/O:
 413:Generated_Source\PSoC4/cyPm.c ****          * write PWR_STOP.FREEZE=0, .UNLOCK=0x3A, .STOP=0, .TOKEN
 414:Generated_Source\PSoC4/cyPm.c ****          */
 415:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_STOP_REG = CY_PM_PWR_STOP_UNLOCK |
 416:Generated_Source\PSoC4/cyPm.c ****                             (CY_PM_PWR_STOP_REG & (CY_PM_PWR_STOP_TOKEN_MASK | CY_PM_PWR_STOP_POLAR
 417:Generated_Source\PSoC4/cyPm.c **** 
 418:Generated_Source\PSoC4/cyPm.c ****         /* If reading after writing, read this register three times to delay
 419:Generated_Source\PSoC4/cyPm.c ****         *  enough time for internal settling.
 420:Generated_Source\PSoC4/cyPm.c ****         */
 421:Generated_Source\PSoC4/cyPm.c ****         (void) CY_PM_PWR_STOP_REG;
 422:Generated_Source\PSoC4/cyPm.c ****         (void) CY_PM_PWR_STOP_REG;
 423:Generated_Source\PSoC4/cyPm.c **** 
 424:Generated_Source\PSoC4/cyPm.c ****         /* Lock STOP mode: write PWR_STOP.FREEZE=0, UNLOCK=0x00, STOP=0, .TOKEN */
 425:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_STOP_REG &= (CY_PM_PWR_STOP_TOKEN_MASK | CY_PM_PWR_STOP_POLARITY);
 426:Generated_Source\PSoC4/cyPm.c **** 
 427:Generated_Source\PSoC4/cyPm.c ****         CyExitCriticalSection(interruptState);
 428:Generated_Source\PSoC4/cyPm.c ****     }
 429:Generated_Source\PSoC4/cyPm.c **** 
 430:Generated_Source\PSoC4/cyPm.c **** #else
 431:Generated_Source\PSoC4/cyPm.c **** 
 432:Generated_Source\PSoC4/cyPm.c ****     /*******************************************************************************
 433:Generated_Source\PSoC4/cyPm.c ****     * Function Name: CySysPmSetWakeupHoldoff
 434:Generated_Source\PSoC4/cyPm.c ****     ****************************************************************************//**
 435:Generated_Source\PSoC4/cyPm.c ****     *
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc0jDEUP.s 			page 12


 436:Generated_Source\PSoC4/cyPm.c ****     * Sets the Deep Sleep wakeup time by scaling the hold-off to the HFCLK
 437:Generated_Source\PSoC4/cyPm.c ****     * frequency.
 438:Generated_Source\PSoC4/cyPm.c ****     *
 439:Generated_Source\PSoC4/cyPm.c ****     * This function must be called before increasing HFCLK clock frequency. It can
 440:Generated_Source\PSoC4/cyPm.c ****     * optionally be called after lowering HFCLK clock frequency in order to improve
 441:Generated_Source\PSoC4/cyPm.c ****     * Deep Sleep wakeup time.
 442:Generated_Source\PSoC4/cyPm.c ****     *
 443:Generated_Source\PSoC4/cyPm.c ****     * It is functionally acceptable to leave the default hold-off setting, but
 444:Generated_Source\PSoC4/cyPm.c ****     * Deep Sleep wakeup time may exceed the specification.
 445:Generated_Source\PSoC4/cyPm.c ****     *
 446:Generated_Source\PSoC4/cyPm.c ****     * This function is applicable only for the 4000 device family.
 447:Generated_Source\PSoC4/cyPm.c ****     *
 448:Generated_Source\PSoC4/cyPm.c ****     * \param hfclkFrequencyMhz The HFCLK frequency in MHz.
 449:Generated_Source\PSoC4/cyPm.c ****     *
 450:Generated_Source\PSoC4/cyPm.c ****     *******************************************************************************/
 451:Generated_Source\PSoC4/cyPm.c ****     void CySysPmSetWakeupHoldoff(uint32 hfclkFrequencyMhz)
 452:Generated_Source\PSoC4/cyPm.c ****     {
 189              		.loc 1 452 0
 190              		.cfi_startproc
 191              		@ args = 0, pretend = 0, frame = 0
 192              		@ frame_needed = 0, uses_anonymous_args = 0
 193              		@ link register save eliminated.
 194              	.LVL13:
 453:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_KEY_DELAY_REG = ((((uint32)(CY_PM_PWR_KEY_DELAY_REG_DEFAULT << 16u) /
 454:Generated_Source\PSoC4/cyPm.c ****             CY_PM_PWR_KEY_DELAY_FREQ_DEFAULT) * hfclkFrequencyMhz) >> 16u) + 1u;
 195              		.loc 1 454 0
 196 0000 034B     		ldr	r3, .L17
 455:Generated_Source\PSoC4/cyPm.c ****     }
 197              		.loc 1 455 0
 198              		@ sp needed
 454:Generated_Source\PSoC4/cyPm.c ****     }
 199              		.loc 1 454 0
 200 0002 5843     		muls	r0, r3
 201              	.LVL14:
 453:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_KEY_DELAY_REG = ((((uint32)(CY_PM_PWR_KEY_DELAY_REG_DEFAULT << 16u) /
 202              		.loc 1 453 0
 203 0004 034B     		ldr	r3, .L17+4
 454:Generated_Source\PSoC4/cyPm.c ****     }
 204              		.loc 1 454 0
 205 0006 000C     		lsrs	r0, r0, #16
 206 0008 0130     		adds	r0, r0, #1
 453:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_KEY_DELAY_REG = ((((uint32)(CY_PM_PWR_KEY_DELAY_REG_DEFAULT << 16u) /
 207              		.loc 1 453 0
 208 000a 1860     		str	r0, [r3]
 209              		.loc 1 455 0
 210 000c 7047     		bx	lr
 211              	.L18:
 212 000e C046     		.align	2
 213              	.L17:
 214 0010 AA2A0500 		.word	338602
 215 0014 04000340 		.word	1073938436
 216              		.cfi_endproc
 217              	.LFE3:
 218              		.size	CySysPmSetWakeupHoldoff, .-CySysPmSetWakeupHoldoff
 219              		.text
 220              	.Letext0:
 221              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc0jDEUP.s 			page 13


 222              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 223              		.section	.debug_info,"",%progbits
 224              	.Ldebug_info0:
 225 0000 B1010000 		.4byte	0x1b1
 226 0004 0400     		.2byte	0x4
 227 0006 00000000 		.4byte	.Ldebug_abbrev0
 228 000a 04       		.byte	0x4
 229 000b 01       		.uleb128 0x1
 230 000c 68000000 		.4byte	.LASF27
 231 0010 0C       		.byte	0xc
 232 0011 FE010000 		.4byte	.LASF28
 233 0015 19000000 		.4byte	.LASF29
 234 0019 00000000 		.4byte	.Ldebug_ranges0+0
 235 001d 00000000 		.4byte	0
 236 0021 00000000 		.4byte	.Ldebug_line0
 237 0025 02       		.uleb128 0x2
 238 0026 01       		.byte	0x1
 239 0027 06       		.byte	0x6
 240 0028 28020000 		.4byte	.LASF0
 241 002c 02       		.uleb128 0x2
 242 002d 01       		.byte	0x1
 243 002e 08       		.byte	0x8
 244 002f 17010000 		.4byte	.LASF1
 245 0033 02       		.uleb128 0x2
 246 0034 02       		.byte	0x2
 247 0035 05       		.byte	0x5
 248 0036 DA010000 		.4byte	.LASF2
 249 003a 02       		.uleb128 0x2
 250 003b 02       		.byte	0x2
 251 003c 07       		.byte	0x7
 252 003d 55000000 		.4byte	.LASF3
 253 0041 02       		.uleb128 0x2
 254 0042 04       		.byte	0x4
 255 0043 05       		.byte	0x5
 256 0044 F5010000 		.4byte	.LASF4
 257 0048 02       		.uleb128 0x2
 258 0049 04       		.byte	0x4
 259 004a 07       		.byte	0x7
 260 004b 3B010000 		.4byte	.LASF5
 261 004f 02       		.uleb128 0x2
 262 0050 08       		.byte	0x8
 263 0051 05       		.byte	0x5
 264 0052 BD010000 		.4byte	.LASF6
 265 0056 02       		.uleb128 0x2
 266 0057 08       		.byte	0x8
 267 0058 07       		.byte	0x7
 268 0059 00010000 		.4byte	.LASF7
 269 005d 03       		.uleb128 0x3
 270 005e 04       		.byte	0x4
 271 005f 05       		.byte	0x5
 272 0060 696E7400 		.ascii	"int\000"
 273 0064 02       		.uleb128 0x2
 274 0065 04       		.byte	0x4
 275 0066 07       		.byte	0x7
 276 0067 91010000 		.4byte	.LASF8
 277 006b 04       		.uleb128 0x4
 278 006c 4D010000 		.4byte	.LASF9
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc0jDEUP.s 			page 14


 279 0070 02       		.byte	0x2
 280 0071 FB01     		.2byte	0x1fb
 281 0073 2C000000 		.4byte	0x2c
 282 0077 04       		.uleb128 0x4
 283 0078 6C010000 		.4byte	.LASF10
 284 007c 02       		.byte	0x2
 285 007d FC01     		.2byte	0x1fc
 286 007f 3A000000 		.4byte	0x3a
 287 0083 04       		.uleb128 0x4
 288 0084 73010000 		.4byte	.LASF11
 289 0088 02       		.byte	0x2
 290 0089 FD01     		.2byte	0x1fd
 291 008b 48000000 		.4byte	0x48
 292 008f 02       		.uleb128 0x2
 293 0090 04       		.byte	0x4
 294 0091 04       		.byte	0x4
 295 0092 FA000000 		.4byte	.LASF12
 296 0096 02       		.uleb128 0x2
 297 0097 08       		.byte	0x8
 298 0098 04       		.byte	0x4
 299 0099 65010000 		.4byte	.LASF13
 300 009d 02       		.uleb128 0x2
 301 009e 01       		.byte	0x1
 302 009f 08       		.byte	0x8
 303 00a0 D5010000 		.4byte	.LASF14
 304 00a4 04       		.uleb128 0x4
 305 00a5 00000000 		.4byte	.LASF15
 306 00a9 02       		.byte	0x2
 307 00aa A602     		.2byte	0x2a6
 308 00ac B0000000 		.4byte	0xb0
 309 00b0 05       		.uleb128 0x5
 310 00b1 77000000 		.4byte	0x77
 311 00b5 04       		.uleb128 0x4
 312 00b6 06000000 		.4byte	.LASF16
 313 00ba 02       		.byte	0x2
 314 00bb A702     		.2byte	0x2a7
 315 00bd C1000000 		.4byte	0xc1
 316 00c1 05       		.uleb128 0x5
 317 00c2 83000000 		.4byte	0x83
 318 00c6 02       		.uleb128 0x2
 319 00c7 08       		.byte	0x8
 320 00c8 04       		.byte	0x4
 321 00c9 1C020000 		.4byte	.LASF17
 322 00cd 02       		.uleb128 0x2
 323 00ce 04       		.byte	0x4
 324 00cf 07       		.byte	0x7
 325 00d0 B4010000 		.4byte	.LASF18
 326 00d4 06       		.uleb128 0x6
 327 00d5 0C000000 		.4byte	.LASF19
 328 00d9 01       		.byte	0x1
 329 00da 21       		.byte	0x21
 330 00db 00000000 		.4byte	.LFB1
 331 00df 1C000000 		.4byte	.LFE1-.LFB1
 332 00e3 01       		.uleb128 0x1
 333 00e4 9C       		.byte	0x9c
 334 00e5 0B010000 		.4byte	0x10b
 335 00e9 07       		.uleb128 0x7
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc0jDEUP.s 			page 15


 336 00ea 2C010000 		.4byte	.LASF21
 337 00ee 01       		.byte	0x1
 338 00ef 23       		.byte	0x23
 339 00f0 6B000000 		.4byte	0x6b
 340 00f4 00000000 		.4byte	.LLST0
 341 00f8 08       		.uleb128 0x8
 342 00f9 06000000 		.4byte	.LVL0
 343 00fd 93010000 		.4byte	0x193
 344 0101 08       		.uleb128 0x8
 345 0102 16000000 		.4byte	.LVL1
 346 0106 9E010000 		.4byte	0x19e
 347 010a 00       		.byte	0
 348 010b 06       		.uleb128 0x6
 349 010c E4010000 		.4byte	.LASF20
 350 0110 01       		.byte	0x1
 351 0111 40       		.byte	0x40
 352 0112 00000000 		.4byte	.LFB2
 353 0116 80000000 		.4byte	.LFE2-.LFB2
 354 011a 01       		.uleb128 0x1
 355 011b 9C       		.byte	0x9c
 356 011c 6C010000 		.4byte	0x16c
 357 0120 07       		.uleb128 0x7
 358 0121 2C010000 		.4byte	.LASF21
 359 0125 01       		.byte	0x1
 360 0126 42       		.byte	0x42
 361 0127 6B000000 		.4byte	0x6b
 362 012b 13000000 		.4byte	.LLST1
 363 012f 07       		.uleb128 0x7
 364 0130 25010000 		.4byte	.LASF22
 365 0134 01       		.byte	0x1
 366 0135 4C       		.byte	0x4c
 367 0136 83000000 		.4byte	0x83
 368 013a 26000000 		.4byte	.LLST2
 369 013e 08       		.uleb128 0x8
 370 013f 06000000 		.4byte	.LVL3
 371 0143 93010000 		.4byte	0x193
 372 0147 09       		.uleb128 0x9
 373 0148 4E000000 		.4byte	.LVL8
 374 014c A9010000 		.4byte	0x1a9
 375 0150 5B010000 		.4byte	0x15b
 376 0154 0A       		.uleb128 0xa
 377 0155 01       		.uleb128 0x1
 378 0156 50       		.byte	0x50
 379 0157 02       		.uleb128 0x2
 380 0158 08       		.byte	0x8
 381 0159 23       		.byte	0x23
 382 015a 00       		.byte	0
 383 015b 0B       		.uleb128 0xb
 384 015c 60000000 		.4byte	.LVL11
 385 0160 9E010000 		.4byte	0x19e
 386 0164 0A       		.uleb128 0xa
 387 0165 01       		.uleb128 0x1
 388 0166 50       		.byte	0x50
 389 0167 02       		.uleb128 0x2
 390 0168 74       		.byte	0x74
 391 0169 00       		.sleb128 0
 392 016a 00       		.byte	0
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc0jDEUP.s 			page 16


 393 016b 00       		.byte	0
 394 016c 0C       		.uleb128 0xc
 395 016d 34020000 		.4byte	.LASF23
 396 0171 01       		.byte	0x1
 397 0172 C301     		.2byte	0x1c3
 398 0174 00000000 		.4byte	.LFB3
 399 0178 18000000 		.4byte	.LFE3-.LFB3
 400 017c 01       		.uleb128 0x1
 401 017d 9C       		.byte	0x9c
 402 017e 93010000 		.4byte	0x193
 403 0182 0D       		.uleb128 0xd
 404 0183 53010000 		.4byte	.LASF30
 405 0187 01       		.byte	0x1
 406 0188 C301     		.2byte	0x1c3
 407 018a 83000000 		.4byte	0x83
 408 018e 6D000000 		.4byte	.LLST3
 409 0192 00       		.byte	0
 410 0193 0E       		.uleb128 0xe
 411 0194 7A010000 		.4byte	.LASF24
 412 0198 7A010000 		.4byte	.LASF24
 413 019c 03       		.byte	0x3
 414 019d F8       		.byte	0xf8
 415 019e 0E       		.uleb128 0xe
 416 019f 9E010000 		.4byte	.LASF25
 417 01a3 9E010000 		.4byte	.LASF25
 418 01a7 03       		.byte	0x3
 419 01a8 F9       		.byte	0xf9
 420 01a9 0E       		.uleb128 0xe
 421 01aa CB010000 		.4byte	.LASF26
 422 01ae CB010000 		.4byte	.LASF26
 423 01b2 03       		.byte	0x3
 424 01b3 ED       		.byte	0xed
 425 01b4 00       		.byte	0
 426              		.section	.debug_abbrev,"",%progbits
 427              	.Ldebug_abbrev0:
 428 0000 01       		.uleb128 0x1
 429 0001 11       		.uleb128 0x11
 430 0002 01       		.byte	0x1
 431 0003 25       		.uleb128 0x25
 432 0004 0E       		.uleb128 0xe
 433 0005 13       		.uleb128 0x13
 434 0006 0B       		.uleb128 0xb
 435 0007 03       		.uleb128 0x3
 436 0008 0E       		.uleb128 0xe
 437 0009 1B       		.uleb128 0x1b
 438 000a 0E       		.uleb128 0xe
 439 000b 55       		.uleb128 0x55
 440 000c 17       		.uleb128 0x17
 441 000d 11       		.uleb128 0x11
 442 000e 01       		.uleb128 0x1
 443 000f 10       		.uleb128 0x10
 444 0010 17       		.uleb128 0x17
 445 0011 00       		.byte	0
 446 0012 00       		.byte	0
 447 0013 02       		.uleb128 0x2
 448 0014 24       		.uleb128 0x24
 449 0015 00       		.byte	0
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc0jDEUP.s 			page 17


 450 0016 0B       		.uleb128 0xb
 451 0017 0B       		.uleb128 0xb
 452 0018 3E       		.uleb128 0x3e
 453 0019 0B       		.uleb128 0xb
 454 001a 03       		.uleb128 0x3
 455 001b 0E       		.uleb128 0xe
 456 001c 00       		.byte	0
 457 001d 00       		.byte	0
 458 001e 03       		.uleb128 0x3
 459 001f 24       		.uleb128 0x24
 460 0020 00       		.byte	0
 461 0021 0B       		.uleb128 0xb
 462 0022 0B       		.uleb128 0xb
 463 0023 3E       		.uleb128 0x3e
 464 0024 0B       		.uleb128 0xb
 465 0025 03       		.uleb128 0x3
 466 0026 08       		.uleb128 0x8
 467 0027 00       		.byte	0
 468 0028 00       		.byte	0
 469 0029 04       		.uleb128 0x4
 470 002a 16       		.uleb128 0x16
 471 002b 00       		.byte	0
 472 002c 03       		.uleb128 0x3
 473 002d 0E       		.uleb128 0xe
 474 002e 3A       		.uleb128 0x3a
 475 002f 0B       		.uleb128 0xb
 476 0030 3B       		.uleb128 0x3b
 477 0031 05       		.uleb128 0x5
 478 0032 49       		.uleb128 0x49
 479 0033 13       		.uleb128 0x13
 480 0034 00       		.byte	0
 481 0035 00       		.byte	0
 482 0036 05       		.uleb128 0x5
 483 0037 35       		.uleb128 0x35
 484 0038 00       		.byte	0
 485 0039 49       		.uleb128 0x49
 486 003a 13       		.uleb128 0x13
 487 003b 00       		.byte	0
 488 003c 00       		.byte	0
 489 003d 06       		.uleb128 0x6
 490 003e 2E       		.uleb128 0x2e
 491 003f 01       		.byte	0x1
 492 0040 3F       		.uleb128 0x3f
 493 0041 19       		.uleb128 0x19
 494 0042 03       		.uleb128 0x3
 495 0043 0E       		.uleb128 0xe
 496 0044 3A       		.uleb128 0x3a
 497 0045 0B       		.uleb128 0xb
 498 0046 3B       		.uleb128 0x3b
 499 0047 0B       		.uleb128 0xb
 500 0048 27       		.uleb128 0x27
 501 0049 19       		.uleb128 0x19
 502 004a 11       		.uleb128 0x11
 503 004b 01       		.uleb128 0x1
 504 004c 12       		.uleb128 0x12
 505 004d 06       		.uleb128 0x6
 506 004e 40       		.uleb128 0x40
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc0jDEUP.s 			page 18


 507 004f 18       		.uleb128 0x18
 508 0050 9742     		.uleb128 0x2117
 509 0052 19       		.uleb128 0x19
 510 0053 01       		.uleb128 0x1
 511 0054 13       		.uleb128 0x13
 512 0055 00       		.byte	0
 513 0056 00       		.byte	0
 514 0057 07       		.uleb128 0x7
 515 0058 34       		.uleb128 0x34
 516 0059 00       		.byte	0
 517 005a 03       		.uleb128 0x3
 518 005b 0E       		.uleb128 0xe
 519 005c 3A       		.uleb128 0x3a
 520 005d 0B       		.uleb128 0xb
 521 005e 3B       		.uleb128 0x3b
 522 005f 0B       		.uleb128 0xb
 523 0060 49       		.uleb128 0x49
 524 0061 13       		.uleb128 0x13
 525 0062 02       		.uleb128 0x2
 526 0063 17       		.uleb128 0x17
 527 0064 00       		.byte	0
 528 0065 00       		.byte	0
 529 0066 08       		.uleb128 0x8
 530 0067 898201   		.uleb128 0x4109
 531 006a 00       		.byte	0
 532 006b 11       		.uleb128 0x11
 533 006c 01       		.uleb128 0x1
 534 006d 31       		.uleb128 0x31
 535 006e 13       		.uleb128 0x13
 536 006f 00       		.byte	0
 537 0070 00       		.byte	0
 538 0071 09       		.uleb128 0x9
 539 0072 898201   		.uleb128 0x4109
 540 0075 01       		.byte	0x1
 541 0076 11       		.uleb128 0x11
 542 0077 01       		.uleb128 0x1
 543 0078 31       		.uleb128 0x31
 544 0079 13       		.uleb128 0x13
 545 007a 01       		.uleb128 0x1
 546 007b 13       		.uleb128 0x13
 547 007c 00       		.byte	0
 548 007d 00       		.byte	0
 549 007e 0A       		.uleb128 0xa
 550 007f 8A8201   		.uleb128 0x410a
 551 0082 00       		.byte	0
 552 0083 02       		.uleb128 0x2
 553 0084 18       		.uleb128 0x18
 554 0085 9142     		.uleb128 0x2111
 555 0087 18       		.uleb128 0x18
 556 0088 00       		.byte	0
 557 0089 00       		.byte	0
 558 008a 0B       		.uleb128 0xb
 559 008b 898201   		.uleb128 0x4109
 560 008e 01       		.byte	0x1
 561 008f 11       		.uleb128 0x11
 562 0090 01       		.uleb128 0x1
 563 0091 31       		.uleb128 0x31
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc0jDEUP.s 			page 19


 564 0092 13       		.uleb128 0x13
 565 0093 00       		.byte	0
 566 0094 00       		.byte	0
 567 0095 0C       		.uleb128 0xc
 568 0096 2E       		.uleb128 0x2e
 569 0097 01       		.byte	0x1
 570 0098 3F       		.uleb128 0x3f
 571 0099 19       		.uleb128 0x19
 572 009a 03       		.uleb128 0x3
 573 009b 0E       		.uleb128 0xe
 574 009c 3A       		.uleb128 0x3a
 575 009d 0B       		.uleb128 0xb
 576 009e 3B       		.uleb128 0x3b
 577 009f 05       		.uleb128 0x5
 578 00a0 27       		.uleb128 0x27
 579 00a1 19       		.uleb128 0x19
 580 00a2 11       		.uleb128 0x11
 581 00a3 01       		.uleb128 0x1
 582 00a4 12       		.uleb128 0x12
 583 00a5 06       		.uleb128 0x6
 584 00a6 40       		.uleb128 0x40
 585 00a7 18       		.uleb128 0x18
 586 00a8 9742     		.uleb128 0x2117
 587 00aa 19       		.uleb128 0x19
 588 00ab 01       		.uleb128 0x1
 589 00ac 13       		.uleb128 0x13
 590 00ad 00       		.byte	0
 591 00ae 00       		.byte	0
 592 00af 0D       		.uleb128 0xd
 593 00b0 05       		.uleb128 0x5
 594 00b1 00       		.byte	0
 595 00b2 03       		.uleb128 0x3
 596 00b3 0E       		.uleb128 0xe
 597 00b4 3A       		.uleb128 0x3a
 598 00b5 0B       		.uleb128 0xb
 599 00b6 3B       		.uleb128 0x3b
 600 00b7 05       		.uleb128 0x5
 601 00b8 49       		.uleb128 0x49
 602 00b9 13       		.uleb128 0x13
 603 00ba 02       		.uleb128 0x2
 604 00bb 17       		.uleb128 0x17
 605 00bc 00       		.byte	0
 606 00bd 00       		.byte	0
 607 00be 0E       		.uleb128 0xe
 608 00bf 2E       		.uleb128 0x2e
 609 00c0 00       		.byte	0
 610 00c1 3F       		.uleb128 0x3f
 611 00c2 19       		.uleb128 0x19
 612 00c3 3C       		.uleb128 0x3c
 613 00c4 19       		.uleb128 0x19
 614 00c5 6E       		.uleb128 0x6e
 615 00c6 0E       		.uleb128 0xe
 616 00c7 03       		.uleb128 0x3
 617 00c8 0E       		.uleb128 0xe
 618 00c9 3A       		.uleb128 0x3a
 619 00ca 0B       		.uleb128 0xb
 620 00cb 3B       		.uleb128 0x3b
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc0jDEUP.s 			page 20


 621 00cc 0B       		.uleb128 0xb
 622 00cd 00       		.byte	0
 623 00ce 00       		.byte	0
 624 00cf 00       		.byte	0
 625              		.section	.debug_loc,"",%progbits
 626              	.Ldebug_loc0:
 627              	.LLST0:
 628 0000 06000000 		.4byte	.LVL0
 629 0004 15000000 		.4byte	.LVL1-1
 630 0008 0100     		.2byte	0x1
 631 000a 50       		.byte	0x50
 632 000b 00000000 		.4byte	0
 633 000f 00000000 		.4byte	0
 634              	.LLST1:
 635 0013 08000000 		.4byte	.LVL4
 636 0017 60000000 		.4byte	.LVL12
 637 001b 0100     		.2byte	0x1
 638 001d 54       		.byte	0x54
 639 001e 00000000 		.4byte	0
 640 0022 00000000 		.4byte	0
 641              	.LLST2:
 642 0026 00000000 		.4byte	.LVL2
 643 002a 16000000 		.4byte	.LVL5
 644 002e 0200     		.2byte	0x2
 645 0030 30       		.byte	0x30
 646 0031 9F       		.byte	0x9f
 647 0032 16000000 		.4byte	.LVL5
 648 0036 28000000 		.4byte	.LVL6
 649 003a 0A00     		.2byte	0xa
 650 003c 76       		.byte	0x76
 651 003d 00       		.sleb128 0
 652 003e 11       		.byte	0x11
 653 003f FFFFFF81 		.sleb128 -1069547521
 653      7C
 654 0044 1A       		.byte	0x1a
 655 0045 9F       		.byte	0x9f
 656 0046 28000000 		.4byte	.LVL6
 657 004a 2C000000 		.4byte	.LVL7
 658 004e 0100     		.2byte	0x1
 659 0050 52       		.byte	0x52
 660 0051 56000000 		.4byte	.LVL9
 661 0055 5A000000 		.4byte	.LVL10
 662 0059 0A00     		.2byte	0xa
 663 005b 71       		.byte	0x71
 664 005c 00       		.sleb128 0
 665 005d 11       		.byte	0x11
 666 005e FFFFFF81 		.sleb128 -1069547521
 666      7C
 667 0063 1A       		.byte	0x1a
 668 0064 9F       		.byte	0x9f
 669 0065 00000000 		.4byte	0
 670 0069 00000000 		.4byte	0
 671              	.LLST3:
 672 006d 00000000 		.4byte	.LVL13
 673 0071 04000000 		.4byte	.LVL14
 674 0075 0100     		.2byte	0x1
 675 0077 50       		.byte	0x50
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc0jDEUP.s 			page 21


 676 0078 04000000 		.4byte	.LVL14
 677 007c 18000000 		.4byte	.LFE3
 678 0080 0400     		.2byte	0x4
 679 0082 F3       		.byte	0xf3
 680 0083 01       		.uleb128 0x1
 681 0084 50       		.byte	0x50
 682 0085 9F       		.byte	0x9f
 683 0086 00000000 		.4byte	0
 684 008a 00000000 		.4byte	0
 685              		.section	.debug_aranges,"",%progbits
 686 0000 2C000000 		.4byte	0x2c
 687 0004 0200     		.2byte	0x2
 688 0006 00000000 		.4byte	.Ldebug_info0
 689 000a 04       		.byte	0x4
 690 000b 00       		.byte	0
 691 000c 0000     		.2byte	0
 692 000e 0000     		.2byte	0
 693 0010 00000000 		.4byte	.LFB1
 694 0014 1C000000 		.4byte	.LFE1-.LFB1
 695 0018 00000000 		.4byte	.LFB2
 696 001c 80000000 		.4byte	.LFE2-.LFB2
 697 0020 00000000 		.4byte	.LFB3
 698 0024 18000000 		.4byte	.LFE3-.LFB3
 699 0028 00000000 		.4byte	0
 700 002c 00000000 		.4byte	0
 701              		.section	.debug_ranges,"",%progbits
 702              	.Ldebug_ranges0:
 703 0000 00000000 		.4byte	.LFB1
 704 0004 1C000000 		.4byte	.LFE1
 705 0008 00000000 		.4byte	.LFB2
 706 000c 80000000 		.4byte	.LFE2
 707 0010 00000000 		.4byte	.LFB3
 708 0014 18000000 		.4byte	.LFE3
 709 0018 00000000 		.4byte	0
 710 001c 00000000 		.4byte	0
 711              		.section	.debug_line,"",%progbits
 712              	.Ldebug_line0:
 713 0000 AA000000 		.section	.debug_str,"MS",%progbits,1
 713      02004C00 
 713      00000201 
 713      FB0E0D00 
 713      01010101 
 714              	.LASF15:
 715 0000 72656731 		.ascii	"reg16\000"
 715      3600
 716              	.LASF16:
 717 0006 72656733 		.ascii	"reg32\000"
 717      3200
 718              	.LASF19:
 719 000c 43795379 		.ascii	"CySysPmSleep\000"
 719      73506D53 
 719      6C656570 
 719      00
 720              	.LASF29:
 721 0019 433A5C55 		.ascii	"C:\\Users\\PC\\Documents\\PSoC Creator\\yellowChip\\"
 721      73657273 
 721      5C50435C 
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc0jDEUP.s 			page 22


 721      446F6375 
 721      6D656E74 
 722 0047 54657374 		.ascii	"TestLed.cydsn\000"
 722      4C65642E 
 722      63796473 
 722      6E00
 723              	.LASF3:
 724 0055 73686F72 		.ascii	"short unsigned int\000"
 724      7420756E 
 724      7369676E 
 724      65642069 
 724      6E7400
 725              	.LASF27:
 726 0068 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 726      43313120 
 726      352E342E 
 726      31203230 
 726      31363036 
 727 009b 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 727      20726576 
 727      6973696F 
 727      6E203233 
 727      37373135 
 728 00ce 67202D4F 		.ascii	"g -Os -ffunction-sections -ffat-lto-objects\000"
 728      73202D66 
 728      66756E63 
 728      74696F6E 
 728      2D736563 
 729              	.LASF12:
 730 00fa 666C6F61 		.ascii	"float\000"
 730      7400
 731              	.LASF7:
 732 0100 6C6F6E67 		.ascii	"long long unsigned int\000"
 732      206C6F6E 
 732      6720756E 
 732      7369676E 
 732      65642069 
 733              	.LASF1:
 734 0117 756E7369 		.ascii	"unsigned char\000"
 734      676E6564 
 734      20636861 
 734      7200
 735              	.LASF22:
 736 0125 72656754 		.ascii	"regTmp\000"
 736      6D7000
 737              	.LASF21:
 738 012c 696E7465 		.ascii	"interruptState\000"
 738      72727570 
 738      74537461 
 738      746500
 739              	.LASF5:
 740 013b 6C6F6E67 		.ascii	"long unsigned int\000"
 740      20756E73 
 740      69676E65 
 740      6420696E 
 740      7400
 741              	.LASF9:
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc0jDEUP.s 			page 23


 742 014d 75696E74 		.ascii	"uint8\000"
 742      3800
 743              	.LASF30:
 744 0153 6866636C 		.ascii	"hfclkFrequencyMhz\000"
 744      6B467265 
 744      7175656E 
 744      63794D68 
 744      7A00
 745              	.LASF13:
 746 0165 646F7562 		.ascii	"double\000"
 746      6C6500
 747              	.LASF10:
 748 016c 75696E74 		.ascii	"uint16\000"
 748      313600
 749              	.LASF11:
 750 0173 75696E74 		.ascii	"uint32\000"
 750      333200
 751              	.LASF24:
 752 017a 4379456E 		.ascii	"CyEnterCriticalSection\000"
 752      74657243 
 752      72697469 
 752      63616C53 
 752      65637469 
 753              	.LASF8:
 754 0191 756E7369 		.ascii	"unsigned int\000"
 754      676E6564 
 754      20696E74 
 754      00
 755              	.LASF25:
 756 019e 43794578 		.ascii	"CyExitCriticalSection\000"
 756      69744372 
 756      69746963 
 756      616C5365 
 756      6374696F 
 757              	.LASF18:
 758 01b4 73697A65 		.ascii	"sizetype\000"
 758      74797065 
 758      00
 759              	.LASF6:
 760 01bd 6C6F6E67 		.ascii	"long long int\000"
 760      206C6F6E 
 760      6720696E 
 760      7400
 761              	.LASF26:
 762 01cb 43794465 		.ascii	"CyDelayUs\000"
 762      6C617955 
 762      7300
 763              	.LASF14:
 764 01d5 63686172 		.ascii	"char\000"
 764      00
 765              	.LASF2:
 766 01da 73686F72 		.ascii	"short int\000"
 766      7420696E 
 766      7400
 767              	.LASF20:
 768 01e4 43795379 		.ascii	"CySysPmDeepSleep\000"
 768      73506D44 
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc0jDEUP.s 			page 24


 768      65657053 
 768      6C656570 
 768      00
 769              	.LASF4:
 770 01f5 6C6F6E67 		.ascii	"long int\000"
 770      20696E74 
 770      00
 771              	.LASF28:
 772 01fe 47656E65 		.ascii	"Generated_Source\\PSoC4\\cyPm.c\000"
 772      72617465 
 772      645F536F 
 772      75726365 
 772      5C50536F 
 773              	.LASF17:
 774 021c 6C6F6E67 		.ascii	"long double\000"
 774      20646F75 
 774      626C6500 
 775              	.LASF0:
 776 0228 7369676E 		.ascii	"signed char\000"
 776      65642063 
 776      68617200 
 777              	.LASF23:
 778 0234 43795379 		.ascii	"CySysPmSetWakeupHoldoff\000"
 778      73506D53 
 778      65745761 
 778      6B657570 
 778      486F6C64 
 779              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
