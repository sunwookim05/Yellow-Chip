ARM GAS  C:\Users\PC\AppData\Local\Temp\ccuMPY40.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"mUART_SCBCLK.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.mUART_SCBCLK_StartEx,"ax",%progbits
  20              		.align	1
  21              		.global	mUART_SCBCLK_StartEx
  22              		.code	16
  23              		.thumb_func
  24              		.type	mUART_SCBCLK_StartEx, %function
  25              	mUART_SCBCLK_StartEx:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC4\\mUART_SCBCLK.c"
   1:Generated_Source\PSoC4/mUART_SCBCLK.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/mUART_SCBCLK.c **** * File Name: mUART_SCBCLK.c
   3:Generated_Source\PSoC4/mUART_SCBCLK.c **** * Version 2.20
   4:Generated_Source\PSoC4/mUART_SCBCLK.c **** *
   5:Generated_Source\PSoC4/mUART_SCBCLK.c **** *  Description:
   6:Generated_Source\PSoC4/mUART_SCBCLK.c **** *   Provides system API for the clocking, interrupts and watchdog timer.
   7:Generated_Source\PSoC4/mUART_SCBCLK.c **** *
   8:Generated_Source\PSoC4/mUART_SCBCLK.c **** *  Note:
   9:Generated_Source\PSoC4/mUART_SCBCLK.c **** *   Documentation of the API's in this file is located in the
  10:Generated_Source\PSoC4/mUART_SCBCLK.c **** *   System Reference Guide provided with PSoC Creator.
  11:Generated_Source\PSoC4/mUART_SCBCLK.c **** *
  12:Generated_Source\PSoC4/mUART_SCBCLK.c **** ********************************************************************************
  13:Generated_Source\PSoC4/mUART_SCBCLK.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/mUART_SCBCLK.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/mUART_SCBCLK.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/mUART_SCBCLK.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/mUART_SCBCLK.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/mUART_SCBCLK.c **** 
  19:Generated_Source\PSoC4/mUART_SCBCLK.c **** #include <cydevice_trm.h>
  20:Generated_Source\PSoC4/mUART_SCBCLK.c **** #include "mUART_SCBCLK.h"
  21:Generated_Source\PSoC4/mUART_SCBCLK.c **** 
  22:Generated_Source\PSoC4/mUART_SCBCLK.c **** #if defined CYREG_PERI_DIV_CMD
  23:Generated_Source\PSoC4/mUART_SCBCLK.c **** 
  24:Generated_Source\PSoC4/mUART_SCBCLK.c **** /*******************************************************************************
  25:Generated_Source\PSoC4/mUART_SCBCLK.c **** * Function Name: mUART_SCBCLK_StartEx
  26:Generated_Source\PSoC4/mUART_SCBCLK.c **** ********************************************************************************
  27:Generated_Source\PSoC4/mUART_SCBCLK.c **** *
  28:Generated_Source\PSoC4/mUART_SCBCLK.c **** * Summary:
  29:Generated_Source\PSoC4/mUART_SCBCLK.c **** *  Starts the clock, aligned to the specified running clock.
  30:Generated_Source\PSoC4/mUART_SCBCLK.c **** *
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccuMPY40.s 			page 2


  31:Generated_Source\PSoC4/mUART_SCBCLK.c **** * Parameters:
  32:Generated_Source\PSoC4/mUART_SCBCLK.c **** *  alignClkDiv:  The divider to which phase alignment is performed when the
  33:Generated_Source\PSoC4/mUART_SCBCLK.c **** *    clock is started.
  34:Generated_Source\PSoC4/mUART_SCBCLK.c **** *
  35:Generated_Source\PSoC4/mUART_SCBCLK.c **** * Returns:
  36:Generated_Source\PSoC4/mUART_SCBCLK.c **** *  None
  37:Generated_Source\PSoC4/mUART_SCBCLK.c **** *
  38:Generated_Source\PSoC4/mUART_SCBCLK.c **** *******************************************************************************/
  39:Generated_Source\PSoC4/mUART_SCBCLK.c **** void mUART_SCBCLK_StartEx(uint32 alignClkDiv)
  40:Generated_Source\PSoC4/mUART_SCBCLK.c **** {
  28              		.loc 1 40 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  41:Generated_Source\PSoC4/mUART_SCBCLK.c ****     /* Make sure any previous start command has finished. */
  42:Generated_Source\PSoC4/mUART_SCBCLK.c ****     while((mUART_SCBCLK_CMD_REG & mUART_SCBCLK_CMD_ENABLE_MASK) != 0u)
  34              		.loc 1 42 0
  35 0000 044A     		ldr	r2, .L5
  36              	.L2:
  37              		.loc 1 42 0 is_stmt 0 discriminator 1
  38 0002 1368     		ldr	r3, [r2]
  39 0004 002B     		cmp	r3, #0
  40 0006 FCDB     		blt	.L2
  43:Generated_Source\PSoC4/mUART_SCBCLK.c ****     {
  44:Generated_Source\PSoC4/mUART_SCBCLK.c ****     }
  45:Generated_Source\PSoC4/mUART_SCBCLK.c ****     
  46:Generated_Source\PSoC4/mUART_SCBCLK.c ****     /* Specify the target divider and it's alignment divider, and enable. */
  47:Generated_Source\PSoC4/mUART_SCBCLK.c ****     mUART_SCBCLK_CMD_REG =
  48:Generated_Source\PSoC4/mUART_SCBCLK.c ****         ((uint32)mUART_SCBCLK__DIV_ID << mUART_SCBCLK_CMD_DIV_SHIFT)|
  49:Generated_Source\PSoC4/mUART_SCBCLK.c ****         (alignClkDiv << mUART_SCBCLK_CMD_PA_DIV_SHIFT) |
  41              		.loc 1 49 0 is_stmt 1
  42 0008 034B     		ldr	r3, .L5+4
  43 000a 0002     		lsls	r0, r0, #8
  44              	.LVL1:
  45 000c 1843     		orrs	r0, r3
  47:Generated_Source\PSoC4/mUART_SCBCLK.c ****         ((uint32)mUART_SCBCLK__DIV_ID << mUART_SCBCLK_CMD_DIV_SHIFT)|
  46              		.loc 1 47 0
  47 000e 014B     		ldr	r3, .L5
  50:Generated_Source\PSoC4/mUART_SCBCLK.c ****         (uint32)mUART_SCBCLK_CMD_ENABLE_MASK;
  51:Generated_Source\PSoC4/mUART_SCBCLK.c **** }
  48              		.loc 1 51 0
  49              		@ sp needed
  47:Generated_Source\PSoC4/mUART_SCBCLK.c ****         ((uint32)mUART_SCBCLK__DIV_ID << mUART_SCBCLK_CMD_DIV_SHIFT)|
  50              		.loc 1 47 0
  51 0010 1860     		str	r0, [r3]
  52              		.loc 1 51 0
  53 0012 7047     		bx	lr
  54              	.L6:
  55              		.align	2
  56              	.L5:
  57 0014 00000140 		.word	1073807360
  58 0018 40000080 		.word	-2147483584
  59              		.cfi_endproc
  60              	.LFE0:
  61              		.size	mUART_SCBCLK_StartEx, .-mUART_SCBCLK_StartEx
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccuMPY40.s 			page 3


  62              		.section	.text.mUART_SCBCLK_Stop,"ax",%progbits
  63              		.align	1
  64              		.global	mUART_SCBCLK_Stop
  65              		.code	16
  66              		.thumb_func
  67              		.type	mUART_SCBCLK_Stop, %function
  68              	mUART_SCBCLK_Stop:
  69              	.LFB1:
  52:Generated_Source\PSoC4/mUART_SCBCLK.c **** 
  53:Generated_Source\PSoC4/mUART_SCBCLK.c **** #else
  54:Generated_Source\PSoC4/mUART_SCBCLK.c **** 
  55:Generated_Source\PSoC4/mUART_SCBCLK.c **** /*******************************************************************************
  56:Generated_Source\PSoC4/mUART_SCBCLK.c **** * Function Name: mUART_SCBCLK_Start
  57:Generated_Source\PSoC4/mUART_SCBCLK.c **** ********************************************************************************
  58:Generated_Source\PSoC4/mUART_SCBCLK.c **** *
  59:Generated_Source\PSoC4/mUART_SCBCLK.c **** * Summary:
  60:Generated_Source\PSoC4/mUART_SCBCLK.c **** *  Starts the clock.
  61:Generated_Source\PSoC4/mUART_SCBCLK.c **** *
  62:Generated_Source\PSoC4/mUART_SCBCLK.c **** * Parameters:
  63:Generated_Source\PSoC4/mUART_SCBCLK.c **** *  None
  64:Generated_Source\PSoC4/mUART_SCBCLK.c **** *
  65:Generated_Source\PSoC4/mUART_SCBCLK.c **** * Returns:
  66:Generated_Source\PSoC4/mUART_SCBCLK.c **** *  None
  67:Generated_Source\PSoC4/mUART_SCBCLK.c **** *
  68:Generated_Source\PSoC4/mUART_SCBCLK.c **** *******************************************************************************/
  69:Generated_Source\PSoC4/mUART_SCBCLK.c **** 
  70:Generated_Source\PSoC4/mUART_SCBCLK.c **** void mUART_SCBCLK_Start(void)
  71:Generated_Source\PSoC4/mUART_SCBCLK.c **** {
  72:Generated_Source\PSoC4/mUART_SCBCLK.c ****     /* Set the bit to enable the clock. */
  73:Generated_Source\PSoC4/mUART_SCBCLK.c ****     mUART_SCBCLK_ENABLE_REG |= mUART_SCBCLK__ENABLE_MASK;
  74:Generated_Source\PSoC4/mUART_SCBCLK.c **** }
  75:Generated_Source\PSoC4/mUART_SCBCLK.c **** 
  76:Generated_Source\PSoC4/mUART_SCBCLK.c **** #endif /* CYREG_PERI_DIV_CMD */
  77:Generated_Source\PSoC4/mUART_SCBCLK.c **** 
  78:Generated_Source\PSoC4/mUART_SCBCLK.c **** 
  79:Generated_Source\PSoC4/mUART_SCBCLK.c **** /*******************************************************************************
  80:Generated_Source\PSoC4/mUART_SCBCLK.c **** * Function Name: mUART_SCBCLK_Stop
  81:Generated_Source\PSoC4/mUART_SCBCLK.c **** ********************************************************************************
  82:Generated_Source\PSoC4/mUART_SCBCLK.c **** *
  83:Generated_Source\PSoC4/mUART_SCBCLK.c **** * Summary:
  84:Generated_Source\PSoC4/mUART_SCBCLK.c **** *  Stops the clock and returns immediately. This API does not require the
  85:Generated_Source\PSoC4/mUART_SCBCLK.c **** *  source clock to be running but may return before the hardware is actually
  86:Generated_Source\PSoC4/mUART_SCBCLK.c **** *  disabled.
  87:Generated_Source\PSoC4/mUART_SCBCLK.c **** *
  88:Generated_Source\PSoC4/mUART_SCBCLK.c **** * Parameters:
  89:Generated_Source\PSoC4/mUART_SCBCLK.c **** *  None
  90:Generated_Source\PSoC4/mUART_SCBCLK.c **** *
  91:Generated_Source\PSoC4/mUART_SCBCLK.c **** * Returns:
  92:Generated_Source\PSoC4/mUART_SCBCLK.c **** *  None
  93:Generated_Source\PSoC4/mUART_SCBCLK.c **** *
  94:Generated_Source\PSoC4/mUART_SCBCLK.c **** *******************************************************************************/
  95:Generated_Source\PSoC4/mUART_SCBCLK.c **** void mUART_SCBCLK_Stop(void)
  96:Generated_Source\PSoC4/mUART_SCBCLK.c **** {
  70              		.loc 1 96 0
  71              		.cfi_startproc
  72              		@ args = 0, pretend = 0, frame = 0
  73              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccuMPY40.s 			page 4


  74              		@ link register save eliminated.
  97:Generated_Source\PSoC4/mUART_SCBCLK.c **** #if defined CYREG_PERI_DIV_CMD
  98:Generated_Source\PSoC4/mUART_SCBCLK.c **** 
  99:Generated_Source\PSoC4/mUART_SCBCLK.c ****     /* Make sure any previous start command has finished. */
 100:Generated_Source\PSoC4/mUART_SCBCLK.c ****     while((mUART_SCBCLK_CMD_REG & mUART_SCBCLK_CMD_ENABLE_MASK) != 0u)
  75              		.loc 1 100 0
  76 0000 034A     		ldr	r2, .L10
  77              	.L8:
  78              		.loc 1 100 0 is_stmt 0 discriminator 1
  79 0002 1368     		ldr	r3, [r2]
  80 0004 002B     		cmp	r3, #0
  81 0006 FCDB     		blt	.L8
 101:Generated_Source\PSoC4/mUART_SCBCLK.c ****     {
 102:Generated_Source\PSoC4/mUART_SCBCLK.c ****     }
 103:Generated_Source\PSoC4/mUART_SCBCLK.c ****     
 104:Generated_Source\PSoC4/mUART_SCBCLK.c ****     /* Specify the target divider and it's alignment divider, and disable. */
 105:Generated_Source\PSoC4/mUART_SCBCLK.c ****     mUART_SCBCLK_CMD_REG =
  82              		.loc 1 105 0 is_stmt 1
  83 0008 024A     		ldr	r2, .L10+4
  84 000a 014B     		ldr	r3, .L10
 106:Generated_Source\PSoC4/mUART_SCBCLK.c ****         ((uint32)mUART_SCBCLK__DIV_ID << mUART_SCBCLK_CMD_DIV_SHIFT)|
 107:Generated_Source\PSoC4/mUART_SCBCLK.c ****         ((uint32)mUART_SCBCLK_CMD_DISABLE_MASK);
 108:Generated_Source\PSoC4/mUART_SCBCLK.c **** 
 109:Generated_Source\PSoC4/mUART_SCBCLK.c **** #else
 110:Generated_Source\PSoC4/mUART_SCBCLK.c **** 
 111:Generated_Source\PSoC4/mUART_SCBCLK.c ****     /* Clear the bit to disable the clock. */
 112:Generated_Source\PSoC4/mUART_SCBCLK.c ****     mUART_SCBCLK_ENABLE_REG &= (uint32)(~mUART_SCBCLK__ENABLE_MASK);
 113:Generated_Source\PSoC4/mUART_SCBCLK.c ****     
 114:Generated_Source\PSoC4/mUART_SCBCLK.c **** #endif /* CYREG_PERI_DIV_CMD */
 115:Generated_Source\PSoC4/mUART_SCBCLK.c **** }
  85              		.loc 1 115 0
  86              		@ sp needed
 105:Generated_Source\PSoC4/mUART_SCBCLK.c ****         ((uint32)mUART_SCBCLK__DIV_ID << mUART_SCBCLK_CMD_DIV_SHIFT)|
  87              		.loc 1 105 0
  88 000c 1A60     		str	r2, [r3]
  89              		.loc 1 115 0
  90 000e 7047     		bx	lr
  91              	.L11:
  92              		.align	2
  93              	.L10:
  94 0010 00000140 		.word	1073807360
  95 0014 40000040 		.word	1073741888
  96              		.cfi_endproc
  97              	.LFE1:
  98              		.size	mUART_SCBCLK_Stop, .-mUART_SCBCLK_Stop
  99              		.section	.text.mUART_SCBCLK_SetFractionalDividerRegister,"ax",%progbits
 100              		.align	1
 101              		.global	mUART_SCBCLK_SetFractionalDividerRegister
 102              		.code	16
 103              		.thumb_func
 104              		.type	mUART_SCBCLK_SetFractionalDividerRegister, %function
 105              	mUART_SCBCLK_SetFractionalDividerRegister:
 106              	.LFB2:
 116:Generated_Source\PSoC4/mUART_SCBCLK.c **** 
 117:Generated_Source\PSoC4/mUART_SCBCLK.c **** 
 118:Generated_Source\PSoC4/mUART_SCBCLK.c **** /*******************************************************************************
 119:Generated_Source\PSoC4/mUART_SCBCLK.c **** * Function Name: mUART_SCBCLK_SetFractionalDividerRegister
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccuMPY40.s 			page 5


 120:Generated_Source\PSoC4/mUART_SCBCLK.c **** ********************************************************************************
 121:Generated_Source\PSoC4/mUART_SCBCLK.c **** *
 122:Generated_Source\PSoC4/mUART_SCBCLK.c **** * Summary:
 123:Generated_Source\PSoC4/mUART_SCBCLK.c **** *  Modifies the clock divider and the fractional divider.
 124:Generated_Source\PSoC4/mUART_SCBCLK.c **** *
 125:Generated_Source\PSoC4/mUART_SCBCLK.c **** * Parameters:
 126:Generated_Source\PSoC4/mUART_SCBCLK.c **** *  clkDivider:  Divider register value (0-65535). This value is NOT the
 127:Generated_Source\PSoC4/mUART_SCBCLK.c **** *    divider; the clock hardware divides by clkDivider plus one. For example,
 128:Generated_Source\PSoC4/mUART_SCBCLK.c **** *    to divide the clock by 2, this parameter should be set to 1.
 129:Generated_Source\PSoC4/mUART_SCBCLK.c **** *  fracDivider:  Fractional Divider register value (0-31).
 130:Generated_Source\PSoC4/mUART_SCBCLK.c **** * Returns:
 131:Generated_Source\PSoC4/mUART_SCBCLK.c **** *  None
 132:Generated_Source\PSoC4/mUART_SCBCLK.c **** *
 133:Generated_Source\PSoC4/mUART_SCBCLK.c **** *******************************************************************************/
 134:Generated_Source\PSoC4/mUART_SCBCLK.c **** void mUART_SCBCLK_SetFractionalDividerRegister(uint16 clkDivider, uint8 clkFractional)
 135:Generated_Source\PSoC4/mUART_SCBCLK.c **** {
 107              		.loc 1 135 0
 108              		.cfi_startproc
 109              		@ args = 0, pretend = 0, frame = 0
 110              		@ frame_needed = 0, uses_anonymous_args = 0
 111              	.LVL2:
 136:Generated_Source\PSoC4/mUART_SCBCLK.c ****     uint32 maskVal;
 137:Generated_Source\PSoC4/mUART_SCBCLK.c ****     uint32 regVal;
 138:Generated_Source\PSoC4/mUART_SCBCLK.c ****     
 139:Generated_Source\PSoC4/mUART_SCBCLK.c **** #if defined (mUART_SCBCLK__FRAC_MASK) || defined (CYREG_PERI_DIV_CMD)
 140:Generated_Source\PSoC4/mUART_SCBCLK.c ****     
 141:Generated_Source\PSoC4/mUART_SCBCLK.c **** 	/* get all but divider bits */
 142:Generated_Source\PSoC4/mUART_SCBCLK.c ****     maskVal = mUART_SCBCLK_DIV_REG & 
 143:Generated_Source\PSoC4/mUART_SCBCLK.c ****                     (uint32)(~(uint32)(mUART_SCBCLK_DIV_INT_MASK | mUART_SCBCLK_DIV_FRAC_MASK)); 
 144:Generated_Source\PSoC4/mUART_SCBCLK.c **** 	/* combine mask and new divider vals into 32-bit value */
 145:Generated_Source\PSoC4/mUART_SCBCLK.c ****     regVal = maskVal |
 112              		.loc 1 145 0
 113 0000 FF22     		movs	r2, #255
 114 0002 C900     		lsls	r1, r1, #3
 115              	.LVL3:
 116 0004 1140     		ands	r1, r2
 117 0006 0202     		lsls	r2, r0, #8
 118 0008 1143     		orrs	r1, r2
 119 000a 0723     		movs	r3, #7
 120 000c 0800     		movs	r0, r1
 121              	.LVL4:
 135:Generated_Source\PSoC4/mUART_SCBCLK.c ****     uint32 maskVal;
 122              		.loc 1 135 0
 123 000e 30B5     		push	{r4, r5, lr}
 124              		.cfi_def_cfa_offset 12
 125              		.cfi_offset 4, -12
 126              		.cfi_offset 5, -8
 127              		.cfi_offset 14, -4
 142:Generated_Source\PSoC4/mUART_SCBCLK.c ****                     (uint32)(~(uint32)(mUART_SCBCLK_DIV_INT_MASK | mUART_SCBCLK_DIV_FRAC_MASK)); 
 128              		.loc 1 142 0
 129 0010 024C     		ldr	r4, .L13
 146:Generated_Source\PSoC4/mUART_SCBCLK.c ****         ((uint32)((uint32)clkDivider <<  mUART_SCBCLK_DIV_INT_SHIFT) & mUART_SCBCLK_DIV_INT_MASK) |
 147:Generated_Source\PSoC4/mUART_SCBCLK.c ****         ((uint32)((uint32)clkFractional << mUART_SCBCLK_DIV_FRAC_SHIFT) & mUART_SCBCLK_DIV_FRAC_MAS
 148:Generated_Source\PSoC4/mUART_SCBCLK.c ****     
 149:Generated_Source\PSoC4/mUART_SCBCLK.c **** #else
 150:Generated_Source\PSoC4/mUART_SCBCLK.c ****     /* get all but integer divider bits */
 151:Generated_Source\PSoC4/mUART_SCBCLK.c ****     maskVal = mUART_SCBCLK_DIV_REG & (uint32)(~(uint32)mUART_SCBCLK__DIVIDER_MASK);
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccuMPY40.s 			page 6


 152:Generated_Source\PSoC4/mUART_SCBCLK.c ****     /* combine mask and new divider val into 32-bit value */
 153:Generated_Source\PSoC4/mUART_SCBCLK.c ****     regVal = clkDivider | maskVal;
 154:Generated_Source\PSoC4/mUART_SCBCLK.c ****     
 155:Generated_Source\PSoC4/mUART_SCBCLK.c **** #endif /* mUART_SCBCLK__FRAC_MASK || CYREG_PERI_DIV_CMD */
 156:Generated_Source\PSoC4/mUART_SCBCLK.c **** 
 157:Generated_Source\PSoC4/mUART_SCBCLK.c ****     mUART_SCBCLK_DIV_REG = regVal;
 158:Generated_Source\PSoC4/mUART_SCBCLK.c **** }
 130              		.loc 1 158 0
 131              		@ sp needed
 142:Generated_Source\PSoC4/mUART_SCBCLK.c ****                     (uint32)(~(uint32)(mUART_SCBCLK_DIV_INT_MASK | mUART_SCBCLK_DIV_FRAC_MASK)); 
 132              		.loc 1 142 0
 133 0012 2568     		ldr	r5, [r4]
 134              	.LVL5:
 145:Generated_Source\PSoC4/mUART_SCBCLK.c ****         ((uint32)((uint32)clkDivider <<  mUART_SCBCLK_DIV_INT_SHIFT) & mUART_SCBCLK_DIV_INT_MASK) |
 135              		.loc 1 145 0
 136 0014 2B40     		ands	r3, r5
 137              	.LVL6:
 138 0016 1843     		orrs	r0, r3
 139              	.LVL7:
 157:Generated_Source\PSoC4/mUART_SCBCLK.c **** }
 140              		.loc 1 157 0
 141 0018 2060     		str	r0, [r4]
 142              		.loc 1 158 0
 143 001a 30BD     		pop	{r4, r5, pc}
 144              	.L14:
 145              		.align	2
 146              	.L13:
 147 001c 00030140 		.word	1073808128
 148              		.cfi_endproc
 149              	.LFE2:
 150              		.size	mUART_SCBCLK_SetFractionalDividerRegister, .-mUART_SCBCLK_SetFractionalDividerRegister
 151              		.section	.text.mUART_SCBCLK_GetDividerRegister,"ax",%progbits
 152              		.align	1
 153              		.global	mUART_SCBCLK_GetDividerRegister
 154              		.code	16
 155              		.thumb_func
 156              		.type	mUART_SCBCLK_GetDividerRegister, %function
 157              	mUART_SCBCLK_GetDividerRegister:
 158              	.LFB3:
 159:Generated_Source\PSoC4/mUART_SCBCLK.c **** 
 160:Generated_Source\PSoC4/mUART_SCBCLK.c **** 
 161:Generated_Source\PSoC4/mUART_SCBCLK.c **** /*******************************************************************************
 162:Generated_Source\PSoC4/mUART_SCBCLK.c **** * Function Name: mUART_SCBCLK_GetDividerRegister
 163:Generated_Source\PSoC4/mUART_SCBCLK.c **** ********************************************************************************
 164:Generated_Source\PSoC4/mUART_SCBCLK.c **** *
 165:Generated_Source\PSoC4/mUART_SCBCLK.c **** * Summary:
 166:Generated_Source\PSoC4/mUART_SCBCLK.c **** *  Gets the clock divider register value.
 167:Generated_Source\PSoC4/mUART_SCBCLK.c **** *
 168:Generated_Source\PSoC4/mUART_SCBCLK.c **** * Parameters:
 169:Generated_Source\PSoC4/mUART_SCBCLK.c **** *  None
 170:Generated_Source\PSoC4/mUART_SCBCLK.c **** *
 171:Generated_Source\PSoC4/mUART_SCBCLK.c **** * Returns:
 172:Generated_Source\PSoC4/mUART_SCBCLK.c **** *  Divide value of the clock minus 1. For example, if the clock is set to
 173:Generated_Source\PSoC4/mUART_SCBCLK.c **** *  divide by 2, the return value will be 1.
 174:Generated_Source\PSoC4/mUART_SCBCLK.c **** *
 175:Generated_Source\PSoC4/mUART_SCBCLK.c **** *******************************************************************************/
 176:Generated_Source\PSoC4/mUART_SCBCLK.c **** uint16 mUART_SCBCLK_GetDividerRegister(void)
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccuMPY40.s 			page 7


 177:Generated_Source\PSoC4/mUART_SCBCLK.c **** {
 159              		.loc 1 177 0
 160              		.cfi_startproc
 161              		@ args = 0, pretend = 0, frame = 0
 162              		@ frame_needed = 0, uses_anonymous_args = 0
 163              		@ link register save eliminated.
 178:Generated_Source\PSoC4/mUART_SCBCLK.c ****     return (uint16)((mUART_SCBCLK_DIV_REG & mUART_SCBCLK_DIV_INT_MASK)
 164              		.loc 1 178 0
 165 0000 024B     		ldr	r3, .L16
 179:Generated_Source\PSoC4/mUART_SCBCLK.c ****         >> mUART_SCBCLK_DIV_INT_SHIFT);
 180:Generated_Source\PSoC4/mUART_SCBCLK.c **** }
 166              		.loc 1 180 0
 167              		@ sp needed
 178:Generated_Source\PSoC4/mUART_SCBCLK.c ****     return (uint16)((mUART_SCBCLK_DIV_REG & mUART_SCBCLK_DIV_INT_MASK)
 168              		.loc 1 178 0
 169 0002 1868     		ldr	r0, [r3]
 170 0004 000A     		lsrs	r0, r0, #8
 171 0006 80B2     		uxth	r0, r0
 172              		.loc 1 180 0
 173 0008 7047     		bx	lr
 174              	.L17:
 175 000a C046     		.align	2
 176              	.L16:
 177 000c 00030140 		.word	1073808128
 178              		.cfi_endproc
 179              	.LFE3:
 180              		.size	mUART_SCBCLK_GetDividerRegister, .-mUART_SCBCLK_GetDividerRegister
 181              		.section	.text.mUART_SCBCLK_GetFractionalDividerRegister,"ax",%progbits
 182              		.align	1
 183              		.global	mUART_SCBCLK_GetFractionalDividerRegister
 184              		.code	16
 185              		.thumb_func
 186              		.type	mUART_SCBCLK_GetFractionalDividerRegister, %function
 187              	mUART_SCBCLK_GetFractionalDividerRegister:
 188              	.LFB4:
 181:Generated_Source\PSoC4/mUART_SCBCLK.c **** 
 182:Generated_Source\PSoC4/mUART_SCBCLK.c **** 
 183:Generated_Source\PSoC4/mUART_SCBCLK.c **** /*******************************************************************************
 184:Generated_Source\PSoC4/mUART_SCBCLK.c **** * Function Name: mUART_SCBCLK_GetFractionalDividerRegister
 185:Generated_Source\PSoC4/mUART_SCBCLK.c **** ********************************************************************************
 186:Generated_Source\PSoC4/mUART_SCBCLK.c **** *
 187:Generated_Source\PSoC4/mUART_SCBCLK.c **** * Summary:
 188:Generated_Source\PSoC4/mUART_SCBCLK.c **** *  Gets the clock fractional divider register value.
 189:Generated_Source\PSoC4/mUART_SCBCLK.c **** *
 190:Generated_Source\PSoC4/mUART_SCBCLK.c **** * Parameters:
 191:Generated_Source\PSoC4/mUART_SCBCLK.c **** *  None
 192:Generated_Source\PSoC4/mUART_SCBCLK.c **** *
 193:Generated_Source\PSoC4/mUART_SCBCLK.c **** * Returns:
 194:Generated_Source\PSoC4/mUART_SCBCLK.c **** *  Fractional Divide value of the clock
 195:Generated_Source\PSoC4/mUART_SCBCLK.c **** *  0 if the fractional divider is not in use.
 196:Generated_Source\PSoC4/mUART_SCBCLK.c **** *
 197:Generated_Source\PSoC4/mUART_SCBCLK.c **** *******************************************************************************/
 198:Generated_Source\PSoC4/mUART_SCBCLK.c **** uint8 mUART_SCBCLK_GetFractionalDividerRegister(void)
 199:Generated_Source\PSoC4/mUART_SCBCLK.c **** {
 189              		.loc 1 199 0
 190              		.cfi_startproc
 191              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccuMPY40.s 			page 8


 192              		@ frame_needed = 0, uses_anonymous_args = 0
 193              		@ link register save eliminated.
 200:Generated_Source\PSoC4/mUART_SCBCLK.c **** #if defined (mUART_SCBCLK__FRAC_MASK)
 201:Generated_Source\PSoC4/mUART_SCBCLK.c ****     /* return fractional divider bits */
 202:Generated_Source\PSoC4/mUART_SCBCLK.c ****     return (uint8)((mUART_SCBCLK_DIV_REG & mUART_SCBCLK_DIV_FRAC_MASK)
 203:Generated_Source\PSoC4/mUART_SCBCLK.c ****         >> mUART_SCBCLK_DIV_FRAC_SHIFT);
 204:Generated_Source\PSoC4/mUART_SCBCLK.c **** #else
 205:Generated_Source\PSoC4/mUART_SCBCLK.c ****     return 0u;
 206:Generated_Source\PSoC4/mUART_SCBCLK.c **** #endif /* mUART_SCBCLK__FRAC_MASK */
 207:Generated_Source\PSoC4/mUART_SCBCLK.c **** }
 194              		.loc 1 207 0
 195 0000 0020     		movs	r0, #0
 196              		@ sp needed
 197 0002 7047     		bx	lr
 198              		.cfi_endproc
 199              	.LFE4:
 200              		.size	mUART_SCBCLK_GetFractionalDividerRegister, .-mUART_SCBCLK_GetFractionalDividerRegister
 201              		.text
 202              	.Letext0:
 203              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 204              		.section	.debug_info,"",%progbits
 205              	.Ldebug_info0:
 206 0000 62010000 		.4byte	0x162
 207 0004 0400     		.2byte	0x4
 208 0006 00000000 		.4byte	.Ldebug_abbrev0
 209 000a 04       		.byte	0x4
 210 000b 01       		.uleb128 0x1
 211 000c 34000000 		.4byte	.LASF25
 212 0010 0C       		.byte	0xc
 213 0011 00000000 		.4byte	.LASF26
 214 0015 C8010000 		.4byte	.LASF27
 215 0019 00000000 		.4byte	.Ldebug_ranges0+0
 216 001d 00000000 		.4byte	0
 217 0021 00000000 		.4byte	.Ldebug_line0
 218 0025 02       		.uleb128 0x2
 219 0026 01       		.byte	0x1
 220 0027 06       		.byte	0x6
 221 0028 40020000 		.4byte	.LASF0
 222 002c 02       		.uleb128 0x2
 223 002d 01       		.byte	0x1
 224 002e 08       		.byte	0x8
 225 002f F6000000 		.4byte	.LASF1
 226 0033 02       		.uleb128 0x2
 227 0034 02       		.byte	0x2
 228 0035 05       		.byte	0x5
 229 0036 07020000 		.4byte	.LASF2
 230 003a 02       		.uleb128 0x2
 231 003b 02       		.byte	0x2
 232 003c 07       		.byte	0x7
 233 003d 16010000 		.4byte	.LASF3
 234 0041 02       		.uleb128 0x2
 235 0042 04       		.byte	0x4
 236 0043 05       		.byte	0x5
 237 0044 37020000 		.4byte	.LASF4
 238 0048 02       		.uleb128 0x2
 239 0049 04       		.byte	0x4
 240 004a 07       		.byte	0x7
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccuMPY40.s 			page 9


 241 004b 04010000 		.4byte	.LASF5
 242 004f 02       		.uleb128 0x2
 243 0050 08       		.byte	0x8
 244 0051 05       		.byte	0x5
 245 0052 B5010000 		.4byte	.LASF6
 246 0056 02       		.uleb128 0x2
 247 0057 08       		.byte	0x8
 248 0058 07       		.byte	0x7
 249 0059 89010000 		.4byte	.LASF7
 250 005d 03       		.uleb128 0x3
 251 005e 04       		.byte	0x4
 252 005f 05       		.byte	0x5
 253 0060 696E7400 		.ascii	"int\000"
 254 0064 02       		.uleb128 0x2
 255 0065 04       		.byte	0x4
 256 0066 07       		.byte	0x7
 257 0067 7C010000 		.4byte	.LASF8
 258 006b 04       		.uleb128 0x4
 259 006c 11020000 		.4byte	.LASF9
 260 0070 02       		.byte	0x2
 261 0071 FB01     		.2byte	0x1fb
 262 0073 2C000000 		.4byte	0x2c
 263 0077 04       		.uleb128 0x4
 264 0078 5C010000 		.4byte	.LASF10
 265 007c 02       		.byte	0x2
 266 007d FC01     		.2byte	0x1fc
 267 007f 3A000000 		.4byte	0x3a
 268 0083 04       		.uleb128 0x4
 269 0084 75010000 		.4byte	.LASF11
 270 0088 02       		.byte	0x2
 271 0089 FD01     		.2byte	0x1fd
 272 008b 48000000 		.4byte	0x48
 273 008f 02       		.uleb128 0x2
 274 0090 04       		.byte	0x4
 275 0091 04       		.byte	0x4
 276 0092 F0000000 		.4byte	.LASF12
 277 0096 02       		.uleb128 0x2
 278 0097 08       		.byte	0x8
 279 0098 04       		.byte	0x4
 280 0099 34010000 		.4byte	.LASF13
 281 009d 02       		.uleb128 0x2
 282 009e 01       		.byte	0x1
 283 009f 08       		.byte	0x8
 284 00a0 C3010000 		.4byte	.LASF14
 285 00a4 04       		.uleb128 0x4
 286 00a5 26000000 		.4byte	.LASF15
 287 00a9 02       		.byte	0x2
 288 00aa A702     		.2byte	0x2a7
 289 00ac B0000000 		.4byte	0xb0
 290 00b0 05       		.uleb128 0x5
 291 00b1 83000000 		.4byte	0x83
 292 00b5 06       		.uleb128 0x6
 293 00b6 A0010000 		.4byte	.LASF16
 294 00ba 01       		.byte	0x1
 295 00bb 27       		.byte	0x27
 296 00bc 00000000 		.4byte	.LFB0
 297 00c0 1C000000 		.4byte	.LFE0-.LFB0
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccuMPY40.s 			page 10


 298 00c4 01       		.uleb128 0x1
 299 00c5 9C       		.byte	0x9c
 300 00c6 DA000000 		.4byte	0xda
 301 00ca 07       		.uleb128 0x7
 302 00cb 42010000 		.4byte	.LASF18
 303 00cf 01       		.byte	0x1
 304 00d0 27       		.byte	0x27
 305 00d1 83000000 		.4byte	0x83
 306 00d5 00000000 		.4byte	.LLST0
 307 00d9 00       		.byte	0
 308 00da 08       		.uleb128 0x8
 309 00db 63010000 		.4byte	.LASF28
 310 00df 01       		.byte	0x1
 311 00e0 5F       		.byte	0x5f
 312 00e1 00000000 		.4byte	.LFB1
 313 00e5 18000000 		.4byte	.LFE1-.LFB1
 314 00e9 01       		.uleb128 0x1
 315 00ea 9C       		.byte	0x9c
 316 00eb 06       		.uleb128 0x6
 317 00ec C6000000 		.4byte	.LASF17
 318 00f0 01       		.byte	0x1
 319 00f1 86       		.byte	0x86
 320 00f2 00000000 		.4byte	.LFB2
 321 00f6 20000000 		.4byte	.LFE2-.LFB2
 322 00fa 01       		.uleb128 0x1
 323 00fb 9C       		.byte	0x9c
 324 00fc 3B010000 		.4byte	0x13b
 325 0100 07       		.uleb128 0x7
 326 0101 29010000 		.4byte	.LASF19
 327 0105 01       		.byte	0x1
 328 0106 86       		.byte	0x86
 329 0107 77000000 		.4byte	0x77
 330 010b 21000000 		.4byte	.LLST1
 331 010f 07       		.uleb128 0x7
 332 0110 4E010000 		.4byte	.LASF20
 333 0114 01       		.byte	0x1
 334 0115 86       		.byte	0x86
 335 0116 6B000000 		.4byte	0x6b
 336 011a 42000000 		.4byte	.LLST2
 337 011e 09       		.uleb128 0x9
 338 011f 2C000000 		.4byte	.LASF21
 339 0123 01       		.byte	0x1
 340 0124 88       		.byte	0x88
 341 0125 83000000 		.4byte	0x83
 342 0129 63000000 		.4byte	.LLST3
 343 012d 0A       		.uleb128 0xa
 344 012e 3B010000 		.4byte	.LASF22
 345 0132 01       		.byte	0x1
 346 0133 89       		.byte	0x89
 347 0134 83000000 		.4byte	0x83
 348 0138 01       		.uleb128 0x1
 349 0139 50       		.byte	0x50
 350 013a 00       		.byte	0
 351 013b 0B       		.uleb128 0xb
 352 013c 17020000 		.4byte	.LASF23
 353 0140 01       		.byte	0x1
 354 0141 B0       		.byte	0xb0
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccuMPY40.s 			page 11


 355 0142 77000000 		.4byte	0x77
 356 0146 00000000 		.4byte	.LFB3
 357 014a 10000000 		.4byte	.LFE3-.LFB3
 358 014e 01       		.uleb128 0x1
 359 014f 9C       		.byte	0x9c
 360 0150 0B       		.uleb128 0xb
 361 0151 4C020000 		.4byte	.LASF24
 362 0155 01       		.byte	0x1
 363 0156 C6       		.byte	0xc6
 364 0157 6B000000 		.4byte	0x6b
 365 015b 00000000 		.4byte	.LFB4
 366 015f 04000000 		.4byte	.LFE4-.LFB4
 367 0163 01       		.uleb128 0x1
 368 0164 9C       		.byte	0x9c
 369 0165 00       		.byte	0
 370              		.section	.debug_abbrev,"",%progbits
 371              	.Ldebug_abbrev0:
 372 0000 01       		.uleb128 0x1
 373 0001 11       		.uleb128 0x11
 374 0002 01       		.byte	0x1
 375 0003 25       		.uleb128 0x25
 376 0004 0E       		.uleb128 0xe
 377 0005 13       		.uleb128 0x13
 378 0006 0B       		.uleb128 0xb
 379 0007 03       		.uleb128 0x3
 380 0008 0E       		.uleb128 0xe
 381 0009 1B       		.uleb128 0x1b
 382 000a 0E       		.uleb128 0xe
 383 000b 55       		.uleb128 0x55
 384 000c 17       		.uleb128 0x17
 385 000d 11       		.uleb128 0x11
 386 000e 01       		.uleb128 0x1
 387 000f 10       		.uleb128 0x10
 388 0010 17       		.uleb128 0x17
 389 0011 00       		.byte	0
 390 0012 00       		.byte	0
 391 0013 02       		.uleb128 0x2
 392 0014 24       		.uleb128 0x24
 393 0015 00       		.byte	0
 394 0016 0B       		.uleb128 0xb
 395 0017 0B       		.uleb128 0xb
 396 0018 3E       		.uleb128 0x3e
 397 0019 0B       		.uleb128 0xb
 398 001a 03       		.uleb128 0x3
 399 001b 0E       		.uleb128 0xe
 400 001c 00       		.byte	0
 401 001d 00       		.byte	0
 402 001e 03       		.uleb128 0x3
 403 001f 24       		.uleb128 0x24
 404 0020 00       		.byte	0
 405 0021 0B       		.uleb128 0xb
 406 0022 0B       		.uleb128 0xb
 407 0023 3E       		.uleb128 0x3e
 408 0024 0B       		.uleb128 0xb
 409 0025 03       		.uleb128 0x3
 410 0026 08       		.uleb128 0x8
 411 0027 00       		.byte	0
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccuMPY40.s 			page 12


 412 0028 00       		.byte	0
 413 0029 04       		.uleb128 0x4
 414 002a 16       		.uleb128 0x16
 415 002b 00       		.byte	0
 416 002c 03       		.uleb128 0x3
 417 002d 0E       		.uleb128 0xe
 418 002e 3A       		.uleb128 0x3a
 419 002f 0B       		.uleb128 0xb
 420 0030 3B       		.uleb128 0x3b
 421 0031 05       		.uleb128 0x5
 422 0032 49       		.uleb128 0x49
 423 0033 13       		.uleb128 0x13
 424 0034 00       		.byte	0
 425 0035 00       		.byte	0
 426 0036 05       		.uleb128 0x5
 427 0037 35       		.uleb128 0x35
 428 0038 00       		.byte	0
 429 0039 49       		.uleb128 0x49
 430 003a 13       		.uleb128 0x13
 431 003b 00       		.byte	0
 432 003c 00       		.byte	0
 433 003d 06       		.uleb128 0x6
 434 003e 2E       		.uleb128 0x2e
 435 003f 01       		.byte	0x1
 436 0040 3F       		.uleb128 0x3f
 437 0041 19       		.uleb128 0x19
 438 0042 03       		.uleb128 0x3
 439 0043 0E       		.uleb128 0xe
 440 0044 3A       		.uleb128 0x3a
 441 0045 0B       		.uleb128 0xb
 442 0046 3B       		.uleb128 0x3b
 443 0047 0B       		.uleb128 0xb
 444 0048 27       		.uleb128 0x27
 445 0049 19       		.uleb128 0x19
 446 004a 11       		.uleb128 0x11
 447 004b 01       		.uleb128 0x1
 448 004c 12       		.uleb128 0x12
 449 004d 06       		.uleb128 0x6
 450 004e 40       		.uleb128 0x40
 451 004f 18       		.uleb128 0x18
 452 0050 9742     		.uleb128 0x2117
 453 0052 19       		.uleb128 0x19
 454 0053 01       		.uleb128 0x1
 455 0054 13       		.uleb128 0x13
 456 0055 00       		.byte	0
 457 0056 00       		.byte	0
 458 0057 07       		.uleb128 0x7
 459 0058 05       		.uleb128 0x5
 460 0059 00       		.byte	0
 461 005a 03       		.uleb128 0x3
 462 005b 0E       		.uleb128 0xe
 463 005c 3A       		.uleb128 0x3a
 464 005d 0B       		.uleb128 0xb
 465 005e 3B       		.uleb128 0x3b
 466 005f 0B       		.uleb128 0xb
 467 0060 49       		.uleb128 0x49
 468 0061 13       		.uleb128 0x13
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccuMPY40.s 			page 13


 469 0062 02       		.uleb128 0x2
 470 0063 17       		.uleb128 0x17
 471 0064 00       		.byte	0
 472 0065 00       		.byte	0
 473 0066 08       		.uleb128 0x8
 474 0067 2E       		.uleb128 0x2e
 475 0068 00       		.byte	0
 476 0069 3F       		.uleb128 0x3f
 477 006a 19       		.uleb128 0x19
 478 006b 03       		.uleb128 0x3
 479 006c 0E       		.uleb128 0xe
 480 006d 3A       		.uleb128 0x3a
 481 006e 0B       		.uleb128 0xb
 482 006f 3B       		.uleb128 0x3b
 483 0070 0B       		.uleb128 0xb
 484 0071 27       		.uleb128 0x27
 485 0072 19       		.uleb128 0x19
 486 0073 11       		.uleb128 0x11
 487 0074 01       		.uleb128 0x1
 488 0075 12       		.uleb128 0x12
 489 0076 06       		.uleb128 0x6
 490 0077 40       		.uleb128 0x40
 491 0078 18       		.uleb128 0x18
 492 0079 9742     		.uleb128 0x2117
 493 007b 19       		.uleb128 0x19
 494 007c 00       		.byte	0
 495 007d 00       		.byte	0
 496 007e 09       		.uleb128 0x9
 497 007f 34       		.uleb128 0x34
 498 0080 00       		.byte	0
 499 0081 03       		.uleb128 0x3
 500 0082 0E       		.uleb128 0xe
 501 0083 3A       		.uleb128 0x3a
 502 0084 0B       		.uleb128 0xb
 503 0085 3B       		.uleb128 0x3b
 504 0086 0B       		.uleb128 0xb
 505 0087 49       		.uleb128 0x49
 506 0088 13       		.uleb128 0x13
 507 0089 02       		.uleb128 0x2
 508 008a 17       		.uleb128 0x17
 509 008b 00       		.byte	0
 510 008c 00       		.byte	0
 511 008d 0A       		.uleb128 0xa
 512 008e 34       		.uleb128 0x34
 513 008f 00       		.byte	0
 514 0090 03       		.uleb128 0x3
 515 0091 0E       		.uleb128 0xe
 516 0092 3A       		.uleb128 0x3a
 517 0093 0B       		.uleb128 0xb
 518 0094 3B       		.uleb128 0x3b
 519 0095 0B       		.uleb128 0xb
 520 0096 49       		.uleb128 0x49
 521 0097 13       		.uleb128 0x13
 522 0098 02       		.uleb128 0x2
 523 0099 18       		.uleb128 0x18
 524 009a 00       		.byte	0
 525 009b 00       		.byte	0
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccuMPY40.s 			page 14


 526 009c 0B       		.uleb128 0xb
 527 009d 2E       		.uleb128 0x2e
 528 009e 00       		.byte	0
 529 009f 3F       		.uleb128 0x3f
 530 00a0 19       		.uleb128 0x19
 531 00a1 03       		.uleb128 0x3
 532 00a2 0E       		.uleb128 0xe
 533 00a3 3A       		.uleb128 0x3a
 534 00a4 0B       		.uleb128 0xb
 535 00a5 3B       		.uleb128 0x3b
 536 00a6 0B       		.uleb128 0xb
 537 00a7 27       		.uleb128 0x27
 538 00a8 19       		.uleb128 0x19
 539 00a9 49       		.uleb128 0x49
 540 00aa 13       		.uleb128 0x13
 541 00ab 11       		.uleb128 0x11
 542 00ac 01       		.uleb128 0x1
 543 00ad 12       		.uleb128 0x12
 544 00ae 06       		.uleb128 0x6
 545 00af 40       		.uleb128 0x40
 546 00b0 18       		.uleb128 0x18
 547 00b1 9742     		.uleb128 0x2117
 548 00b3 19       		.uleb128 0x19
 549 00b4 00       		.byte	0
 550 00b5 00       		.byte	0
 551 00b6 00       		.byte	0
 552              		.section	.debug_loc,"",%progbits
 553              	.Ldebug_loc0:
 554              	.LLST0:
 555 0000 00000000 		.4byte	.LVL0
 556 0004 0C000000 		.4byte	.LVL1
 557 0008 0100     		.2byte	0x1
 558 000a 50       		.byte	0x50
 559 000b 0C000000 		.4byte	.LVL1
 560 000f 1C000000 		.4byte	.LFE0
 561 0013 0400     		.2byte	0x4
 562 0015 F3       		.byte	0xf3
 563 0016 01       		.uleb128 0x1
 564 0017 50       		.byte	0x50
 565 0018 9F       		.byte	0x9f
 566 0019 00000000 		.4byte	0
 567 001d 00000000 		.4byte	0
 568              	.LLST1:
 569 0021 00000000 		.4byte	.LVL2
 570 0025 0E000000 		.4byte	.LVL4
 571 0029 0100     		.2byte	0x1
 572 002b 50       		.byte	0x50
 573 002c 0E000000 		.4byte	.LVL4
 574 0030 20000000 		.4byte	.LFE2
 575 0034 0400     		.2byte	0x4
 576 0036 F3       		.byte	0xf3
 577 0037 01       		.uleb128 0x1
 578 0038 50       		.byte	0x50
 579 0039 9F       		.byte	0x9f
 580 003a 00000000 		.4byte	0
 581 003e 00000000 		.4byte	0
 582              	.LLST2:
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccuMPY40.s 			page 15


 583 0042 00000000 		.4byte	.LVL2
 584 0046 04000000 		.4byte	.LVL3
 585 004a 0100     		.2byte	0x1
 586 004c 51       		.byte	0x51
 587 004d 04000000 		.4byte	.LVL3
 588 0051 20000000 		.4byte	.LFE2
 589 0055 0400     		.2byte	0x4
 590 0057 F3       		.byte	0xf3
 591 0058 01       		.uleb128 0x1
 592 0059 51       		.byte	0x51
 593 005a 9F       		.byte	0x9f
 594 005b 00000000 		.4byte	0
 595 005f 00000000 		.4byte	0
 596              	.LLST3:
 597 0063 14000000 		.4byte	.LVL5
 598 0067 16000000 		.4byte	.LVL6
 599 006b 0500     		.2byte	0x5
 600 006d 75       		.byte	0x75
 601 006e 00       		.sleb128 0
 602 006f 37       		.byte	0x37
 603 0070 1A       		.byte	0x1a
 604 0071 9F       		.byte	0x9f
 605 0072 16000000 		.4byte	.LVL6
 606 0076 20000000 		.4byte	.LFE2
 607 007a 0100     		.2byte	0x1
 608 007c 53       		.byte	0x53
 609 007d 00000000 		.4byte	0
 610 0081 00000000 		.4byte	0
 611              		.section	.debug_aranges,"",%progbits
 612 0000 3C000000 		.4byte	0x3c
 613 0004 0200     		.2byte	0x2
 614 0006 00000000 		.4byte	.Ldebug_info0
 615 000a 04       		.byte	0x4
 616 000b 00       		.byte	0
 617 000c 0000     		.2byte	0
 618 000e 0000     		.2byte	0
 619 0010 00000000 		.4byte	.LFB0
 620 0014 1C000000 		.4byte	.LFE0-.LFB0
 621 0018 00000000 		.4byte	.LFB1
 622 001c 18000000 		.4byte	.LFE1-.LFB1
 623 0020 00000000 		.4byte	.LFB2
 624 0024 20000000 		.4byte	.LFE2-.LFB2
 625 0028 00000000 		.4byte	.LFB3
 626 002c 10000000 		.4byte	.LFE3-.LFB3
 627 0030 00000000 		.4byte	.LFB4
 628 0034 04000000 		.4byte	.LFE4-.LFB4
 629 0038 00000000 		.4byte	0
 630 003c 00000000 		.4byte	0
 631              		.section	.debug_ranges,"",%progbits
 632              	.Ldebug_ranges0:
 633 0000 00000000 		.4byte	.LFB0
 634 0004 1C000000 		.4byte	.LFE0
 635 0008 00000000 		.4byte	.LFB1
 636 000c 18000000 		.4byte	.LFE1
 637 0010 00000000 		.4byte	.LFB2
 638 0014 20000000 		.4byte	.LFE2
 639 0018 00000000 		.4byte	.LFB3
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccuMPY40.s 			page 16


 640 001c 10000000 		.4byte	.LFE3
 641 0020 00000000 		.4byte	.LFB4
 642 0024 04000000 		.4byte	.LFE4
 643 0028 00000000 		.4byte	0
 644 002c 00000000 		.4byte	0
 645              		.section	.debug_line,"",%progbits
 646              	.Ldebug_line0:
 647 0000 D4000000 		.section	.debug_str,"MS",%progbits,1
 647      02004900 
 647      00000201 
 647      FB0E0D00 
 647      01010101 
 648              	.LASF26:
 649 0000 47656E65 		.ascii	"Generated_Source\\PSoC4\\mUART_SCBCLK.c\000"
 649      72617465 
 649      645F536F 
 649      75726365 
 649      5C50536F 
 650              	.LASF15:
 651 0026 72656733 		.ascii	"reg32\000"
 651      3200
 652              	.LASF21:
 653 002c 6D61736B 		.ascii	"maskVal\000"
 653      56616C00 
 654              	.LASF25:
 655 0034 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 655      43313120 
 655      352E342E 
 655      31203230 
 655      31363036 
 656 0067 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 656      20726576 
 656      6973696F 
 656      6E203233 
 656      37373135 
 657 009a 67202D4F 		.ascii	"g -Os -ffunction-sections -ffat-lto-objects\000"
 657      73202D66 
 657      66756E63 
 657      74696F6E 
 657      2D736563 
 658              	.LASF17:
 659 00c6 6D554152 		.ascii	"mUART_SCBCLK_SetFractionalDividerRegister\000"
 659      545F5343 
 659      42434C4B 
 659      5F536574 
 659      46726163 
 660              	.LASF12:
 661 00f0 666C6F61 		.ascii	"float\000"
 661      7400
 662              	.LASF1:
 663 00f6 756E7369 		.ascii	"unsigned char\000"
 663      676E6564 
 663      20636861 
 663      7200
 664              	.LASF5:
 665 0104 6C6F6E67 		.ascii	"long unsigned int\000"
 665      20756E73 
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccuMPY40.s 			page 17


 665      69676E65 
 665      6420696E 
 665      7400
 666              	.LASF3:
 667 0116 73686F72 		.ascii	"short unsigned int\000"
 667      7420756E 
 667      7369676E 
 667      65642069 
 667      6E7400
 668              	.LASF19:
 669 0129 636C6B44 		.ascii	"clkDivider\000"
 669      69766964 
 669      657200
 670              	.LASF13:
 671 0134 646F7562 		.ascii	"double\000"
 671      6C6500
 672              	.LASF22:
 673 013b 72656756 		.ascii	"regVal\000"
 673      616C00
 674              	.LASF18:
 675 0142 616C6967 		.ascii	"alignClkDiv\000"
 675      6E436C6B 
 675      44697600 
 676              	.LASF20:
 677 014e 636C6B46 		.ascii	"clkFractional\000"
 677      72616374 
 677      696F6E61 
 677      6C00
 678              	.LASF10:
 679 015c 75696E74 		.ascii	"uint16\000"
 679      313600
 680              	.LASF28:
 681 0163 6D554152 		.ascii	"mUART_SCBCLK_Stop\000"
 681      545F5343 
 681      42434C4B 
 681      5F53746F 
 681      7000
 682              	.LASF11:
 683 0175 75696E74 		.ascii	"uint32\000"
 683      333200
 684              	.LASF8:
 685 017c 756E7369 		.ascii	"unsigned int\000"
 685      676E6564 
 685      20696E74 
 685      00
 686              	.LASF7:
 687 0189 6C6F6E67 		.ascii	"long long unsigned int\000"
 687      206C6F6E 
 687      6720756E 
 687      7369676E 
 687      65642069 
 688              	.LASF16:
 689 01a0 6D554152 		.ascii	"mUART_SCBCLK_StartEx\000"
 689      545F5343 
 689      42434C4B 
 689      5F537461 
 689      72744578 
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccuMPY40.s 			page 18


 690              	.LASF6:
 691 01b5 6C6F6E67 		.ascii	"long long int\000"
 691      206C6F6E 
 691      6720696E 
 691      7400
 692              	.LASF14:
 693 01c3 63686172 		.ascii	"char\000"
 693      00
 694              	.LASF27:
 695 01c8 433A5C55 		.ascii	"C:\\Users\\PC\\Documents\\PSoC Creator\\yellowChip\\"
 695      73657273 
 695      5C50435C 
 695      446F6375 
 695      6D656E74 
 696 01f6 626F6F74 		.ascii	"bootloader.cydsn\000"
 696      6C6F6164 
 696      65722E63 
 696      7964736E 
 696      00
 697              	.LASF2:
 698 0207 73686F72 		.ascii	"short int\000"
 698      7420696E 
 698      7400
 699              	.LASF9:
 700 0211 75696E74 		.ascii	"uint8\000"
 700      3800
 701              	.LASF23:
 702 0217 6D554152 		.ascii	"mUART_SCBCLK_GetDividerRegister\000"
 702      545F5343 
 702      42434C4B 
 702      5F476574 
 702      44697669 
 703              	.LASF4:
 704 0237 6C6F6E67 		.ascii	"long int\000"
 704      20696E74 
 704      00
 705              	.LASF0:
 706 0240 7369676E 		.ascii	"signed char\000"
 706      65642063 
 706      68617200 
 707              	.LASF24:
 708 024c 6D554152 		.ascii	"mUART_SCBCLK_GetFractionalDividerRegister\000"
 708      545F5343 
 708      42434C4B 
 708      5F476574 
 708      46726163 
 709              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
