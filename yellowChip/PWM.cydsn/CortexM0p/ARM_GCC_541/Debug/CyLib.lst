ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CyLib.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CySysClkImoStart,"ax",%progbits
  20              		.align	2
  21              		.global	CySysClkImoStart
  22              		.code	16
  23              		.thumb_func
  24              		.type	CySysClkImoStart, %function
  25              	CySysClkImoStart:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC4\\CyLib.c"
   1:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLib.c **** * \file CyLib.c
   3:Generated_Source\PSoC4/CyLib.c **** * \version 6.0
   4:Generated_Source\PSoC4/CyLib.c **** *
   5:Generated_Source\PSoC4/CyLib.c **** * \brief Provides a system API for the Clocking, Interrupts, SysTick, and
   6:Generated_Source\PSoC4/CyLib.c **** * Voltage Detect.
   7:Generated_Source\PSoC4/CyLib.c **** *
   8:Generated_Source\PSoC4/CyLib.c **** * \note Documentation of the API's in this file is located in the PSoC 4 System
   9:Generated_Source\PSoC4/CyLib.c **** * Reference Guide provided with PSoC Creator.
  10:Generated_Source\PSoC4/CyLib.c **** *
  11:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CyLib.c **** * \copyright
  13:Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2020, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/CyLib.c **** 
  19:Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  20:Generated_Source\PSoC4/CyLib.c **** 
  21:Generated_Source\PSoC4/CyLib.c **** /* CySysClkWriteImoFreq() || CySysClkImoEnableWcoLock() */
  22:Generated_Source\PSoC4/CyLib.c **** #if ((CY_IP_SRSSV2 && CY_IP_FMLT) || CY_IP_IMO_TRIMMABLE_BY_WCO)
  23:Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  24:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  25:Generated_Source\PSoC4/CyLib.c **** 
  26:Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  27:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  28:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  29:Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  30:Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 2


  31:Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
  32:Generated_Source\PSoC4/CyLib.c **** 
  33:Generated_Source\PSoC4/CyLib.c **** 
  34:Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  35:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  36:Generated_Source\PSoC4/CyLib.c **** 
  37:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_PLL)
  38:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll);
  39:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll);
  40:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_PLL) */
  41:Generated_Source\PSoC4/CyLib.c **** 
  42:Generated_Source\PSoC4/CyLib.c **** 
  43:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
  44:Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  45:Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  46:Generated_Source\PSoC4/CyLib.c **** *
  47:Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
  48:Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  49:Generated_Source\PSoC4/CyLib.c **** *
  50:Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  51:Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  52:Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  53:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  54:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  55:Generated_Source\PSoC4/CyLib.c **** 
  56:Generated_Source\PSoC4/CyLib.c **** 
  57:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  58:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  59:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  60:Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  61:Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  62:Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  63:Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  64:Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  65:Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  66:Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  67:Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  68:Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  69:Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  70:Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  71:Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  72:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  73:Generated_Source\PSoC4/CyLib.c **** 
  74:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2)
  75:Generated_Source\PSoC4/CyLib.c ****     #define CY_CRI_TESTPGM_6_REV            (6u)
  76:Generated_Source\PSoC4/CyLib.c ****     #define CY_CRI_TESTPGM_9_REV            (9u)
  77:Generated_Source\PSoC4/CyLib.c ****     #define CYSFLASH_CRI_testpgm_rev_MASK   (0x0000003Fu)
  78:Generated_Source\PSoC4/CyLib.c **** 
  79:Generated_Source\PSoC4/CyLib.c ****     /* Stored CY_SYS_CLK_IMO_TRIM4_REG when modified for USB lock */
  80:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim4 = 0u;
  81:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim5 = 0u;
  82:Generated_Source\PSoC4/CyLib.c **** 
  83:Generated_Source\PSoC4/CyLib.c ****     static void CySysClkImoSetPwrBgTrim5(void);
  84:Generated_Source\PSoC4/CyLib.c ****     static void CySysClkImoSetImoTrims(void);
  85:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2) */
  86:Generated_Source\PSoC4/CyLib.c **** 
  87:Generated_Source\PSoC4/CyLib.c **** /* Stored PUMP_SEL configuration during disable (IMO output by default) */
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 3


  88:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkPumpConfig = CY_SYS_CLK_PUMP_ENABLE;
  89:Generated_Source\PSoC4/CyLib.c **** 
  90:Generated_Source\PSoC4/CyLib.c **** 
  91:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  92:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  93:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
  94:Generated_Source\PSoC4/CyLib.c **** *
  95:Generated_Source\PSoC4/CyLib.c **** * Enables the IMO.
  96:Generated_Source\PSoC4/CyLib.c **** *
  97:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4500 / PSoC Analog
  98:Generated_Source\PSoC4/CyLib.c **** * Coprocessor devices, this function will also enable WCO lock if selected in
  99:Generated_Source\PSoC4/CyLib.c **** * the Design Wide Resources tab.
 100:Generated_Source\PSoC4/CyLib.c **** *
 101:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L devices, this function will also enable USB lock if selected
 102:Generated_Source\PSoC4/CyLib.c **** * in the Design Wide Resources tab.
 103:Generated_Source\PSoC4/CyLib.c **** *
 104:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 105:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
 106:Generated_Source\PSoC4/CyLib.c **** {
  28              		.loc 1 106 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 107:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
  33              		.loc 1 107 0
  34 0000 034A     		ldr	r2, .L2
  35 0002 1368     		ldr	r3, [r2]
  36 0004 8021     		movs	r1, #128
  37 0006 0906     		lsls	r1, r1, #24
  38 0008 0B43     		orrs	r3, r1
  39 000a 1360     		str	r3, [r2]
 108:Generated_Source\PSoC4/CyLib.c **** 
 109:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 110:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
 111:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
 112:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 113:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 114:Generated_Source\PSoC4/CyLib.c **** 
 115:Generated_Source\PSoC4/CyLib.c **** 
 116:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 117:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_USB == 1u)
 118:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableUsbLock();
 119:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 1u) */
 120:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 121:Generated_Source\PSoC4/CyLib.c **** 
 122:Generated_Source\PSoC4/CyLib.c **** }
  40              		.loc 1 122 0
  41              		@ sp needed
  42 000c 7047     		bx	lr
  43              	.L3:
  44 000e C046     		.align	2
  45              	.L2:
  46 0010 30000340 		.word	1073938480
  47              		.cfi_endproc
  48              	.LFE1:
  49              		.size	CySysClkImoStart, .-CySysClkImoStart
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 4


  50              		.section	.text.CySysClkImoDisableWcoLock,"ax",%progbits
  51              		.align	2
  52              		.global	CySysClkImoDisableWcoLock
  53              		.code	16
  54              		.thumb_func
  55              		.type	CySysClkImoDisableWcoLock, %function
  56              	CySysClkImoDisableWcoLock:
  57              	.LFB4:
 123:Generated_Source\PSoC4/CyLib.c **** 
 124:Generated_Source\PSoC4/CyLib.c **** 
 125:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 126:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 127:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 128:Generated_Source\PSoC4/CyLib.c **** *
 129:Generated_Source\PSoC4/CyLib.c **** * Disables the IMO.
 130:Generated_Source\PSoC4/CyLib.c **** *
 131:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4200L / PSoC 4000S / PSoC 4100S /
 132:Generated_Source\PSoC4/CyLib.c **** * PSoC 4500 / PSoC Analog Coprocessor devices, this function will also
 133:Generated_Source\PSoC4/CyLib.c **** * disable WCO lock.
 134:Generated_Source\PSoC4/CyLib.c **** *
 135:Generated_Source\PSoC4/CyLib.c **** * For PSoC PSoC 4200L devices, this function will also disable USB lock.
 136:Generated_Source\PSoC4/CyLib.c **** *
 137:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 138:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 139:Generated_Source\PSoC4/CyLib.c **** {
 140:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 141:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 142:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 143:Generated_Source\PSoC4/CyLib.c **** 
 144:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 145:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableUsbLock();
 146:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 147:Generated_Source\PSoC4/CyLib.c **** 
 148:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
 149:Generated_Source\PSoC4/CyLib.c **** }
 150:Generated_Source\PSoC4/CyLib.c **** 
 151:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 152:Generated_Source\PSoC4/CyLib.c **** 
 153:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 154:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 155:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 156:Generated_Source\PSoC4/CyLib.c ****     *
 157:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to WCO lock feature. This function works only if the WCO is
 158:Generated_Source\PSoC4/CyLib.c ****     * already enabled. If the WCO is not enabled then this function returns
 159:Generated_Source\PSoC4/CyLib.c ****     * without enabling the lock feature.
 160:Generated_Source\PSoC4/CyLib.c ****     *
 161:Generated_Source\PSoC4/CyLib.c ****     * It takes up to 20 ms for the IMO to stabilize. The delay is implemented with
 162:Generated_Source\PSoC4/CyLib.c ****     * CyDelay() function. The delay interval is measured based on the system
 163:Generated_Source\PSoC4/CyLib.c ****     * frequency defined by PSoC Creator at build time. If System clock frequency
 164:Generated_Source\PSoC4/CyLib.c ****     * is changed in runtime, the CyDelayFreq() with the appropriate parameter
 165:Generated_Source\PSoC4/CyLib.c ****     * should be called.
 166:Generated_Source\PSoC4/CyLib.c ****     *
 167:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 168:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 169:Generated_Source\PSoC4/CyLib.c ****     *
 170:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 171:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4500 / PSoC Analog Coprocessor / PSoC 4200L.
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 5


 172:Generated_Source\PSoC4/CyLib.c ****     *
 173:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 174:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 175:Generated_Source\PSoC4/CyLib.c ****     {
 176:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 177:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 178:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 179:Generated_Source\PSoC4/CyLib.c **** 
 180:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 181:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 182:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 183:Generated_Source\PSoC4/CyLib.c ****         uint32 lfLimit = 0u;
 184:Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 185:Generated_Source\PSoC4/CyLib.c **** 
 186:Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 187:Generated_Source\PSoC4/CyLib.c ****         {
 188:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 189:Generated_Source\PSoC4/CyLib.c **** 
 190:Generated_Source\PSoC4/CyLib.c ****             /* Set oscillator interface control port to WCO */
 191:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 192:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_OSCINTF_CTL_REG =
 193:Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 194:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_WCO;
 195:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 196:Generated_Source\PSoC4/CyLib.c **** 
 197:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 198:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 199:Generated_Source\PSoC4/CyLib.c ****                 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 200:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 201:Generated_Source\PSoC4/CyLib.c ****                 {
 202:Generated_Source\PSoC4/CyLib.c ****                     if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImo
 203:Generated_Source\PSoC4/CyLib.c ****                     {
 204:Generated_Source\PSoC4/CyLib.c ****                         freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 205:Generated_Source\PSoC4/CyLib.c ****                         break;
 206:Generated_Source\PSoC4/CyLib.c ****                     }
 207:Generated_Source\PSoC4/CyLib.c ****                 }
 208:Generated_Source\PSoC4/CyLib.c ****             #else
 209:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate frequency by shifting register field value and adding constant. */
 210:Generated_Source\PSoC4/CyLib.c ****                 #if(CY_IP_SRSSLT)
 211:Generated_Source\PSoC4/CyLib.c ****                     freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT
 212:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 213:Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 214:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 215:Generated_Source\PSoC4/CyLib.c ****                 #else
 216:Generated_Source\PSoC4/CyLib.c ****                     freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_
 217:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_
 218:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CY_IP_SRSSLT) */
 219:Generated_Source\PSoC4/CyLib.c **** 
 220:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSV2) */
 221:Generated_Source\PSoC4/CyLib.c **** 
 222:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = 0;
 223:Generated_Source\PSoC4/CyLib.c **** 
 224:Generated_Source\PSoC4/CyLib.c ****             /* For the WCO locking mode, the IMO gain needs to be CY_SYS_CLK_IMO_TRIM4_GAIN */
 225:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 226:Generated_Source\PSoC4/CyLib.c ****                 if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 227:Generated_Source\PSoC4/CyLib.c ****                 {
 228:Generated_Source\PSoC4/CyLib.c ****                      CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IM
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 6


 229:Generated_Source\PSoC4/CyLib.c ****                                                  CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 230:Generated_Source\PSoC4/CyLib.c ****                 }
 231:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
 232:Generated_Source\PSoC4/CyLib.c **** 
 233:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 234:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 235:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK |
 236:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 237:Generated_Source\PSoC4/CyLib.c **** 
 238:Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 239:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 240:Generated_Source\PSoC4/CyLib.c **** 
 241:Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 242:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 243:Generated_Source\PSoC4/CyLib.c **** 
 244:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 245:Generated_Source\PSoC4/CyLib.c **** 
 246:Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 247:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 248:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 249:Generated_Source\PSoC4/CyLib.c **** 
 250:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 251:Generated_Source\PSoC4/CyLib.c **** 
 252:Generated_Source\PSoC4/CyLib.c ****             while (lfLimit < (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX - CY_SYS_CLK_WCO_CONFIG_DPLL_
 253:Generated_Source\PSoC4/CyLib.c ****             {
 254:Generated_Source\PSoC4/CyLib.c ****                 CyDelay(CY_SYS_CLK_WCO_DPLL_TIMEOUT_MS);
 255:Generated_Source\PSoC4/CyLib.c ****                 lfLimit += CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_STEP;
 256:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT
 257:Generated_Source\PSoC4/CyLib.c ****             }
 258:Generated_Source\PSoC4/CyLib.c **** 
 259:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_DPLL_TIMEOUT_MS);
 260:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX <<
 261:Generated_Source\PSoC4/CyLib.c ****                                                  CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT));
 262:Generated_Source\PSoC4/CyLib.c **** 
 263:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 264:Generated_Source\PSoC4/CyLib.c **** 
 265:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 266:Generated_Source\PSoC4/CyLib.c ****         }
 267:Generated_Source\PSoC4/CyLib.c ****     }
 268:Generated_Source\PSoC4/CyLib.c **** 
 269:Generated_Source\PSoC4/CyLib.c **** 
 270:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 271:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 272:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 273:Generated_Source\PSoC4/CyLib.c ****     *
 274:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to WCO lock feature.
 275:Generated_Source\PSoC4/CyLib.c ****     *
 276:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 277:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 278:Generated_Source\PSoC4/CyLib.c ****     *
 279:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 280:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4500 / PSoC Analog Coprocessor / PSoC 4200L.
 281:Generated_Source\PSoC4/CyLib.c ****     *
 282:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 283:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 284:Generated_Source\PSoC4/CyLib.c ****     {
  58              		.loc 1 284 0
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 7


  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 0
  61              		@ frame_needed = 0, uses_anonymous_args = 0
  62              		@ link register save eliminated.
 285:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 286:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 287:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 288:Generated_Source\PSoC4/CyLib.c **** 
 289:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 290:Generated_Source\PSoC4/CyLib.c **** 
 291:Generated_Source\PSoC4/CyLib.c ****         /* Get current IMO frequency based on the register value */
 292:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 293:Generated_Source\PSoC4/CyLib.c ****             freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 294:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 295:Generated_Source\PSoC4/CyLib.c ****             {
 296:Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 297:Generated_Source\PSoC4/CyLib.c ****                 {
 298:Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 299:Generated_Source\PSoC4/CyLib.c ****                     break;
 300:Generated_Source\PSoC4/CyLib.c ****                 }
 301:Generated_Source\PSoC4/CyLib.c ****             }
 302:Generated_Source\PSoC4/CyLib.c ****         #else
 303:Generated_Source\PSoC4/CyLib.c ****             /* Calculate frequency by shifting register field value and adding constant. */
 304:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSLT)
 305:Generated_Source\PSoC4/CyLib.c ****                 freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_FRE
  63              		.loc 1 305 0
  64 0000 0C4B     		ldr	r3, .L5
  65 0002 1B68     		ldr	r3, [r3]
  66 0004 9B00     		lsls	r3, r3, #2
  67 0006 1C22     		movs	r2, #28
  68 0008 1340     		ands	r3, r2
 306:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_MHZ
  69              		.loc 1 306 0
  70 000a 1833     		adds	r3, r3, #24
 307:Generated_Source\PSoC4/CyLib.c ****                                   ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT) &
  71              		.loc 1 307 0
  72 000c 0A4A     		ldr	r2, .L5+4
  73 000e 1268     		ldr	r2, [r2]
  74 0010 9208     		lsrs	r2, r2, #2
  75 0012 0321     		movs	r1, #3
  76 0014 0A40     		ands	r2, r1
 305:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_MHZ
  77              		.loc 1 305 0
  78 0016 D340     		lsrs	r3, r3, r2
  79              	.LVL0:
 308:Generated_Source\PSoC4/CyLib.c ****                                    (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 309:Generated_Source\PSoC4/CyLib.c ****             #else
 310:Generated_Source\PSoC4/CyLib.c ****                 freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_FREQ
 311:Generated_Source\PSoC4/CyLib.c ****                                    CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
 312:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSLT) */
 313:Generated_Source\PSoC4/CyLib.c **** 
 314:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 315:Generated_Source\PSoC4/CyLib.c **** 
 316:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
  80              		.loc 1 316 0
  81 0018 0849     		ldr	r1, .L5+8
  82 001a 0868     		ldr	r0, [r1]
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 8


  83 001c 084A     		ldr	r2, .L5+12
  84 001e 0240     		ands	r2, r0
  85 0020 0A60     		str	r2, [r1]
 317:Generated_Source\PSoC4/CyLib.c **** 
 318:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSLT)
 319:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
  86              		.loc 1 319 0
  87 0022 084A     		ldr	r2, .L5+16
  88 0024 9446     		mov	ip, r2
  89 0026 6344     		add	r3, r3, ip
  90              	.LVL1:
  91 0028 1B78     		ldrb	r3, [r3]
  92              	.LVL2:
  93 002a DBB2     		uxtb	r3, r3
  94 002c 064A     		ldr	r2, .L5+20
  95 002e 1360     		str	r3, [r2]
 320:Generated_Source\PSoC4/CyLib.c ****         #else
 321:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 322:Generated_Source\PSoC4/CyLib.c ****         #endif
 323:Generated_Source\PSoC4/CyLib.c ****     }
  96              		.loc 1 323 0
  97              		@ sp needed
  98 0030 7047     		bx	lr
  99              	.L6:
 100 0032 C046     		.align	2
 101              	.L5:
 102 0034 080F0340 		.word	1073942280
 103 0038 28000340 		.word	1073938472
 104 003c 00000740 		.word	1074200576
 105 0040 FFFFFFBF 		.word	-1073741825
 106 0044 CDF1FF0F 		.word	268431821
 107 0048 0C0F0340 		.word	1073942284
 108              		.cfi_endproc
 109              	.LFE4:
 110              		.size	CySysClkImoDisableWcoLock, .-CySysClkImoDisableWcoLock
 111              		.section	.text.CySysClkImoStop,"ax",%progbits
 112              		.align	2
 113              		.global	CySysClkImoStop
 114              		.code	16
 115              		.thumb_func
 116              		.type	CySysClkImoStop, %function
 117              	CySysClkImoStop:
 118              	.LFB2:
 139:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 119              		.loc 1 139 0
 120              		.cfi_startproc
 121              		@ args = 0, pretend = 0, frame = 0
 122              		@ frame_needed = 0, uses_anonymous_args = 0
 123 0000 10B5     		push	{r4, lr}
 124              		.cfi_def_cfa_offset 8
 125              		.cfi_offset 4, -8
 126              		.cfi_offset 14, -4
 141:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 127              		.loc 1 141 0
 128 0002 FFF7FEFF 		bl	CySysClkImoDisableWcoLock
 129              	.LVL3:
 148:Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 9


 130              		.loc 1 148 0
 131 0006 034A     		ldr	r2, .L8
 132 0008 1368     		ldr	r3, [r2]
 133 000a 5B00     		lsls	r3, r3, #1
 134 000c 5B08     		lsrs	r3, r3, #1
 135 000e 1360     		str	r3, [r2]
 149:Generated_Source\PSoC4/CyLib.c **** 
 136              		.loc 1 149 0
 137              		@ sp needed
 138 0010 10BD     		pop	{r4, pc}
 139              	.L9:
 140 0012 C046     		.align	2
 141              	.L8:
 142 0014 30000340 		.word	1073938480
 143              		.cfi_endproc
 144              	.LFE2:
 145              		.size	CySysClkImoStop, .-CySysClkImoStop
 146              		.section	.text.CySysClkImoGetWcoLock,"ax",%progbits
 147              		.align	2
 148              		.global	CySysClkImoGetWcoLock
 149              		.code	16
 150              		.thumb_func
 151              		.type	CySysClkImoGetWcoLock, %function
 152              	CySysClkImoGetWcoLock:
 153              	.LFB5:
 324:Generated_Source\PSoC4/CyLib.c **** 
 325:Generated_Source\PSoC4/CyLib.c **** 
 326:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 327:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 328:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 329:Generated_Source\PSoC4/CyLib.c ****     *
 330:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to WCO lock enable state.
 331:Generated_Source\PSoC4/CyLib.c ****     *
 332:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 333:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4500 / PSoC Analog Coprocessor / PSoC 4200L.
 334:Generated_Source\PSoC4/CyLib.c ****     *
 335:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to WCO lock is enabled.
 336:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to WCO lock is disabled.
 337:Generated_Source\PSoC4/CyLib.c ****     *
 338:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 339:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetWcoLock(void)
 340:Generated_Source\PSoC4/CyLib.c ****     {
 154              		.loc 1 340 0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 0
 157              		@ frame_needed = 0, uses_anonymous_args = 0
 158              		@ link register save eliminated.
 341:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 159              		.loc 1 341 0
 160 0000 034B     		ldr	r3, .L12
 161 0002 1868     		ldr	r0, [r3]
 162 0004 8023     		movs	r3, #128
 163 0006 DB05     		lsls	r3, r3, #23
 164 0008 1840     		ands	r0, r3
 342:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 165              		.loc 1 342 0
 166 000a 00D0     		beq	.L11
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 10


 167 000c 0120     		movs	r0, #1
 168              	.L11:
 343:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 344:Generated_Source\PSoC4/CyLib.c ****     }
 169              		.loc 1 344 0
 170              		@ sp needed
 171 000e 7047     		bx	lr
 172              	.L13:
 173              		.align	2
 174              	.L12:
 175 0010 00000740 		.word	1074200576
 176              		.cfi_endproc
 177              	.LFE5:
 178              		.size	CySysClkImoGetWcoLock, .-CySysClkImoGetWcoLock
 179              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
 180              		.align	2
 181              		.global	CySysClkWriteHfclkDirect
 182              		.code	16
 183              		.thumb_func
 184              		.type	CySysClkWriteHfclkDirect, %function
 185              	CySysClkWriteHfclkDirect:
 186              	.LFB6:
 345:Generated_Source\PSoC4/CyLib.c **** 
 346:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 347:Generated_Source\PSoC4/CyLib.c **** 
 348:Generated_Source\PSoC4/CyLib.c **** 
 349:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 350:Generated_Source\PSoC4/CyLib.c **** 
 351:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 352:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableUsbLock
 353:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 354:Generated_Source\PSoC4/CyLib.c ****     *
 355:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to USB lock feature.
 356:Generated_Source\PSoC4/CyLib.c ****     *
 357:Generated_Source\PSoC4/CyLib.c ****     * This function must be called before CySysClkWriteImoFreq().
 358:Generated_Source\PSoC4/CyLib.c ****     *
 359:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStart() function if USB lock
 360:Generated_Source\PSoC4/CyLib.c ****     * selected in the Design Wide Resources tab.
 361:Generated_Source\PSoC4/CyLib.c ****     *
 362:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 363:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 364:Generated_Source\PSoC4/CyLib.c ****     *
 365:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 366:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableUsbLock(void)
 367:Generated_Source\PSoC4/CyLib.c ****     {
 368:Generated_Source\PSoC4/CyLib.c ****         /* Set oscillator interface control port to USB */
 369:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 370:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_OSCINTF_CTL_REG = (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF
 371:Generated_Source\PSoC4/CyLib.c ****                                           CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_USB;
 372:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 373:Generated_Source\PSoC4/CyLib.c **** 
 374:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 375:Generated_Source\PSoC4/CyLib.c **** 
 376:Generated_Source\PSoC4/CyLib.c ****             /* Save trims to restore in CySysClkImoDisableUsbLock() */
 377:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim4 = CY_SYS_CLK_IMO_TRIM4_REG;
 378:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim5 = CY_PWR_BG_TRIM5_REG;
 379:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 11


 380:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoSetImoTrims();
 381:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoSetPwrBgTrim5();
 382:Generated_Source\PSoC4/CyLib.c **** 
 383:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 384:Generated_Source\PSoC4/CyLib.c **** 
 385:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG |= CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 386:Generated_Source\PSoC4/CyLib.c ****     }
 387:Generated_Source\PSoC4/CyLib.c **** 
 388:Generated_Source\PSoC4/CyLib.c **** 
 389:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 390:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableUsbLock
 391:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 392:Generated_Source\PSoC4/CyLib.c ****     *
 393:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to USB lock feature.
 394:Generated_Source\PSoC4/CyLib.c ****     *
 395:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStop() function if USB lock selected
 396:Generated_Source\PSoC4/CyLib.c ****     * in the Design Wide Resources tab.
 397:Generated_Source\PSoC4/CyLib.c ****     *
 398:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 399:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 400:Generated_Source\PSoC4/CyLib.c ****     *
 401:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 402:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableUsbLock(void)
 403:Generated_Source\PSoC4/CyLib.c ****     {
 404:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 405:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 406:Generated_Source\PSoC4/CyLib.c **** 
 407:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 408:Generated_Source\PSoC4/CyLib.c ****             uint32 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 409:Generated_Source\PSoC4/CyLib.c **** 
 410:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 411:Generated_Source\PSoC4/CyLib.c ****             {
 412:Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 413:Generated_Source\PSoC4/CyLib.c ****                 {
 414:Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 415:Generated_Source\PSoC4/CyLib.c ****                     break;
 416:Generated_Source\PSoC4/CyLib.c ****                 }
 417:Generated_Source\PSoC4/CyLib.c ****             }
 418:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 419:Generated_Source\PSoC4/CyLib.c **** 
 420:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG &= (uint32) ~CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 421:Generated_Source\PSoC4/CyLib.c **** 
 422:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 423:Generated_Source\PSoC4/CyLib.c ****             /* Restore IMO trim registers saved by CySysClkImoEnableUsbLock() */
 424:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = ((CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_
 425:Generated_Source\PSoC4/CyLib.c ****                                         (CySysClkImoTrim4 & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK));
 426:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG = CySysClkImoTrim5;
 427:Generated_Source\PSoC4/CyLib.c **** 
 428:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 429:Generated_Source\PSoC4/CyLib.c **** 
 430:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 431:Generated_Source\PSoC4/CyLib.c ****     }
 432:Generated_Source\PSoC4/CyLib.c **** 
 433:Generated_Source\PSoC4/CyLib.c **** 
 434:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 435:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetUsbLock
 436:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 12


 437:Generated_Source\PSoC4/CyLib.c ****     *
 438:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to USB lock enable state.
 439:Generated_Source\PSoC4/CyLib.c ****     *
 440:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 441:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 442:Generated_Source\PSoC4/CyLib.c ****     *
 443:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to USB lock is enabled.
 444:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to USB lock is disabled.
 445:Generated_Source\PSoC4/CyLib.c ****     *
 446:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 447:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetUsbLock(void)
 448:Generated_Source\PSoC4/CyLib.c ****     {
 449:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 450:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 451:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 452:Generated_Source\PSoC4/CyLib.c ****     }
 453:Generated_Source\PSoC4/CyLib.c **** 
 454:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2)
 455:Generated_Source\PSoC4/CyLib.c **** 
 456:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 457:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoSetPwrBgTrim5
 458:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 459:Generated_Source\PSoC4/CyLib.c ****     *
 460:Generated_Source\PSoC4/CyLib.c ****     * Updates Bandgap trim register based on the test program revision.
 461:Generated_Source\PSoC4/CyLib.c ****     *
 462:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 463:Generated_Source\PSoC4/CyLib.c ****     static void CySysClkImoSetPwrBgTrim5(void)
 464:Generated_Source\PSoC4/CyLib.c ****     {
 465:Generated_Source\PSoC4/CyLib.c ****         /* Get sort test revision number */
 466:Generated_Source\PSoC4/CyLib.c ****         uint32  testRev = ((CY_SFLASH_CRI_TESTPGM_REV_REG >> CYSFLASH_CRI_testpgm_rev__OFFSET) &
 467:Generated_Source\PSoC4/CyLib.c ****                             CYSFLASH_CRI_testpgm_rev_MASK);
 468:Generated_Source\PSoC4/CyLib.c **** 
 469:Generated_Source\PSoC4/CyLib.c ****         if(testRev <= CY_CRI_TESTPGM_9_REV)
 470:Generated_Source\PSoC4/CyLib.c ****         {
 471:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG = CY_SFLASH_IMO_TMPCO0_REG;
 472:Generated_Source\PSoC4/CyLib.c ****         }
 473:Generated_Source\PSoC4/CyLib.c ****         else
 474:Generated_Source\PSoC4/CyLib.c ****         {
 475:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG = CY_SFLASH_USBMODE_IMO_TEMPCO_REG;
 476:Generated_Source\PSoC4/CyLib.c ****         }
 477:Generated_Source\PSoC4/CyLib.c ****     }
 478:Generated_Source\PSoC4/CyLib.c **** 
 479:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 480:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoSetImoTrims
 481:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 482:Generated_Source\PSoC4/CyLib.c ****     *
 483:Generated_Source\PSoC4/CyLib.c ****     * Updates IMO trim registers based on the IMO frequency and test program
 484:Generated_Source\PSoC4/CyLib.c ****     * revision.
 485:Generated_Source\PSoC4/CyLib.c ****     *
 486:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 487:Generated_Source\PSoC4/CyLib.c ****     static void CySysClkImoSetImoTrims(void)
 488:Generated_Source\PSoC4/CyLib.c ****     {
 489:Generated_Source\PSoC4/CyLib.c ****         uint32 i;
 490:Generated_Source\PSoC4/CyLib.c **** 
 491:Generated_Source\PSoC4/CyLib.c ****         /* Get current IMO frequency based on the register value */
 492:Generated_Source\PSoC4/CyLib.c ****         uint32 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 493:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 13


 494:Generated_Source\PSoC4/CyLib.c ****         for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 495:Generated_Source\PSoC4/CyLib.c ****         {
 496:Generated_Source\PSoC4/CyLib.c ****             if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreqMhz2
 497:Generated_Source\PSoC4/CyLib.c ****             {
 498:Generated_Source\PSoC4/CyLib.c ****                 freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 499:Generated_Source\PSoC4/CyLib.c ****                 break;
 500:Generated_Source\PSoC4/CyLib.c ****             }
 501:Generated_Source\PSoC4/CyLib.c ****         }
 502:Generated_Source\PSoC4/CyLib.c **** 
 503:Generated_Source\PSoC4/CyLib.c ****         /* Get sort test revision number */
 504:Generated_Source\PSoC4/CyLib.c ****         uint32  testRev = ((CY_SFLASH_CRI_TESTPGM_REV_REG >> CYSFLASH_CRI_testpgm_rev__OFFSET) &
 505:Generated_Source\PSoC4/CyLib.c ****             CYSFLASH_CRI_testpgm_rev_MASK);
 506:Generated_Source\PSoC4/CyLib.c **** 
 507:Generated_Source\PSoC4/CyLib.c ****         if(testRev <= CY_CRI_TESTPGM_6_REV)
 508:Generated_Source\PSoC4/CyLib.c ****         {
 509:Generated_Source\PSoC4/CyLib.c ****             if (48u == freq)
 510:Generated_Source\PSoC4/CyLib.c ****             {
 511:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 512:Generated_Source\PSoC4/CyLib.c ****             }
 513:Generated_Source\PSoC4/CyLib.c ****             else if (24u == freq)
 514:Generated_Source\PSoC4/CyLib.c ****             {
 515:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 516:Generated_Source\PSoC4/CyLib.c ****             }
 517:Generated_Source\PSoC4/CyLib.c ****             else
 518:Generated_Source\PSoC4/CyLib.c ****             {
 519:Generated_Source\PSoC4/CyLib.c ****                 /* Do nothing */
 520:Generated_Source\PSoC4/CyLib.c ****             }
 521:Generated_Source\PSoC4/CyLib.c **** 
 522:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO Gain in IMO Trim Register 4 */
 523:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 524:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_TRIM4_USB_GAIN;
 525:Generated_Source\PSoC4/CyLib.c ****         }
 526:Generated_Source\PSoC4/CyLib.c ****         else
 527:Generated_Source\PSoC4/CyLib.c ****         {
 528:Generated_Source\PSoC4/CyLib.c ****             if (48u == freq)
 529:Generated_Source\PSoC4/CyLib.c ****             {
 530:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_CU_IMO_TRIM_USBMODE_48_REG;
 531:Generated_Source\PSoC4/CyLib.c ****             }
 532:Generated_Source\PSoC4/CyLib.c ****             else if (24u == freq)
 533:Generated_Source\PSoC4/CyLib.c ****             {
 534:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_CU_IMO_TRIM_USBMODE_24_REG;
 535:Generated_Source\PSoC4/CyLib.c ****             }
 536:Generated_Source\PSoC4/CyLib.c ****             else
 537:Generated_Source\PSoC4/CyLib.c ****             {
 538:Generated_Source\PSoC4/CyLib.c ****                 /* Do nothing */
 539:Generated_Source\PSoC4/CyLib.c ****             }
 540:Generated_Source\PSoC4/CyLib.c **** 
 541:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO Gain in IMO Trim Register 4 */
 542:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 543:Generated_Source\PSoC4/CyLib.c ****                                         CY_SFLASH_USBMODE_IMO_GAIN_TRIM_REG;
 544:Generated_Source\PSoC4/CyLib.c ****         }
 545:Generated_Source\PSoC4/CyLib.c ****     }
 546:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SRSSV2) */
 547:Generated_Source\PSoC4/CyLib.c **** 
 548:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 549:Generated_Source\PSoC4/CyLib.c **** 
 550:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 14


 551:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 552:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 553:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 554:Generated_Source\PSoC4/CyLib.c **** *
 555:Generated_Source\PSoC4/CyLib.c **** * Selects the direct source for the HFCLK.
 556:Generated_Source\PSoC4/CyLib.c **** *
 557:Generated_Source\PSoC4/CyLib.c **** * The new source must be running and stable before calling this function.
 558:Generated_Source\PSoC4/CyLib.c **** *
 559:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000:
 560:Generated_Source\PSoC4/CyLib.c **** * The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 561:Generated_Source\PSoC4/CyLib.c **** * be selected in a way to not to exceed 16 MHz for the System clock.
 562:Generated_Source\PSoC4/CyLib.c **** *
 563:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during device operation, call
 564:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 565:Generated_Source\PSoC4/CyLib.c **** * of clock cycles the cache will wait before sampling data comes back from
 566:Generated_Source\PSoC4/CyLib.c **** * Flash. If the SYSCLK clock frequency decreases, you can call
 567:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() to improve the CPU performance. See
 568:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() description for more information.
 569:Generated_Source\PSoC4/CyLib.c **** *
 570:Generated_Source\PSoC4/CyLib.c **** * Do not select PLL as the source for HFCLK if PLL output frequency exceeds
 571:Generated_Source\PSoC4/CyLib.c **** * maximum permissible value for HFCLK.
 572:Generated_Source\PSoC4/CyLib.c **** *
 573:Generated_Source\PSoC4/CyLib.c **** * \param clkSelect One of the available HFCLK direct sources.
 574:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_IMO     IMO.
 575:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_EXTCLK  External clock pin.
 576:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_ECO     External crystal oscillator. Applicable for
 577:Generated_Source\PSoC4/CyLib.c **** *                          PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L /
 578:Generated_Source\PSoC4/CyLib.c **** *                          4100S / 4500 with ECO.
 579:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL0    PLL#0. Applicable for PSoC 4200L /
 580:Generated_Source\PSoC4/CyLib.c **** *                          4100S / 4500 with PLL.
 581:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL1    PLL#1. Applicable for PSoC 4200L.
 582:Generated_Source\PSoC4/CyLib.c **** *
 583:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 584:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 585:Generated_Source\PSoC4/CyLib.c **** {
 187              		.loc 1 585 0
 188              		.cfi_startproc
 189              		@ args = 0, pretend = 0, frame = 0
 190              		@ frame_needed = 0, uses_anonymous_args = 0
 191              	.LVL4:
 192 0000 10B5     		push	{r4, lr}
 193              		.cfi_def_cfa_offset 8
 194              		.cfi_offset 4, -8
 195              		.cfi_offset 14, -4
 196 0002 0400     		movs	r4, r0
 586:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 587:Generated_Source\PSoC4/CyLib.c ****     uint32 tmpReg;
 588:Generated_Source\PSoC4/CyLib.c **** 
 589:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SRSSLT && CY_IP_PLL)
 590:Generated_Source\PSoC4/CyLib.c ****         uint8 i = 0u;
 591:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 592:Generated_Source\PSoC4/CyLib.c **** 
 593:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 197              		.loc 1 593 0
 198 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 199              	.LVL5:
 594:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 15


 595:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSLT && CY_IP_PLL)
 596:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_ECO == clkSelect))
 597:Generated_Source\PSoC4/CyLib.c ****     {
 598:Generated_Source\PSoC4/CyLib.c ****         tmpReg = CY_SYS_CLK_SELECT_REG & ~CY_SYS_CLK_SELECT_DIRECT_SEL_MASK;
 599:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= CY_SYS_CLK_HFCLK_IMO;
 600:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = tmpReg;
 601:Generated_Source\PSoC4/CyLib.c **** 
 602:Generated_Source\PSoC4/CyLib.c ****         /* SRSSLT block does not have registers to select PLL. It is part of EXCO */
 603:Generated_Source\PSoC4/CyLib.c ****         tmpReg = CY_SYS_ECO_CLK_SELECT_REG & ~CY_SYS_ECO_CLK_SELECT_ECO_PLL_MASK;
 604:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= ((clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_PLL_MASK) >> CY_SYS_CLK_SELECT_HFCLK_PL
 605:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_ECO_CLK_SELECT_REG = tmpReg;
 606:Generated_Source\PSoC4/CyLib.c **** 
 607:Generated_Source\PSoC4/CyLib.c ****         /* Check if ECO is enabled and running */
 608:Generated_Source\PSoC4/CyLib.c ****         if ((0UL == (CY_SYS_CLK_ECO_CONFIG_REG & CY_SYS_CLK_ECO_CONFIG_ENABLE)) ||
 609:Generated_Source\PSoC4/CyLib.c ****             (0UL != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)))
 610:Generated_Source\PSoC4/CyLib.c ****         {
 611:Generated_Source\PSoC4/CyLib.c ****             /* Generate clock sequence to change clock source in CY_SYS_ECO_CLK_SELECT_REG */
 612:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
 613:Generated_Source\PSoC4/CyLib.c **** 
 614:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_EXCO_PGM_CLK_SEQ_GENERATOR; i++)
 615:Generated_Source\PSoC4/CyLib.c ****             {
 616:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
 617:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
 618:Generated_Source\PSoC4/CyLib.c ****             }
 619:Generated_Source\PSoC4/CyLib.c **** 
 620:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
 621:Generated_Source\PSoC4/CyLib.c ****         }
 622:Generated_Source\PSoC4/CyLib.c ****     }
 623:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 624:Generated_Source\PSoC4/CyLib.c **** 
 625:Generated_Source\PSoC4/CyLib.c ****     tmpReg = CY_SYS_CLK_SELECT_REG & ~(CY_SYS_CLK_SELECT_DIRECT_SEL_MASK |
 200              		.loc 1 625 0
 201 0008 044A     		ldr	r2, .L15
 202 000a 1368     		ldr	r3, [r2]
 203 000c 0321     		movs	r1, #3
 204 000e 8B43     		bics	r3, r1
 205              	.LVL6:
 626:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 627:Generated_Source\PSoC4/CyLib.c **** 
 628:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 629:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_PLL1 == clkSelect))
 630:Generated_Source\PSoC4/CyLib.c ****     {
 631:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 632:Generated_Source\PSoC4/CyLib.c ****     }
 633:Generated_Source\PSoC4/CyLib.c ****     else
 634:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 635:Generated_Source\PSoC4/CyLib.c ****     {
 636:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 206              		.loc 1 636 0
 207 0010 0C40     		ands	r4, r1
 208              	.LVL7:
 209 0012 1C43     		orrs	r4, r3
 210              	.LVL8:
 637:Generated_Source\PSoC4/CyLib.c ****     }
 638:Generated_Source\PSoC4/CyLib.c **** 
 639:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = tmpReg;
 211              		.loc 1 639 0
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 16


 212 0014 1460     		str	r4, [r2]
 640:Generated_Source\PSoC4/CyLib.c **** 
 641:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 213              		.loc 1 641 0
 214 0016 FFF7FEFF 		bl	CyExitCriticalSection
 215              	.LVL9:
 642:Generated_Source\PSoC4/CyLib.c **** }
 216              		.loc 1 642 0
 217              		@ sp needed
 218              	.LVL10:
 219 001a 10BD     		pop	{r4, pc}
 220              	.L16:
 221              		.align	2
 222              	.L15:
 223 001c 28000340 		.word	1073938472
 224              		.cfi_endproc
 225              	.LFE6:
 226              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 227              		.section	.text.CySysEnablePumpClock,"ax",%progbits
 228              		.align	2
 229              		.global	CySysEnablePumpClock
 230              		.code	16
 231              		.thumb_func
 232              		.type	CySysEnablePumpClock, %function
 233              	CySysEnablePumpClock:
 234              	.LFB7:
 643:Generated_Source\PSoC4/CyLib.c **** 
 644:Generated_Source\PSoC4/CyLib.c **** 
 645:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 646:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysEnablePumpClock
 647:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 648:Generated_Source\PSoC4/CyLib.c **** *
 649:Generated_Source\PSoC4/CyLib.c **** * Enables / disables the pump clock.
 650:Generated_Source\PSoC4/CyLib.c **** *
 651:Generated_Source\PSoC4/CyLib.c **** * \param enable
 652:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_DISABLE - Disables the pump clock
 653:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_ENABLE - Enables and restores the operating source of
 654:Generated_Source\PSoC4/CyLib.c **** * the pump clock.
 655:Generated_Source\PSoC4/CyLib.c **** *
 656:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
 657:Generated_Source\PSoC4/CyLib.c **** *  Enabling/disabling the pump clock does not guarantee glitch free operation
 658:Generated_Source\PSoC4/CyLib.c **** *  when changing the IMO parameters or clock divider settings.
 659:Generated_Source\PSoC4/CyLib.c **** *
 660:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 661:Generated_Source\PSoC4/CyLib.c **** void CySysEnablePumpClock(uint32 enable)
 662:Generated_Source\PSoC4/CyLib.c **** {
 235              		.loc 1 662 0
 236              		.cfi_startproc
 237              		@ args = 0, pretend = 0, frame = 0
 238              		@ frame_needed = 0, uses_anonymous_args = 0
 239              		@ link register save eliminated.
 240              	.LVL11:
 663:Generated_Source\PSoC4/CyLib.c ****     #if(CY_IP_SRSSV2)
 664:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 665:Generated_Source\PSoC4/CyLib.c ****         {
 666:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG |= (CySysClkPumpConfig << CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIF
 667:Generated_Source\PSoC4/CyLib.c ****         }
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 17


 668:Generated_Source\PSoC4/CyLib.c ****         else
 669:Generated_Source\PSoC4/CyLib.c ****         {
 670:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_IMO_CONFIG_REG >> CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIFT
 671:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK;
 672:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG &= ~(CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK << CY_SYS_CLK_IMO_CO
 673:Generated_Source\PSoC4/CyLib.c ****         }
 674:Generated_Source\PSoC4/CyLib.c ****     #else /* CY_IP_SRSSLT */
 675:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 241              		.loc 1 675 0
 242 0000 C307     		lsls	r3, r0, #31
 243 0002 07D5     		bpl	.L18
 676:Generated_Source\PSoC4/CyLib.c ****         {
 677:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG |= (CySysClkPumpConfig << CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT);
 244              		.loc 1 677 0
 245 0004 094A     		ldr	r2, .L20
 246 0006 1168     		ldr	r1, [r2]
 247 0008 094B     		ldr	r3, .L20+4
 248 000a 1B68     		ldr	r3, [r3]
 249 000c 1B01     		lsls	r3, r3, #4
 250 000e 0B43     		orrs	r3, r1
 251 0010 1360     		str	r3, [r2]
 252 0012 0AE0     		b	.L17
 253              	.L18:
 678:Generated_Source\PSoC4/CyLib.c ****         }
 679:Generated_Source\PSoC4/CyLib.c ****         else
 680:Generated_Source\PSoC4/CyLib.c ****         {
 681:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT) &
 254              		.loc 1 681 0
 255 0014 054A     		ldr	r2, .L20
 256 0016 1368     		ldr	r3, [r2]
 257 0018 1B09     		lsrs	r3, r3, #4
 258 001a 0321     		movs	r1, #3
 259 001c 0B40     		ands	r3, r1
 260 001e 0449     		ldr	r1, .L20+4
 261 0020 0B60     		str	r3, [r1]
 682:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_SELECT_PUMP_SEL_MASK;
 683:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG &= ~(CY_SYS_CLK_SELECT_PUMP_SEL_MASK << CY_SYS_CLK_SELECT_PUMP_SE
 262              		.loc 1 683 0
 263 0022 1368     		ldr	r3, [r2]
 264 0024 3021     		movs	r1, #48
 265 0026 8B43     		bics	r3, r1
 266 0028 1360     		str	r3, [r2]
 267              	.L17:
 684:Generated_Source\PSoC4/CyLib.c ****         }
 685:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_SRSSV2) */
 686:Generated_Source\PSoC4/CyLib.c **** }
 268              		.loc 1 686 0
 269              		@ sp needed
 270 002a 7047     		bx	lr
 271              	.L21:
 272              		.align	2
 273              	.L20:
 274 002c 28000340 		.word	1073938472
 275 0030 00000000 		.word	.LANCHOR0
 276              		.cfi_endproc
 277              	.LFE7:
 278              		.size	CySysEnablePumpClock, .-CySysEnablePumpClock
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 18


 279              		.section	.text.CySysClkGetSysclkSource,"ax",%progbits
 280              		.align	2
 281              		.global	CySysClkGetSysclkSource
 282              		.code	16
 283              		.thumb_func
 284              		.type	CySysClkGetSysclkSource, %function
 285              	CySysClkGetSysclkSource:
 286              	.LFB8:
 687:Generated_Source\PSoC4/CyLib.c **** 
 688:Generated_Source\PSoC4/CyLib.c **** 
 689:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 690:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkGetSysclkSource
 691:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 692:Generated_Source\PSoC4/CyLib.c **** *
 693:Generated_Source\PSoC4/CyLib.c **** * Returns the source of the System clock.
 694:Generated_Source\PSoC4/CyLib.c **** *
 695:Generated_Source\PSoC4/CyLib.c **** * \return The same as \ref CySysClkWriteHfclkDirect() function parameters.
 696:Generated_Source\PSoC4/CyLib.c **** *
 697:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 698:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkGetSysclkSource(void)
 699:Generated_Source\PSoC4/CyLib.c **** {
 287              		.loc 1 699 0
 288              		.cfi_startproc
 289              		@ args = 0, pretend = 0, frame = 0
 290              		@ frame_needed = 0, uses_anonymous_args = 0
 291 0000 10B5     		push	{r4, lr}
 292              		.cfi_def_cfa_offset 8
 293              		.cfi_offset 4, -8
 294              		.cfi_offset 14, -4
 700:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 701:Generated_Source\PSoC4/CyLib.c ****     uint32 sysclkSource;
 702:Generated_Source\PSoC4/CyLib.c **** 
 703:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 295              		.loc 1 703 0
 296 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 297              	.LVL12:
 704:Generated_Source\PSoC4/CyLib.c **** 
 705:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 706:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK) != 0u)
 707:Generated_Source\PSoC4/CyLib.c ****     {
 708:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 709:Generated_Source\PSoC4/CyLib.c ****     }
 710:Generated_Source\PSoC4/CyLib.c ****     else
 711:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 712:Generated_Source\PSoC4/CyLib.c ****     {
 713:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 298              		.loc 1 713 0
 299 0006 044B     		ldr	r3, .L23
 300 0008 1B68     		ldr	r3, [r3]
 301 000a 0324     		movs	r4, #3
 302 000c 1C40     		ands	r4, r3
 303              	.LVL13:
 714:Generated_Source\PSoC4/CyLib.c **** 
 715:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SRSSLT && CY_IP_PLL)
 716:Generated_Source\PSoC4/CyLib.c ****         sysclkSource |= (((uint32)(CY_SYS_ECO_CLK_SELECT_REG & CY_SYS_ECO_CLK_SELECT_ECO_PLL_MASK))
 717:Generated_Source\PSoC4/CyLib.c ****                          CY_SYS_CLK_SELECT_HFCLK_PLL_SHIFT);
 718:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 19


 719:Generated_Source\PSoC4/CyLib.c **** 
 720:Generated_Source\PSoC4/CyLib.c ****     }
 721:Generated_Source\PSoC4/CyLib.c **** 
 722:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 304              		.loc 1 722 0
 305 000e FFF7FEFF 		bl	CyExitCriticalSection
 306              	.LVL14:
 723:Generated_Source\PSoC4/CyLib.c **** 
 724:Generated_Source\PSoC4/CyLib.c ****     return (sysclkSource);
 725:Generated_Source\PSoC4/CyLib.c **** }
 307              		.loc 1 725 0
 308 0012 2000     		movs	r0, r4
 309              		@ sp needed
 310              	.LVL15:
 311 0014 10BD     		pop	{r4, pc}
 312              	.L24:
 313 0016 C046     		.align	2
 314              	.L23:
 315 0018 28000340 		.word	1073938472
 316              		.cfi_endproc
 317              	.LFE8:
 318              		.size	CySysClkGetSysclkSource, .-CySysClkGetSysclkSource
 319              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 320              		.align	2
 321              		.global	CySysClkWriteSysclkDiv
 322              		.code	16
 323              		.thumb_func
 324              		.type	CySysClkWriteSysclkDiv, %function
 325              	CySysClkWriteSysclkDiv:
 326              	.LFB9:
 726:Generated_Source\PSoC4/CyLib.c **** 
 727:Generated_Source\PSoC4/CyLib.c **** 
 728:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 729:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 730:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 731:Generated_Source\PSoC4/CyLib.c **** *
 732:Generated_Source\PSoC4/CyLib.c **** * Selects the prescaler divide amount for SYSCLK from HFCLK.
 733:Generated_Source\PSoC4/CyLib.c **** *
 734:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 735:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 736:Generated_Source\PSoC4/CyLib.c **** *
 737:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 738:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 739:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 740:Generated_Source\PSoC4/CyLib.c **** *
 741:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 742:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 743:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 744:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 745:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 746:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 747:Generated_Source\PSoC4/CyLib.c **** *
 748:Generated_Source\PSoC4/CyLib.c **** * \param divider Power of 2 prescaler selection
 749:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 750:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 751:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 752:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 20


 753:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 754:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 755:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 756:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 757:Generated_Source\PSoC4/CyLib.c **** *
 758:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 759:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 760:Generated_Source\PSoC4/CyLib.c **** {
 327              		.loc 1 760 0
 328              		.cfi_startproc
 329              		@ args = 0, pretend = 0, frame = 0
 330              		@ frame_needed = 0, uses_anonymous_args = 0
 331              	.LVL16:
 332 0000 10B5     		push	{r4, lr}
 333              		.cfi_def_cfa_offset 8
 334              		.cfi_offset 4, -8
 335              		.cfi_offset 14, -4
 336 0002 0400     		movs	r4, r0
 761:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 762:Generated_Source\PSoC4/CyLib.c **** 
 763:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 337              		.loc 1 763 0
 338 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 339              	.LVL17:
 764:Generated_Source\PSoC4/CyLib.c **** 
 765:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 340              		.loc 1 765 0
 341 0008 A401     		lsls	r4, r4, #6
 342              	.LVL18:
 343 000a FF23     		movs	r3, #255
 344 000c 2340     		ands	r3, r4
 766:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 767:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 345              		.loc 1 767 0
 346 000e 0449     		ldr	r1, .L26
 347 0010 0A68     		ldr	r2, [r1]
 348 0012 C024     		movs	r4, #192
 349 0014 A243     		bics	r2, r4
 766:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 350              		.loc 1 766 0
 351 0016 1343     		orrs	r3, r2
 765:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 352              		.loc 1 765 0
 353 0018 0B60     		str	r3, [r1]
 768:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 769:Generated_Source\PSoC4/CyLib.c **** 
 770:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 354              		.loc 1 770 0
 355 001a FFF7FEFF 		bl	CyExitCriticalSection
 356              	.LVL19:
 771:Generated_Source\PSoC4/CyLib.c **** }
 357              		.loc 1 771 0
 358              		@ sp needed
 359 001e 10BD     		pop	{r4, pc}
 360              	.L27:
 361              		.align	2
 362              	.L26:
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 21


 363 0020 28000340 		.word	1073938472
 364              		.cfi_endproc
 365              	.LFE9:
 366              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 367              		.section	.text.CySysClkWriteHfclkDiv,"ax",%progbits
 368              		.align	2
 369              		.global	CySysClkWriteHfclkDiv
 370              		.code	16
 371              		.thumb_func
 372              		.type	CySysClkWriteHfclkDiv, %function
 373              	CySysClkWriteHfclkDiv:
 374              	.LFB11:
 772:Generated_Source\PSoC4/CyLib.c **** 
 773:Generated_Source\PSoC4/CyLib.c **** 
 774:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 775:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 776:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 777:Generated_Source\PSoC4/CyLib.c **** *
 778:Generated_Source\PSoC4/CyLib.c **** * Sets the frequency of the IMO.
 779:Generated_Source\PSoC4/CyLib.c **** *
 780:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 781:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 782:Generated_Source\PSoC4/CyLib.c **** *
 783:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 784:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 785:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 786:Generated_Source\PSoC4/CyLib.c **** *
 787:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200M and PSoC 4200L device families, if WCO lock feature is enabled
 788:Generated_Source\PSoC4/CyLib.c **** * then this API will disable the lock, write the new IMO frequency and then
 789:Generated_Source\PSoC4/CyLib.c **** * re-enable the lock.
 790:Generated_Source\PSoC4/CyLib.c **** *
 791:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L device families, this function enables the USB lock when 24 or
 792:Generated_Source\PSoC4/CyLib.c **** * 48 MHz passed as a parameter if the USB lock option is enabled in Design Wide
 793:Generated_Source\PSoC4/CyLib.c **** * Resources tab or CySysClkImoEnableUsbLock() was called before. Note the USB
 794:Generated_Source\PSoC4/CyLib.c **** * lock is disabled during IMO frequency change.
 795:Generated_Source\PSoC4/CyLib.c **** *
 796:Generated_Source\PSoC4/CyLib.c **** * The CPU is halted if new frequency is invalid and project is compiled
 797:Generated_Source\PSoC4/CyLib.c **** * in debug mode.
 798:Generated_Source\PSoC4/CyLib.c **** *
 799:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 800:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 801:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 802:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 803:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 804:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 805:Generated_Source\PSoC4/CyLib.c **** *
 806:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 807:Generated_Source\PSoC4/CyLib.c **** * and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 808:Generated_Source\PSoC4/CyLib.c **** * the System clock.
 809:Generated_Source\PSoC4/CyLib.c **** *
 810:Generated_Source\PSoC4/CyLib.c **** * \param freq All PSoC 4 families excluding the following: Valid range [3-48]
 811:Generated_Source\PSoC4/CyLib.c **** * with step size equals 1. PSoC 4000: Valid values are 24, 32, and 48.
 812:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor: Valid range [24-48] with
 813:Generated_Source\PSoC4/CyLib.c **** * step size equals 4.
 814:Generated_Source\PSoC4/CyLib.c **** *
 815:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 816:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 22


 817:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 818:Generated_Source\PSoC4/CyLib.c ****     {
 819:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 820:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 821:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 822:Generated_Source\PSoC4/CyLib.c ****         #else
 823:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 824:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 825:Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
 826:Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 827:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 828:Generated_Source\PSoC4/CyLib.c **** 
 829:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 830:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 831:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 832:Generated_Source\PSoC4/CyLib.c **** 
 833:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 834:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 835:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 836:Generated_Source\PSoC4/CyLib.c **** 
 837:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 838:Generated_Source\PSoC4/CyLib.c **** 
 839:Generated_Source\PSoC4/CyLib.c **** 
 840:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 841:Generated_Source\PSoC4/CyLib.c **** 
 842:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 843:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 844:Generated_Source\PSoC4/CyLib.c ****             {
 845:Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 846:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 847:Generated_Source\PSoC4/CyLib.c ****             }
 848:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 849:Generated_Source\PSoC4/CyLib.c **** 
 850:Generated_Source\PSoC4/CyLib.c **** 
 851:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 852:Generated_Source\PSoC4/CyLib.c **** 
 853:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 854:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetUsbLock())
 855:Generated_Source\PSoC4/CyLib.c ****                 {
 856:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 857:Generated_Source\PSoC4/CyLib.c **** 
 858:Generated_Source\PSoC4/CyLib.c ****                 if ((24u == freq) || (48u == freq))
 859:Generated_Source\PSoC4/CyLib.c ****                 {
 860:Generated_Source\PSoC4/CyLib.c ****                     usbLock = 1u;
 861:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableUsbLock();
 862:Generated_Source\PSoC4/CyLib.c ****                 }
 863:Generated_Source\PSoC4/CyLib.c **** 
 864:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 865:Generated_Source\PSoC4/CyLib.c ****                 }
 866:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 867:Generated_Source\PSoC4/CyLib.c **** 
 868:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 869:Generated_Source\PSoC4/CyLib.c **** 
 870:Generated_Source\PSoC4/CyLib.c **** 
 871:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 872:Generated_Source\PSoC4/CyLib.c **** 
 873:Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 23


 874:Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 875:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 876:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 877:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 878:Generated_Source\PSoC4/CyLib.c **** 
 879:Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 880:Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 881:Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
 882:Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 883:Generated_Source\PSoC4/CyLib.c **** 
 884:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 885:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 886:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 887:Generated_Source\PSoC4/CyLib.c **** 
 888:Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 889:Generated_Source\PSoC4/CyLib.c **** 
 890:Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 891:Generated_Source\PSoC4/CyLib.c ****         {
 892:Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 893:Generated_Source\PSoC4/CyLib.c ****             {
 894:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 895:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 896:Generated_Source\PSoC4/CyLib.c ****             }
 897:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 898:Generated_Source\PSoC4/CyLib.c ****             {
 899:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 900:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 901:Generated_Source\PSoC4/CyLib.c ****             }
 902:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 903:Generated_Source\PSoC4/CyLib.c ****             {
 904:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 905:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 906:Generated_Source\PSoC4/CyLib.c ****             }
 907:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 908:Generated_Source\PSoC4/CyLib.c ****             {
 909:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 910:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 911:Generated_Source\PSoC4/CyLib.c ****             }
 912:Generated_Source\PSoC4/CyLib.c ****             else
 913:Generated_Source\PSoC4/CyLib.c ****             {
 914:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 915:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 916:Generated_Source\PSoC4/CyLib.c ****             }
 917:Generated_Source\PSoC4/CyLib.c **** 
 918:Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 919:Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 920:Generated_Source\PSoC4/CyLib.c **** 
 921:Generated_Source\PSoC4/CyLib.c **** 
 922:Generated_Source\PSoC4/CyLib.c ****             /****************************************************************************
 923:Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 924:Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 925:Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 926:Generated_Source\PSoC4/CyLib.c ****             *
 927:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 928:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 929:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 930:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 24


 931:Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 932:Generated_Source\PSoC4/CyLib.c ****             {
 933:Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 934:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 935:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 936:Generated_Source\PSoC4/CyLib.c **** 
 937:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 938:Generated_Source\PSoC4/CyLib.c **** 
 939:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 940:Generated_Source\PSoC4/CyLib.c ****             }
 941:Generated_Source\PSoC4/CyLib.c ****             else
 942:Generated_Source\PSoC4/CyLib.c ****             {
 943:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 944:Generated_Source\PSoC4/CyLib.c ****             }
 945:Generated_Source\PSoC4/CyLib.c **** 
 946:Generated_Source\PSoC4/CyLib.c **** 
 947:Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 948:Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 949:Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 950:Generated_Source\PSoC4/CyLib.c ****             *
 951:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 952:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 953:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 954:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 955:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 956:Generated_Source\PSoC4/CyLib.c ****             {
 957:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 958:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 959:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 960:Generated_Source\PSoC4/CyLib.c ****             }
 961:Generated_Source\PSoC4/CyLib.c **** 
 962:Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 963:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_T
 964:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 965:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 966:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 967:Generated_Source\PSoC4/CyLib.c **** 
 968:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 969:Generated_Source\PSoC4/CyLib.c ****             {
 970:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 971:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 972:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 973:Generated_Source\PSoC4/CyLib.c ****             }
 974:Generated_Source\PSoC4/CyLib.c ****         }
 975:Generated_Source\PSoC4/CyLib.c ****         else
 976:Generated_Source\PSoC4/CyLib.c ****         {
 977:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 978:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 979:Generated_Source\PSoC4/CyLib.c ****         }
 980:Generated_Source\PSoC4/CyLib.c **** 
 981:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 982:Generated_Source\PSoC4/CyLib.c **** 
 983:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 984:Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 985:Generated_Source\PSoC4/CyLib.c ****             {
 986:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 987:Generated_Source\PSoC4/CyLib.c ****             }
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 25


 988:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 989:Generated_Source\PSoC4/CyLib.c **** 
 990:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 991:Generated_Source\PSoC4/CyLib.c ****             if (1u == usbLock)
 992:Generated_Source\PSoC4/CyLib.c ****             {
 993:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableUsbLock();
 994:Generated_Source\PSoC4/CyLib.c ****             }
 995:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 996:Generated_Source\PSoC4/CyLib.c **** 
 997:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 998:Generated_Source\PSoC4/CyLib.c ****     }
 999:Generated_Source\PSoC4/CyLib.c **** 
1000:Generated_Source\PSoC4/CyLib.c **** #else
1001:Generated_Source\PSoC4/CyLib.c **** 
1002:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
1003:Generated_Source\PSoC4/CyLib.c ****     {
1004:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1005:Generated_Source\PSoC4/CyLib.c ****         uint8  imoTrim1Value;
1006:Generated_Source\PSoC4/CyLib.c **** 
1007:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
1008:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
1009:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
1010:Generated_Source\PSoC4/CyLib.c **** 
1011:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
1012:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
1013:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
1014:Generated_Source\PSoC4/CyLib.c **** 
1015:Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4000)
1016:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 32u) || (freq == 48u))
1017:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_CCG3)
1018:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 36u) || (freq == 48u))
1019:Generated_Source\PSoC4/CyLib.c ****         #else
1020:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 28u) || (freq == 32u) ||
1021:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
1022:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
1023:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_PSOC4_4000) */
1024:Generated_Source\PSoC4/CyLib.c ****         {
1025:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1026:Generated_Source\PSoC4/CyLib.c **** 
1027:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
1028:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetWcoLock())
1029:Generated_Source\PSoC4/CyLib.c ****                 {
1030:Generated_Source\PSoC4/CyLib.c ****                     wcoLock = 1u;
1031:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
1032:Generated_Source\PSoC4/CyLib.c ****                 }
1033:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
1034:Generated_Source\PSoC4/CyLib.c **** 
1035:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
1036:Generated_Source\PSoC4/CyLib.c **** 
1037:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
1038:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkImoGetUsbLock())
1039:Generated_Source\PSoC4/CyLib.c ****                     {
1040:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
1041:Generated_Source\PSoC4/CyLib.c **** 
1042:Generated_Source\PSoC4/CyLib.c ****                     if (48u == freq)
1043:Generated_Source\PSoC4/CyLib.c ****                     {
1044:Generated_Source\PSoC4/CyLib.c ****                         usbLock = 1u;
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 26


1045:Generated_Source\PSoC4/CyLib.c ****                         CySysClkImoDisableUsbLock();
1046:Generated_Source\PSoC4/CyLib.c ****                     }
1047:Generated_Source\PSoC4/CyLib.c **** 
1048:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
1049:Generated_Source\PSoC4/CyLib.c ****                     }
1050:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
1051:Generated_Source\PSoC4/CyLib.c **** 
1052:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
1053:Generated_Source\PSoC4/CyLib.c **** 
1054:Generated_Source\PSoC4/CyLib.c **** 
1055:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
1056:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
1057:Generated_Source\PSoC4/CyLib.c **** 
1058:Generated_Source\PSoC4/CyLib.c **** 
1059:Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
1060:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
1061:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
1062:Generated_Source\PSoC4/CyLib.c ****                 {
1063:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
1064:Generated_Source\PSoC4/CyLib.c ****                 }
1065:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
1066:Generated_Source\PSoC4/CyLib.c ****                 {
1067:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
1068:Generated_Source\PSoC4/CyLib.c ****                 }
1069:Generated_Source\PSoC4/CyLib.c ****                 else
1070:Generated_Source\PSoC4/CyLib.c ****                 {
1071:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_M
1072:Generated_Source\PSoC4/CyLib.c ****                 }
1073:Generated_Source\PSoC4/CyLib.c ****             #else
1074:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
1075:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
1076:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
1077:Generated_Source\PSoC4/CyLib.c **** 
1078:Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
1079:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
1080:Generated_Source\PSoC4/CyLib.c **** 
1081:Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
1082:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
1083:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
1084:Generated_Source\PSoC4/CyLib.c **** 
1085:Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
1086:Generated_Source\PSoC4/CyLib.c **** 
1087:Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
1088:Generated_Source\PSoC4/CyLib.c ****             {
1089:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
1090:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
1091:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
1092:Generated_Source\PSoC4/CyLib.c **** 
1093:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
1094:Generated_Source\PSoC4/CyLib.c **** 
1095:Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
1096:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
1097:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
1098:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
1099:Generated_Source\PSoC4/CyLib.c ****             }
1100:Generated_Source\PSoC4/CyLib.c **** 
1101:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 27


1102:Generated_Source\PSoC4/CyLib.c ****                 if (1u == wcoLock)
1103:Generated_Source\PSoC4/CyLib.c ****                 {
1104:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableWcoLock();
1105:Generated_Source\PSoC4/CyLib.c ****                 }
1106:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
1107:Generated_Source\PSoC4/CyLib.c **** 
1108:Generated_Source\PSoC4/CyLib.c **** 
1109:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
1110:Generated_Source\PSoC4/CyLib.c ****                 if (1u == usbLock)
1111:Generated_Source\PSoC4/CyLib.c ****                 {
1112:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableUsbLock();
1113:Generated_Source\PSoC4/CyLib.c ****                 }
1114:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
1115:Generated_Source\PSoC4/CyLib.c **** 
1116:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1117:Generated_Source\PSoC4/CyLib.c ****         }
1118:Generated_Source\PSoC4/CyLib.c ****         else
1119:Generated_Source\PSoC4/CyLib.c ****         {
1120:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
1121:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
1122:Generated_Source\PSoC4/CyLib.c ****         }
1123:Generated_Source\PSoC4/CyLib.c ****     }
1124:Generated_Source\PSoC4/CyLib.c **** 
1125:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
1126:Generated_Source\PSoC4/CyLib.c **** 
1127:Generated_Source\PSoC4/CyLib.c **** 
1128:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
1129:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1130:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
1131:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1132:Generated_Source\PSoC4/CyLib.c ****     *
1133:Generated_Source\PSoC4/CyLib.c ****     * Selects the pre-scaler divider value for HFCLK from IMO.
1134:Generated_Source\PSoC4/CyLib.c ****     *
1135:Generated_Source\PSoC4/CyLib.c ****     * The HFCLK predivider allows the device to divide the HFCLK selection mux
1136:Generated_Source\PSoC4/CyLib.c ****     * input before use as HFCLK. The predivider is capable of dividing the HFCLK by
1137:Generated_Source\PSoC4/CyLib.c ****     * powers of 2 between 1 and 8.
1138:Generated_Source\PSoC4/CyLib.c ****     *
1139:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
1140:Generated_Source\PSoC4/CyLib.c ****     * should be selected in a way, not to exceed 16 MHz for SYSCLK.
1141:Generated_Source\PSoC4/CyLib.c ****     *
1142:Generated_Source\PSoC4/CyLib.c ****     * If the SYSCLK clock frequency increases during the device operation, call
1143:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
1144:Generated_Source\PSoC4/CyLib.c ****     * number of clock cycles the cache will wait before sampling data comes back
1145:Generated_Source\PSoC4/CyLib.c ****     * from Flash. If the SYSCLK clock frequency decreases, you can call
1146:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
1147:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() description for more information.
1148:Generated_Source\PSoC4/CyLib.c ****     *
1149:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
1150:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
1151:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
1152:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
1153:Generated_Source\PSoC4/CyLib.c ****     *
1154:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1155:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
1156:Generated_Source\PSoC4/CyLib.c ****     {
 375              		.loc 1 1156 0
 376              		.cfi_startproc
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 28


 377              		@ args = 0, pretend = 0, frame = 0
 378              		@ frame_needed = 0, uses_anonymous_args = 0
 379              	.LVL20:
 380 0000 70B5     		push	{r4, r5, r6, lr}
 381              		.cfi_def_cfa_offset 16
 382              		.cfi_offset 4, -16
 383              		.cfi_offset 5, -12
 384              		.cfi_offset 6, -8
 385              		.cfi_offset 14, -4
 386 0002 0400     		movs	r4, r0
1157:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1158:Generated_Source\PSoC4/CyLib.c **** 
1159:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 387              		.loc 1 1159 0
 388 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 389              	.LVL21:
1160:Generated_Source\PSoC4/CyLib.c **** 
1161:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
 390              		.loc 1 1161 0
 391 0008 0549     		ldr	r1, .L29
 392 000a 0A68     		ldr	r2, [r1]
 393 000c 0C25     		movs	r5, #12
 394 000e AA43     		bics	r2, r5
1162:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
1163:Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
 395              		.loc 1 1163 0
 396 0010 A300     		lsls	r3, r4, #2
 397 0012 2C00     		movs	r4, r5
 398              	.LVL22:
 399 0014 1C40     		ands	r4, r3
1162:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 400              		.loc 1 1162 0
 401 0016 1443     		orrs	r4, r2
1161:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 402              		.loc 1 1161 0
 403 0018 0C60     		str	r4, [r1]
1164:Generated_Source\PSoC4/CyLib.c **** 
1165:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 404              		.loc 1 1165 0
 405 001a FFF7FEFF 		bl	CyExitCriticalSection
 406              	.LVL23:
1166:Generated_Source\PSoC4/CyLib.c ****     }
 407              		.loc 1 1166 0
 408              		@ sp needed
 409 001e 70BD     		pop	{r4, r5, r6, pc}
 410              	.L30:
 411              		.align	2
 412              	.L29:
 413 0020 28000340 		.word	1073938472
 414              		.cfi_endproc
 415              	.LFE11:
 416              		.size	CySysClkWriteHfclkDiv, .-CySysClkWriteHfclkDiv
 417              		.section	.text.CySysGetResetReason,"ax",%progbits
 418              		.align	2
 419              		.global	CySysGetResetReason
 420              		.code	16
 421              		.thumb_func
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 29


 422              		.type	CySysGetResetReason, %function
 423              	CySysGetResetReason:
 424              	.LFB12:
1167:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
1168:Generated_Source\PSoC4/CyLib.c **** 
1169:Generated_Source\PSoC4/CyLib.c **** 
1170:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_ECO)
1171:Generated_Source\PSoC4/CyLib.c **** 
1172:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1173:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
1174:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1175:Generated_Source\PSoC4/CyLib.c ****     *
1176:Generated_Source\PSoC4/CyLib.c ****     * Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
1177:Generated_Source\PSoC4/CyLib.c ****     * for the ECO startup time.
1178:Generated_Source\PSoC4/CyLib.c ****     *
1179:Generated_Source\PSoC4/CyLib.c ****     * The timeout interval is measured based on the system frequency defined by
1180:Generated_Source\PSoC4/CyLib.c ****     * PSoC Creator at build time. If System clock frequency is changed in
1181:Generated_Source\PSoC4/CyLib.c ****     * runtime, the \ref CyDelayFreq() with the appropriate parameter should be
1182:Generated_Source\PSoC4/CyLib.c ****     * called.
1183:Generated_Source\PSoC4/CyLib.c ****     *
1184:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100 BLE / PSoC 4200 BLE: The WCO must be enabled prior to enabling ECO.
1185:Generated_Source\PSoC4/CyLib.c ****     *
1186:Generated_Source\PSoC4/CyLib.c ****     * \param timeoutUs Timeout in microseconds.
1187:Generated_Source\PSoC4/CyLib.c ****     *
1188:Generated_Source\PSoC4/CyLib.c ****     * If zero is specified, the function does not wait for timeout and returns
1189:Generated_Source\PSoC4/CyLib.c ****     * CYRET_SUCCESS. If non-zero is specified, the function waits for the timeout.
1190:Generated_Source\PSoC4/CyLib.c ****     *
1191:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS Completed successfully. The ECO is oscillating and
1192:Generated_Source\PSoC4/CyLib.c ****     * amplitude reached 60% and it does not mean 24 MHz crystal is within 50 ppm.
1193:Generated_Source\PSoC4/CyLib.c ****     *
1194:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_TIMEOUT Timeout occurred. If the crystal is not oscillating
1195:Generated_Source\PSoC4/CyLib.c ****     * or amplitude didn't reach 60% after specified amount of time, CYRET_TIMEOUT
1196:Generated_Source\PSoC4/CyLib.c ****     * is returned.
1197:Generated_Source\PSoC4/CyLib.c ****     *
1198:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1199:Generated_Source\PSoC4/CyLib.c ****     *
1200:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1201:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
1202:Generated_Source\PSoC4/CyLib.c ****     {
1203:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1204:Generated_Source\PSoC4/CyLib.c **** 
1205:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_ECO_BLESS)
1206:Generated_Source\PSoC4/CyLib.c ****             /* Enable the RF oscillator band gap */
1207:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1208:Generated_Source\PSoC4/CyLib.c **** 
1209:Generated_Source\PSoC4/CyLib.c ****             /* Update trimming register */
1210:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
1211:Generated_Source\PSoC4/CyLib.c **** 
1212:Generated_Source\PSoC4/CyLib.c ****             /* Enable the Crystal */
1213:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1214:Generated_Source\PSoC4/CyLib.c **** 
1215:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1216:Generated_Source\PSoC4/CyLib.c ****             uint32 regConfig;
1217:Generated_Source\PSoC4/CyLib.c ****             uint32 intrRegMaskStore = 0u;
1218:Generated_Source\PSoC4/CyLib.c **** 
1219:Generated_Source\PSoC4/CyLib.c ****             if (0u != (CY_SYS_BLESS_MT_CFG_REG & (CY_SYS_BLESS_MT_CFG_ENABLE_BLERD <<  CYFLD_BLE_BL
1220:Generated_Source\PSoC4/CyLib.c ****             {
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 30


1221:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG |= (CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_D
1222:Generated_Source\PSoC4/CyLib.c ****             }
1223:Generated_Source\PSoC4/CyLib.c ****             else
1224:Generated_Source\PSoC4/CyLib.c ****             {
1225:Generated_Source\PSoC4/CyLib.c ****                 /* Init BLE core */
1226:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG_REG = CY_SYS_BLESS_MT_DELAY_CFG_INIT;
1227:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG2_REG = CY_SYS_BLESS_MT_DELAY_CFG2_INIT;
1228:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG3_REG = CY_SYS_BLESS_MT_DELAY_CFG3_INIT;
1229:Generated_Source\PSoC4/CyLib.c **** 
1230:Generated_Source\PSoC4/CyLib.c ****                 /* RCB init */
1231:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_CTRL_REG;
1232:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_RCB_CTRL_CLEAR;
1233:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_RCB_CTRL_INIT;
1234:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_CTRL_REG = regConfig;
1235:Generated_Source\PSoC4/CyLib.c **** 
1236:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1237:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1238:Generated_Source\PSoC4/CyLib.c ****                 {
1239:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1240:Generated_Source\PSoC4/CyLib.c ****                 }
1241:Generated_Source\PSoC4/CyLib.c **** 
1242:Generated_Source\PSoC4/CyLib.c ****                 /* Enable BLE core */
1243:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_BLESS_MT_CFG_REG;
1244:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_BLESS_MT_CFG_CLEAR;
1245:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_BLESS_MT_CFG_INIT;
1246:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG = regConfig;
1247:Generated_Source\PSoC4/CyLib.c **** 
1248:Generated_Source\PSoC4/CyLib.c ****                 while(0u == ((CY_SYS_BLESS_BLERD_ACTIVE_INTR_STAT & CY_SYS_BLESS_INTR_STAT_REG)))
1249:Generated_Source\PSoC4/CyLib.c ****                 {
1250:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until BLERD55 moves to active state */
1251:Generated_Source\PSoC4/CyLib.c ****                 }
1252:Generated_Source\PSoC4/CyLib.c **** 
1253:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1254:Generated_Source\PSoC4/CyLib.c ****                 {
1255:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1256:Generated_Source\PSoC4/CyLib.c ****                 }
1257:Generated_Source\PSoC4/CyLib.c **** 
1258:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1259:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_NRST_SET;
1260:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_DIG_CLK_SET;
1261:Generated_Source\PSoC4/CyLib.c **** 
1262:Generated_Source\PSoC4/CyLib.c ****                 #if (CY_SYS_BLE_CLK_ECO_FREQ_32MHZ == CYDEV_ECO_CLK_MHZ)
1263:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_DIV_SET;
1264:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | CY_SYS_RCB_RBUS_
1265:Generated_Source\PSoC4/CyLib.c ****                 #else
1266:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_NODIV_SET;
1267:Generated_Source\PSoC4/CyLib.c ****                 #endif
1268:Generated_Source\PSoC4/CyLib.c **** 
1269:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1270:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_RCB_INTR_RCB_DONE & intrRegMaskStore))
1271:Generated_Source\PSoC4/CyLib.c ****                 {
1272:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~(CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_
1273:Generated_Source\PSoC4/CyLib.c ****                 }
1274:Generated_Source\PSoC4/CyLib.c **** 
1275:Generated_Source\PSoC4/CyLib.c ****                 /* Send read commands to RBUS */
1276:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RD_CMD |
1277:Generated_Source\PSoC4/CyLib.c ****                                             (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET & ~CY_SYS_RCB_RBUS_VAL
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 31


1278:Generated_Source\PSoC4/CyLib.c **** 
1279:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY & CY_SYS_RCB_INTR_REG))
1280:Generated_Source\PSoC4/CyLib.c ****                 {
1281:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RX_FIFO_NOT_EMPTY state */
1282:Generated_Source\PSoC4/CyLib.c ****                 }
1283:Generated_Source\PSoC4/CyLib.c **** 
1284:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG |= CY_SYS_RCB_INTR_RCB_DONE;
1285:Generated_Source\PSoC4/CyLib.c **** 
1286:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_RX_FIFO_RD_REG & CY_SYS_RCB_RBUS_TRIM_MASK;
1287:Generated_Source\PSoC4/CyLib.c **** 
1288:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1289:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | regConfig | CY_SYS_R
1290:Generated_Source\PSoC4/CyLib.c **** 
1291:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_DONE & CY_SYS_RCB_INTR_REG))
1292:Generated_Source\PSoC4/CyLib.c ****                 {
1293:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RCB_DONE state */
1294:Generated_Source\PSoC4/CyLib.c ****                 }
1295:Generated_Source\PSoC4/CyLib.c **** 
1296:Generated_Source\PSoC4/CyLib.c ****                 /* Clear Interrupt */
1297:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG = CY_SYS_RCB_INTR_CLEAR;
1298:Generated_Source\PSoC4/CyLib.c **** 
1299:Generated_Source\PSoC4/CyLib.c ****                 if(0u != ((CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY) & intr
1300:Generated_Source\PSoC4/CyLib.c ****                 {
1301:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= intrRegMaskStore;
1302:Generated_Source\PSoC4/CyLib.c ****                 }
1303:Generated_Source\PSoC4/CyLib.c **** 
1304:Generated_Source\PSoC4/CyLib.c ****             }
1305:Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_ECO_SRSSV2 || CY_IP_ECO_SRSSLT */
1306:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_ENABLE;
1307:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
1308:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_ECOV2_SRSSLT)
1309:Generated_Source\PSoC4/CyLib.c ****                 CySysClkPllClearPendingInterrupt(CY_SYS_PLL_INTR_WD_ERR);
1310:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_ECOV2_SRSSLT) */
1311:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_CLK_EN;
1312:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_ECO_BLESS) */
1313:Generated_Source\PSoC4/CyLib.c **** 
1314:Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
1315:Generated_Source\PSoC4/CyLib.c ****         {
1316:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_TIMEOUT;
1317:Generated_Source\PSoC4/CyLib.c **** 
1318:Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
1319:Generated_Source\PSoC4/CyLib.c ****             {
1320:Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
1321:Generated_Source\PSoC4/CyLib.c **** 
1322:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
1323:Generated_Source\PSoC4/CyLib.c ****                 {
1324:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_SUCCESS;
1325:Generated_Source\PSoC4/CyLib.c ****                     break;
1326:Generated_Source\PSoC4/CyLib.c ****                 }
1327:Generated_Source\PSoC4/CyLib.c ****             }
1328:Generated_Source\PSoC4/CyLib.c **** 
1329:Generated_Source\PSoC4/CyLib.c ****         }
1330:Generated_Source\PSoC4/CyLib.c **** 
1331:Generated_Source\PSoC4/CyLib.c ****         return(returnStatus);
1332:Generated_Source\PSoC4/CyLib.c ****     }
1333:Generated_Source\PSoC4/CyLib.c **** 
1334:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 32


1335:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1336:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
1337:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1338:Generated_Source\PSoC4/CyLib.c ****     *
1339:Generated_Source\PSoC4/CyLib.c ****     * Stops the megahertz crystal.
1340:Generated_Source\PSoC4/CyLib.c ****     *
1341:Generated_Source\PSoC4/CyLib.c ****     * If ECO is disabled when it is sourcing HFCLK, the CPU will halt. In addition,
1342:Generated_Source\PSoC4/CyLib.c ****     * for PSoC 4100 BLE / PSoC 4200 BLE devices, the BLE sub-system will stop
1343:Generated_Source\PSoC4/CyLib.c ****     * functioning.
1344:Generated_Source\PSoC4/CyLib.c ****     *
1345:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1346:Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
1347:Generated_Source\PSoC4/CyLib.c ****     {
1348:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1349:Generated_Source\PSoC4/CyLib.c ****             /* Disable the RF oscillator band gap */
1350:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1351:Generated_Source\PSoC4/CyLib.c **** 
1352:Generated_Source\PSoC4/CyLib.c ****             /* Disable the Crystal */
1353:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1354:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1355:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_BLESS_MT_CFG_REG &= ~(CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_DPSL
1356:Generated_Source\PSoC4/CyLib.c ****         #else
1357:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~(CY_SYS_CLK_ECO_CONFIG_ENABLE | CY_SYS_CLK_ECO_C
1358:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1359:Generated_Source\PSoC4/CyLib.c ****     }
1360:Generated_Source\PSoC4/CyLib.c **** 
1361:Generated_Source\PSoC4/CyLib.c **** 
1362:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1363:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
1364:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1365:Generated_Source\PSoC4/CyLib.c ****     *
1366:Generated_Source\PSoC4/CyLib.c ****     * Reads the status bit for the megahertz crystal.
1367:Generated_Source\PSoC4/CyLib.c ****     *
1368:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4100 BLE / PSoC 4200 BLE devices, the status bit is the
1369:Generated_Source\PSoC4/CyLib.c ****     * XO_AMP_DETECT bit in FSM register.
1370:Generated_Source\PSoC4/CyLib.c ****     *
1371:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L / 4100S / 4500 with ECO devices, the error status bit is
1372:Generated_Source\PSoC4/CyLib.c ****     * the WATCHDOG_ERROR bit in ECO_STATUS register.
1373:Generated_Source\PSoC4/CyLib.c ****     *
1374:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4100 BLE/PSoC 4200 BLE: Non-zero indicates that ECO output
1375:Generated_Source\PSoC4/CyLib.c ****     * reached 50 ppm and is oscillating in valid range.
1376:Generated_Source\PSoC4/CyLib.c ****     *
1377:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4200L / 4100S / 4500 with ECO: Non-zero indicates that ECO
1378:Generated_Source\PSoC4/CyLib.c ****     * is running.
1379:Generated_Source\PSoC4/CyLib.c ****     *
1380:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1381:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
1382:Generated_Source\PSoC4/CyLib.c ****     {
1383:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1384:Generated_Source\PSoC4/CyLib.c **** 
1385:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1386:Generated_Source\PSoC4/CyLib.c ****             returnValue = CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT;
1387:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1388:Generated_Source\PSoC4/CyLib.c ****             returnValue = (CY_SYS_BLESS_MT_STATUS_REG & CY_SYS_BLESS_MT_STATUS_CURR_STATE_MASK) >> 
1389:Generated_Source\PSoC4/CyLib.c **** 
1390:Generated_Source\PSoC4/CyLib.c ****             returnValue =  ((CY_SYS_BLESS_MT_STATUS_BLERD_IDLE == returnValue) ||
1391:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_SWITCH_EN  == returnValue) ||
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 33


1392:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ACTIVE  ==  returnValue) ||
1393:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ISOLATE == returnValue));
1394:Generated_Source\PSoC4/CyLib.c ****         #else
1395:Generated_Source\PSoC4/CyLib.c ****             returnValue = (0u != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)
1396:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1397:Generated_Source\PSoC4/CyLib.c **** 
1398:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1399:Generated_Source\PSoC4/CyLib.c ****     }
1400:Generated_Source\PSoC4/CyLib.c **** 
1401:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECO_BLESS || CY_IP_ECO_BLESSV3)
1402:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1403:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkWriteEcoDiv
1404:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1405:Generated_Source\PSoC4/CyLib.c ****         *
1406:Generated_Source\PSoC4/CyLib.c ****         * Selects value for the ECO divider.
1407:Generated_Source\PSoC4/CyLib.c ****         *
1408:Generated_Source\PSoC4/CyLib.c ****         * The ECO must not be the HFCLK clock source when this function is called.
1409:Generated_Source\PSoC4/CyLib.c ****         * The HFCLK source can be changed to the other clock source by call to the
1410:Generated_Source\PSoC4/CyLib.c ****         * CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
1411:Generated_Source\PSoC4/CyLib.c ****         * function will not have any effect if compiler in release mode, and halt the
1412:Generated_Source\PSoC4/CyLib.c ****         * CPU when compiler in debug mode.
1413:Generated_Source\PSoC4/CyLib.c ****         *
1414:Generated_Source\PSoC4/CyLib.c ****         * If the SYSCLK clock frequency increases during the device operation, call
1415:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
1416:Generated_Source\PSoC4/CyLib.c ****         * of clock cycles the cache will wait before sampling data comes back from
1417:Generated_Source\PSoC4/CyLib.c ****         * Flash. If the SYSCLK clock frequency decreases, you can call
1418:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() to improve the CPU performance. See
1419:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() description for more information.
1420:Generated_Source\PSoC4/CyLib.c ****         *
1421:Generated_Source\PSoC4/CyLib.c ****         * \param divider Power of 2 divider selection.
1422:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV1
1423:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV2
1424:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV4
1425:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV8
1426:Generated_Source\PSoC4/CyLib.c ****         *
1427:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1428:Generated_Source\PSoC4/CyLib.c ****         void CySysClkWriteEcoDiv(uint32 divider)
1429:Generated_Source\PSoC4/CyLib.c ****         {
1430:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1431:Generated_Source\PSoC4/CyLib.c **** 
1432:Generated_Source\PSoC4/CyLib.c ****             if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK)
1433:Generated_Source\PSoC4/CyLib.c ****             {
1434:Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
1435:Generated_Source\PSoC4/CyLib.c **** 
1436:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
1437:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
1438:Generated_Source\PSoC4/CyLib.c **** 
1439:Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
1440:Generated_Source\PSoC4/CyLib.c ****             }
1441:Generated_Source\PSoC4/CyLib.c ****             else
1442:Generated_Source\PSoC4/CyLib.c ****             {
1443:Generated_Source\PSoC4/CyLib.c ****                 /* Halt CPU in debug mode if ECO sources HFCLK */
1444:Generated_Source\PSoC4/CyLib.c ****                 CYASSERT(0u != 0u);
1445:Generated_Source\PSoC4/CyLib.c ****             }
1446:Generated_Source\PSoC4/CyLib.c ****         }
1447:Generated_Source\PSoC4/CyLib.c **** 
1448:Generated_Source\PSoC4/CyLib.c ****     #else
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 34


1449:Generated_Source\PSoC4/CyLib.c **** 
1450:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1451:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoTrim
1452:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1453:Generated_Source\PSoC4/CyLib.c ****         *
1454:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO. This API is available only for PSoC
1455:Generated_Source\PSoC4/CyLib.c ****         * 4200L / 4100S /4500 with ECO devices only.
1456:Generated_Source\PSoC4/CyLib.c ****         *
1457:Generated_Source\PSoC4/CyLib.c ****         * The following parameters can be trimmed for ECO. The affected registers are
1458:Generated_Source\PSoC4/CyLib.c ****         * ECO_TRIM0 and ECO_TRIM1.
1459:Generated_Source\PSoC4/CyLib.c ****         *
1460:Generated_Source\PSoC4/CyLib.c ****         * Watchdog trim - This bit field sets the error threshold below the steady
1461:Generated_Source\PSoC4/CyLib.c ****         * state amplitude level.
1462:Generated_Source\PSoC4/CyLib.c ****         *
1463:Generated_Source\PSoC4/CyLib.c ****         * Amplitude trim - This bit field is to set the crystal drive level when
1464:Generated_Source\PSoC4/CyLib.c ****         * ECO_CONFIG.AGC_EN = 1. WARNING: use care when setting this field because
1465:Generated_Source\PSoC4/CyLib.c ****         * driving a crystal beyond its rated limit can permanently damage the crystal.
1466:Generated_Source\PSoC4/CyLib.c ****         *
1467:Generated_Source\PSoC4/CyLib.c ****         * Filter frequency trim - This bit field sets LPF frequency trim and affects
1468:Generated_Source\PSoC4/CyLib.c ****         * the 3rd harmonic content.
1469:Generated_Source\PSoC4/CyLib.c ****         *
1470:Generated_Source\PSoC4/CyLib.c ****         * Feedback resistor trim - This bit field sets the feedback resistor trim and
1471:Generated_Source\PSoC4/CyLib.c ****         * impacts the oscillation amplitude.
1472:Generated_Source\PSoC4/CyLib.c ****         *
1473:Generated_Source\PSoC4/CyLib.c ****         * Amplifier gain trim - This bit field sets the amplifier gain trim and affects
1474:Generated_Source\PSoC4/CyLib.c ****         * the startup time of the crystal.
1475:Generated_Source\PSoC4/CyLib.c ****         *
1476:Generated_Source\PSoC4/CyLib.c ****         * Use care when setting the amplitude trim field because driving a crystal
1477:Generated_Source\PSoC4/CyLib.c ****         * beyond its rated limit can permanently damage the crystal.
1478:Generated_Source\PSoC4/CyLib.c ****         *
1479:Generated_Source\PSoC4/CyLib.c ****         * \param wDTrim: Watchdog trim
1480:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM0      Error threshold is 0.05 V
1481:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM1      Error threshold is 0.10 V
1482:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM2      Error threshold is 0.15 V
1483:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM3      Error threshold is 0.20 V
1484:Generated_Source\PSoC4/CyLib.c ****         *
1485:Generated_Source\PSoC4/CyLib.c ****         * \param aTrim: Amplitude trim
1486:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM0       Amplitude is 0.3 Vpp
1487:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM1       Amplitude is 0.4 Vpp
1488:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM2       Amplitude is 0.5 Vpp
1489:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM3       Amplitude is 0.6 Vpp
1490:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM4       Amplitude is 0.7 Vpp
1491:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM5       Amplitude is 0.8 Vpp
1492:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM6       Amplitude is 0.9 Vpp
1493:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM7       Amplitude is 1.0 Vpp
1494:Generated_Source\PSoC4/CyLib.c ****         *
1495:Generated_Source\PSoC4/CyLib.c ****         * \param fTrim: Filter frequency trim
1496:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM0       Crystal frequency > 30 MHz
1497:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM1       24 MHz < Crystal frequency <= 30 MHz
1498:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM2       17 MHz < Crystal frequency <= 24 MHz
1499:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM3       Crystal frequency <= 17 MHz
1500:Generated_Source\PSoC4/CyLib.c ****         *
1501:Generated_Source\PSoC4/CyLib.c ****         * \param rTrim: Feedback resistor trim
1502:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM0       Crystal frequency > 30 MHz
1503:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM1       24 MHz < Crystal frequency <= 30 MHz
1504:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM2       17 MHz < Crystal frequency <= 24 MHz
1505:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM3       Crystal frequency <= 17 MHz
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 35


1506:Generated_Source\PSoC4/CyLib.c ****         *
1507:Generated_Source\PSoC4/CyLib.c ****         * \param gTrim: Amplifier gain trim. Calculate the minimum required gm
1508:Generated_Source\PSoC4/CyLib.c ****         * (trans-conductance value). Divide the calculated gm value by 4.5 to
1509:Generated_Source\PSoC4/CyLib.c ****         * obtain an integer value 'result'. For more information please refer
1510:Generated_Source\PSoC4/CyLib.c ****         * to the device TRM.
1511:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM0       If result = 1
1512:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM1       If result = 0
1513:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 2
1514:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 3
1515:Generated_Source\PSoC4/CyLib.c ****         *
1516:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1517:Generated_Source\PSoC4/CyLib.c ****         void CySysClkConfigureEcoTrim(uint32 wDTrim, uint32 aTrim, uint32 fTrim, uint32 rTrim, uint
1518:Generated_Source\PSoC4/CyLib.c ****         {
1519:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1520:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
1521:Generated_Source\PSoC4/CyLib.c **** 
1522:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1523:Generated_Source\PSoC4/CyLib.c **** 
1524:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM0_REG & ~(CY_SYS_CLK_ECO_TRIM0_WDTRIM_MASK | CY_SYS_CLK_EC
1525:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (wDTrim << CY_SYS_CLK_ECO_TRIM0_WDTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM
1526:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (aTrim << CY_SYS_CLK_ECO_TRIM0_ATRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM0_
1527:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM0_REG = regTmp;
1528:Generated_Source\PSoC4/CyLib.c **** 
1529:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM1_REG & ~(CY_SYS_CLK_ECO_TRIM1_FTRIM_MASK |
1530:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_RTRIM_MASK |
1531:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_GTRIM_MASK);
1532:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (fTrim << CY_SYS_CLK_ECO_TRIM1_FTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1533:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (rTrim << CY_SYS_CLK_ECO_TRIM1_RTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1534:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (gTrim << CY_SYS_CLK_ECO_TRIM1_GTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1535:Generated_Source\PSoC4/CyLib.c **** 
1536:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM1_REG = regTmp;
1537:Generated_Source\PSoC4/CyLib.c **** 
1538:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1539:Generated_Source\PSoC4/CyLib.c ****         }
1540:Generated_Source\PSoC4/CyLib.c **** 
1541:Generated_Source\PSoC4/CyLib.c **** 
1542:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1543:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoDrive
1544:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1545:Generated_Source\PSoC4/CyLib.c ****         *
1546:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO based on crystal parameters. Use care
1547:Generated_Source\PSoC4/CyLib.c ****         * when setting the driveLevel parameter because driving a crystal beyond its
1548:Generated_Source\PSoC4/CyLib.c ****         * rated limit can permanently damage the crystal.
1549:Generated_Source\PSoC4/CyLib.c ****         *
1550:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4200L / 4100S / 4500 with ECO
1551:Generated_Source\PSoC4/CyLib.c ****         * devices only.
1552:Generated_Source\PSoC4/CyLib.c ****         *
1553:Generated_Source\PSoC4/CyLib.c ****         * \param freq Frequency of the crystal in kHz.
1554:Generated_Source\PSoC4/CyLib.c ****         * \param cLoad Crystal load capacitance in pF.
1555:Generated_Source\PSoC4/CyLib.c ****         * \param esr Equivalent series resistance of the crystal in ohm.
1556:Generated_Source\PSoC4/CyLib.c ****         *  maxAmplitude: maximum amplitude level in mV. Calculate as
1557:Generated_Source\PSoC4/CyLib.c ****         *  ((sqrt(driveLevel in uW / 2 / esr))/(3.14 * freq * cLoad)) * 10^9.
1558:Generated_Source\PSoC4/CyLib.c ****         *
1559:Generated_Source\PSoC4/CyLib.c ****         *  The Automatic Gain Control (AGC) is disabled when the specified maximum
1560:Generated_Source\PSoC4/CyLib.c ****         *  amplitude level equals or above 2. In this case the amplitude is not
1561:Generated_Source\PSoC4/CyLib.c ****         *  explicitly controlled and will grow until it saturates to the supply rail
1562:Generated_Source\PSoC4/CyLib.c ****         *  (1.8V nom). WARNING: use care when disabling AGC because driving a crystal
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 36


1563:Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1564:Generated_Source\PSoC4/CyLib.c ****         *
1565:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_SUCCESS ECO configuration completed successfully.
1566:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1567:Generated_Source\PSoC4/CyLib.c ****         *
1568:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1569:Generated_Source\PSoC4/CyLib.c ****         cystatus CySysClkConfigureEcoDrive(uint32 freq, uint32 cLoad, uint32 esr, uint32 maxAmplitu
1570:Generated_Source\PSoC4/CyLib.c ****         {
1571:Generated_Source\PSoC4/CyLib.c ****             cystatus returnStatus = CYRET_SUCCESS;
1572:Generated_Source\PSoC4/CyLib.c **** 
1573:Generated_Source\PSoC4/CyLib.c ****             uint32 wDTrim;
1574:Generated_Source\PSoC4/CyLib.c ****             uint32 aTrim;
1575:Generated_Source\PSoC4/CyLib.c ****             uint32 fTrim;
1576:Generated_Source\PSoC4/CyLib.c ****             uint32 rTrim;
1577:Generated_Source\PSoC4/CyLib.c ****             uint32 gTrim;
1578:Generated_Source\PSoC4/CyLib.c **** 
1579:Generated_Source\PSoC4/CyLib.c ****             uint32 gmMin;
1580:Generated_Source\PSoC4/CyLib.c **** 
1581:Generated_Source\PSoC4/CyLib.c **** 
1582:Generated_Source\PSoC4/CyLib.c ****             if ((maxAmplitude < CY_SYS_CLK_ECO_MAX_AMPL_MIN_mV) ||
1583:Generated_Source\PSoC4/CyLib.c ****                 (freq < CY_SYS_CLK_ECO_FREQ_KHZ_MIN) || (freq > CY_SYS_CLK_ECO_FREQ_KHZ_MAX))
1584:Generated_Source\PSoC4/CyLib.c ****             {
1585:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_BAD_PARAM;
1586:Generated_Source\PSoC4/CyLib.c ****             }
1587:Generated_Source\PSoC4/CyLib.c ****             else
1588:Generated_Source\PSoC4/CyLib.c ****             {
1589:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplitude trim */
1590:Generated_Source\PSoC4/CyLib.c ****                 aTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/100u) - 4u) 
1591:Generated_Source\PSoC4/CyLib.c **** 
1592:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM0)
1593:Generated_Source\PSoC4/CyLib.c ****                 {
1594:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM0;
1595:Generated_Source\PSoC4/CyLib.c ****                 }
1596:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM1)
1597:Generated_Source\PSoC4/CyLib.c ****                 {
1598:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM1;
1599:Generated_Source\PSoC4/CyLib.c ****                 }
1600:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM2)
1601:Generated_Source\PSoC4/CyLib.c ****                 {
1602:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM2;
1603:Generated_Source\PSoC4/CyLib.c ****                 }
1604:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM3)
1605:Generated_Source\PSoC4/CyLib.c ****                 {
1606:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM3;
1607:Generated_Source\PSoC4/CyLib.c ****                 }
1608:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM4)
1609:Generated_Source\PSoC4/CyLib.c ****                 {
1610:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM4;
1611:Generated_Source\PSoC4/CyLib.c ****                 }
1612:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM5)
1613:Generated_Source\PSoC4/CyLib.c ****                 {
1614:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM5;
1615:Generated_Source\PSoC4/CyLib.c ****                 }
1616:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM6)
1617:Generated_Source\PSoC4/CyLib.c ****                 {
1618:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM6;
1619:Generated_Source\PSoC4/CyLib.c ****                 }
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 37


1620:Generated_Source\PSoC4/CyLib.c ****                 else
1621:Generated_Source\PSoC4/CyLib.c ****                 {
1622:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM7;
1623:Generated_Source\PSoC4/CyLib.c ****                 }
1624:Generated_Source\PSoC4/CyLib.c **** 
1625:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate Watchdog trim. */
1626:Generated_Source\PSoC4/CyLib.c ****                 wDTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/200u) - 2u)
1627:Generated_Source\PSoC4/CyLib.c **** 
1628:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplifier gain trim. */
1629:Generated_Source\PSoC4/CyLib.c ****                 gmMin = (uint32) (((((CY_SYS_CLK_ECO_GMMIN_COEFFICIENT * freq * cLoad) / 1000) * ((
1630:Generated_Source\PSoC4/CyLib.c ****                 if (gmMin > 3u)
1631:Generated_Source\PSoC4/CyLib.c ****                 {
1632:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_BAD_PARAM;
1633:Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
1634:Generated_Source\PSoC4/CyLib.c ****                 }
1635:Generated_Source\PSoC4/CyLib.c ****                 else if (gmMin > 1u)
1636:Generated_Source\PSoC4/CyLib.c ****                 {
1637:Generated_Source\PSoC4/CyLib.c ****                     gTrim = gmMin;
1638:Generated_Source\PSoC4/CyLib.c ****                 }
1639:Generated_Source\PSoC4/CyLib.c ****                 else
1640:Generated_Source\PSoC4/CyLib.c ****                 {
1641:Generated_Source\PSoC4/CyLib.c ****                     gTrim = (gmMin == 1u) ? 0u : 1u;
1642:Generated_Source\PSoC4/CyLib.c ****                 }
1643:Generated_Source\PSoC4/CyLib.c **** 
1644:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate feedback resistor trim */
1645:Generated_Source\PSoC4/CyLib.c ****                 if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM0)
1646:Generated_Source\PSoC4/CyLib.c ****                 {
1647:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM0;
1648:Generated_Source\PSoC4/CyLib.c ****                 }
1649:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM1)
1650:Generated_Source\PSoC4/CyLib.c ****                 {
1651:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM1;
1652:Generated_Source\PSoC4/CyLib.c ****                 }
1653:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM2)
1654:Generated_Source\PSoC4/CyLib.c ****                 {
1655:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM2;
1656:Generated_Source\PSoC4/CyLib.c ****                 }
1657:Generated_Source\PSoC4/CyLib.c ****                 else
1658:Generated_Source\PSoC4/CyLib.c ****                 {
1659:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM3;
1660:Generated_Source\PSoC4/CyLib.c ****                 }
1661:Generated_Source\PSoC4/CyLib.c **** 
1662:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate filter frequency trim */
1663:Generated_Source\PSoC4/CyLib.c ****                 fTrim = rTrim;
1664:Generated_Source\PSoC4/CyLib.c **** 
1665:Generated_Source\PSoC4/CyLib.c ****                 CySysClkConfigureEcoTrim(wDTrim, aTrim, fTrim, rTrim, gTrim);
1666:Generated_Source\PSoC4/CyLib.c **** 
1667:Generated_Source\PSoC4/CyLib.c ****                 /* Automatic Gain Control (AGC) enable */
1668:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < 2u)
1669:Generated_Source\PSoC4/CyLib.c ****                 {
1670:Generated_Source\PSoC4/CyLib.c ****                     /* The oscillation amplitude is controlled to the level selected by amplitude t
1671:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1672:Generated_Source\PSoC4/CyLib.c ****                 }
1673:Generated_Source\PSoC4/CyLib.c ****                 else
1674:Generated_Source\PSoC4/CyLib.c ****                 {
1675:Generated_Source\PSoC4/CyLib.c ****                     /* The amplitude is not explicitly controlled and will grow until it saturates 
1676:Generated_Source\PSoC4/CyLib.c ****                     * supply rail (1.8V nom).
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 38


1677:Generated_Source\PSoC4/CyLib.c ****                     */
1678:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1679:Generated_Source\PSoC4/CyLib.c ****                 }
1680:Generated_Source\PSoC4/CyLib.c ****             }
1681:Generated_Source\PSoC4/CyLib.c **** 
1682:Generated_Source\PSoC4/CyLib.c ****             return (returnStatus);
1683:Generated_Source\PSoC4/CyLib.c ****         }
1684:Generated_Source\PSoC4/CyLib.c **** 
1685:Generated_Source\PSoC4/CyLib.c ****     #endif /* CY_IP_ECO_BLESS */
1686:Generated_Source\PSoC4/CyLib.c **** 
1687:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_ECO) */
1688:Generated_Source\PSoC4/CyLib.c **** 
1689:Generated_Source\PSoC4/CyLib.c **** 
1690:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_PLL)
1691:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1692:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStart
1693:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1694:Generated_Source\PSoC4/CyLib.c ****     *
1695:Generated_Source\PSoC4/CyLib.c ****     * Enables the PLL. Optionally waits for it to become stable. Waits at least
1696:Generated_Source\PSoC4/CyLib.c ****     * 250 us or until it is detected that the PLL is stable.
1697:Generated_Source\PSoC4/CyLib.c ****     *
1698:Generated_Source\PSoC4/CyLib.c ****     * Clears the unlock occurred status bit by calling CySysClkPllGetUnlockStatus(),
1699:Generated_Source\PSoC4/CyLib.c ****     * once the PLL is locked if the wait parameter is 1).
1700:Generated_Source\PSoC4/CyLib.c ****     *
1701:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1702:Generated_Source\PSoC4/CyLib.c ****     *
1703:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1704:Generated_Source\PSoC4/CyLib.c ****     * 0   PLL#0
1705:Generated_Source\PSoC4/CyLib.c ****     * 1   PLL#1 (available only for PSoC 4200L)
1706:Generated_Source\PSoC4/CyLib.c ****     *
1707:Generated_Source\PSoC4/CyLib.c ****     * \param wait:
1708:Generated_Source\PSoC4/CyLib.c ****     * 0 - Return immediately after configuration.
1709:Generated_Source\PSoC4/CyLib.c ****     * 1 - Wait for PLL lock or timeout. This API shall use the CyDelayUs() to
1710:Generated_Source\PSoC4/CyLib.c ****     * implement the timeout feature.
1711:Generated_Source\PSoC4/CyLib.c ****     *
1712:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1713:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_TIMEOUT The timeout occurred without detecting a stable clock.
1714:Generated_Source\PSoC4/CyLib.c ****     * If the input source of the clock is jittery, then the lock indication may
1715:Generated_Source\PSoC4/CyLib.c ****     * not occur. However, after the timeout has expired, the generated PLL clock can
1716:Generated_Source\PSoC4/CyLib.c ****     * still be used.
1717:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM - Either the PLL or wait parameter is invalid.
1718:Generated_Source\PSoC4/CyLib.c ****     *
1719:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1720:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllStart(uint32 pll, uint32 wait)
1721:Generated_Source\PSoC4/CyLib.c ****     {
1722:Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
1723:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1724:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1725:Generated_Source\PSoC4/CyLib.c **** 
1726:Generated_Source\PSoC4/CyLib.c ****         if((pll < CY_IP_PLL_NR) && (wait <= 1u))
1727:Generated_Source\PSoC4/CyLib.c ****         {
1728:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1729:Generated_Source\PSoC4/CyLib.c **** 
1730:Generated_Source\PSoC4/CyLib.c ****             /* Isolate PLL outputs */
1731:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1732:Generated_Source\PSoC4/CyLib.c **** 
1733:Generated_Source\PSoC4/CyLib.c ****             /* Enable PLL */
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 39


1734:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ENABLE;
1735:Generated_Source\PSoC4/CyLib.c **** 
1736:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1737:Generated_Source\PSoC4/CyLib.c **** 
1738:Generated_Source\PSoC4/CyLib.c ****             /* De-isolate >= CY_SYS_CLK_PLL_MIN_STARTUP_US after PLL enabled */
1739:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_PLL_MIN_STARTUP_US);
1740:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1741:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1742:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1743:Generated_Source\PSoC4/CyLib.c **** 
1744:Generated_Source\PSoC4/CyLib.c ****             if(wait != 0u)
1745:Generated_Source\PSoC4/CyLib.c ****             {
1746:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_TIMEOUT;
1747:Generated_Source\PSoC4/CyLib.c **** 
1748:Generated_Source\PSoC4/CyLib.c ****                 while(0u != counts)
1749:Generated_Source\PSoC4/CyLib.c ****                 {
1750:Generated_Source\PSoC4/CyLib.c **** 
1751:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkPllGetLockStatus(pll))
1752:Generated_Source\PSoC4/CyLib.c ****                     {
1753:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CYRET_SUCCESS;
1754:Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
1755:Generated_Source\PSoC4/CyLib.c ****                         break;
1756:Generated_Source\PSoC4/CyLib.c ****                     }
1757:Generated_Source\PSoC4/CyLib.c **** 
1758:Generated_Source\PSoC4/CyLib.c ****                     CyDelayUs(1u);
1759:Generated_Source\PSoC4/CyLib.c ****                     counts--;
1760:Generated_Source\PSoC4/CyLib.c ****                 }
1761:Generated_Source\PSoC4/CyLib.c ****             }
1762:Generated_Source\PSoC4/CyLib.c ****         }
1763:Generated_Source\PSoC4/CyLib.c ****         else
1764:Generated_Source\PSoC4/CyLib.c ****         {
1765:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_BAD_PARAM;
1766:Generated_Source\PSoC4/CyLib.c ****         }
1767:Generated_Source\PSoC4/CyLib.c **** 
1768:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1769:Generated_Source\PSoC4/CyLib.c ****     }
1770:Generated_Source\PSoC4/CyLib.c **** 
1771:Generated_Source\PSoC4/CyLib.c **** 
1772:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1773:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetLockStatus
1774:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1775:Generated_Source\PSoC4/CyLib.c ****     *
1776:Generated_Source\PSoC4/CyLib.c ****     * Returns non-zero if the output of the specified PLL output is locked.
1777:Generated_Source\PSoC4/CyLib.c ****     *
1778:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1779:Generated_Source\PSoC4/CyLib.c ****     *
1780:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1781:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1782:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1783:Generated_Source\PSoC4/CyLib.c ****     *
1784:Generated_Source\PSoC4/CyLib.c ****     * \return A non-zero value when the specified PLL is locked.
1785:Generated_Source\PSoC4/CyLib.c ****     *
1786:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1787:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetLockStatus(uint32 pll)
1788:Generated_Source\PSoC4/CyLib.c ****     {
1789:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1790:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus;
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 40


1791:Generated_Source\PSoC4/CyLib.c **** 
1792:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1793:Generated_Source\PSoC4/CyLib.c **** 
1794:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1795:Generated_Source\PSoC4/CyLib.c **** 
1796:Generated_Source\PSoC4/CyLib.c ****         /* PLL is locked if reported so for two consecutive read. */
1797:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1798:Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
1799:Generated_Source\PSoC4/CyLib.c ****         {
1800:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1801:Generated_Source\PSoC4/CyLib.c ****         }
1802:Generated_Source\PSoC4/CyLib.c **** 
1803:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1804:Generated_Source\PSoC4/CyLib.c **** 
1805:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1806:Generated_Source\PSoC4/CyLib.c ****     }
1807:Generated_Source\PSoC4/CyLib.c **** 
1808:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1809:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStop
1810:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1811:Generated_Source\PSoC4/CyLib.c ****     *
1812:Generated_Source\PSoC4/CyLib.c ****     * Disables the PLL.
1813:Generated_Source\PSoC4/CyLib.c ****     *
1814:Generated_Source\PSoC4/CyLib.c ****     * Ensures that either PLL is not the source of HFCLK before it is disabled,
1815:Generated_Source\PSoC4/CyLib.c ****     * otherwise, the CPU will halt.
1816:Generated_Source\PSoC4/CyLib.c ****     *
1817:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1818:Generated_Source\PSoC4/CyLib.c ****     *
1819:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1820:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1821:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1822:Generated_Source\PSoC4/CyLib.c ****     *
1823:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1824:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllStop(uint32 pll)
1825:Generated_Source\PSoC4/CyLib.c ****     {
1826:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1827:Generated_Source\PSoC4/CyLib.c **** 
1828:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1829:Generated_Source\PSoC4/CyLib.c ****         {
1830:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1831:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~(CY_SYS_CLK_PLL_CONFIG_ISOLATE | CY_SY
1832:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1833:Generated_Source\PSoC4/CyLib.c ****         }
1834:Generated_Source\PSoC4/CyLib.c ****     }
1835:Generated_Source\PSoC4/CyLib.c **** 
1836:Generated_Source\PSoC4/CyLib.c **** 
1837:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1838:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetPQ
1839:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1840:Generated_Source\PSoC4/CyLib.c ****     *
1841:Generated_Source\PSoC4/CyLib.c ****     * Sets feedback (P) and reference the (Q) divider value. This API also sets the
1842:Generated_Source\PSoC4/CyLib.c ****     * programmable charge pump current value. Note that the PLL has to be disabled
1843:Generated_Source\PSoC4/CyLib.c ****     * before calling this API. If this function is called while any PLL is sourcing,
1844:Generated_Source\PSoC4/CyLib.c ****     * the SYSCLK will return an error.
1845:Generated_Source\PSoC4/CyLib.c ****     *
1846:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1847:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 41


1848:Generated_Source\PSoC4/CyLib.c ****     *
1849:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1850:Generated_Source\PSoC4/CyLib.c ****     *
1851:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1852:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1853:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1854:Generated_Source\PSoC4/CyLib.c ****     *
1855:Generated_Source\PSoC4/CyLib.c ****     * \param feedback The P divider. Range 4 - 259. Control bits for the feedback
1856:Generated_Source\PSoC4/CyLib.c ****     * divider.
1857:Generated_Source\PSoC4/CyLib.c ****     *
1858:Generated_Source\PSoC4/CyLib.c ****     * \param reference The Q divider. Range 1 - 64. Divide by the reference.
1859:Generated_Source\PSoC4/CyLib.c ****     *
1860:Generated_Source\PSoC4/CyLib.c ****     * \param current Charge the pump current in uA. The 2 uA for output frequencies
1861:Generated_Source\PSoC4/CyLib.c ****     * of 67 MHz or less, and 3 uA for higher output frequencies. The default
1862:Generated_Source\PSoC4/CyLib.c ****     * value is 2 uA.
1863:Generated_Source\PSoC4/CyLib.c ****     *
1864:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1865:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The parameters are out of range or the specified PLL
1866:Generated_Source\PSoC4/CyLib.c ****     * sources the system clock.
1867:Generated_Source\PSoC4/CyLib.c ****     *
1868:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1869:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetPQ(uint32 pll, uint32 feedback, uint32 reference, uint32 current)
1870:Generated_Source\PSoC4/CyLib.c ****     {
1871:Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
1872:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1873:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1874:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1875:Generated_Source\PSoC4/CyLib.c **** 
1876:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1877:Generated_Source\PSoC4/CyLib.c **** 
1878:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1879:Generated_Source\PSoC4/CyLib.c **** 
1880:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1881:Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
1882:Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
1883:Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
1884:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1885:Generated_Source\PSoC4/CyLib.c ****         {
1886:Generated_Source\PSoC4/CyLib.c ****             /* Set new feedback, reference and current values */
1887:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_FEEDBA
1888:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
1889:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_ICP_SE
1890:Generated_Source\PSoC4/CyLib.c **** 
1891:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((feedback << CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_SHIFT) & CY_SYS_CLK_PLL_CONF
1892:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
1893:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
1894:Generated_Source\PSoC4/CyLib.c **** 
1895:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1896:Generated_Source\PSoC4/CyLib.c **** 
1897:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1898:Generated_Source\PSoC4/CyLib.c ****         }
1899:Generated_Source\PSoC4/CyLib.c **** 
1900:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1901:Generated_Source\PSoC4/CyLib.c **** 
1902:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1903:Generated_Source\PSoC4/CyLib.c ****     }
1904:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 42


1905:Generated_Source\PSoC4/CyLib.c **** 
1906:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1907:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetBypassMode
1908:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1909:Generated_Source\PSoC4/CyLib.c ****     *
1910:Generated_Source\PSoC4/CyLib.c ****     * Sets the bypass mode for the specified PLL.
1911:Generated_Source\PSoC4/CyLib.c ****     *
1912:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function.
1913:Generated_Source\PSoC4/CyLib.c ****     * The PLL output will glitch during this function call.
1914:Generated_Source\PSoC4/CyLib.c ****     *
1915:Generated_Source\PSoC4/CyLib.c ****     * When the PLL's reference input is higher than HFCLK frequency the device may
1916:Generated_Source\PSoC4/CyLib.c ****     * lock due to incorrect flash wait cycle configuration and bypass switches from
1917:Generated_Source\PSoC4/CyLib.c ****     * PLL output to the reference input. See description of
1918:Generated_Source\PSoC4/CyLib.c ****     * CySysFlashSetWaitCycles() for more information.
1919:Generated_Source\PSoC4/CyLib.c ****     *
1920:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 swith PLL devices.
1921:Generated_Source\PSoC4/CyLib.c ****     *
1922:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1923:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1924:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1925:Generated_Source\PSoC4/CyLib.c ****     *
1926:Generated_Source\PSoC4/CyLib.c ****     * \param bypass: The bypass mode.
1927:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_AUTO - Automatic usage of the lock indicator. When unlocked,
1928:Generated_Source\PSoC4/CyLib.c ****     * automatically selects PLL the reference input (bypass mode). When locked,
1929:Generated_Source\PSoC4/CyLib.c ****     * automatically selects the PLL output.
1930:Generated_Source\PSoC4/CyLib.c ****     *
1931:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_REF - Selects the PLL reference input (bypass mode).
1932:Generated_Source\PSoC4/CyLib.c ****     * Ignores the lock indicator.
1933:Generated_Source\PSoC4/CyLib.c ****     *
1934:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_OUT - Selects the PLL output.  Ignores the lock indicator.
1935:Generated_Source\PSoC4/CyLib.c ****     *
1936:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1937:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetBypassMode(uint32 pll, uint32 bypass)
1938:Generated_Source\PSoC4/CyLib.c ****     {
1939:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1940:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1941:Generated_Source\PSoC4/CyLib.c **** 
1942:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1943:Generated_Source\PSoC4/CyLib.c **** 
1944:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (bypass <= CY_SYS_PLL_BYPASS_PLL_OUT))
1945:Generated_Source\PSoC4/CyLib.c ****         {
1946:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~CY_SYS_CLK_PLL_CONFIG_BYPASS_
1947:Generated_Source\PSoC4/CyLib.c ****             regTmp |=  (uint32)(bypass << CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT);
1948:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1949:Generated_Source\PSoC4/CyLib.c ****         }
1950:Generated_Source\PSoC4/CyLib.c **** 
1951:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1952:Generated_Source\PSoC4/CyLib.c ****     }
1953:Generated_Source\PSoC4/CyLib.c **** 
1954:Generated_Source\PSoC4/CyLib.c **** 
1955:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1956:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetBypassMode
1957:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1958:Generated_Source\PSoC4/CyLib.c ****     *
1959:Generated_Source\PSoC4/CyLib.c ****     *  Gets the bypass mode for the specified PLL.
1960:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1961:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 43


1962:Generated_Source\PSoC4/CyLib.c ****     *  \return bypass: Bypass mode.
1963:Generated_Source\PSoC4/CyLib.c ****     *   The same as the parameter of the CySysClkPllSetBypassMode().
1964:Generated_Source\PSoC4/CyLib.c ****     *
1965:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1966:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll)
1967:Generated_Source\PSoC4/CyLib.c ****     {
1968:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1969:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1970:Generated_Source\PSoC4/CyLib.c **** 
1971:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1972:Generated_Source\PSoC4/CyLib.c **** 
1973:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1974:Generated_Source\PSoC4/CyLib.c **** 
1975:Generated_Source\PSoC4/CyLib.c ****         returnValue = CY_SYS_CLK_PLL_BASE.pll[pll].config & CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_MASK;
1976:Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
1977:Generated_Source\PSoC4/CyLib.c **** 
1978:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1979:Generated_Source\PSoC4/CyLib.c **** 
1980:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1981:Generated_Source\PSoC4/CyLib.c ****     }
1982:Generated_Source\PSoC4/CyLib.c **** 
1983:Generated_Source\PSoC4/CyLib.c **** 
1984:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1985:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllConfigChangeAllowed
1986:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1987:Generated_Source\PSoC4/CyLib.c ****     *
1988:Generated_Source\PSoC4/CyLib.c ****     *  The function returns non-zero value if the specified PLL sources the System
1989:Generated_Source\PSoC4/CyLib.c ****     *  clock and the PLL is not in the bypass mode.
1990:Generated_Source\PSoC4/CyLib.c ****     *
1991:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1992:Generated_Source\PSoC4/CyLib.c ****     *
1993:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1994:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1995:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
1996:Generated_Source\PSoC4/CyLib.c ****     *
1997:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL sources the System clock and
1998:Generated_Source\PSoC4/CyLib.c ****     * the PLL is not in the bypass mode.
1999:Generated_Source\PSoC4/CyLib.c ****     *
2000:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2001:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll)
2002:Generated_Source\PSoC4/CyLib.c ****     {
2003:Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
2004:Generated_Source\PSoC4/CyLib.c ****         uint32   sysclkSource;
2005:Generated_Source\PSoC4/CyLib.c ****         cystatus returnValue = CYRET_INVALID_STATE;
2006:Generated_Source\PSoC4/CyLib.c **** 
2007:Generated_Source\PSoC4/CyLib.c ****         sysclkSource  = CySysClkGetSysclkSource();
2008:Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
2009:Generated_Source\PSoC4/CyLib.c **** 
2010:Generated_Source\PSoC4/CyLib.c ****         if ((CY_SYS_PLL_BYPASS_PLL_REF == pllBypassMode)             ||
2011:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll))
2012:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_SRSSV2)
2013:Generated_Source\PSoC4/CyLib.c ****             || ((CY_SYS_CLK_HFCLK_PLL1 != sysclkSource) && (1u == pll))
2014:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_SRSSV2) */
2015:Generated_Source\PSoC4/CyLib.c ****             )
2016:Generated_Source\PSoC4/CyLib.c ****         {
2017:Generated_Source\PSoC4/CyLib.c ****             returnValue = CYRET_SUCCESS;
2018:Generated_Source\PSoC4/CyLib.c ****         }
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 44


2019:Generated_Source\PSoC4/CyLib.c **** 
2020:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
2021:Generated_Source\PSoC4/CyLib.c ****     }
2022:Generated_Source\PSoC4/CyLib.c **** 
2023:Generated_Source\PSoC4/CyLib.c **** 
2024:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2025:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetUnlockStatus
2026:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2027:Generated_Source\PSoC4/CyLib.c ****     *
2028:Generated_Source\PSoC4/CyLib.c ****     *  Returns a non-zero value if the specified PLL output was unlocked.
2029:Generated_Source\PSoC4/CyLib.c ****     *  The unlock status is an indicator that the PLL has lost a lock at least once
2030:Generated_Source\PSoC4/CyLib.c ****     *  during its operation. The unlock status is cleared once it is read using
2031:Generated_Source\PSoC4/CyLib.c ****     *  this API.
2032:Generated_Source\PSoC4/CyLib.c ****     *
2033:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
2034:Generated_Source\PSoC4/CyLib.c ****     *
2035:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2036:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
2037:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
2038:Generated_Source\PSoC4/CyLib.c ****     *
2039:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL was unlocked.
2040:Generated_Source\PSoC4/CyLib.c ****     *
2041:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2042:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetUnlockStatus(uint32 pll)
2043:Generated_Source\PSoC4/CyLib.c ****     {
2044:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus = 0u;
2045:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
2046:Generated_Source\PSoC4/CyLib.c **** 
2047:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2048:Generated_Source\PSoC4/CyLib.c **** 
2049:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].test & CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK
2050:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_PLL_BASE.pll[pll].test |= CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK;
2051:Generated_Source\PSoC4/CyLib.c **** 
2052:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2053:Generated_Source\PSoC4/CyLib.c **** 
2054:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2055:Generated_Source\PSoC4/CyLib.c ****     }
2056:Generated_Source\PSoC4/CyLib.c **** 
2057:Generated_Source\PSoC4/CyLib.c **** 
2058:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2059:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetFrequency
2060:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2061:Generated_Source\PSoC4/CyLib.c ****     *
2062:Generated_Source\PSoC4/CyLib.c ****     * Configures either PLL#0 or PLL#1 for the requested input/output frequencies.
2063:Generated_Source\PSoC4/CyLib.c ****     * The input frequency is the frequency of the source to the PLL. The source is
2064:Generated_Source\PSoC4/CyLib.c ****     * set using the CySysClkPllSetSource() function.
2065:Generated_Source\PSoC4/CyLib.c ****     *
2066:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
2067:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
2068:Generated_Source\PSoC4/CyLib.c ****     *
2069:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
2070:Generated_Source\PSoC4/CyLib.c ****     *
2071:Generated_Source\PSoC4/CyLib.c ****     * \param pll:
2072:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2073:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
2074:Generated_Source\PSoC4/CyLib.c ****     *
2075:Generated_Source\PSoC4/CyLib.c ****     * \param inputFreq The reference frequency in KHz. The valid range is from 1000 to 49152 KHz.
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 45


2076:Generated_Source\PSoC4/CyLib.c ****     *
2077:Generated_Source\PSoC4/CyLib.c ****     * \param pllFreq The target frequency in KHz. The valid range is from 22500 to 49152 KHz.
2078:Generated_Source\PSoC4/CyLib.c ****     *
2079:Generated_Source\PSoC4/CyLib.c ****     * \param divider The output clock divider for the PLL:
2080:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIVPASS    Pass Through
2081:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2082:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2083:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2084:Generated_Source\PSoC4/CyLib.c ****     *
2085:Generated_Source\PSoC4/CyLib.c ****     * \param freqTol The tolerance in ppm, 10 ppm is equal to 0.001%.
2086:Generated_Source\PSoC4/CyLib.c ****     *
2087:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS The PLL was successfully configured for the requested
2088:Generated_Source\PSoC4/CyLib.c ****     * frequency.
2089:Generated_Source\PSoC4/CyLib.c ****     *
2090:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The PLL was not able to successfully configure for the
2091:Generated_Source\PSoC4/CyLib.c ****     * requested frequency.
2092:Generated_Source\PSoC4/CyLib.c ****     *
2093:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2094:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetFrequency(uint32 pll, uint32 inputFreq, uint32 pllFreq, uint32 divider, 
2095:Generated_Source\PSoC4/CyLib.c ****     {
2096:Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
2097:Generated_Source\PSoC4/CyLib.c ****         uint32 qMax;
2098:Generated_Source\PSoC4/CyLib.c **** 
2099:Generated_Source\PSoC4/CyLib.c ****         uint32 qVal = CY_SYS_CLK_PLL_INVALID;
2100:Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
2101:Generated_Source\PSoC4/CyLib.c **** 
2102:Generated_Source\PSoC4/CyLib.c ****         uint32 q;
2103:Generated_Source\PSoC4/CyLib.c ****         uint32 p;
2104:Generated_Source\PSoC4/CyLib.c **** 
2105:Generated_Source\PSoC4/CyLib.c ****         uint32 fvco;
2106:Generated_Source\PSoC4/CyLib.c ****         int32 ferr;
2107:Generated_Source\PSoC4/CyLib.c **** 
2108:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2109:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2110:Generated_Source\PSoC4/CyLib.c **** 
2111:Generated_Source\PSoC4/CyLib.c **** 
2112:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2113:Generated_Source\PSoC4/CyLib.c **** 
2114:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
2115:Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
2116:Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
2117:Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
2118:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
2119:Generated_Source\PSoC4/CyLib.c ****         {
2120:Generated_Source\PSoC4/CyLib.c **** 
2121:Generated_Source\PSoC4/CyLib.c ****             /* Minimum feed forward loop divisor */
2122:Generated_Source\PSoC4/CyLib.c ****             qMin = (inputFreq + (CY_SYS_CLK_PLL_FPFDMAX - 1u)) / CY_SYS_CLK_PLL_FPFDMAX;
2123:Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
2124:Generated_Source\PSoC4/CyLib.c **** 
2125:Generated_Source\PSoC4/CyLib.c ****             /* Maximum feed forward loop divisor */
2126:Generated_Source\PSoC4/CyLib.c ****             qMax = inputFreq / CY_SYS_CLK_PLL_FPFDMIN;
2127:Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
2128:Generated_Source\PSoC4/CyLib.c **** 
2129:Generated_Source\PSoC4/CyLib.c ****             if (qMin <= qMax)
2130:Generated_Source\PSoC4/CyLib.c ****             {
2131:Generated_Source\PSoC4/CyLib.c ****                 for(q = qMin; q <= qMax; q++)
2132:Generated_Source\PSoC4/CyLib.c ****                 {
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 46


2133:Generated_Source\PSoC4/CyLib.c ****                     /* Solve for the feedback divisor value */
2134:Generated_Source\PSoC4/CyLib.c **** 
2135:Generated_Source\PSoC4/CyLib.c ****                     /* INT((pllFreq * q ) / inputFreq), where INT is normal rounding  */
2136:Generated_Source\PSoC4/CyLib.c ****                     p = ((pllFreq * q) + (inputFreq / 2u)) / inputFreq;
2137:Generated_Source\PSoC4/CyLib.c **** 
2138:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the actual VCO frequency (FVCO) */
2139:Generated_Source\PSoC4/CyLib.c ****                     fvco = ((inputFreq * p) / q);
2140:Generated_Source\PSoC4/CyLib.c **** 
2141:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the frequency error (FERR) */
2142:Generated_Source\PSoC4/CyLib.c ****                     ferr = ((1000000 * ((int32) fvco - (int32) pllFreq))/ (int32) pllFreq);
2143:Generated_Source\PSoC4/CyLib.c **** 
2144:Generated_Source\PSoC4/CyLib.c ****                     /* Bound check the frequency error and decide next action */
2145:Generated_Source\PSoC4/CyLib.c ****                     if ((( -1 * (int32) freqTol) <= ferr) && (ferr <= (int32) freqTol))
2146:Generated_Source\PSoC4/CyLib.c ****                     {
2147:Generated_Source\PSoC4/CyLib.c ****                         qVal = q;
2148:Generated_Source\PSoC4/CyLib.c ****                         pVal = p;
2149:Generated_Source\PSoC4/CyLib.c ****                         break;
2150:Generated_Source\PSoC4/CyLib.c ****                     }
2151:Generated_Source\PSoC4/CyLib.c ****                 }
2152:Generated_Source\PSoC4/CyLib.c **** 
2153:Generated_Source\PSoC4/CyLib.c **** 
2154:Generated_Source\PSoC4/CyLib.c ****                 if ((pVal != CY_SYS_CLK_PLL_INVALID) && (qVal != CY_SYS_CLK_PLL_INVALID))
2155:Generated_Source\PSoC4/CyLib.c ****                 {
2156:Generated_Source\PSoC4/CyLib.c ****                     if (CySysClkPllSetPQ(pll, pVal, qVal, CY_SYS_CLK_PLL_CURRENT_DEFAULT) == CYRET_
2157:Generated_Source\PSoC4/CyLib.c ****                     {
2158:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CySysClkPllSetOutputDivider(pll, divider);
2159:Generated_Source\PSoC4/CyLib.c ****                     }
2160:Generated_Source\PSoC4/CyLib.c ****                 }
2161:Generated_Source\PSoC4/CyLib.c ****             }
2162:Generated_Source\PSoC4/CyLib.c **** 
2163:Generated_Source\PSoC4/CyLib.c ****         }
2164:Generated_Source\PSoC4/CyLib.c **** 
2165:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2166:Generated_Source\PSoC4/CyLib.c ****     }
2167:Generated_Source\PSoC4/CyLib.c **** 
2168:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2169:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetSource
2170:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2171:Generated_Source\PSoC4/CyLib.c ****     *
2172:Generated_Source\PSoC4/CyLib.c ****     *  Sets the input clock source to the PLL. The PLL must be disabled before
2173:Generated_Source\PSoC4/CyLib.c ****     *  calling this function.
2174:Generated_Source\PSoC4/CyLib.c ****     *
2175:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S /4500 with PLL devices.
2176:Generated_Source\PSoC4/CyLib.c ****     *
2177:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2178:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2179:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
2180:Generated_Source\PSoC4/CyLib.c ****     *
2181:Generated_Source\PSoC4/CyLib.c ****     * \param source:
2182:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_IMO        IMO
2183:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_EXTCLK     External Clock (available only for PSoC 4200L
2184:Generated_Source\PSoC4/CyLib.c ****     *  and PSoC 4500 with PLL devices)
2185:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_ECO        ECO
2186:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI0       DSI_OUT[0] (available only for PSoC 4200L)
2187:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI1       DSI_OUT[1] (available only for PSoC 4200L)
2188:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI2       DSI_OUT[2] (available only for PSoC 4200L)
2189:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI3       DSI_OUT[3] (available only for PSoC 4200L)
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 47


2190:Generated_Source\PSoC4/CyLib.c ****     *
2191:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2192:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetSource(uint32 pll, uint32 source)
2193:Generated_Source\PSoC4/CyLib.c ****     {
2194:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
2195:Generated_Source\PSoC4/CyLib.c **** 
2196:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_SRSSLT)
2197:Generated_Source\PSoC4/CyLib.c ****             uint8 i = 0u;
2198:Generated_Source\PSoC4/CyLib.c ****         #else
2199:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
2200:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_SRSSLT) */
2201:Generated_Source\PSoC4/CyLib.c **** 
2202:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2203:Generated_Source\PSoC4/CyLib.c **** 
2204:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
2205:Generated_Source\PSoC4/CyLib.c ****         {
2206:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
2207:Generated_Source\PSoC4/CyLib.c ****                 regTmp = CY_SYS_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL_MASK(pll);
2208:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= ((source << CY_SYS_CLK_SELECT_PLL_SHIFT(pll)) & CY_SYS_CLK_SELECT_PLL_MAS
2209:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_SELECT_REG = regTmp;
2210:Generated_Source\PSoC4/CyLib.c ****             #else
2211:Generated_Source\PSoC4/CyLib.c ****                 CY_SET_REG32_FIELD(CYREG_EXCO_CLK_SELECT, CYFLD_EXCO_REF_SEL, source);
2212:Generated_Source\PSoC4/CyLib.c **** 
2213:Generated_Source\PSoC4/CyLib.c ****                 /* Check if ECO is enabled and running */
2214:Generated_Source\PSoC4/CyLib.c ****                 if ((0UL == (CY_SYS_CLK_ECO_CONFIG_REG & CY_SYS_CLK_ECO_CONFIG_ENABLE)) ||
2215:Generated_Source\PSoC4/CyLib.c ****                     (0UL != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)))
2216:Generated_Source\PSoC4/CyLib.c ****                 {
2217:Generated_Source\PSoC4/CyLib.c ****                     /* Generate clock sequence to change clock source in CY_SYS_ECO_CLK_SELECT_REG 
2218:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
2219:Generated_Source\PSoC4/CyLib.c **** 
2220:Generated_Source\PSoC4/CyLib.c ****                     for(i = 0u; i < CY_SYS_EXCO_PGM_CLK_SEQ_GENERATOR; i++)
2221:Generated_Source\PSoC4/CyLib.c ****                     {
2222:Generated_Source\PSoC4/CyLib.c ****                         CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
2223:Generated_Source\PSoC4/CyLib.c ****                         CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
2224:Generated_Source\PSoC4/CyLib.c ****                     }
2225:Generated_Source\PSoC4/CyLib.c **** 
2226:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
2227:Generated_Source\PSoC4/CyLib.c ****                 }
2228:Generated_Source\PSoC4/CyLib.c **** 
2229:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
2230:Generated_Source\PSoC4/CyLib.c ****         }
2231:Generated_Source\PSoC4/CyLib.c **** 
2232:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2233:Generated_Source\PSoC4/CyLib.c ****     }
2234:Generated_Source\PSoC4/CyLib.c **** 
2235:Generated_Source\PSoC4/CyLib.c **** 
2236:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2237:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetOutputDivider
2238:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2239:Generated_Source\PSoC4/CyLib.c ****     *
2240:Generated_Source\PSoC4/CyLib.c ****     *  Sets the output clock divider for the PLL.
2241:Generated_Source\PSoC4/CyLib.c ****     *
2242:Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the System Clock source when calling this function. The
2243:Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
2244:Generated_Source\PSoC4/CyLib.c ****     *
2245:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
2246:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 48


2247:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2248:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
2249:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
2250:Generated_Source\PSoC4/CyLib.c ****     *
2251:Generated_Source\PSoC4/CyLib.c ****     * \param divider:
2252:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass through
2253:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2254:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2255:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2256:Generated_Source\PSoC4/CyLib.c ****     *
2257:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS    Completed successfully.
2258:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM  The parameters are out of range or the
2259:Generated_Source\PSoC4/CyLib.c ****     * specified PLL sources the System clock.
2260:Generated_Source\PSoC4/CyLib.c ****     *
2261:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2262:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetOutputDivider(uint32 pll, uint32 divider)
2263:Generated_Source\PSoC4/CyLib.c ****     {
2264:Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
2265:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
2266:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2267:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2268:Generated_Source\PSoC4/CyLib.c **** 
2269:Generated_Source\PSoC4/CyLib.c **** 
2270:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2271:Generated_Source\PSoC4/CyLib.c **** 
2272:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2273:Generated_Source\PSoC4/CyLib.c **** 
2274:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (CYRET_SUCCESS == tmp) && (divider <= CY_SYS_PLL_OUTPUT_DIV8))
2275:Generated_Source\PSoC4/CyLib.c ****         {
2276:Generated_Source\PSoC4/CyLib.c ****             tmpReg  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_OUTPUT
2277:Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
2278:Generated_Source\PSoC4/CyLib.c **** 
2279:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = tmpReg;
2280:Generated_Source\PSoC4/CyLib.c **** 
2281:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
2282:Generated_Source\PSoC4/CyLib.c ****         }
2283:Generated_Source\PSoC4/CyLib.c **** 
2284:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2285:Generated_Source\PSoC4/CyLib.c **** 
2286:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2287:Generated_Source\PSoC4/CyLib.c ****     }
2288:Generated_Source\PSoC4/CyLib.c **** 
2289:Generated_Source\PSoC4/CyLib.c **** 
2290:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECOV2_SRSSLT)
2291:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2292:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllGetInterruptCauseMasked
2293:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2294:Generated_Source\PSoC4/CyLib.c ****         *
2295:Generated_Source\PSoC4/CyLib.c ****         *  Returns a non-zero value that reflects a bit-wise AND between interrupt
2296:Generated_Source\PSoC4/CyLib.c ****         *  request and mask registers. The API allows firmware to read the status of
2297:Generated_Source\PSoC4/CyLib.c ****         *  all mask enabled interrupt causes with a single load operation.
2298:Generated_Source\PSoC4/CyLib.c ****         *
2299:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2300:Generated_Source\PSoC4/CyLib.c ****         *
2301:Generated_Source\PSoC4/CyLib.c ****         * \return A set bit indicates the source of the interrupt:
2302:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_PLL_LOCK
2303:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_WD_ERR
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 49


2304:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_CSV_CLK_SW
2305:Generated_Source\PSoC4/CyLib.c ****         *
2306:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2307:Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkPllGetInterruptCauseMasked(void)
2308:Generated_Source\PSoC4/CyLib.c ****         {
2309:Generated_Source\PSoC4/CyLib.c ****             return ((uint32)CY_GET_REG32(CYREG_EXCO_INTR_MASKED));
2310:Generated_Source\PSoC4/CyLib.c ****         }
2311:Generated_Source\PSoC4/CyLib.c **** 
2312:Generated_Source\PSoC4/CyLib.c **** 
2313:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2314:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllGetInterruptCause
2315:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2316:Generated_Source\PSoC4/CyLib.c ****         *
2317:Generated_Source\PSoC4/CyLib.c ****         *  Returns a non-zero value that reflects the interrupt request registers.
2318:Generated_Source\PSoC4/CyLib.c ****         *
2319:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2320:Generated_Source\PSoC4/CyLib.c ****         *
2321:Generated_Source\PSoC4/CyLib.c ****         * \return A set bit indicates the source of the interrupt:
2322:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_PLL_LOCK
2323:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_WD_ERR
2324:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_CSV_CLK_SW
2325:Generated_Source\PSoC4/CyLib.c ****         *
2326:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2327:Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkPllGetInterruptCause(void)
2328:Generated_Source\PSoC4/CyLib.c ****         {
2329:Generated_Source\PSoC4/CyLib.c ****             return ((uint32)CY_GET_REG32(CYREG_EXCO_INTR));
2330:Generated_Source\PSoC4/CyLib.c ****         }
2331:Generated_Source\PSoC4/CyLib.c **** 
2332:Generated_Source\PSoC4/CyLib.c **** 
2333:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2334:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllClearPendingInterrupt
2335:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2336:Generated_Source\PSoC4/CyLib.c ****         *
2337:Generated_Source\PSoC4/CyLib.c ****         *  Clears the pending interrupt.
2338:Generated_Source\PSoC4/CyLib.c ****         *
2339:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2340:Generated_Source\PSoC4/CyLib.c ****         *
2341:Generated_Source\PSoC4/CyLib.c ****         * \param interrupt:
2342:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_PLL_LOCK
2343:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_WD_ERR
2344:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_CSV_CLK_SW
2345:Generated_Source\PSoC4/CyLib.c ****         *  A logical OR of above can be used as input parameter.
2346:Generated_Source\PSoC4/CyLib.c ****         *
2347:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2348:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllClearPendingInterrupt(uint32 interrupt)
2349:Generated_Source\PSoC4/CyLib.c ****         {
2350:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32(CYREG_EXCO_INTR, interrupt);
2351:Generated_Source\PSoC4/CyLib.c ****         }
2352:Generated_Source\PSoC4/CyLib.c **** 
2353:Generated_Source\PSoC4/CyLib.c **** 
2354:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2355:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllSetInterruptMask
2356:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2357:Generated_Source\PSoC4/CyLib.c ****         *
2358:Generated_Source\PSoC4/CyLib.c ****         *  This API sets the interrupt mask bit for the corresponding interrupts.
2359:Generated_Source\PSoC4/CyLib.c ****         *
2360:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 50


2361:Generated_Source\PSoC4/CyLib.c ****         *
2362:Generated_Source\PSoC4/CyLib.c ****         * \param intrMask:
2363:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_PLL_LOCK
2364:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_WD_ERR
2365:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_CSV_CLK_SW
2366:Generated_Source\PSoC4/CyLib.c ****         *  A logical OR of above can be used as input parameter.
2367:Generated_Source\PSoC4/CyLib.c ****         *
2368:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2369:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllSetInterruptMask(uint32 intrMask)
2370:Generated_Source\PSoC4/CyLib.c ****         {
2371:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32(CYREG_EXCO_INTR_MASK, intrMask);
2372:Generated_Source\PSoC4/CyLib.c ****         }
2373:Generated_Source\PSoC4/CyLib.c **** 
2374:Generated_Source\PSoC4/CyLib.c **** 
2375:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2376:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllGetInterruptMask
2377:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2378:Generated_Source\PSoC4/CyLib.c ****         *
2379:Generated_Source\PSoC4/CyLib.c ****         *  This API returns the current interrupt mask register value.
2380:Generated_Source\PSoC4/CyLib.c ****         *
2381:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2382:Generated_Source\PSoC4/CyLib.c ****         *
2383:Generated_Source\PSoC4/CyLib.c ****         * \return A set bit indicates the source of the interrupt:
2384:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_PLL_LOCK
2385:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_WD_ERR
2386:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_CSV_CLK_SW
2387:Generated_Source\PSoC4/CyLib.c ****         *
2388:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2389:Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkPllGetInterruptMask(void)
2390:Generated_Source\PSoC4/CyLib.c ****         {
2391:Generated_Source\PSoC4/CyLib.c ****             return ((uint32)CY_GET_REG32(CYREG_EXCO_INTR_MASK));
2392:Generated_Source\PSoC4/CyLib.c ****         }
2393:Generated_Source\PSoC4/CyLib.c **** 
2394:Generated_Source\PSoC4/CyLib.c **** 
2395:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2396:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllSetInterrupt
2397:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2398:Generated_Source\PSoC4/CyLib.c ****         *
2399:Generated_Source\PSoC4/CyLib.c ****         *  This API asserts an interrupt. This can be used for firmware debugging.
2400:Generated_Source\PSoC4/CyLib.c ****         *
2401:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2402:Generated_Source\PSoC4/CyLib.c ****         *
2403:Generated_Source\PSoC4/CyLib.c ****         * \param interrupt:
2404:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_PLL_LOCK
2405:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_WD_ERR
2406:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_CSV_CLK_SW
2407:Generated_Source\PSoC4/CyLib.c ****         *  A logical OR of above can be used as input parameter.
2408:Generated_Source\PSoC4/CyLib.c ****         *
2409:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2410:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllSetInterrupt(uint32 interrupt)
2411:Generated_Source\PSoC4/CyLib.c ****         {
2412:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32(CYREG_EXCO_INTR_SET, interrupt);
2413:Generated_Source\PSoC4/CyLib.c ****         }
2414:Generated_Source\PSoC4/CyLib.c **** 
2415:Generated_Source\PSoC4/CyLib.c **** 
2416:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2417:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvEnable
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 51


2418:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2419:Generated_Source\PSoC4/CyLib.c ****         *
2420:Generated_Source\PSoC4/CyLib.c ****         * This API enables clock supervision on PLL frequency lock and loss.
2421:Generated_Source\PSoC4/CyLib.c ****         *
2422:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4500 with PLL devices.
2423:Generated_Source\PSoC4/CyLib.c ****         *
2424:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2425:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvEnable(void)
2426:Generated_Source\PSoC4/CyLib.c ****         {
2427:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_EXCO_REF_CTL, CYFLD_EXCO_CSV_EN, 0x1uL);
2428:Generated_Source\PSoC4/CyLib.c ****         }
2429:Generated_Source\PSoC4/CyLib.c **** 
2430:Generated_Source\PSoC4/CyLib.c **** 
2431:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2432:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvDisable
2433:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2434:Generated_Source\PSoC4/CyLib.c ****         *
2435:Generated_Source\PSoC4/CyLib.c ****         * This API disables clock supervision on PLL.
2436:Generated_Source\PSoC4/CyLib.c ****         *
2437:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4500 with PLL devices.
2438:Generated_Source\PSoC4/CyLib.c ****         *
2439:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2440:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvDisable(void)
2441:Generated_Source\PSoC4/CyLib.c ****         {
2442:Generated_Source\PSoC4/CyLib.c ****             CY_CLEAR_REG32_FIELD(CYREG_EXCO_REF_CTL, CYFLD_EXCO_CSV_EN);
2443:Generated_Source\PSoC4/CyLib.c ****         }
2444:Generated_Source\PSoC4/CyLib.c **** 
2445:Generated_Source\PSoC4/CyLib.c **** 
2446:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2447:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvSetSpvrCtl
2448:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2449:Generated_Source\PSoC4/CyLib.c ****         *
2450:Generated_Source\PSoC4/CyLib.c ****         *  This API enables sets the clock supervision parameters.
2451:Generated_Source\PSoC4/CyLib.c ****         *
2452:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2453:Generated_Source\PSoC4/CyLib.c ****         *
2454:Generated_Source\PSoC4/CyLib.c ****         * \param startupDelay:
2455:Generated_Source\PSoC4/CyLib.c ****         *  startup delay time -1 in reference clock cycles after enable
2456:Generated_Source\PSoC4/CyLib.c ****         *  or deep sleep wake up from reference clock start to monitored clock start
2457:Generated_Source\PSoC4/CyLib.c ****         *
2458:Generated_Source\PSoC4/CyLib.c ****         * \param csvSwitch:
2459:Generated_Source\PSoC4/CyLib.c ****         * CY_SYS_PLL_CSV_INT_EN – Enable INTR.CSV_CLK_SW if a clock switch occurs to IMO
2460:Generated_Source\PSoC4/CyLib.c ****         * CY_SYS_PLL_CSV_TRIG_EN – Enable CSV to cause trigger if a clock switch occurs to IMO
2461:Generated_Source\PSoC4/CyLib.c ****         * CY_SYS_PLL_CSV_CLK_SW_EN – Enable CSV to cause clock switch IMO (enabled by default in 
2462:Generated_Source\PSoC4/CyLib.c ****         *
2463:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2464:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvSetSpvrCtl(uint32 startupDelay, uint32 csvSwitch)
2465:Generated_Source\PSoC4/CyLib.c ****         {
2466:Generated_Source\PSoC4/CyLib.c ****             uint32 tmpRegVal = CY_GET_REG32(CYREG_EXCO_REF_CTL);
2467:Generated_Source\PSoC4/CyLib.c **** 
2468:Generated_Source\PSoC4/CyLib.c ****             tmpRegVal &= ~(CY_SYS_PLL_STARTUP_MASK | CY_SYS_PLL_CSV_MASK);
2469:Generated_Source\PSoC4/CyLib.c ****             tmpRegVal |= (startupDelay | csvSwitch);
2470:Generated_Source\PSoC4/CyLib.c **** 
2471:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32(CYREG_EXCO_REF_CTL, tmpRegVal);
2472:Generated_Source\PSoC4/CyLib.c ****         }
2473:Generated_Source\PSoC4/CyLib.c **** 
2474:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 52


2475:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2476:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvSetRefLimits
2477:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2478:Generated_Source\PSoC4/CyLib.c ****         *
2479:Generated_Source\PSoC4/CyLib.c ****         *  This API sets the cycle time lower and upper limits.
2480:Generated_Source\PSoC4/CyLib.c ****         *
2481:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2482:Generated_Source\PSoC4/CyLib.c ****         *
2483:Generated_Source\PSoC4/CyLib.c ****         * \param lower:
2484:Generated_Source\PSoC4/CyLib.c ****         *  Sets the lower limit -1, in reference clock cycles,
2485:Generated_Source\PSoC4/CyLib.c ****         *  before the next monitored clock event is allowed to happen.  If a monitored
2486:Generated_Source\PSoC4/CyLib.c ****         *  clock event happens before this limit is reached a CSV error is detected.
2487:Generated_Source\PSoC4/CyLib.c ****         *
2488:Generated_Source\PSoC4/CyLib.c ****         * \param upper:
2489:Generated_Source\PSoC4/CyLib.c ****         *  Sets the upper limit -1, in reference clock cycles, before (or same time)
2490:Generated_Source\PSoC4/CyLib.c ****         *  the next monitored clock event must happen.  If a monitored clock event
2491:Generated_Source\PSoC4/CyLib.c ****         *  does not happen before this limit is reached, or does not happen at all
2492:Generated_Source\PSoC4/CyLib.c ****         *  (clock loss), a CSV error is detected.
2493:Generated_Source\PSoC4/CyLib.c ****         *
2494:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2495:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvSetRefLimits(uint32 lower, uint32 upper)
2496:Generated_Source\PSoC4/CyLib.c ****         {
2497:Generated_Source\PSoC4/CyLib.c ****             uint32 tmpRegVal = CY_GET_REG32(CYREG_EXCO_REF_LIMIT);
2498:Generated_Source\PSoC4/CyLib.c **** 
2499:Generated_Source\PSoC4/CyLib.c ****             tmpRegVal &= ~(CY_SYS_PLL_REF_LIMIT_LOWER_MASK | CY_SYS_PLL_REF_LIMIT_UPPER_MASK);
2500:Generated_Source\PSoC4/CyLib.c ****             tmpRegVal |= (lower | ((uint32)(upper << CY_SYS_PLL_REF_LIMIT_UPPER_OFFSET)));
2501:Generated_Source\PSoC4/CyLib.c **** 
2502:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32(CYREG_EXCO_REF_LIMIT, tmpRegVal);
2503:Generated_Source\PSoC4/CyLib.c ****         }
2504:Generated_Source\PSoC4/CyLib.c **** 
2505:Generated_Source\PSoC4/CyLib.c **** 
2506:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2507:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvGetRefLimits
2508:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2509:Generated_Source\PSoC4/CyLib.c ****         *
2510:Generated_Source\PSoC4/CyLib.c ****         *  This API gets the cycle time lower and upper limits.
2511:Generated_Source\PSoC4/CyLib.c ****         *
2512:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2513:Generated_Source\PSoC4/CyLib.c ****         *
2514:Generated_Source\PSoC4/CyLib.c ****         * \return
2515:Generated_Source\PSoC4/CyLib.c ****         *  *Bits 31:16 – upper limit
2516:Generated_Source\PSoC4/CyLib.c ****         *  *Bits 15:0 – lower limit
2517:Generated_Source\PSoC4/CyLib.c ****         *
2518:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2519:Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkPllCsvGetRefLimits(void)
2520:Generated_Source\PSoC4/CyLib.c ****         {
2521:Generated_Source\PSoC4/CyLib.c ****             return ((uint32)CY_GET_REG32(CYREG_EXCO_REF_LIMIT));
2522:Generated_Source\PSoC4/CyLib.c ****         }
2523:Generated_Source\PSoC4/CyLib.c **** 
2524:Generated_Source\PSoC4/CyLib.c **** 
2525:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2526:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvSetPeriod
2527:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2528:Generated_Source\PSoC4/CyLib.c ****         *
2529:Generated_Source\PSoC4/CyLib.c ****         *  This API sets the csv period time.
2530:Generated_Source\PSoC4/CyLib.c ****         *
2531:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 53


2532:Generated_Source\PSoC4/CyLib.c ****         *
2533:Generated_Source\PSoC4/CyLib.c ****         * \param period:
2534:Generated_Source\PSoC4/CyLib.c ****         *  Set the Period -1, in monitored clock cycles, before the next monitored
2535:Generated_Source\PSoC4/CyLib.c ****         *  clock event happens.
2536:Generated_Source\PSoC4/CyLib.c ****         *  PERIOD <=  (UPPER+1) / FREQ_RATIO -1, with
2537:Generated_Source\PSoC4/CyLib.c ****         *  FREQ_RATIO = (Reference frequency / Monitored frequency).
2538:Generated_Source\PSoC4/CyLib.c ****         *  In case the clocks are asynchronous: PERIOD <=  UPPER / FREQ_RATIO -1
2539:Generated_Source\PSoC4/CyLib.c ****         *
2540:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2541:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvSetPeriod(uint32 period)
2542:Generated_Source\PSoC4/CyLib.c ****         {
2543:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_EXCO_MON_CTL, CYFLD_EXCO_PERIOD, period);
2544:Generated_Source\PSoC4/CyLib.c ****         }
2545:Generated_Source\PSoC4/CyLib.c **** 
2546:Generated_Source\PSoC4/CyLib.c **** 
2547:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2548:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvGetPeriod
2549:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2550:Generated_Source\PSoC4/CyLib.c ****         *
2551:Generated_Source\PSoC4/CyLib.c ****         *  This API returns the CSV period time.
2552:Generated_Source\PSoC4/CyLib.c ****         *
2553:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2554:Generated_Source\PSoC4/CyLib.c ****         *
2555:Generated_Source\PSoC4/CyLib.c ****         * \return Period time
2556:Generated_Source\PSoC4/CyLib.c ****         *
2557:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2558:Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkPllCsvGetPeriod(void)
2559:Generated_Source\PSoC4/CyLib.c ****         {
2560:Generated_Source\PSoC4/CyLib.c ****             return ((uint32)CY_GET_REG32_FIELD(CYREG_EXCO_MON_CTL, CYFLD_EXCO_PERIOD));
2561:Generated_Source\PSoC4/CyLib.c ****         }
2562:Generated_Source\PSoC4/CyLib.c **** 
2563:Generated_Source\PSoC4/CyLib.c **** 
2564:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2565:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvEnableReset
2566:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2567:Generated_Source\PSoC4/CyLib.c ****         *
2568:Generated_Source\PSoC4/CyLib.c ****         *  This API enables the system reset feature when the clock supervisor switches
2569:Generated_Source\PSoC4/CyLib.c ****         *  the clock source to IMO. A programmable delay counter starts at delay count
2570:Generated_Source\PSoC4/CyLib.c ****         *  value (see CySysClkPllCsvReloadPgmDlyCounter API) and counts down.
2571:Generated_Source\PSoC4/CyLib.c ****         *
2572:Generated_Source\PSoC4/CyLib.c ****         *  The CSV block will assert system reset when the counter reaches zero unless
2573:Generated_Source\PSoC4/CyLib.c ****         *  firmware intervenes and reloads the counter using
2574:Generated_Source\PSoC4/CyLib.c ****         *  CySysClkPllCsvReloadPgmDlyCounter() API.
2575:Generated_Source\PSoC4/CyLib.c ****         *
2576:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2577:Generated_Source\PSoC4/CyLib.c ****         *
2578:Generated_Source\PSoC4/CyLib.c ****         *  Side Effects and Restrictions:
2579:Generated_Source\PSoC4/CyLib.c ****         *  If a clock switch occurs, CSV block will reset the device when the delay
2580:Generated_Source\PSoC4/CyLib.c ****         *  counter reaches zero unless firmware reloads the counter using
2581:Generated_Source\PSoC4/CyLib.c ****         *  CySysClkPllCsvReloadPgmDlyCounter() API.
2582:Generated_Source\PSoC4/CyLib.c ****         *
2583:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2584:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvEnableReset(void)
2585:Generated_Source\PSoC4/CyLib.c ****         {
2586:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_EXCO_RSTDLY_CTL, CYFLD_EXCO_EN, 0x1uL);
2587:Generated_Source\PSoC4/CyLib.c ****         }
2588:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 54


2589:Generated_Source\PSoC4/CyLib.c **** 
2590:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2591:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvDisableReset
2592:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2593:Generated_Source\PSoC4/CyLib.c ****         *
2594:Generated_Source\PSoC4/CyLib.c ****         *  This API disables the system reset feature when the clock supervisor
2595:Generated_Source\PSoC4/CyLib.c ****         *  switches the clock source to IMO.
2596:Generated_Source\PSoC4/CyLib.c ****         *
2597:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2598:Generated_Source\PSoC4/CyLib.c ****         *
2599:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2600:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvDisableReset(void)
2601:Generated_Source\PSoC4/CyLib.c ****         {
2602:Generated_Source\PSoC4/CyLib.c ****             CY_CLEAR_REG32_FIELD(CYREG_EXCO_RSTDLY_CTL, CYFLD_EXCO_EN);
2603:Generated_Source\PSoC4/CyLib.c ****         }
2604:Generated_Source\PSoC4/CyLib.c **** 
2605:Generated_Source\PSoC4/CyLib.c **** 
2606:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2607:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvReloadPgmDlyCounter
2608:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2609:Generated_Source\PSoC4/CyLib.c ****         *
2610:Generated_Source\PSoC4/CyLib.c ****         *  This API reloads the programmable delay counter with the delay count value.
2611:Generated_Source\PSoC4/CyLib.c ****         *
2612:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2613:Generated_Source\PSoC4/CyLib.c ****         *
2614:Generated_Source\PSoC4/CyLib.c ****         * \param delayCount:
2615:Generated_Source\PSoC4/CyLib.c ****         *  Valid range 0-65535, device default value is 256.
2616:Generated_Source\PSoC4/CyLib.c ****         *  Sets the # of counts of IMO clock before system reset is asserted.
2617:Generated_Source\PSoC4/CyLib.c ****         *
2618:Generated_Source\PSoC4/CyLib.c ****         *
2619:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2620:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvReloadPgmDlyCounter(uint32 delayCount)
2621:Generated_Source\PSoC4/CyLib.c ****         {
2622:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_EXCO_RSTDLY, CYFLD_EXCO_DLYCOUNT, delayCount);
2623:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_EXCO_RSTDLY_CTL, CYFLD_EXCO_LOAD, 0x1uL);
2624:Generated_Source\PSoC4/CyLib.c ****         }
2625:Generated_Source\PSoC4/CyLib.c **** 
2626:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_ECOV2_SRSSLT) */
2627:Generated_Source\PSoC4/CyLib.c **** 
2628:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_PLL) */
2629:Generated_Source\PSoC4/CyLib.c **** 
2630:Generated_Source\PSoC4/CyLib.c **** 
2631:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
2632:Generated_Source\PSoC4/CyLib.c **** 
2633:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2634:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
2635:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2636:Generated_Source\PSoC4/CyLib.c ****     *
2637:Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
2638:Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
2639:Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
2640:Generated_Source\PSoC4/CyLib.c ****     *
2641:Generated_Source\PSoC4/CyLib.c ****     *  \param threshold: Threshold selection for Low Voltage Detect circuit.
2642:Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
2643:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
2644:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
2645:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 55


2646:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
2647:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
2648:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
2649:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
2650:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
2651:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
2652:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
2653:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
2654:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
2655:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
2656:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
2657:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
2658:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
2659:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
2660:Generated_Source\PSoC4/CyLib.c ****     *
2661:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2662:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
2663:Generated_Source\PSoC4/CyLib.c ****     {
2664:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
2665:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
2666:Generated_Source\PSoC4/CyLib.c **** 
2667:Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
2668:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
2669:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
2670:Generated_Source\PSoC4/CyLib.c **** 
2671:Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
2672:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2673:Generated_Source\PSoC4/CyLib.c **** 
2674:Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
2675:Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
2676:Generated_Source\PSoC4/CyLib.c **** 
2677:Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
2678:Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
2679:Generated_Source\PSoC4/CyLib.c **** 
2680:Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
2681:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
2682:Generated_Source\PSoC4/CyLib.c ****     }
2683:Generated_Source\PSoC4/CyLib.c **** 
2684:Generated_Source\PSoC4/CyLib.c **** 
2685:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2686:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
2687:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2688:Generated_Source\PSoC4/CyLib.c ****     *
2689:Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
2690:Generated_Source\PSoC4/CyLib.c ****     *
2691:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2692:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
2693:Generated_Source\PSoC4/CyLib.c ****     {
2694:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
2695:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2696:Generated_Source\PSoC4/CyLib.c ****     }
2697:Generated_Source\PSoC4/CyLib.c **** 
2698:Generated_Source\PSoC4/CyLib.c **** 
2699:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2700:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
2701:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2702:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 56


2703:Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
2704:Generated_Source\PSoC4/CyLib.c ****     *
2705:Generated_Source\PSoC4/CyLib.c ****     * \return
2706:Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
2707:Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
2708:Generated_Source\PSoC4/CyLib.c ****     *
2709:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2710:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
2711:Generated_Source\PSoC4/CyLib.c ****     {
2712:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
2713:Generated_Source\PSoC4/CyLib.c ****     }
2714:Generated_Source\PSoC4/CyLib.c **** 
2715:Generated_Source\PSoC4/CyLib.c **** 
2716:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2717:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
2718:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2719:Generated_Source\PSoC4/CyLib.c ****     *
2720:Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
2721:Generated_Source\PSoC4/CyLib.c ****     *
2722:Generated_Source\PSoC4/CyLib.c ****     * \return
2723:Generated_Source\PSoC4/CyLib.c ****     *  None
2724:Generated_Source\PSoC4/CyLib.c ****     *
2725:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2726:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
2727:Generated_Source\PSoC4/CyLib.c ****     {
2728:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
2729:Generated_Source\PSoC4/CyLib.c ****     }
2730:Generated_Source\PSoC4/CyLib.c **** 
2731:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
2732:Generated_Source\PSoC4/CyLib.c **** 
2733:Generated_Source\PSoC4/CyLib.c **** 
2734:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2735:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
2736:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2737:Generated_Source\PSoC4/CyLib.c **** *
2738:Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
2739:Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
2740:Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
2741:Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
2742:Generated_Source\PSoC4/CyLib.c **** *
2743:Generated_Source\PSoC4/CyLib.c **** *  \param reason: bits in the RES_CAUSE register to clear.
2744:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
2745:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
2746:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
2747:Generated_Source\PSoC4/CyLib.c **** *
2748:Generated_Source\PSoC4/CyLib.c **** * \return
2749:Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
2750:Generated_Source\PSoC4/CyLib.c **** *
2751:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2752:Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
2753:Generated_Source\PSoC4/CyLib.c **** {
 425              		.loc 1 2753 0
 426              		.cfi_startproc
 427              		@ args = 0, pretend = 0, frame = 0
 428              		@ frame_needed = 0, uses_anonymous_args = 0
 429              		@ link register save eliminated.
 430              	.LVL24:
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 57


 431 0000 0200     		movs	r2, r0
2754:Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
2755:Generated_Source\PSoC4/CyLib.c **** 
2756:Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 432              		.loc 1 2756 0
 433 0002 1920     		movs	r0, #25
 434              	.LVL25:
 435 0004 0240     		ands	r2, r0
 436              	.LVL26:
2757:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 437              		.loc 1 2757 0
 438 0006 0249     		ldr	r1, .L32
 439 0008 0B68     		ldr	r3, [r1]
 440 000a 1840     		ands	r0, r3
 441              	.LVL27:
2758:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2759:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
 442              		.loc 1 2759 0
 443 000c 0A60     		str	r2, [r1]
2760:Generated_Source\PSoC4/CyLib.c **** 
2761:Generated_Source\PSoC4/CyLib.c ****     return (returnStatus);
2762:Generated_Source\PSoC4/CyLib.c **** }
 444              		.loc 1 2762 0
 445              		@ sp needed
 446 000e 7047     		bx	lr
 447              	.L33:
 448              		.align	2
 449              	.L32:
 450 0010 54000340 		.word	1073938516
 451              		.cfi_endproc
 452              	.LFE12:
 453              		.size	CySysGetResetReason, .-CySysGetResetReason
 454              		.section	.text.CyDisableInts,"ax",%progbits
 455              		.align	2
 456              		.global	CyDisableInts
 457              		.code	16
 458              		.thumb_func
 459              		.type	CyDisableInts, %function
 460              	CyDisableInts:
 461              	.LFB13:
2763:Generated_Source\PSoC4/CyLib.c **** 
2764:Generated_Source\PSoC4/CyLib.c **** 
2765:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2766:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
2767:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2768:Generated_Source\PSoC4/CyLib.c **** *
2769:Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
2770:Generated_Source\PSoC4/CyLib.c **** *
2771:Generated_Source\PSoC4/CyLib.c **** * \return
2772:Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
2773:Generated_Source\PSoC4/CyLib.c **** *
2774:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2775:Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
2776:Generated_Source\PSoC4/CyLib.c **** {
 462              		.loc 1 2776 0
 463              		.cfi_startproc
 464              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 58


 465              		@ frame_needed = 0, uses_anonymous_args = 0
 466              		@ link register save eliminated.
2777:Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
2778:Generated_Source\PSoC4/CyLib.c **** 
2779:Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
2780:Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
 467              		.loc 1 2780 0
 468 0000 024B     		ldr	r3, .L35
 469 0002 1868     		ldr	r0, [r3]
 470              	.LVL28:
2781:Generated_Source\PSoC4/CyLib.c **** 
2782:Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
2783:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
 471              		.loc 1 2783 0
 472 0004 0122     		movs	r2, #1
 473 0006 5242     		rsbs	r2, r2, #0
 474 0008 1A60     		str	r2, [r3]
2784:Generated_Source\PSoC4/CyLib.c **** 
2785:Generated_Source\PSoC4/CyLib.c ****     return (intState);
2786:Generated_Source\PSoC4/CyLib.c **** }
 475              		.loc 1 2786 0
 476              		@ sp needed
 477 000a 7047     		bx	lr
 478              	.L36:
 479              		.align	2
 480              	.L35:
 481 000c 80E100E0 		.word	-536813184
 482              		.cfi_endproc
 483              	.LFE13:
 484              		.size	CyDisableInts, .-CyDisableInts
 485              		.section	.text.CyEnableInts,"ax",%progbits
 486              		.align	2
 487              		.global	CyEnableInts
 488              		.code	16
 489              		.thumb_func
 490              		.type	CyEnableInts, %function
 491              	CyEnableInts:
 492              	.LFB14:
2787:Generated_Source\PSoC4/CyLib.c **** 
2788:Generated_Source\PSoC4/CyLib.c **** 
2789:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2790:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
2791:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2792:Generated_Source\PSoC4/CyLib.c **** *
2793:Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
2794:Generated_Source\PSoC4/CyLib.c **** *
2795:Generated_Source\PSoC4/CyLib.c **** *  \param mask The 32 bit mask of interrupts to enable.
2796:Generated_Source\PSoC4/CyLib.c **** *
2797:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2798:Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
2799:Generated_Source\PSoC4/CyLib.c **** {
 493              		.loc 1 2799 0
 494              		.cfi_startproc
 495              		@ args = 0, pretend = 0, frame = 0
 496              		@ frame_needed = 0, uses_anonymous_args = 0
 497              		@ link register save eliminated.
 498              	.LVL29:
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 59


2800:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 499              		.loc 1 2800 0
 500 0000 014B     		ldr	r3, .L38
 501 0002 1860     		str	r0, [r3]
2801:Generated_Source\PSoC4/CyLib.c **** }
 502              		.loc 1 2801 0
 503              		@ sp needed
 504 0004 7047     		bx	lr
 505              	.L39:
 506 0006 C046     		.align	2
 507              	.L38:
 508 0008 00E100E0 		.word	-536813312
 509              		.cfi_endproc
 510              	.LFE14:
 511              		.size	CyEnableInts, .-CyEnableInts
 512              		.section	.text.CyIntEnable,"ax",%progbits
 513              		.align	2
 514              		.global	CyIntEnable
 515              		.code	16
 516              		.thumb_func
 517              		.type	CyIntEnable, %function
 518              	CyIntEnable:
 519              	.LFB21:
2802:Generated_Source\PSoC4/CyLib.c **** 
2803:Generated_Source\PSoC4/CyLib.c **** 
2804:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2805:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
2806:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2807:Generated_Source\PSoC4/CyLib.c **** *
2808:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
2809:Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
2810:Generated_Source\PSoC4/CyLib.c **** *
2811:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2812:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2813:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2814:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2815:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2816:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2817:Generated_Source\PSoC4/CyLib.c **** *
2818:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine.
2819:Generated_Source\PSoC4/CyLib.c **** *
2820:Generated_Source\PSoC4/CyLib.c **** * \return The old ISR vector at this location.
2821:Generated_Source\PSoC4/CyLib.c **** *
2822:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2823:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
2824:Generated_Source\PSoC4/CyLib.c **** {
2825:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2826:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2827:Generated_Source\PSoC4/CyLib.c **** 
2828:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2829:Generated_Source\PSoC4/CyLib.c **** 
2830:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2831:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
2832:Generated_Source\PSoC4/CyLib.c **** 
2833:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2834:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
2835:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 60


2836:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2837:Generated_Source\PSoC4/CyLib.c **** }
2838:Generated_Source\PSoC4/CyLib.c **** 
2839:Generated_Source\PSoC4/CyLib.c **** 
2840:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2841:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
2842:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2843:Generated_Source\PSoC4/CyLib.c **** *
2844:Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
2845:Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
2846:Generated_Source\PSoC4/CyLib.c **** *
2847:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2848:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2849:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2850:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2851:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2852:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2853:Generated_Source\PSoC4/CyLib.c **** *
2854:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2855:Generated_Source\PSoC4/CyLib.c **** *
2856:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2857:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
2858:Generated_Source\PSoC4/CyLib.c **** {
2859:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2860:Generated_Source\PSoC4/CyLib.c **** 
2861:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2862:Generated_Source\PSoC4/CyLib.c **** 
2863:Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
2864:Generated_Source\PSoC4/CyLib.c **** }
2865:Generated_Source\PSoC4/CyLib.c **** 
2866:Generated_Source\PSoC4/CyLib.c **** 
2867:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2868:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
2869:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2870:Generated_Source\PSoC4/CyLib.c **** *
2871:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
2872:Generated_Source\PSoC4/CyLib.c **** *
2873:Generated_Source\PSoC4/CyLib.c **** *  \param number Valid range [0-31].  Interrupt number
2874:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine
2875:Generated_Source\PSoC4/CyLib.c **** *
2876:Generated_Source\PSoC4/CyLib.c **** * \return Previous interrupt vector value.
2877:Generated_Source\PSoC4/CyLib.c **** *
2878:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2879:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
2880:Generated_Source\PSoC4/CyLib.c **** {
2881:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2882:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2883:Generated_Source\PSoC4/CyLib.c **** 
2884:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2885:Generated_Source\PSoC4/CyLib.c **** 
2886:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2887:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
2888:Generated_Source\PSoC4/CyLib.c **** 
2889:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2890:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
2891:Generated_Source\PSoC4/CyLib.c **** 
2892:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 61


2893:Generated_Source\PSoC4/CyLib.c **** }
2894:Generated_Source\PSoC4/CyLib.c **** 
2895:Generated_Source\PSoC4/CyLib.c **** 
2896:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2897:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
2898:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2899:Generated_Source\PSoC4/CyLib.c **** *
2900:Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
2901:Generated_Source\PSoC4/CyLib.c **** *
2902:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2903:Generated_Source\PSoC4/CyLib.c **** *
2904:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2905:Generated_Source\PSoC4/CyLib.c **** *
2906:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2907:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
2908:Generated_Source\PSoC4/CyLib.c **** {
2909:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2910:Generated_Source\PSoC4/CyLib.c **** 
2911:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2912:Generated_Source\PSoC4/CyLib.c **** 
2913:Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
2914:Generated_Source\PSoC4/CyLib.c **** }
2915:Generated_Source\PSoC4/CyLib.c **** 
2916:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2917:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
2918:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2919:Generated_Source\PSoC4/CyLib.c **** *
2920:Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
2921:Generated_Source\PSoC4/CyLib.c **** *
2922:Generated_Source\PSoC4/CyLib.c **** *  \param priority: Priority of the interrupt. 0 - 3, 0 being the highest.
2923:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2924:Generated_Source\PSoC4/CyLib.c **** *
2925:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2926:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
2927:Generated_Source\PSoC4/CyLib.c **** {
2928:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
2929:Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
2930:Generated_Source\PSoC4/CyLib.c ****     uint32 value;
2931:Generated_Source\PSoC4/CyLib.c **** 
2932:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
2933:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2934:Generated_Source\PSoC4/CyLib.c **** 
2935:Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
2936:Generated_Source\PSoC4/CyLib.c **** 
2937:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
2938:Generated_Source\PSoC4/CyLib.c **** 
2939:Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
2940:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
2941:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
2942:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
2943:Generated_Source\PSoC4/CyLib.c **** 
2944:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
2945:Generated_Source\PSoC4/CyLib.c **** }
2946:Generated_Source\PSoC4/CyLib.c **** 
2947:Generated_Source\PSoC4/CyLib.c **** 
2948:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2949:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 62


2950:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2951:Generated_Source\PSoC4/CyLib.c **** *
2952:Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
2953:Generated_Source\PSoC4/CyLib.c **** *
2954:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2955:Generated_Source\PSoC4/CyLib.c **** *
2956:Generated_Source\PSoC4/CyLib.c **** * \return
2957:Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
2958:Generated_Source\PSoC4/CyLib.c **** *
2959:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2960:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
2961:Generated_Source\PSoC4/CyLib.c **** {
2962:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
2963:Generated_Source\PSoC4/CyLib.c **** 
2964:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2965:Generated_Source\PSoC4/CyLib.c **** 
2966:Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
2967:Generated_Source\PSoC4/CyLib.c **** 
2968:Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
2969:Generated_Source\PSoC4/CyLib.c **** }
2970:Generated_Source\PSoC4/CyLib.c **** 
2971:Generated_Source\PSoC4/CyLib.c **** 
2972:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2973:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
2974:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2975:Generated_Source\PSoC4/CyLib.c **** *
2976:Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
2977:Generated_Source\PSoC4/CyLib.c **** *
2978:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2979:Generated_Source\PSoC4/CyLib.c **** *
2980:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2981:Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
2982:Generated_Source\PSoC4/CyLib.c **** {
 520              		.loc 1 2982 0
 521              		.cfi_startproc
 522              		@ args = 0, pretend = 0, frame = 0
 523              		@ frame_needed = 0, uses_anonymous_args = 0
 524              		@ link register save eliminated.
 525              	.LVL30:
2983:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 526              		.loc 1 2983 0
 527 0000 1F23     		movs	r3, #31
 528 0002 1840     		ands	r0, r3
 529              	.LVL31:
 530 0004 1E3B     		subs	r3, r3, #30
 531 0006 8340     		lsls	r3, r3, r0
 532 0008 014A     		ldr	r2, .L41
 533 000a 1360     		str	r3, [r2]
2984:Generated_Source\PSoC4/CyLib.c **** }
 534              		.loc 1 2984 0
 535              		@ sp needed
 536 000c 7047     		bx	lr
 537              	.L42:
 538 000e C046     		.align	2
 539              	.L41:
 540 0010 00E100E0 		.word	-536813312
 541              		.cfi_endproc
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 63


 542              	.LFE21:
 543              		.size	CyIntEnable, .-CyIntEnable
 544              		.section	.text.CyIntGetState,"ax",%progbits
 545              		.align	2
 546              		.global	CyIntGetState
 547              		.code	16
 548              		.thumb_func
 549              		.type	CyIntGetState, %function
 550              	CyIntGetState:
 551              	.LFB22:
2985:Generated_Source\PSoC4/CyLib.c **** 
2986:Generated_Source\PSoC4/CyLib.c **** 
2987:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2988:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
2989:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2990:Generated_Source\PSoC4/CyLib.c **** *
2991:Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
2992:Generated_Source\PSoC4/CyLib.c **** *
2993:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2994:Generated_Source\PSoC4/CyLib.c **** *
2995:Generated_Source\PSoC4/CyLib.c **** * \return
2996:Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
2997:Generated_Source\PSoC4/CyLib.c **** *
2998:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2999:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
3000:Generated_Source\PSoC4/CyLib.c **** {
 552              		.loc 1 3000 0
 553              		.cfi_startproc
 554              		@ args = 0, pretend = 0, frame = 0
 555              		@ frame_needed = 0, uses_anonymous_args = 0
 556              		@ link register save eliminated.
 557              	.LVL32:
3001:Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
3002:Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
 558              		.loc 1 3002 0
 559 0000 044B     		ldr	r3, .L44
 560 0002 1B68     		ldr	r3, [r3]
 561 0004 1F22     		movs	r2, #31
 562 0006 1040     		ands	r0, r2
 563              	.LVL33:
 564 0008 C340     		lsrs	r3, r3, r0
 565 000a 1800     		movs	r0, r3
 566 000c 0123     		movs	r3, #1
 567 000e 1840     		ands	r0, r3
3003:Generated_Source\PSoC4/CyLib.c **** }
 568              		.loc 1 3003 0
 569              		@ sp needed
 570 0010 7047     		bx	lr
 571              	.L45:
 572 0012 C046     		.align	2
 573              	.L44:
 574 0014 00E100E0 		.word	-536813312
 575              		.cfi_endproc
 576              	.LFE22:
 577              		.size	CyIntGetState, .-CyIntGetState
 578              		.section	.text.CyIntDisable,"ax",%progbits
 579              		.align	2
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 64


 580              		.global	CyIntDisable
 581              		.code	16
 582              		.thumb_func
 583              		.type	CyIntDisable, %function
 584              	CyIntDisable:
 585              	.LFB23:
3004:Generated_Source\PSoC4/CyLib.c **** 
3005:Generated_Source\PSoC4/CyLib.c **** 
3006:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3007:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
3008:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3009:Generated_Source\PSoC4/CyLib.c **** *
3010:Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
3011:Generated_Source\PSoC4/CyLib.c **** *
3012:Generated_Source\PSoC4/CyLib.c **** *   \param number: Valid range [0-31].  Interrupt number.
3013:Generated_Source\PSoC4/CyLib.c **** *
3014:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3015:Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
3016:Generated_Source\PSoC4/CyLib.c **** {
 586              		.loc 1 3016 0
 587              		.cfi_startproc
 588              		@ args = 0, pretend = 0, frame = 0
 589              		@ frame_needed = 0, uses_anonymous_args = 0
 590              		@ link register save eliminated.
 591              	.LVL34:
3017:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 592              		.loc 1 3017 0
 593 0000 1F23     		movs	r3, #31
 594 0002 1840     		ands	r0, r3
 595              	.LVL35:
 596 0004 1E3B     		subs	r3, r3, #30
 597 0006 8340     		lsls	r3, r3, r0
 598 0008 014A     		ldr	r2, .L47
 599 000a 1360     		str	r3, [r2]
3018:Generated_Source\PSoC4/CyLib.c **** }
 600              		.loc 1 3018 0
 601              		@ sp needed
 602 000c 7047     		bx	lr
 603              	.L48:
 604 000e C046     		.align	2
 605              	.L47:
 606 0010 80E100E0 		.word	-536813184
 607              		.cfi_endproc
 608              	.LFE23:
 609              		.size	CyIntDisable, .-CyIntDisable
 610              		.section	.text.CyIntSetPending,"ax",%progbits
 611              		.align	2
 612              		.global	CyIntSetPending
 613              		.code	16
 614              		.thumb_func
 615              		.type	CyIntSetPending, %function
 616              	CyIntSetPending:
 617              	.LFB24:
3019:Generated_Source\PSoC4/CyLib.c **** 
3020:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3021:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
3022:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 65


3023:Generated_Source\PSoC4/CyLib.c **** *
3024:Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
3025:Generated_Source\PSoC4/CyLib.c **** *
3026:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
3027:Generated_Source\PSoC4/CyLib.c **** *
3028:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3029:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
3030:Generated_Source\PSoC4/CyLib.c **** {
 618              		.loc 1 3030 0
 619              		.cfi_startproc
 620              		@ args = 0, pretend = 0, frame = 0
 621              		@ frame_needed = 0, uses_anonymous_args = 0
 622              		@ link register save eliminated.
 623              	.LVL36:
3031:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 624              		.loc 1 3031 0
 625 0000 1F23     		movs	r3, #31
 626 0002 1840     		ands	r0, r3
 627              	.LVL37:
 628 0004 1E3B     		subs	r3, r3, #30
 629 0006 8340     		lsls	r3, r3, r0
 630 0008 014A     		ldr	r2, .L50
 631 000a 1360     		str	r3, [r2]
3032:Generated_Source\PSoC4/CyLib.c **** }
 632              		.loc 1 3032 0
 633              		@ sp needed
 634 000c 7047     		bx	lr
 635              	.L51:
 636 000e C046     		.align	2
 637              	.L50:
 638 0010 00E200E0 		.word	-536813056
 639              		.cfi_endproc
 640              	.LFE24:
 641              		.size	CyIntSetPending, .-CyIntSetPending
 642              		.section	.text.CyIntClearPending,"ax",%progbits
 643              		.align	2
 644              		.global	CyIntClearPending
 645              		.code	16
 646              		.thumb_func
 647              		.type	CyIntClearPending, %function
 648              	CyIntClearPending:
 649              	.LFB25:
3033:Generated_Source\PSoC4/CyLib.c **** 
3034:Generated_Source\PSoC4/CyLib.c **** 
3035:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3036:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
3037:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3038:Generated_Source\PSoC4/CyLib.c **** *
3039:Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
3040:Generated_Source\PSoC4/CyLib.c **** *
3041:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
3042:Generated_Source\PSoC4/CyLib.c **** *
3043:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3044:Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
3045:Generated_Source\PSoC4/CyLib.c **** {
 650              		.loc 1 3045 0
 651              		.cfi_startproc
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 66


 652              		@ args = 0, pretend = 0, frame = 0
 653              		@ frame_needed = 0, uses_anonymous_args = 0
 654              		@ link register save eliminated.
 655              	.LVL38:
3046:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 656              		.loc 1 3046 0
 657 0000 1F23     		movs	r3, #31
 658 0002 1840     		ands	r0, r3
 659              	.LVL39:
 660 0004 1E3B     		subs	r3, r3, #30
 661 0006 8340     		lsls	r3, r3, r0
 662 0008 014A     		ldr	r2, .L53
 663 000a 1360     		str	r3, [r2]
3047:Generated_Source\PSoC4/CyLib.c **** }
 664              		.loc 1 3047 0
 665              		@ sp needed
 666 000c 7047     		bx	lr
 667              	.L54:
 668 000e C046     		.align	2
 669              	.L53:
 670 0010 80E200E0 		.word	-536812928
 671              		.cfi_endproc
 672              	.LFE25:
 673              		.size	CyIntClearPending, .-CyIntClearPending
 674              		.section	.text.CyHalt,"ax",%progbits
 675              		.align	2
 676              		.global	CyHalt
 677              		.code	16
 678              		.thumb_func
 679              		.type	CyHalt, %function
 680              	CyHalt:
 681              	.LFB26:
3048:Generated_Source\PSoC4/CyLib.c **** 
3049:Generated_Source\PSoC4/CyLib.c **** 
3050:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3051:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
3052:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3053:Generated_Source\PSoC4/CyLib.c **** *
3054:Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
3055:Generated_Source\PSoC4/CyLib.c **** *
3056:Generated_Source\PSoC4/CyLib.c **** *  \param reason: Value to be used during debugging.
3057:Generated_Source\PSoC4/CyLib.c **** *
3058:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3059:Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
3060:Generated_Source\PSoC4/CyLib.c **** {
 682              		.loc 1 3060 0
 683              		.cfi_startproc
 684              		@ args = 0, pretend = 0, frame = 0
 685              		@ frame_needed = 0, uses_anonymous_args = 0
 686              		@ link register save eliminated.
 687              	.LVL40:
3061:Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
3062:Generated_Source\PSoC4/CyLib.c ****     {
3063:Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
3064:Generated_Source\PSoC4/CyLib.c ****     }
3065:Generated_Source\PSoC4/CyLib.c **** 
3066:Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 67


3067:Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
3068:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
3069:Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
 688              		.loc 1 3069 0
 689              		.syntax divided
 690              	@ 3069 "Generated_Source\PSoC4\CyLib.c" 1
 691 0000 01BE     		    bkpt    1
 692              	@ 0 "" 2
3070:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
3071:Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
3072:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
3073:Generated_Source\PSoC4/CyLib.c **** }
 693              		.loc 1 3073 0
 694              		.thumb
 695              		.syntax unified
 696              		@ sp needed
 697 0002 7047     		bx	lr
 698              		.cfi_endproc
 699              	.LFE26:
 700              		.size	CyHalt, .-CyHalt
 701              		.section	.text.CyIntSetSysVector,"ax",%progbits
 702              		.align	2
 703              		.global	CyIntSetSysVector
 704              		.code	16
 705              		.thumb_func
 706              		.type	CyIntSetSysVector, %function
 707              	CyIntSetSysVector:
 708              	.LFB15:
2824:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 709              		.loc 1 2824 0
 710              		.cfi_startproc
 711              		@ args = 0, pretend = 0, frame = 0
 712              		@ frame_needed = 0, uses_anonymous_args = 0
 713              	.LVL41:
 714 0000 70B5     		push	{r4, r5, r6, lr}
 715              		.cfi_def_cfa_offset 16
 716              		.cfi_offset 4, -16
 717              		.cfi_offset 5, -12
 718              		.cfi_offset 6, -8
 719              		.cfi_offset 14, -4
 720 0002 0400     		movs	r4, r0
 721 0004 0D00     		movs	r5, r1
 722              	.LVL42:
2828:Generated_Source\PSoC4/CyLib.c **** 
 723              		.loc 1 2828 0
 724 0006 0F28     		cmp	r0, #15
 725 0008 02D9     		bls	.L57
2828:Generated_Source\PSoC4/CyLib.c **** 
 726              		.loc 1 2828 0 is_stmt 0 discriminator 1
 727 000a 0020     		movs	r0, #0
 728              	.LVL43:
 729 000c FFF7FEFF 		bl	CyHalt
 730              	.LVL44:
 731              	.L57:
2831:Generated_Source\PSoC4/CyLib.c **** 
 732              		.loc 1 2831 0 is_stmt 1
 733 0010 A400     		lsls	r4, r4, #2
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 68


 734 0012 8023     		movs	r3, #128
 735 0014 9B05     		lsls	r3, r3, #22
 736 0016 9C46     		mov	ip, r3
 737 0018 6444     		add	r4, r4, ip
 738 001a 2068     		ldr	r0, [r4]
 739              	.LVL45:
2834:Generated_Source\PSoC4/CyLib.c **** 
 740              		.loc 1 2834 0
 741 001c 2560     		str	r5, [r4]
2837:Generated_Source\PSoC4/CyLib.c **** 
 742              		.loc 1 2837 0
 743              		@ sp needed
 744              	.LVL46:
 745 001e 70BD     		pop	{r4, r5, r6, pc}
 746              		.cfi_endproc
 747              	.LFE15:
 748              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 749              		.section	.text.CyIntGetSysVector,"ax",%progbits
 750              		.align	2
 751              		.global	CyIntGetSysVector
 752              		.code	16
 753              		.thumb_func
 754              		.type	CyIntGetSysVector, %function
 755              	CyIntGetSysVector:
 756              	.LFB16:
2858:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 757              		.loc 1 2858 0
 758              		.cfi_startproc
 759              		@ args = 0, pretend = 0, frame = 0
 760              		@ frame_needed = 0, uses_anonymous_args = 0
 761              	.LVL47:
 762 0000 10B5     		push	{r4, lr}
 763              		.cfi_def_cfa_offset 8
 764              		.cfi_offset 4, -8
 765              		.cfi_offset 14, -4
 766 0002 0400     		movs	r4, r0
 767              	.LVL48:
2861:Generated_Source\PSoC4/CyLib.c **** 
 768              		.loc 1 2861 0
 769 0004 0F28     		cmp	r0, #15
 770 0006 02D9     		bls	.L59
2861:Generated_Source\PSoC4/CyLib.c **** 
 771              		.loc 1 2861 0 is_stmt 0 discriminator 1
 772 0008 0020     		movs	r0, #0
 773              	.LVL49:
 774 000a FFF7FEFF 		bl	CyHalt
 775              	.LVL50:
 776              	.L59:
2863:Generated_Source\PSoC4/CyLib.c **** }
 777              		.loc 1 2863 0 is_stmt 1
 778 000e A400     		lsls	r4, r4, #2
 779 0010 8023     		movs	r3, #128
 780 0012 9B05     		lsls	r3, r3, #22
 781 0014 9C46     		mov	ip, r3
 782 0016 6444     		add	r4, r4, ip
 783 0018 2068     		ldr	r0, [r4]
2864:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 69


 784              		.loc 1 2864 0
 785              		@ sp needed
 786 001a 10BD     		pop	{r4, pc}
 787              		.cfi_endproc
 788              	.LFE16:
 789              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 790              		.section	.text.CyIntSetVector,"ax",%progbits
 791              		.align	2
 792              		.global	CyIntSetVector
 793              		.code	16
 794              		.thumb_func
 795              		.type	CyIntSetVector, %function
 796              	CyIntSetVector:
 797              	.LFB17:
2880:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 798              		.loc 1 2880 0
 799              		.cfi_startproc
 800              		@ args = 0, pretend = 0, frame = 0
 801              		@ frame_needed = 0, uses_anonymous_args = 0
 802              	.LVL51:
 803 0000 70B5     		push	{r4, r5, r6, lr}
 804              		.cfi_def_cfa_offset 16
 805              		.cfi_offset 4, -16
 806              		.cfi_offset 5, -12
 807              		.cfi_offset 6, -8
 808              		.cfi_offset 14, -4
 809 0002 0400     		movs	r4, r0
 810 0004 0D00     		movs	r5, r1
 811              	.LVL52:
2884:Generated_Source\PSoC4/CyLib.c **** 
 812              		.loc 1 2884 0
 813 0006 0F28     		cmp	r0, #15
 814 0008 02D9     		bls	.L61
2884:Generated_Source\PSoC4/CyLib.c **** 
 815              		.loc 1 2884 0 is_stmt 0 discriminator 1
 816 000a 0020     		movs	r0, #0
 817              	.LVL53:
 818 000c FFF7FEFF 		bl	CyHalt
 819              	.LVL54:
 820              	.L61:
2887:Generated_Source\PSoC4/CyLib.c **** 
 821              		.loc 1 2887 0 is_stmt 1
 822 0010 1034     		adds	r4, r4, #16
 823 0012 A400     		lsls	r4, r4, #2
 824 0014 8023     		movs	r3, #128
 825 0016 9B05     		lsls	r3, r3, #22
 826 0018 9C46     		mov	ip, r3
 827 001a 6444     		add	r4, r4, ip
 828 001c 2068     		ldr	r0, [r4]
 829              	.LVL55:
2890:Generated_Source\PSoC4/CyLib.c **** 
 830              		.loc 1 2890 0
 831 001e 2560     		str	r5, [r4]
2893:Generated_Source\PSoC4/CyLib.c **** 
 832              		.loc 1 2893 0
 833              		@ sp needed
 834              	.LVL56:
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 70


 835 0020 70BD     		pop	{r4, r5, r6, pc}
 836              		.cfi_endproc
 837              	.LFE17:
 838              		.size	CyIntSetVector, .-CyIntSetVector
 839 0022 C046     		.section	.text.CyIntGetVector,"ax",%progbits
 840              		.align	2
 841              		.global	CyIntGetVector
 842              		.code	16
 843              		.thumb_func
 844              		.type	CyIntGetVector, %function
 845              	CyIntGetVector:
 846              	.LFB18:
2908:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 847              		.loc 1 2908 0
 848              		.cfi_startproc
 849              		@ args = 0, pretend = 0, frame = 0
 850              		@ frame_needed = 0, uses_anonymous_args = 0
 851              	.LVL57:
 852 0000 10B5     		push	{r4, lr}
 853              		.cfi_def_cfa_offset 8
 854              		.cfi_offset 4, -8
 855              		.cfi_offset 14, -4
 856 0002 0400     		movs	r4, r0
 857              	.LVL58:
2911:Generated_Source\PSoC4/CyLib.c **** 
 858              		.loc 1 2911 0
 859 0004 0F28     		cmp	r0, #15
 860 0006 02D9     		bls	.L63
2911:Generated_Source\PSoC4/CyLib.c **** 
 861              		.loc 1 2911 0 is_stmt 0 discriminator 1
 862 0008 0020     		movs	r0, #0
 863              	.LVL59:
 864 000a FFF7FEFF 		bl	CyHalt
 865              	.LVL60:
 866              	.L63:
2913:Generated_Source\PSoC4/CyLib.c **** }
 867              		.loc 1 2913 0 is_stmt 1
 868 000e 1034     		adds	r4, r4, #16
 869 0010 A400     		lsls	r4, r4, #2
 870 0012 8023     		movs	r3, #128
 871 0014 9B05     		lsls	r3, r3, #22
 872 0016 9C46     		mov	ip, r3
 873 0018 6444     		add	r4, r4, ip
 874 001a 2068     		ldr	r0, [r4]
2914:Generated_Source\PSoC4/CyLib.c **** 
 875              		.loc 1 2914 0
 876              		@ sp needed
 877 001c 10BD     		pop	{r4, pc}
 878              		.cfi_endproc
 879              	.LFE18:
 880              		.size	CyIntGetVector, .-CyIntGetVector
 881 001e C046     		.section	.text.CyIntSetPriority,"ax",%progbits
 882              		.align	2
 883              		.global	CyIntSetPriority
 884              		.code	16
 885              		.thumb_func
 886              		.type	CyIntSetPriority, %function
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 71


 887              	CyIntSetPriority:
 888              	.LFB19:
2927:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
 889              		.loc 1 2927 0
 890              		.cfi_startproc
 891              		@ args = 0, pretend = 0, frame = 0
 892              		@ frame_needed = 0, uses_anonymous_args = 0
 893              	.LVL61:
 894 0000 70B5     		push	{r4, r5, r6, lr}
 895              		.cfi_def_cfa_offset 16
 896              		.cfi_offset 4, -16
 897              		.cfi_offset 5, -12
 898              		.cfi_offset 6, -8
 899              		.cfi_offset 14, -4
 900 0002 0400     		movs	r4, r0
 901 0004 0E00     		movs	r6, r1
2932:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 902              		.loc 1 2932 0
 903 0006 0329     		cmp	r1, #3
 904 0008 02D9     		bls	.L65
2932:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 905              		.loc 1 2932 0 is_stmt 0 discriminator 1
 906 000a 0020     		movs	r0, #0
 907              	.LVL62:
 908 000c FFF7FEFF 		bl	CyHalt
 909              	.LVL63:
 910              	.L65:
2933:Generated_Source\PSoC4/CyLib.c **** 
 911              		.loc 1 2933 0 is_stmt 1
 912 0010 0F2C     		cmp	r4, #15
 913 0012 02D9     		bls	.L66
2933:Generated_Source\PSoC4/CyLib.c **** 
 914              		.loc 1 2933 0 is_stmt 0 discriminator 1
 915 0014 0020     		movs	r0, #0
 916 0016 FFF7FEFF 		bl	CyHalt
 917              	.LVL64:
 918              	.L66:
2935:Generated_Source\PSoC4/CyLib.c **** 
 919              		.loc 1 2935 0 is_stmt 1
 920 001a 0325     		movs	r5, #3
 921 001c 2540     		ands	r5, r4
 922 001e ED00     		lsls	r5, r5, #3
 923 0020 0635     		adds	r5, r5, #6
 924              	.LVL65:
2937:Generated_Source\PSoC4/CyLib.c **** 
 925              		.loc 1 2937 0
 926 0022 FFF7FEFF 		bl	CyEnterCriticalSection
 927              	.LVL66:
2939:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 928              		.loc 1 2939 0
 929 0026 A408     		lsrs	r4, r4, #2
 930 0028 A400     		lsls	r4, r4, #2
 931 002a 074B     		ldr	r3, .L67
 932 002c 9C46     		mov	ip, r3
 933 002e 6444     		add	r4, r4, ip
 934 0030 2168     		ldr	r1, [r4]
 935              	.LVL67:
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 72


2940:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 936              		.loc 1 2940 0
 937 0032 0323     		movs	r3, #3
 938 0034 AB40     		lsls	r3, r3, r5
 939 0036 9943     		bics	r1, r3
 940              	.LVL68:
 941 0038 0B00     		movs	r3, r1
 942              	.LVL69:
2941:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 943              		.loc 1 2941 0
 944 003a 3100     		movs	r1, r6
 945              	.LVL70:
 946 003c A940     		lsls	r1, r1, r5
 947 003e 1943     		orrs	r1, r3
 948              	.LVL71:
2942:Generated_Source\PSoC4/CyLib.c **** 
 949              		.loc 1 2942 0
 950 0040 2160     		str	r1, [r4]
2944:Generated_Source\PSoC4/CyLib.c **** }
 951              		.loc 1 2944 0
 952 0042 FFF7FEFF 		bl	CyExitCriticalSection
 953              	.LVL72:
2945:Generated_Source\PSoC4/CyLib.c **** 
 954              		.loc 1 2945 0
 955              		@ sp needed
 956              	.LVL73:
 957 0046 70BD     		pop	{r4, r5, r6, pc}
 958              	.L68:
 959              		.align	2
 960              	.L67:
 961 0048 00E400E0 		.word	-536812544
 962              		.cfi_endproc
 963              	.LFE19:
 964              		.size	CyIntSetPriority, .-CyIntSetPriority
 965              		.section	.text.CyIntGetPriority,"ax",%progbits
 966              		.align	2
 967              		.global	CyIntGetPriority
 968              		.code	16
 969              		.thumb_func
 970              		.type	CyIntGetPriority, %function
 971              	CyIntGetPriority:
 972              	.LFB20:
2961:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
 973              		.loc 1 2961 0
 974              		.cfi_startproc
 975              		@ args = 0, pretend = 0, frame = 0
 976              		@ frame_needed = 0, uses_anonymous_args = 0
 977              	.LVL74:
 978 0000 10B5     		push	{r4, lr}
 979              		.cfi_def_cfa_offset 8
 980              		.cfi_offset 4, -8
 981              		.cfi_offset 14, -4
 982 0002 0400     		movs	r4, r0
2964:Generated_Source\PSoC4/CyLib.c **** 
 983              		.loc 1 2964 0
 984 0004 0F28     		cmp	r0, #15
 985 0006 02D9     		bls	.L70
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 73


2964:Generated_Source\PSoC4/CyLib.c **** 
 986              		.loc 1 2964 0 is_stmt 0 discriminator 1
 987 0008 0020     		movs	r0, #0
 988              	.LVL75:
 989 000a FFF7FEFF 		bl	CyHalt
 990              	.LVL76:
 991              	.L70:
2966:Generated_Source\PSoC4/CyLib.c **** 
 992              		.loc 1 2966 0 is_stmt 1
 993 000e A308     		lsrs	r3, r4, #2
 994 0010 9B00     		lsls	r3, r3, #2
 995 0012 054A     		ldr	r2, .L71
 996 0014 9446     		mov	ip, r2
 997 0016 6344     		add	r3, r3, ip
 998 0018 1868     		ldr	r0, [r3]
 999 001a 0323     		movs	r3, #3
 1000 001c 1C40     		ands	r4, r3
 1001 001e E400     		lsls	r4, r4, #3
 1002 0020 0634     		adds	r4, r4, #6
 1003 0022 E040     		lsrs	r0, r0, r4
 1004              	.LVL77:
2968:Generated_Source\PSoC4/CyLib.c **** }
 1005              		.loc 1 2968 0
 1006 0024 1840     		ands	r0, r3
 1007              	.LVL78:
2969:Generated_Source\PSoC4/CyLib.c **** 
 1008              		.loc 1 2969 0
 1009              		@ sp needed
 1010 0026 10BD     		pop	{r4, pc}
 1011              	.L72:
 1012              		.align	2
 1013              	.L71:
 1014 0028 00E400E0 		.word	-536812544
 1015              		.cfi_endproc
 1016              	.LFE20:
 1017              		.size	CyIntGetPriority, .-CyIntGetPriority
 1018              		.section	.text.CySoftwareReset,"ax",%progbits
 1019              		.align	2
 1020              		.global	CySoftwareReset
 1021              		.code	16
 1022              		.thumb_func
 1023              		.type	CySoftwareReset, %function
 1024              	CySoftwareReset:
 1025              	.LFB27:
3074:Generated_Source\PSoC4/CyLib.c **** 
3075:Generated_Source\PSoC4/CyLib.c **** 
3076:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3077:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
3078:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3079:Generated_Source\PSoC4/CyLib.c **** *
3080:Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
3081:Generated_Source\PSoC4/CyLib.c **** *
3082:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3083:Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
3084:Generated_Source\PSoC4/CyLib.c **** {
 1026              		.loc 1 3084 0
 1027              		.cfi_startproc
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 74


 1028              		@ args = 0, pretend = 0, frame = 0
 1029              		@ frame_needed = 0, uses_anonymous_args = 0
 1030              		@ link register save eliminated.
3085:Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
3086:Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
3087:Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
3088:Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
3089:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_AIRCR_REG = (CY_SYS_AIRCR_REG & (uint32)(~CY_SYS_AIRCR_VECTKEY_MASK)) |
 1031              		.loc 1 3089 0
 1032 0000 034A     		ldr	r2, .L74
 1033 0002 1368     		ldr	r3, [r2]
 1034 0004 1B04     		lsls	r3, r3, #16
 1035 0006 1B0C     		lsrs	r3, r3, #16
3090:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1036              		.loc 1 3090 0
 1037 0008 0249     		ldr	r1, .L74+4
 1038 000a 0B43     		orrs	r3, r1
3089:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1039              		.loc 1 3089 0
 1040 000c 1360     		str	r3, [r2]
3091:Generated_Source\PSoC4/CyLib.c **** }
 1041              		.loc 1 3091 0
 1042              		@ sp needed
 1043 000e 7047     		bx	lr
 1044              	.L75:
 1045              		.align	2
 1046              	.L74:
 1047 0010 0CED00E0 		.word	-536810228
 1048 0014 0400FA05 		.word	100270084
 1049              		.cfi_endproc
 1050              	.LFE27:
 1051              		.size	CySoftwareReset, .-CySoftwareReset
 1052              		.section	.text.CyDelay,"ax",%progbits
 1053              		.align	2
 1054              		.global	CyDelay
 1055              		.code	16
 1056              		.thumb_func
 1057              		.type	CyDelay, %function
 1058              	CyDelay:
 1059              	.LFB28:
3092:Generated_Source\PSoC4/CyLib.c **** 
3093:Generated_Source\PSoC4/CyLib.c **** 
3094:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3095:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
3096:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3097:Generated_Source\PSoC4/CyLib.c **** *
3098:Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
3099:Generated_Source\PSoC4/CyLib.c **** *
3100:Generated_Source\PSoC4/CyLib.c **** *  \param milliseconds: number of milliseconds to delay.
3101:Generated_Source\PSoC4/CyLib.c **** *
3102:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3103:Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
3104:Generated_Source\PSoC4/CyLib.c **** {
 1060              		.loc 1 3104 0
 1061              		.cfi_startproc
 1062              		@ args = 0, pretend = 0, frame = 0
 1063              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 75


 1064              	.LVL79:
 1065 0000 10B5     		push	{r4, lr}
 1066              		.cfi_def_cfa_offset 8
 1067              		.cfi_offset 4, -8
 1068              		.cfi_offset 14, -4
 1069 0002 0400     		movs	r4, r0
3105:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1070              		.loc 1 3105 0
 1071 0004 06E0     		b	.L77
 1072              	.LVL80:
 1073              	.L78:
3106:Generated_Source\PSoC4/CyLib.c ****     {
3107:Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
3108:Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
3109:Generated_Source\PSoC4/CyLib.c ****          */
3110:Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
 1074              		.loc 1 3110 0
 1075 0006 084B     		ldr	r3, .L79
 1076 0008 5868     		ldr	r0, [r3, #4]
 1077 000a FFF7FEFF 		bl	CyDelayCycles
 1078              	.LVL81:
3111:Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 1079              		.loc 1 3111 0
 1080 000e 074B     		ldr	r3, .L79+4
 1081 0010 9C46     		mov	ip, r3
 1082 0012 6444     		add	r4, r4, ip
 1083              	.LVL82:
 1084              	.L77:
3105:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1085              		.loc 1 3105 0
 1086 0014 8023     		movs	r3, #128
 1087 0016 1B02     		lsls	r3, r3, #8
 1088 0018 9C42     		cmp	r4, r3
 1089 001a F4D8     		bhi	.L78
3112:Generated_Source\PSoC4/CyLib.c ****     }
3113:Generated_Source\PSoC4/CyLib.c **** 
3114:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 1090              		.loc 1 3114 0
 1091 001c 024B     		ldr	r3, .L79
 1092 001e 9868     		ldr	r0, [r3, #8]
 1093 0020 6043     		muls	r0, r4
 1094 0022 FFF7FEFF 		bl	CyDelayCycles
 1095              	.LVL83:
3115:Generated_Source\PSoC4/CyLib.c **** }
 1096              		.loc 1 3115 0
 1097              		@ sp needed
 1098              	.LVL84:
 1099 0026 10BD     		pop	{r4, pc}
 1100              	.L80:
 1101              		.align	2
 1102              	.L79:
 1103 0028 00000000 		.word	.LANCHOR0
 1104 002c 0080FFFF 		.word	-32768
 1105              		.cfi_endproc
 1106              	.LFE28:
 1107              		.size	CyDelay, .-CyDelay
 1108              		.section	.text.CySysClkImoEnableWcoLock,"ax",%progbits
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 76


 1109              		.align	2
 1110              		.global	CySysClkImoEnableWcoLock
 1111              		.code	16
 1112              		.thumb_func
 1113              		.type	CySysClkImoEnableWcoLock, %function
 1114              	CySysClkImoEnableWcoLock:
 1115              	.LFB3:
 175:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 1116              		.loc 1 175 0
 1117              		.cfi_startproc
 1118              		@ args = 0, pretend = 0, frame = 8
 1119              		@ frame_needed = 0, uses_anonymous_args = 0
 1120 0000 70B5     		push	{r4, r5, r6, lr}
 1121              		.cfi_def_cfa_offset 16
 1122              		.cfi_offset 4, -16
 1123              		.cfi_offset 5, -12
 1124              		.cfi_offset 6, -8
 1125              		.cfi_offset 14, -4
 1126 0002 82B0     		sub	sp, sp, #8
 1127              		.cfi_def_cfa_offset 24
 1128              	.LVL85:
 186:Generated_Source\PSoC4/CyLib.c ****         {
 1129              		.loc 1 186 0
 1130 0004 FFF7FEFF 		bl	CySysClkWcoEnabled
 1131              	.LVL86:
 1132 0008 0028     		cmp	r0, #0
 1133 000a 4DD0     		beq	.L81
 188:Generated_Source\PSoC4/CyLib.c **** 
 1134              		.loc 1 188 0
 1135 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1136              	.LVL87:
 1137 0010 0500     		movs	r5, r0
 1138              	.LVL88:
 211:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 1139              		.loc 1 211 0
 1140 0012 264B     		ldr	r3, .L85
 1141 0014 1A68     		ldr	r2, [r3]
 1142 0016 9200     		lsls	r2, r2, #2
 1143 0018 1C23     		movs	r3, #28
 1144 001a 1A40     		ands	r2, r3
 212:Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 1145              		.loc 1 212 0
 1146 001c 1832     		adds	r2, r2, #24
 213:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 1147              		.loc 1 213 0
 1148 001e 244B     		ldr	r3, .L85+4
 1149 0020 1B68     		ldr	r3, [r3]
 1150 0022 9B08     		lsrs	r3, r3, #2
 1151 0024 0321     		movs	r1, #3
 1152 0026 0B40     		ands	r3, r1
 211:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 1153              		.loc 1 211 0
 1154 0028 DA40     		lsrs	r2, r2, r3
 1155              	.LVL89:
 222:Generated_Source\PSoC4/CyLib.c **** 
 1156              		.loc 1 222 0
 1157 002a 0021     		movs	r1, #0
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 77


 1158 002c 214B     		ldr	r3, .L85+8
 1159 002e 1960     		str	r1, [r3]
 233:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 1160              		.loc 1 233 0
 1161 0030 214C     		ldr	r4, .L85+12
 1162 0032 2168     		ldr	r1, [r4]
 1163 0034 214B     		ldr	r3, .L85+16
 1164 0036 0B40     		ands	r3, r1
 1165              	.LVL90:
 239:Generated_Source\PSoC4/CyLib.c **** 
 1166              		.loc 1 239 0
 1167 0038 2149     		ldr	r1, .L85+20
 1168 003a 4A43     		muls	r2, r1
 1169              	.LVL91:
 1170 003c 8021     		movs	r1, #128
 1171 003e C901     		lsls	r1, r1, #7
 1172 0040 8C46     		mov	ip, r1
 1173 0042 6244     		add	r2, r2, ip
 1174 0044 D20B     		lsrs	r2, r2, #15
 1175 0046 013A     		subs	r2, r2, #1
 1176 0048 5205     		lsls	r2, r2, #21
 1177 004a 520D     		lsrs	r2, r2, #21
 1178 004c 1343     		orrs	r3, r2
 1179              	.LVL92:
 242:Generated_Source\PSoC4/CyLib.c **** 
 1180              		.loc 1 242 0
 1181 004e A022     		movs	r2, #160
 1182 0050 5203     		lsls	r2, r2, #13
 1183 0052 1343     		orrs	r3, r2
 1184              	.LVL93:
 244:Generated_Source\PSoC4/CyLib.c **** 
 1185              		.loc 1 244 0
 1186 0054 2360     		str	r3, [r4]
 246:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 1187              		.loc 1 246 0
 1188 0056 1B4B     		ldr	r3, .L85+24
 1189              	.LVL94:
 1190 0058 1B68     		ldr	r3, [r3]
 1191 005a 0193     		str	r3, [sp, #4]
 1192              	.LVL95:
 247:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 1193              		.loc 1 247 0
 1194 005c 3020     		movs	r0, #48
 1195 005e FFF7FEFF 		bl	CySysFlashSetWaitCycles
 1196              	.LVL96:
 248:Generated_Source\PSoC4/CyLib.c **** 
 1197              		.loc 1 248 0
 1198 0062 194A     		ldr	r2, .L85+28
 1199 0064 1368     		ldr	r3, [r2]
 1200 0066 8021     		movs	r1, #128
 1201 0068 C905     		lsls	r1, r1, #23
 1202 006a 0B43     		orrs	r3, r1
 1203 006c 1360     		str	r3, [r2]
 250:Generated_Source\PSoC4/CyLib.c **** 
 1204              		.loc 1 250 0
 1205 006e 2668     		ldr	r6, [r4]
 1206 0070 164B     		ldr	r3, .L85+32
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 78


 1207 0072 1E40     		ands	r6, r3
 1208              	.LVL97:
 183:Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 1209              		.loc 1 183 0
 1210 0074 0024     		movs	r4, #0
 252:Generated_Source\PSoC4/CyLib.c ****             {
 1211              		.loc 1 252 0
 1212 0076 07E0     		b	.L83
 1213              	.LVL98:
 1214              	.L84:
 254:Generated_Source\PSoC4/CyLib.c ****                 lfLimit += CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_STEP;
 1215              		.loc 1 254 0
 1216 0078 0120     		movs	r0, #1
 1217 007a FFF7FEFF 		bl	CyDelay
 1218              	.LVL99:
 255:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT
 1219              		.loc 1 255 0
 1220 007e 1034     		adds	r4, r4, #16
 1221              	.LVL100:
 256:Generated_Source\PSoC4/CyLib.c ****             }
 1222              		.loc 1 256 0
 1223 0080 A305     		lsls	r3, r4, #22
 1224 0082 3343     		orrs	r3, r6
 1225 0084 0C4A     		ldr	r2, .L85+12
 1226 0086 1360     		str	r3, [r2]
 1227              	.LVL101:
 1228              	.L83:
 252:Generated_Source\PSoC4/CyLib.c ****             {
 1229              		.loc 1 252 0
 1230 0088 EE2C     		cmp	r4, #238
 1231 008a F5D9     		bls	.L84
 259:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX <<
 1232              		.loc 1 259 0
 1233 008c 0120     		movs	r0, #1
 1234 008e FFF7FEFF 		bl	CyDelay
 1235              	.LVL102:
 260:Generated_Source\PSoC4/CyLib.c ****                                                  CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT));
 1236              		.loc 1 260 0
 1237 0092 FF23     		movs	r3, #255
 1238 0094 9B05     		lsls	r3, r3, #22
 1239 0096 1E43     		orrs	r6, r3
 1240              	.LVL103:
 1241 0098 074B     		ldr	r3, .L85+12
 1242 009a 1E60     		str	r6, [r3]
 263:Generated_Source\PSoC4/CyLib.c **** 
 1243              		.loc 1 263 0
 1244 009c 019A     		ldr	r2, [sp, #4]
 1245 009e 094B     		ldr	r3, .L85+24
 1246 00a0 1A60     		str	r2, [r3]
 265:Generated_Source\PSoC4/CyLib.c ****         }
 1247              		.loc 1 265 0
 1248 00a2 2800     		movs	r0, r5
 1249 00a4 FFF7FEFF 		bl	CyExitCriticalSection
 1250              	.LVL104:
 1251              	.L81:
 267:Generated_Source\PSoC4/CyLib.c **** 
 1252              		.loc 1 267 0
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 79


 1253 00a8 02B0     		add	sp, sp, #8
 1254              		@ sp needed
 1255 00aa 70BD     		pop	{r4, r5, r6, pc}
 1256              	.L86:
 1257              		.align	2
 1258              	.L85:
 1259 00ac 080F0340 		.word	1073942280
 1260 00b0 28000340 		.word	1073938472
 1261 00b4 0C0F0340 		.word	1073942284
 1262 00b8 08000740 		.word	1074200584
 1263 00bc 00F800C0 		.word	-1073678336
 1264 00c0 40420F00 		.word	1000000
 1265 00c4 30001040 		.word	1074790448
 1266 00c8 00000740 		.word	1074200576
 1267 00cc FFFF3FC0 		.word	-1069547521
 1268              		.cfi_endproc
 1269              	.LFE3:
 1270              		.size	CySysClkImoEnableWcoLock, .-CySysClkImoEnableWcoLock
 1271              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 1272              		.align	2
 1273              		.global	CySysClkWriteImoFreq
 1274              		.code	16
 1275              		.thumb_func
 1276              		.type	CySysClkWriteImoFreq, %function
 1277              	CySysClkWriteImoFreq:
 1278              	.LFB10:
1003:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 1279              		.loc 1 1003 0
 1280              		.cfi_startproc
 1281              		@ args = 0, pretend = 0, frame = 8
 1282              		@ frame_needed = 0, uses_anonymous_args = 0
 1283              	.LVL105:
 1284 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1285              		.cfi_def_cfa_offset 20
 1286              		.cfi_offset 4, -20
 1287              		.cfi_offset 5, -16
 1288              		.cfi_offset 6, -12
 1289              		.cfi_offset 7, -8
 1290              		.cfi_offset 14, -4
 1291 0002 83B0     		sub	sp, sp, #12
 1292              		.cfi_def_cfa_offset 32
 1293 0004 0400     		movs	r4, r0
 1294              	.LVL106:
1020:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 1295              		.loc 1 1020 0
 1296 0006 1828     		cmp	r0, #24
 1297 0008 0BD0     		beq	.L88
1020:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 1298              		.loc 1 1020 0 is_stmt 0 discriminator 1
 1299 000a 1C28     		cmp	r0, #28
 1300 000c 09D0     		beq	.L88
1020:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 1301              		.loc 1 1020 0 discriminator 2
 1302 000e 2028     		cmp	r0, #32
 1303 0010 07D0     		beq	.L88
1020:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 1304              		.loc 1 1020 0 discriminator 3
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 80


 1305 0012 2428     		cmp	r0, #36
 1306 0014 05D0     		beq	.L88
1021:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 1307              		.loc 1 1021 0 is_stmt 1
 1308 0016 2828     		cmp	r0, #40
 1309 0018 03D0     		beq	.L88
1021:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 1310              		.loc 1 1021 0 is_stmt 0 discriminator 1
 1311 001a 2C28     		cmp	r0, #44
 1312 001c 01D0     		beq	.L88
1021:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 1313              		.loc 1 1021 0 discriminator 2
 1314 001e 3028     		cmp	r0, #48
 1315 0020 49D1     		bne	.L89
 1316              	.L88:
1025:Generated_Source\PSoC4/CyLib.c **** 
 1317              		.loc 1 1025 0 is_stmt 1
 1318 0022 FFF7FEFF 		bl	CyEnterCriticalSection
 1319              	.LVL107:
 1320 0026 0190     		str	r0, [sp, #4]
 1321              	.LVL108:
1028:Generated_Source\PSoC4/CyLib.c ****                 {
 1322              		.loc 1 1028 0
 1323 0028 FFF7FEFF 		bl	CySysClkImoGetWcoLock
 1324              	.LVL109:
 1325 002c 0028     		cmp	r0, #0
 1326 002e 03D0     		beq	.L94
 1327              	.LVL110:
1031:Generated_Source\PSoC4/CyLib.c ****                 }
 1328              		.loc 1 1031 0
 1329 0030 FFF7FEFF 		bl	CySysClkImoDisableWcoLock
 1330              	.LVL111:
1030:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
 1331              		.loc 1 1030 0
 1332 0034 0126     		movs	r6, #1
 1333 0036 00E0     		b	.L90
 1334              	.LVL112:
 1335              	.L94:
1008:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 1336              		.loc 1 1008 0
 1337 0038 0026     		movs	r6, #0
 1338              	.LVL113:
 1339              	.L90:
1056:Generated_Source\PSoC4/CyLib.c **** 
 1340              		.loc 1 1056 0
 1341 003a 214A     		ldr	r2, .L95
 1342 003c 1368     		ldr	r3, [r2]
 1343 003e 0721     		movs	r1, #7
 1344 0040 8B43     		bics	r3, r1
 1345 0042 1360     		str	r3, [r2]
 1346              	.LVL114:
1074:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 1347              		.loc 1 1074 0
 1348 0044 1F4B     		ldr	r3, .L95+4
 1349 0046 E318     		adds	r3, r4, r3
 1350 0048 1B78     		ldrb	r3, [r3]
 1351 004a DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 81


 1352              	.LVL115:
1076:Generated_Source\PSoC4/CyLib.c **** 
 1353              		.loc 1 1076 0
 1354 004c 1E4A     		ldr	r2, .L95+8
 1355 004e 1360     		str	r3, [r2]
1079:Generated_Source\PSoC4/CyLib.c **** 
 1356              		.loc 1 1079 0
 1357 0050 1E4A     		ldr	r2, .L95+12
 1358 0052 1368     		ldr	r3, [r2]
 1359              	.LVL116:
 1360 0054 8B43     		bics	r3, r1
 1361 0056 1360     		str	r3, [r2]
 1362              	.LVL117:
1082:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 1363              		.loc 1 1082 0
 1364 0058 1D48     		ldr	r0, .L95+16
 1365 005a 0368     		ldr	r3, [r0]
 1366 005c 7F22     		movs	r2, #127
 1367 005e 9343     		bics	r3, r2
 1368 0060 1900     		movs	r1, r3
1083:Generated_Source\PSoC4/CyLib.c **** 
 1369              		.loc 1 1083 0
 1370 0062 1C4B     		ldr	r3, .L95+20
 1371 0064 E318     		adds	r3, r4, r3
 1372 0066 1B78     		ldrb	r3, [r3]
 1373 0068 1340     		ands	r3, r2
1082:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 1374              		.loc 1 1082 0
 1375 006a 0B43     		orrs	r3, r1
 1376 006c 0360     		str	r3, [r0]
1085:Generated_Source\PSoC4/CyLib.c **** 
 1377              		.loc 1 1085 0
 1378 006e 3220     		movs	r0, #50
 1379 0070 FFF7FEFF 		bl	CyDelayCycles
 1380              	.LVL118:
1087:Generated_Source\PSoC4/CyLib.c ****             {
 1381              		.loc 1 1087 0
 1382 0074 182C     		cmp	r4, #24
 1383 0076 16D9     		bls	.L91
1090:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 1384              		.loc 1 1090 0
 1385 0078 114F     		ldr	r7, .L95
 1386 007a 3B68     		ldr	r3, [r7]
 1387 007c 0725     		movs	r5, #7
 1388 007e AB43     		bics	r3, r5
 1389 0080 1A00     		movs	r2, r3
1091:Generated_Source\PSoC4/CyLib.c **** 
 1390              		.loc 1 1091 0
 1391 0082 2300     		movs	r3, r4
 1392 0084 1C3B     		subs	r3, r3, #28
 1393 0086 9B08     		lsrs	r3, r3, #2
 1394 0088 2B40     		ands	r3, r5
1090:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 1395              		.loc 1 1090 0
 1396 008a 1343     		orrs	r3, r2
 1397 008c 3B60     		str	r3, [r7]
1093:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 82


 1398              		.loc 1 1093 0
 1399 008e 3220     		movs	r0, #50
 1400 0090 FFF7FEFF 		bl	CyDelayCycles
 1401              	.LVL119:
1097:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 1402              		.loc 1 1097 0
 1403 0094 3A68     		ldr	r2, [r7]
 1404 0096 AA43     		bics	r2, r5
1098:Generated_Source\PSoC4/CyLib.c ****             }
 1405              		.loc 1 1098 0
 1406 0098 2300     		movs	r3, r4
 1407 009a 183B     		subs	r3, r3, #24
 1408 009c 9B08     		lsrs	r3, r3, #2
 1409 009e 2C00     		movs	r4, r5
 1410              	.LVL120:
 1411 00a0 1C40     		ands	r4, r3
1097:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 1412              		.loc 1 1097 0
 1413 00a2 1443     		orrs	r4, r2
 1414 00a4 3C60     		str	r4, [r7]
 1415              	.L91:
1102:Generated_Source\PSoC4/CyLib.c ****                 {
 1416              		.loc 1 1102 0
 1417 00a6 012E     		cmp	r6, #1
 1418 00a8 01D1     		bne	.L92
1104:Generated_Source\PSoC4/CyLib.c ****                 }
 1419              		.loc 1 1104 0
 1420 00aa FFF7FEFF 		bl	CySysClkImoEnableWcoLock
 1421              	.LVL121:
 1422              	.L92:
1116:Generated_Source\PSoC4/CyLib.c ****         }
 1423              		.loc 1 1116 0
 1424 00ae 0198     		ldr	r0, [sp, #4]
 1425 00b0 FFF7FEFF 		bl	CyExitCriticalSection
 1426              	.LVL122:
 1427 00b4 02E0     		b	.L87
 1428              	.LVL123:
 1429              	.L89:
1121:Generated_Source\PSoC4/CyLib.c ****         }
 1430              		.loc 1 1121 0 discriminator 1
 1431 00b6 0020     		movs	r0, #0
 1432              	.LVL124:
 1433 00b8 FFF7FEFF 		bl	CyHalt
 1434              	.LVL125:
 1435              	.L87:
1123:Generated_Source\PSoC4/CyLib.c **** 
 1436              		.loc 1 1123 0
 1437 00bc 03B0     		add	sp, sp, #12
 1438              		@ sp needed
 1439 00be F0BD     		pop	{r4, r5, r6, r7, pc}
 1440              	.L96:
 1441              		.align	2
 1442              	.L95:
 1443 00c0 080F0340 		.word	1073942280
 1444 00c4 CDF1FF0F 		.word	268431821
 1445 00c8 0C0F0340 		.word	1073942284
 1446 00cc 100F0340 		.word	1073942288
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 83


 1447 00d0 180F0340 		.word	1073942296
 1448 00d4 B4F1FF0F 		.word	268431796
 1449              		.cfi_endproc
 1450              	.LFE10:
 1451              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 1452              		.section	.text.CyDelayUs,"ax",%progbits
 1453              		.align	2
 1454              		.global	CyDelayUs
 1455              		.code	16
 1456              		.thumb_func
 1457              		.type	CyDelayUs, %function
 1458              	CyDelayUs:
 1459              	.LFB29:
3116:Generated_Source\PSoC4/CyLib.c **** 
3117:Generated_Source\PSoC4/CyLib.c **** 
3118:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3119:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
3120:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3121:Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
3122:Generated_Source\PSoC4/CyLib.c **** *
3123:Generated_Source\PSoC4/CyLib.c **** *  \param microseconds: number of microseconds to delay.
3124:Generated_Source\PSoC4/CyLib.c **** *
3125:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3126:Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
3127:Generated_Source\PSoC4/CyLib.c **** {
 1460              		.loc 1 3127 0
 1461              		.cfi_startproc
 1462              		@ args = 0, pretend = 0, frame = 0
 1463              		@ frame_needed = 0, uses_anonymous_args = 0
 1464              	.LVL126:
 1465 0000 10B5     		push	{r4, lr}
 1466              		.cfi_def_cfa_offset 8
 1467              		.cfi_offset 4, -8
 1468              		.cfi_offset 14, -4
3128:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1469              		.loc 1 3128 0
 1470 0002 034B     		ldr	r3, .L98
 1471 0004 1B7B     		ldrb	r3, [r3, #12]
 1472 0006 5843     		muls	r0, r3
 1473              	.LVL127:
 1474 0008 FFF7FEFF 		bl	CyDelayCycles
 1475              	.LVL128:
3129:Generated_Source\PSoC4/CyLib.c **** }
 1476              		.loc 1 3129 0
 1477              		@ sp needed
 1478 000c 10BD     		pop	{r4, pc}
 1479              	.L99:
 1480 000e C046     		.align	2
 1481              	.L98:
 1482 0010 00000000 		.word	.LANCHOR0
 1483              		.cfi_endproc
 1484              	.LFE29:
 1485              		.size	CyDelayUs, .-CyDelayUs
 1486              		.global	__aeabi_uidiv
 1487              		.section	.text.CyDelayFreq,"ax",%progbits
 1488              		.align	2
 1489              		.global	CyDelayFreq
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 84


 1490              		.code	16
 1491              		.thumb_func
 1492              		.type	CyDelayFreq, %function
 1493              	CyDelayFreq:
 1494              	.LFB30:
3130:Generated_Source\PSoC4/CyLib.c **** 
3131:Generated_Source\PSoC4/CyLib.c **** 
3132:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3133:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
3134:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3135:Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
3136:Generated_Source\PSoC4/CyLib.c **** *
3137:Generated_Source\PSoC4/CyLib.c **** *  \param freq: Frequency of bus clock in Hertz.
3138:Generated_Source\PSoC4/CyLib.c **** *
3139:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3140:Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
3141:Generated_Source\PSoC4/CyLib.c **** {
 1495              		.loc 1 3141 0
 1496              		.cfi_startproc
 1497              		@ args = 0, pretend = 0, frame = 0
 1498              		@ frame_needed = 0, uses_anonymous_args = 0
 1499              	.LVL129:
 1500 0000 70B5     		push	{r4, r5, r6, lr}
 1501              		.cfi_def_cfa_offset 16
 1502              		.cfi_offset 4, -16
 1503              		.cfi_offset 5, -12
 1504              		.cfi_offset 6, -8
 1505              		.cfi_offset 14, -4
3142:Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 1506              		.loc 1 3142 0
 1507 0002 0028     		cmp	r0, #0
 1508 0004 02D0     		beq	.L101
3143:Generated_Source\PSoC4/CyLib.c ****     {
3144:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
 1509              		.loc 1 3144 0
 1510 0006 0C4B     		ldr	r3, .L103
 1511 0008 1861     		str	r0, [r3, #16]
 1512 000a 02E0     		b	.L102
 1513              	.L101:
3145:Generated_Source\PSoC4/CyLib.c ****     }
3146:Generated_Source\PSoC4/CyLib.c ****     else
3147:Generated_Source\PSoC4/CyLib.c ****     {
3148:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 1514              		.loc 1 3148 0
 1515 000c 0B4A     		ldr	r2, .L103+4
 1516 000e 0A4B     		ldr	r3, .L103
 1517 0010 1A61     		str	r2, [r3, #16]
 1518              	.L102:
3149:Generated_Source\PSoC4/CyLib.c ****     }
3150:Generated_Source\PSoC4/CyLib.c **** 
3151:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 1519              		.loc 1 3151 0
 1520 0012 094C     		ldr	r4, .L103
 1521 0014 2569     		ldr	r5, [r4, #16]
 1522 0016 0A4B     		ldr	r3, .L103+8
 1523 0018 E818     		adds	r0, r5, r3
 1524              	.LVL130:
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 85


 1525 001a 0A49     		ldr	r1, .L103+12
 1526 001c FFF7FEFF 		bl	__aeabi_uidiv
 1527              	.LVL131:
 1528 0020 2073     		strb	r0, [r4, #12]
3152:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1529              		.loc 1 3152 0
 1530 0022 094B     		ldr	r3, .L103+16
 1531 0024 E818     		adds	r0, r5, r3
 1532 0026 FA21     		movs	r1, #250
 1533 0028 8900     		lsls	r1, r1, #2
 1534 002a FFF7FEFF 		bl	__aeabi_uidiv
 1535              	.LVL132:
 1536 002e A060     		str	r0, [r4, #8]
3153:Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 1537              		.loc 1 3153 0
 1538 0030 C003     		lsls	r0, r0, #15
 1539 0032 6060     		str	r0, [r4, #4]
3154:Generated_Source\PSoC4/CyLib.c **** }
 1540              		.loc 1 3154 0
 1541              		@ sp needed
 1542 0034 70BD     		pop	{r4, r5, r6, pc}
 1543              	.L104:
 1544 0036 C046     		.align	2
 1545              	.L103:
 1546 0038 00000000 		.word	.LANCHOR0
 1547 003c 00366E01 		.word	24000000
 1548 0040 3F420F00 		.word	999999
 1549 0044 40420F00 		.word	1000000
 1550 0048 E7030000 		.word	999
 1551              		.cfi_endproc
 1552              	.LFE30:
 1553              		.size	CyDelayFreq, .-CyDelayFreq
 1554              		.section	.text.CySysTickStop,"ax",%progbits
 1555              		.align	2
 1556              		.global	CySysTickStop
 1557              		.code	16
 1558              		.thumb_func
 1559              		.type	CySysTickStop, %function
 1560              	CySysTickStop:
 1561              	.LFB34:
3155:Generated_Source\PSoC4/CyLib.c **** 
3156:Generated_Source\PSoC4/CyLib.c **** 
3157:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3158:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTick_Start
3159:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3160:Generated_Source\PSoC4/CyLib.c **** *
3161:Generated_Source\PSoC4/CyLib.c **** *  Starts the system timer (SysTick): configures SysTick to generate interrupt
3162:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms and enables the interrupt.
3163:Generated_Source\PSoC4/CyLib.c **** *
3164:Generated_Source\PSoC4/CyLib.c **** *  There are components (LIN, CapSense Gesture) that relies on the default
3165:Generated_Source\PSoC4/CyLib.c **** *  interval (1 ms). And that changing the interval will negatively impact
3166:Generated_Source\PSoC4/CyLib.c **** *  their functionality.
3167:Generated_Source\PSoC4/CyLib.c **** *
3168:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3169:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
3170:Generated_Source\PSoC4/CyLib.c **** *
3171:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 86


3172:Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
3173:Generated_Source\PSoC4/CyLib.c **** {
3174:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
3175:Generated_Source\PSoC4/CyLib.c ****     {
3176:Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
3177:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
3178:Generated_Source\PSoC4/CyLib.c ****     }
3179:Generated_Source\PSoC4/CyLib.c **** 
3180:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
3181:Generated_Source\PSoC4/CyLib.c **** }
3182:Generated_Source\PSoC4/CyLib.c **** 
3183:Generated_Source\PSoC4/CyLib.c **** 
3184:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3185:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
3186:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3187:Generated_Source\PSoC4/CyLib.c **** *
3188:Generated_Source\PSoC4/CyLib.c **** *  Initializes the callback addresses with pointers to NULL, associates the
3189:Generated_Source\PSoC4/CyLib.c **** *  SysTick system vector with the function that is responsible for calling
3190:Generated_Source\PSoC4/CyLib.c **** *  registered callback functions, configures SysTick timer to generate interrupt
3191:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms.
3192:Generated_Source\PSoC4/CyLib.c **** *
3193:Generated_Source\PSoC4/CyLib.c **** *  The 1 ms interrupt interval is configured based on the frequency determined
3194:Generated_Source\PSoC4/CyLib.c **** *  by PSoC Creator at build time. If System clock frequency is changed in
3195:Generated_Source\PSoC4/CyLib.c **** *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
3196:Generated_Source\PSoC4/CyLib.c **** *
3197:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3198:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
3199:Generated_Source\PSoC4/CyLib.c **** *
3200:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3201:Generated_Source\PSoC4/CyLib.c **** void CySysTickInit(void)
3202:Generated_Source\PSoC4/CyLib.c **** {
3203:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
3204:Generated_Source\PSoC4/CyLib.c **** 
3205:Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
3206:Generated_Source\PSoC4/CyLib.c ****     {
3207:Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
3208:Generated_Source\PSoC4/CyLib.c ****     }
3209:Generated_Source\PSoC4/CyLib.c **** 
3210:Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
3211:Generated_Source\PSoC4/CyLib.c **** 
3212:Generated_Source\PSoC4/CyLib.c ****     #if(CY_SYSTICK_LFCLK_SOURCE)
3213:Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
3214:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
3215:Generated_Source\PSoC4/CyLib.c **** 
3216:Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
3217:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
3218:Generated_Source\PSoC4/CyLib.c **** }
3219:Generated_Source\PSoC4/CyLib.c **** 
3220:Generated_Source\PSoC4/CyLib.c **** 
3221:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3222:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
3223:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3224:Generated_Source\PSoC4/CyLib.c **** *
3225:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
3226:Generated_Source\PSoC4/CyLib.c **** *
3227:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3228:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 87


3229:Generated_Source\PSoC4/CyLib.c **** *
3230:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3231:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
3232:Generated_Source\PSoC4/CyLib.c **** {
3233:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
3234:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
3235:Generated_Source\PSoC4/CyLib.c **** }
3236:Generated_Source\PSoC4/CyLib.c **** 
3237:Generated_Source\PSoC4/CyLib.c **** 
3238:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3239:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
3240:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3241:Generated_Source\PSoC4/CyLib.c **** *
3242:Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
3243:Generated_Source\PSoC4/CyLib.c **** *
3244:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3245:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
3246:Generated_Source\PSoC4/CyLib.c **** *
3247:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3248:Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
3249:Generated_Source\PSoC4/CyLib.c **** {
 1562              		.loc 1 3249 0
 1563              		.cfi_startproc
 1564              		@ args = 0, pretend = 0, frame = 0
 1565              		@ frame_needed = 0, uses_anonymous_args = 0
 1566              		@ link register save eliminated.
3250:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 1567              		.loc 1 3250 0
 1568 0000 024A     		ldr	r2, .L106
 1569 0002 1368     		ldr	r3, [r2]
 1570 0004 0121     		movs	r1, #1
 1571 0006 8B43     		bics	r3, r1
 1572 0008 1360     		str	r3, [r2]
3251:Generated_Source\PSoC4/CyLib.c **** }
 1573              		.loc 1 3251 0
 1574              		@ sp needed
 1575 000a 7047     		bx	lr
 1576              	.L107:
 1577              		.align	2
 1578              	.L106:
 1579 000c 10E000E0 		.word	-536813552
 1580              		.cfi_endproc
 1581              	.LFE34:
 1582              		.size	CySysTickStop, .-CySysTickStop
 1583              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 1584              		.align	2
 1585              		.global	CySysTickEnableInterrupt
 1586              		.code	16
 1587              		.thumb_func
 1588              		.type	CySysTickEnableInterrupt, %function
 1589              	CySysTickEnableInterrupt:
 1590              	.LFB35:
3252:Generated_Source\PSoC4/CyLib.c **** 
3253:Generated_Source\PSoC4/CyLib.c **** 
3254:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3255:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
3256:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 88


3257:Generated_Source\PSoC4/CyLib.c **** *
3258:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
3259:Generated_Source\PSoC4/CyLib.c **** *
3260:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3261:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
3262:Generated_Source\PSoC4/CyLib.c **** *
3263:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3264:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
3265:Generated_Source\PSoC4/CyLib.c **** {
 1591              		.loc 1 3265 0
 1592              		.cfi_startproc
 1593              		@ args = 0, pretend = 0, frame = 0
 1594              		@ frame_needed = 0, uses_anonymous_args = 0
 1595              		@ link register save eliminated.
3266:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 1596              		.loc 1 3266 0
 1597 0000 024A     		ldr	r2, .L109
 1598 0002 1168     		ldr	r1, [r2]
 1599 0004 0223     		movs	r3, #2
 1600 0006 0B43     		orrs	r3, r1
 1601 0008 1360     		str	r3, [r2]
3267:Generated_Source\PSoC4/CyLib.c **** }
 1602              		.loc 1 3267 0
 1603              		@ sp needed
 1604 000a 7047     		bx	lr
 1605              	.L110:
 1606              		.align	2
 1607              	.L109:
 1608 000c 10E000E0 		.word	-536813552
 1609              		.cfi_endproc
 1610              	.LFE35:
 1611              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 1612              		.section	.text.CySysTickEnable,"ax",%progbits
 1613              		.align	2
 1614              		.global	CySysTickEnable
 1615              		.code	16
 1616              		.thumb_func
 1617              		.type	CySysTickEnable, %function
 1618              	CySysTickEnable:
 1619              	.LFB33:
3232:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 1620              		.loc 1 3232 0
 1621              		.cfi_startproc
 1622              		@ args = 0, pretend = 0, frame = 0
 1623              		@ frame_needed = 0, uses_anonymous_args = 0
 1624 0000 10B5     		push	{r4, lr}
 1625              		.cfi_def_cfa_offset 8
 1626              		.cfi_offset 4, -8
 1627              		.cfi_offset 14, -4
3233:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 1628              		.loc 1 3233 0
 1629 0002 FFF7FEFF 		bl	CySysTickEnableInterrupt
 1630              	.LVL133:
3234:Generated_Source\PSoC4/CyLib.c **** }
 1631              		.loc 1 3234 0
 1632 0006 034A     		ldr	r2, .L112
 1633 0008 1168     		ldr	r1, [r2]
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 89


 1634 000a 0123     		movs	r3, #1
 1635 000c 0B43     		orrs	r3, r1
 1636 000e 1360     		str	r3, [r2]
3235:Generated_Source\PSoC4/CyLib.c **** 
 1637              		.loc 1 3235 0
 1638              		@ sp needed
 1639 0010 10BD     		pop	{r4, pc}
 1640              	.L113:
 1641 0012 C046     		.align	2
 1642              	.L112:
 1643 0014 10E000E0 		.word	-536813552
 1644              		.cfi_endproc
 1645              	.LFE33:
 1646              		.size	CySysTickEnable, .-CySysTickEnable
 1647              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 1648              		.align	2
 1649              		.global	CySysTickDisableInterrupt
 1650              		.code	16
 1651              		.thumb_func
 1652              		.type	CySysTickDisableInterrupt, %function
 1653              	CySysTickDisableInterrupt:
 1654              	.LFB36:
3268:Generated_Source\PSoC4/CyLib.c **** 
3269:Generated_Source\PSoC4/CyLib.c **** 
3270:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3271:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
3272:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3273:Generated_Source\PSoC4/CyLib.c **** *
3274:Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
3275:Generated_Source\PSoC4/CyLib.c **** *
3276:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3277:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
3278:Generated_Source\PSoC4/CyLib.c **** *
3279:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3280:Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
3281:Generated_Source\PSoC4/CyLib.c **** {
 1655              		.loc 1 3281 0
 1656              		.cfi_startproc
 1657              		@ args = 0, pretend = 0, frame = 0
 1658              		@ frame_needed = 0, uses_anonymous_args = 0
 1659              		@ link register save eliminated.
3282:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 1660              		.loc 1 3282 0
 1661 0000 024A     		ldr	r2, .L115
 1662 0002 1368     		ldr	r3, [r2]
 1663 0004 0221     		movs	r1, #2
 1664 0006 8B43     		bics	r3, r1
 1665 0008 1360     		str	r3, [r2]
3283:Generated_Source\PSoC4/CyLib.c **** }
 1666              		.loc 1 3283 0
 1667              		@ sp needed
 1668 000a 7047     		bx	lr
 1669              	.L116:
 1670              		.align	2
 1671              	.L115:
 1672 000c 10E000E0 		.word	-536813552
 1673              		.cfi_endproc
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 90


 1674              	.LFE36:
 1675              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 1676              		.section	.text.CySysTickSetReload,"ax",%progbits
 1677              		.align	2
 1678              		.global	CySysTickSetReload
 1679              		.code	16
 1680              		.thumb_func
 1681              		.type	CySysTickSetReload, %function
 1682              	CySysTickSetReload:
 1683              	.LFB37:
3284:Generated_Source\PSoC4/CyLib.c **** 
3285:Generated_Source\PSoC4/CyLib.c **** 
3286:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3287:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
3288:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3289:Generated_Source\PSoC4/CyLib.c **** *
3290:Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
3291:Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
3292:Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
3293:Generated_Source\PSoC4/CyLib.c **** *
3294:Generated_Source\PSoC4/CyLib.c **** *  \param value: Valid range [0x0-0x00FFFFFF]. Counter reset value
3295:Generated_Source\PSoC4/CyLib.c **** *
3296:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3297:Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
3298:Generated_Source\PSoC4/CyLib.c **** {
 1684              		.loc 1 3298 0
 1685              		.cfi_startproc
 1686              		@ args = 0, pretend = 0, frame = 0
 1687              		@ frame_needed = 0, uses_anonymous_args = 0
 1688              		@ link register save eliminated.
 1689              	.LVL134:
3299:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 1690              		.loc 1 3299 0
 1691 0000 0002     		lsls	r0, r0, #8
 1692              	.LVL135:
 1693 0002 000A     		lsrs	r0, r0, #8
 1694 0004 014B     		ldr	r3, .L118
 1695 0006 1860     		str	r0, [r3]
3300:Generated_Source\PSoC4/CyLib.c **** }
 1696              		.loc 1 3300 0
 1697              		@ sp needed
 1698 0008 7047     		bx	lr
 1699              	.L119:
 1700 000a C046     		.align	2
 1701              	.L118:
 1702 000c 14E000E0 		.word	-536813548
 1703              		.cfi_endproc
 1704              	.LFE37:
 1705              		.size	CySysTickSetReload, .-CySysTickSetReload
 1706              		.section	.text.CySysTickGetReload,"ax",%progbits
 1707              		.align	2
 1708              		.global	CySysTickGetReload
 1709              		.code	16
 1710              		.thumb_func
 1711              		.type	CySysTickGetReload, %function
 1712              	CySysTickGetReload:
 1713              	.LFB38:
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 91


3301:Generated_Source\PSoC4/CyLib.c **** 
3302:Generated_Source\PSoC4/CyLib.c **** 
3303:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3304:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
3305:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3306:Generated_Source\PSoC4/CyLib.c **** *
3307:Generated_Source\PSoC4/CyLib.c **** *  Gets value the counter is set to on startup and after it reaches zero.
3308:Generated_Source\PSoC4/CyLib.c **** *
3309:Generated_Source\PSoC4/CyLib.c **** * \return
3310:Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
3311:Generated_Source\PSoC4/CyLib.c **** *
3312:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3313:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
3314:Generated_Source\PSoC4/CyLib.c **** {
 1714              		.loc 1 3314 0
 1715              		.cfi_startproc
 1716              		@ args = 0, pretend = 0, frame = 0
 1717              		@ frame_needed = 0, uses_anonymous_args = 0
 1718              		@ link register save eliminated.
3315:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 1719              		.loc 1 3315 0
 1720 0000 024B     		ldr	r3, .L121
 1721 0002 1868     		ldr	r0, [r3]
 1722 0004 0002     		lsls	r0, r0, #8
 1723 0006 000A     		lsrs	r0, r0, #8
3316:Generated_Source\PSoC4/CyLib.c **** }
 1724              		.loc 1 3316 0
 1725              		@ sp needed
 1726 0008 7047     		bx	lr
 1727              	.L122:
 1728 000a C046     		.align	2
 1729              	.L121:
 1730 000c 14E000E0 		.word	-536813548
 1731              		.cfi_endproc
 1732              	.LFE38:
 1733              		.size	CySysTickGetReload, .-CySysTickGetReload
 1734              		.section	.text.CySysTickGetValue,"ax",%progbits
 1735              		.align	2
 1736              		.global	CySysTickGetValue
 1737              		.code	16
 1738              		.thumb_func
 1739              		.type	CySysTickGetValue, %function
 1740              	CySysTickGetValue:
 1741              	.LFB39:
3317:Generated_Source\PSoC4/CyLib.c **** 
3318:Generated_Source\PSoC4/CyLib.c **** 
3319:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3320:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
3321:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3322:Generated_Source\PSoC4/CyLib.c **** *
3323:Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
3324:Generated_Source\PSoC4/CyLib.c **** *
3325:Generated_Source\PSoC4/CyLib.c **** * \return
3326:Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
3327:Generated_Source\PSoC4/CyLib.c **** *
3328:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3329:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 92


3330:Generated_Source\PSoC4/CyLib.c **** {
 1742              		.loc 1 3330 0
 1743              		.cfi_startproc
 1744              		@ args = 0, pretend = 0, frame = 0
 1745              		@ frame_needed = 0, uses_anonymous_args = 0
 1746              		@ link register save eliminated.
3331:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 1747              		.loc 1 3331 0
 1748 0000 024B     		ldr	r3, .L124
 1749 0002 1868     		ldr	r0, [r3]
 1750 0004 0002     		lsls	r0, r0, #8
 1751 0006 000A     		lsrs	r0, r0, #8
3332:Generated_Source\PSoC4/CyLib.c **** }
 1752              		.loc 1 3332 0
 1753              		@ sp needed
 1754 0008 7047     		bx	lr
 1755              	.L125:
 1756 000a C046     		.align	2
 1757              	.L124:
 1758 000c 18E000E0 		.word	-536813544
 1759              		.cfi_endproc
 1760              	.LFE39:
 1761              		.size	CySysTickGetValue, .-CySysTickGetValue
 1762              		.section	.text.CySysTickSetClockSource,"ax",%progbits
 1763              		.align	2
 1764              		.global	CySysTickSetClockSource
 1765              		.code	16
 1766              		.thumb_func
 1767              		.type	CySysTickSetClockSource, %function
 1768              	CySysTickSetClockSource:
 1769              	.LFB40:
3333:Generated_Source\PSoC4/CyLib.c **** 
3334:Generated_Source\PSoC4/CyLib.c **** 
3335:Generated_Source\PSoC4/CyLib.c **** #if(CY_SYSTICK_LFCLK_SOURCE)
3336:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3337:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
3338:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3339:Generated_Source\PSoC4/CyLib.c ****     *
3340:Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
3341:Generated_Source\PSoC4/CyLib.c ****     *
3342:Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
3343:Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
3344:Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
3345:Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly longer and vice versa.
3346:Generated_Source\PSoC4/CyLib.c ****     *
3347:Generated_Source\PSoC4/CyLib.c ****     *  The changing of SysTick clock source and\or its frequency will change
3348:Generated_Source\PSoC4/CyLib.c ****     *  the interrupt interval and that CySysTickSetReload() should be
3349:Generated_Source\PSoC4/CyLib.c ****     *  called to compensate this change.
3350:Generated_Source\PSoC4/CyLib.c ****     *
3351:Generated_Source\PSoC4/CyLib.c ****     *  The function is not available on PSoC 4000, PSoC 4100, and PSoC 42000
3352:Generated_Source\PSoC4/CyLib.c ****     *  devices. The SysTick timer clocked by the System clock on these devices.
3353:Generated_Source\PSoC4/CyLib.c ****     *
3354:Generated_Source\PSoC4/CyLib.c ****     *  \param clockSource Clock source for SysTick counter
3355:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
3356:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by the CPU clock.
3357:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
3358:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 93


3359:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
3360:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3361:Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
3362:Generated_Source\PSoC4/CyLib.c ****     {
 1770              		.loc 1 3362 0
 1771              		.cfi_startproc
 1772              		@ args = 0, pretend = 0, frame = 0
 1773              		@ frame_needed = 0, uses_anonymous_args = 0
 1774              		@ link register save eliminated.
 1775              	.LVL136:
3363:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
 1776              		.loc 1 3363 0
 1777 0000 0128     		cmp	r0, #1
 1778 0002 05D1     		bne	.L127
3364:Generated_Source\PSoC4/CyLib.c ****         {
3365:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
 1779              		.loc 1 3365 0
 1780 0004 054A     		ldr	r2, .L129
 1781 0006 1168     		ldr	r1, [r2]
 1782 0008 0423     		movs	r3, #4
 1783 000a 0B43     		orrs	r3, r1
 1784 000c 1360     		str	r3, [r2]
 1785 000e 04E0     		b	.L126
 1786              	.L127:
3366:Generated_Source\PSoC4/CyLib.c ****         }
3367:Generated_Source\PSoC4/CyLib.c ****         else
3368:Generated_Source\PSoC4/CyLib.c ****         {
3369:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
 1787              		.loc 1 3369 0
 1788 0010 024A     		ldr	r2, .L129
 1789 0012 1368     		ldr	r3, [r2]
 1790 0014 0421     		movs	r1, #4
 1791 0016 8B43     		bics	r3, r1
 1792 0018 1360     		str	r3, [r2]
 1793              	.L126:
3370:Generated_Source\PSoC4/CyLib.c ****         }
3371:Generated_Source\PSoC4/CyLib.c ****     }
 1794              		.loc 1 3371 0
 1795              		@ sp needed
 1796 001a 7047     		bx	lr
 1797              	.L130:
 1798              		.align	2
 1799              	.L129:
 1800 001c 10E000E0 		.word	-536813552
 1801              		.cfi_endproc
 1802              	.LFE40:
 1803              		.size	CySysTickSetClockSource, .-CySysTickSetClockSource
 1804              		.section	.text.CySysTickGetClockSource,"ax",%progbits
 1805              		.align	2
 1806              		.global	CySysTickGetClockSource
 1807              		.code	16
 1808              		.thumb_func
 1809              		.type	CySysTickGetClockSource, %function
 1810              	CySysTickGetClockSource:
 1811              	.LFB41:
3372:Generated_Source\PSoC4/CyLib.c **** 
3373:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 94


3374:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3375:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickGetClockSource
3376:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3377:Generated_Source\PSoC4/CyLib.c ****     *
3378:Generated_Source\PSoC4/CyLib.c ****     *  Returns the current clock source of the SysTick counter.
3379:Generated_Source\PSoC4/CyLib.c ****     *
3380:Generated_Source\PSoC4/CyLib.c ****     *  \return
3381:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
3382:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
3383:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
3384:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
3385:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3386:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysTickGetClockSource(void)
3387:Generated_Source\PSoC4/CyLib.c ****     {
 1812              		.loc 1 3387 0
 1813              		.cfi_startproc
 1814              		@ args = 0, pretend = 0, frame = 0
 1815              		@ frame_needed = 0, uses_anonymous_args = 0
 1816              		@ link register save eliminated.
3388:Generated_Source\PSoC4/CyLib.c ****         return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_CLK_SOURCE_SHIFT) & CY_SYS_SYST_CSR_CLK_SRC
 1817              		.loc 1 3388 0
 1818 0000 024B     		ldr	r3, .L132
 1819 0002 1868     		ldr	r0, [r3]
 1820 0004 8008     		lsrs	r0, r0, #2
 1821 0006 0123     		movs	r3, #1
 1822 0008 1840     		ands	r0, r3
3389:Generated_Source\PSoC4/CyLib.c ****     }
 1823              		.loc 1 3389 0
 1824              		@ sp needed
 1825 000a 7047     		bx	lr
 1826              	.L133:
 1827              		.align	2
 1828              	.L132:
 1829 000c 10E000E0 		.word	-536813552
 1830              		.cfi_endproc
 1831              	.LFE41:
 1832              		.size	CySysTickGetClockSource, .-CySysTickGetClockSource
 1833              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 1834              		.align	2
 1835              		.global	CySysTickGetCountFlag
 1836              		.code	16
 1837              		.thumb_func
 1838              		.type	CySysTickGetCountFlag, %function
 1839              	CySysTickGetCountFlag:
 1840              	.LFB42:
3390:Generated_Source\PSoC4/CyLib.c **** 
3391:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
3392:Generated_Source\PSoC4/CyLib.c **** 
3393:Generated_Source\PSoC4/CyLib.c **** 
3394:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3395:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
3396:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3397:Generated_Source\PSoC4/CyLib.c **** *
3398:Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
3399:Generated_Source\PSoC4/CyLib.c **** *  The flag cleared on read.
3400:Generated_Source\PSoC4/CyLib.c **** *
3401:Generated_Source\PSoC4/CyLib.c **** * \return
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 95


3402:Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
3403:Generated_Source\PSoC4/CyLib.c **** *
3404:Generated_Source\PSoC4/CyLib.c **** *
3405:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3406:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
3407:Generated_Source\PSoC4/CyLib.c **** *
3408:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3409:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
3410:Generated_Source\PSoC4/CyLib.c **** {
 1841              		.loc 1 3410 0
 1842              		.cfi_startproc
 1843              		@ args = 0, pretend = 0, frame = 0
 1844              		@ frame_needed = 0, uses_anonymous_args = 0
 1845              		@ link register save eliminated.
3411:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 1846              		.loc 1 3411 0
 1847 0000 024B     		ldr	r3, .L135
 1848 0002 1868     		ldr	r0, [r3]
 1849 0004 000C     		lsrs	r0, r0, #16
 1850 0006 0123     		movs	r3, #1
 1851 0008 1840     		ands	r0, r3
3412:Generated_Source\PSoC4/CyLib.c **** }
 1852              		.loc 1 3412 0
 1853              		@ sp needed
 1854 000a 7047     		bx	lr
 1855              	.L136:
 1856              		.align	2
 1857              	.L135:
 1858 000c 10E000E0 		.word	-536813552
 1859              		.cfi_endproc
 1860              	.LFE42:
 1861              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 1862              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 1863              		.align	2
 1864              		.code	16
 1865              		.thumb_func
 1866              		.type	CySysTickServiceCallbacks, %function
 1867              	CySysTickServiceCallbacks:
 1868              	.LFB46:
3413:Generated_Source\PSoC4/CyLib.c **** 
3414:Generated_Source\PSoC4/CyLib.c **** 
3415:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3416:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
3417:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3418:Generated_Source\PSoC4/CyLib.c **** *
3419:Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
3420:Generated_Source\PSoC4/CyLib.c **** *
3421:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3422:Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
3423:Generated_Source\PSoC4/CyLib.c **** {
3424:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
3425:Generated_Source\PSoC4/CyLib.c **** }
3426:Generated_Source\PSoC4/CyLib.c **** 
3427:Generated_Source\PSoC4/CyLib.c **** 
3428:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3429:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
3430:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 96


3431:Generated_Source\PSoC4/CyLib.c **** *
3432:Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
3433:Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
3434:Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
3435:Generated_Source\PSoC4/CyLib.c **** *
3436:Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
3437:Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
3438:Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
3439:Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
3440:Generated_Source\PSoC4/CyLib.c **** *  functions.
3441:Generated_Source\PSoC4/CyLib.c **** *
3442:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the callback function addresses to be set. The valid
3443:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
3444:Generated_Source\PSoC4/CyLib.c **** *
3445:Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
3446:Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
3447:Generated_Source\PSoC4/CyLib.c **** *                                specified number.
3448:Generated_Source\PSoC4/CyLib.c **** *
3449:Generated_Source\PSoC4/CyLib.c **** * \return
3450:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
3451:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
3452:Generated_Source\PSoC4/CyLib.c **** *
3453:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3454:Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
3455:Generated_Source\PSoC4/CyLib.c **** *
3456:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3457:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
3458:Generated_Source\PSoC4/CyLib.c **** {
3459:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
3460:Generated_Source\PSoC4/CyLib.c **** 
3461:Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
3462:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
3463:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
3464:Generated_Source\PSoC4/CyLib.c **** }
3465:Generated_Source\PSoC4/CyLib.c **** 
3466:Generated_Source\PSoC4/CyLib.c **** 
3467:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3468:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
3469:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3470:Generated_Source\PSoC4/CyLib.c **** *
3471:Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
3472:Generated_Source\PSoC4/CyLib.c **** *
3473:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of callback function address to get. The valid
3474:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
3475:Generated_Source\PSoC4/CyLib.c **** *
3476:Generated_Source\PSoC4/CyLib.c **** * \return
3477:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
3478:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
3479:Generated_Source\PSoC4/CyLib.c **** *
3480:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3481:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
3482:Generated_Source\PSoC4/CyLib.c **** {
3483:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
3484:Generated_Source\PSoC4/CyLib.c **** }
3485:Generated_Source\PSoC4/CyLib.c **** 
3486:Generated_Source\PSoC4/CyLib.c **** 
3487:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 97


3488:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
3489:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3490:Generated_Source\PSoC4/CyLib.c **** *
3491:Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
3492:Generated_Source\PSoC4/CyLib.c **** *
3493:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3494:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
3495:Generated_Source\PSoC4/CyLib.c **** {
 1869              		.loc 1 3495 0
 1870              		.cfi_startproc
 1871              		@ args = 0, pretend = 0, frame = 0
 1872              		@ frame_needed = 0, uses_anonymous_args = 0
 1873 0000 10B5     		push	{r4, lr}
 1874              		.cfi_def_cfa_offset 8
 1875              		.cfi_offset 4, -8
 1876              		.cfi_offset 14, -4
3496:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
3497:Generated_Source\PSoC4/CyLib.c **** 
3498:Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
3499:Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
 1877              		.loc 1 3499 0
 1878 0002 FFF7FEFF 		bl	CySysTickGetCountFlag
 1879              	.LVL137:
 1880 0006 0128     		cmp	r0, #1
 1881 0008 0BD1     		bne	.L137
 1882 000a 07E0     		b	.L142
 1883              	.LVL138:
 1884              	.L141:
3500:Generated_Source\PSoC4/CyLib.c ****     {
3501:Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
3502:Generated_Source\PSoC4/CyLib.c ****         {
3503:Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 1885              		.loc 1 3503 0
 1886 000c A300     		lsls	r3, r4, #2
 1887 000e 054A     		ldr	r2, .L143
 1888 0010 9B58     		ldr	r3, [r3, r2]
 1889 0012 002B     		cmp	r3, #0
 1890 0014 00D0     		beq	.L140
3504:Generated_Source\PSoC4/CyLib.c ****             {
3505:Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 1891              		.loc 1 3505 0
 1892 0016 9847     		blx	r3
 1893              	.LVL139:
 1894              	.L140:
3501:Generated_Source\PSoC4/CyLib.c ****         {
 1895              		.loc 1 3501 0 discriminator 2
 1896 0018 0134     		adds	r4, r4, #1
 1897              	.LVL140:
 1898 001a 00E0     		b	.L138
 1899              	.LVL141:
 1900              	.L142:
 1901 001c 0024     		movs	r4, #0
 1902              	.L138:
 1903              	.LVL142:
3501:Generated_Source\PSoC4/CyLib.c ****         {
 1904              		.loc 1 3501 0 is_stmt 0 discriminator 1
 1905 001e 042C     		cmp	r4, #4
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 98


 1906 0020 F4D9     		bls	.L141
 1907              	.LVL143:
 1908              	.L137:
3506:Generated_Source\PSoC4/CyLib.c ****             }
3507:Generated_Source\PSoC4/CyLib.c ****         }
3508:Generated_Source\PSoC4/CyLib.c ****     }
3509:Generated_Source\PSoC4/CyLib.c **** }
 1909              		.loc 1 3509 0 is_stmt 1
 1910              		@ sp needed
 1911 0022 10BD     		pop	{r4, pc}
 1912              	.L144:
 1913              		.align	2
 1914              	.L143:
 1915 0024 00000000 		.word	.LANCHOR1
 1916              		.cfi_endproc
 1917              	.LFE46:
 1918              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
 1919              		.section	.text.CySysTickClear,"ax",%progbits
 1920              		.align	2
 1921              		.global	CySysTickClear
 1922              		.code	16
 1923              		.thumb_func
 1924              		.type	CySysTickClear, %function
 1925              	CySysTickClear:
 1926              	.LFB43:
3423:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 1927              		.loc 1 3423 0
 1928              		.cfi_startproc
 1929              		@ args = 0, pretend = 0, frame = 0
 1930              		@ frame_needed = 0, uses_anonymous_args = 0
 1931              		@ link register save eliminated.
3424:Generated_Source\PSoC4/CyLib.c **** }
 1932              		.loc 1 3424 0
 1933 0000 0022     		movs	r2, #0
 1934 0002 014B     		ldr	r3, .L146
 1935 0004 1A60     		str	r2, [r3]
3425:Generated_Source\PSoC4/CyLib.c **** 
 1936              		.loc 1 3425 0
 1937              		@ sp needed
 1938 0006 7047     		bx	lr
 1939              	.L147:
 1940              		.align	2
 1941              	.L146:
 1942 0008 18E000E0 		.word	-536813544
 1943              		.cfi_endproc
 1944              	.LFE43:
 1945              		.size	CySysTickClear, .-CySysTickClear
 1946              		.section	.text.CySysTickInit,"ax",%progbits
 1947              		.align	2
 1948              		.global	CySysTickInit
 1949              		.code	16
 1950              		.thumb_func
 1951              		.type	CySysTickInit, %function
 1952              	CySysTickInit:
 1953              	.LFB32:
3202:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
 1954              		.loc 1 3202 0
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 99


 1955              		.cfi_startproc
 1956              		@ args = 0, pretend = 0, frame = 0
 1957              		@ frame_needed = 0, uses_anonymous_args = 0
 1958 0000 10B5     		push	{r4, lr}
 1959              		.cfi_def_cfa_offset 8
 1960              		.cfi_offset 4, -8
 1961              		.cfi_offset 14, -4
 1962              	.LVL144:
3205:Generated_Source\PSoC4/CyLib.c ****     {
 1963              		.loc 1 3205 0
 1964 0002 0023     		movs	r3, #0
 1965 0004 04E0     		b	.L149
 1966              	.LVL145:
 1967              	.L150:
3207:Generated_Source\PSoC4/CyLib.c ****     }
 1968              		.loc 1 3207 0 discriminator 3
 1969 0006 9900     		lsls	r1, r3, #2
 1970 0008 0020     		movs	r0, #0
 1971 000a 0B4A     		ldr	r2, .L151
 1972 000c 8850     		str	r0, [r1, r2]
3205:Generated_Source\PSoC4/CyLib.c ****     {
 1973              		.loc 1 3205 0 discriminator 3
 1974 000e 0133     		adds	r3, r3, #1
 1975              	.LVL146:
 1976              	.L149:
3205:Generated_Source\PSoC4/CyLib.c ****     {
 1977              		.loc 1 3205 0 is_stmt 0 discriminator 1
 1978 0010 042B     		cmp	r3, #4
 1979 0012 F8D9     		bls	.L150
3210:Generated_Source\PSoC4/CyLib.c **** 
 1980              		.loc 1 3210 0 is_stmt 1
 1981 0014 0949     		ldr	r1, .L151+4
 1982 0016 0F20     		movs	r0, #15
 1983 0018 FFF7FEFF 		bl	CyIntSetSysVector
 1984              	.LVL147:
3213:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
 1985              		.loc 1 3213 0
 1986 001c 0120     		movs	r0, #1
 1987 001e FFF7FEFF 		bl	CySysTickSetClockSource
 1988              	.LVL148:
3216:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1989              		.loc 1 3216 0
 1990 0022 074B     		ldr	r3, .L151+8
 1991 0024 1869     		ldr	r0, [r3, #16]
 1992 0026 FA21     		movs	r1, #250
 1993 0028 8900     		lsls	r1, r1, #2
 1994 002a FFF7FEFF 		bl	__aeabi_uidiv
 1995              	.LVL149:
 1996 002e FFF7FEFF 		bl	CySysTickSetReload
 1997              	.LVL150:
3217:Generated_Source\PSoC4/CyLib.c **** }
 1998              		.loc 1 3217 0
 1999 0032 FFF7FEFF 		bl	CySysTickClear
 2000              	.LVL151:
3218:Generated_Source\PSoC4/CyLib.c **** 
 2001              		.loc 1 3218 0
 2002              		@ sp needed
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 100


 2003 0036 10BD     		pop	{r4, pc}
 2004              	.L152:
 2005              		.align	2
 2006              	.L151:
 2007 0038 00000000 		.word	.LANCHOR1
 2008 003c 00000000 		.word	CySysTickServiceCallbacks
 2009 0040 00000000 		.word	.LANCHOR0
 2010              		.cfi_endproc
 2011              	.LFE32:
 2012              		.size	CySysTickInit, .-CySysTickInit
 2013              		.section	.text.CySysTickStart,"ax",%progbits
 2014              		.align	2
 2015              		.global	CySysTickStart
 2016              		.code	16
 2017              		.thumb_func
 2018              		.type	CySysTickStart, %function
 2019              	CySysTickStart:
 2020              	.LFB31:
3173:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 2021              		.loc 1 3173 0
 2022              		.cfi_startproc
 2023              		@ args = 0, pretend = 0, frame = 0
 2024              		@ frame_needed = 0, uses_anonymous_args = 0
 2025 0000 10B5     		push	{r4, lr}
 2026              		.cfi_def_cfa_offset 8
 2027              		.cfi_offset 4, -8
 2028              		.cfi_offset 14, -4
3174:Generated_Source\PSoC4/CyLib.c ****     {
 2029              		.loc 1 3174 0
 2030 0002 064B     		ldr	r3, .L155
 2031 0004 5B69     		ldr	r3, [r3, #20]
 2032 0006 002B     		cmp	r3, #0
 2033 0008 04D1     		bne	.L154
3176:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
 2034              		.loc 1 3176 0
 2035 000a FFF7FEFF 		bl	CySysTickInit
 2036              	.LVL152:
3177:Generated_Source\PSoC4/CyLib.c ****     }
 2037              		.loc 1 3177 0
 2038 000e 0122     		movs	r2, #1
 2039 0010 024B     		ldr	r3, .L155
 2040 0012 5A61     		str	r2, [r3, #20]
 2041              	.L154:
3180:Generated_Source\PSoC4/CyLib.c **** }
 2042              		.loc 1 3180 0
 2043 0014 FFF7FEFF 		bl	CySysTickEnable
 2044              	.LVL153:
3181:Generated_Source\PSoC4/CyLib.c **** 
 2045              		.loc 1 3181 0
 2046              		@ sp needed
 2047 0018 10BD     		pop	{r4, pc}
 2048              	.L156:
 2049 001a C046     		.align	2
 2050              	.L155:
 2051 001c 00000000 		.word	.LANCHOR1
 2052              		.cfi_endproc
 2053              	.LFE31:
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 101


 2054              		.size	CySysTickStart, .-CySysTickStart
 2055              		.section	.text.CySysTickSetCallback,"ax",%progbits
 2056              		.align	2
 2057              		.global	CySysTickSetCallback
 2058              		.code	16
 2059              		.thumb_func
 2060              		.type	CySysTickSetCallback, %function
 2061              	CySysTickSetCallback:
 2062              	.LFB44:
3458:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
 2063              		.loc 1 3458 0
 2064              		.cfi_startproc
 2065              		@ args = 0, pretend = 0, frame = 0
 2066              		@ frame_needed = 0, uses_anonymous_args = 0
 2067              		@ link register save eliminated.
 2068              	.LVL154:
3461:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 2069              		.loc 1 3461 0
 2070 0000 024A     		ldr	r2, .L158
 2071 0002 8300     		lsls	r3, r0, #2
 2072 0004 9858     		ldr	r0, [r3, r2]
 2073              	.LVL155:
3462:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 2074              		.loc 1 3462 0
 2075 0006 9950     		str	r1, [r3, r2]
3464:Generated_Source\PSoC4/CyLib.c **** 
 2076              		.loc 1 3464 0
 2077              		@ sp needed
 2078 0008 7047     		bx	lr
 2079              	.L159:
 2080 000a C046     		.align	2
 2081              	.L158:
 2082 000c 00000000 		.word	.LANCHOR1
 2083              		.cfi_endproc
 2084              	.LFE44:
 2085              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 2086              		.section	.text.CySysTickGetCallback,"ax",%progbits
 2087              		.align	2
 2088              		.global	CySysTickGetCallback
 2089              		.code	16
 2090              		.thumb_func
 2091              		.type	CySysTickGetCallback, %function
 2092              	CySysTickGetCallback:
 2093              	.LFB45:
3482:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 2094              		.loc 1 3482 0
 2095              		.cfi_startproc
 2096              		@ args = 0, pretend = 0, frame = 0
 2097              		@ frame_needed = 0, uses_anonymous_args = 0
 2098              		@ link register save eliminated.
 2099              	.LVL156:
3483:Generated_Source\PSoC4/CyLib.c **** }
 2100              		.loc 1 3483 0
 2101 0000 8000     		lsls	r0, r0, #2
 2102              	.LVL157:
 2103 0002 014B     		ldr	r3, .L161
 2104 0004 C058     		ldr	r0, [r0, r3]
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 102


3484:Generated_Source\PSoC4/CyLib.c **** 
 2105              		.loc 1 3484 0
 2106              		@ sp needed
 2107 0006 7047     		bx	lr
 2108              	.L162:
 2109              		.align	2
 2110              	.L161:
 2111 0008 00000000 		.word	.LANCHOR1
 2112              		.cfi_endproc
 2113              	.LFE45:
 2114              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 2115              		.section	.text.CyGetUniqueId,"ax",%progbits
 2116              		.align	2
 2117              		.global	CyGetUniqueId
 2118              		.code	16
 2119              		.thumb_func
 2120              		.type	CyGetUniqueId, %function
 2121              	CyGetUniqueId:
 2122              	.LFB47:
3510:Generated_Source\PSoC4/CyLib.c **** 
3511:Generated_Source\PSoC4/CyLib.c **** 
3512:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3513:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
3514:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3515:Generated_Source\PSoC4/CyLib.c **** *
3516:Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
3517:Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
3518:Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
3519:Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
3520:Generated_Source\PSoC4/CyLib.c **** *
3521:Generated_Source\PSoC4/CyLib.c **** *  \param uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
3522:Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
3523:Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
3524:Generated_Source\PSoC4/CyLib.c **** *
3525:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3526:Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
3527:Generated_Source\PSoC4/CyLib.c **** {
 2123              		.loc 1 3527 0
 2124              		.cfi_startproc
 2125              		@ args = 0, pretend = 0, frame = 0
 2126              		@ frame_needed = 0, uses_anonymous_args = 0
 2127              		@ link register save eliminated.
 2128              	.LVL158:
3528:Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
3529:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 2129              		.loc 1 3529 0
 2130 0000 134B     		ldr	r3, .L164
 2131 0002 1B78     		ldrb	r3, [r3]
 2132 0004 DAB2     		uxtb	r2, r3
 2133 0006 0260     		str	r2, [r0]
3530:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2134              		.loc 1 3530 0
 2135 0008 124B     		ldr	r3, .L164+4
 2136 000a 1B78     		ldrb	r3, [r3]
 2137 000c 1B02     		lsls	r3, r3, #8
 2138 000e 1343     		orrs	r3, r2
 2139 0010 0360     		str	r3, [r0]
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 103


3531:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
 2140              		.loc 1 3531 0
 2141 0012 114A     		ldr	r2, .L164+8
 2142 0014 1278     		ldrb	r2, [r2]
 2143 0016 1204     		lsls	r2, r2, #16
 2144 0018 1343     		orrs	r3, r2
 2145 001a 0360     		str	r3, [r0]
3532:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 2146              		.loc 1 3532 0
 2147 001c 0F4A     		ldr	r2, .L164+12
 2148 001e 1278     		ldrb	r2, [r2]
 2149 0020 1206     		lsls	r2, r2, #24
 2150 0022 1343     		orrs	r3, r2
 2151 0024 0360     		str	r3, [r0]
3533:Generated_Source\PSoC4/CyLib.c **** 
3534:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
 2152              		.loc 1 3534 0
 2153 0026 0E4B     		ldr	r3, .L164+16
 2154 0028 1B78     		ldrb	r3, [r3]
 2155 002a DAB2     		uxtb	r2, r3
 2156 002c 4260     		str	r2, [r0, #4]
3535:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 2157              		.loc 1 3535 0
 2158 002e 0D4B     		ldr	r3, .L164+20
 2159 0030 1B78     		ldrb	r3, [r3]
 2160 0032 1B02     		lsls	r3, r3, #8
 2161 0034 1343     		orrs	r3, r2
 2162 0036 4360     		str	r3, [r0, #4]
3536:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2163              		.loc 1 3536 0
 2164 0038 0B4A     		ldr	r2, .L164+24
 2165 003a 1278     		ldrb	r2, [r2]
 2166 003c 1204     		lsls	r2, r2, #16
 2167 003e 1343     		orrs	r3, r2
 2168 0040 4360     		str	r3, [r0, #4]
3537:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2169              		.loc 1 3537 0
 2170 0042 0A4A     		ldr	r2, .L164+28
 2171 0044 1278     		ldrb	r2, [r2]
 2172 0046 1206     		lsls	r2, r2, #24
 2173 0048 1343     		orrs	r3, r2
 2174 004a 4360     		str	r3, [r0, #4]
3538:Generated_Source\PSoC4/CyLib.c **** #else
3539:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
3540:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
3541:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
3542:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
3543:Generated_Source\PSoC4/CyLib.c **** 
3544:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
3545:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
3546:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
3547:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
3548:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
3549:Generated_Source\PSoC4/CyLib.c **** }
 2175              		.loc 1 3549 0
 2176              		@ sp needed
 2177 004c 7047     		bx	lr
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 104


 2178              	.L165:
 2179 004e C046     		.align	2
 2180              	.L164:
 2181 0050 78F1FF0F 		.word	268431736
 2182 0054 79F1FF0F 		.word	268431737
 2183 0058 7AF1FF0F 		.word	268431738
 2184 005c 7BF1FF0F 		.word	268431739
 2185 0060 7CF1FF0F 		.word	268431740
 2186 0064 7DF1FF0F 		.word	268431741
 2187 0068 7EF1FF0F 		.word	268431742
 2188 006c 7FF1FF0F 		.word	268431743
 2189              		.cfi_endproc
 2190              	.LFE47:
 2191              		.size	CyGetUniqueId, .-CyGetUniqueId
 2192              		.global	CySysClkPumpConfig
 2193              		.global	CySysTickInitVar
 2194              		.global	cydelay32kMs
 2195              		.global	cydelayFreqMhz
 2196              		.global	cydelayFreqKhz
 2197              		.global	cydelayFreqHz
 2198              		.data
 2199              		.align	2
 2200              		.set	.LANCHOR0,. + 0
 2201              		.type	CySysClkPumpConfig, %object
 2202              		.size	CySysClkPumpConfig, 4
 2203              	CySysClkPumpConfig:
 2204 0000 01000000 		.word	1
 2205              		.type	cydelay32kMs, %object
 2206              		.size	cydelay32kMs, 4
 2207              	cydelay32kMs:
 2208 0004 0000E02E 		.word	786432000
 2209              		.type	cydelayFreqKhz, %object
 2210              		.size	cydelayFreqKhz, 4
 2211              	cydelayFreqKhz:
 2212 0008 C05D0000 		.word	24000
 2213              		.type	cydelayFreqMhz, %object
 2214              		.size	cydelayFreqMhz, 1
 2215              	cydelayFreqMhz:
 2216 000c 18       		.byte	24
 2217 000d 000000   		.space	3
 2218              		.type	cydelayFreqHz, %object
 2219              		.size	cydelayFreqHz, 4
 2220              	cydelayFreqHz:
 2221 0010 00366E01 		.word	24000000
 2222              		.bss
 2223              		.align	2
 2224              		.set	.LANCHOR1,. + 0
 2225              		.type	CySysTickCallbacks, %object
 2226              		.size	CySysTickCallbacks, 20
 2227              	CySysTickCallbacks:
 2228 0000 00000000 		.space	20
 2228      00000000 
 2228      00000000 
 2228      00000000 
 2228      00000000 
 2229              		.type	CySysTickInitVar, %object
 2230              		.size	CySysTickInitVar, 4
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 105


 2231              	CySysTickInitVar:
 2232 0014 00000000 		.space	4
 2233              		.text
 2234              	.Letext0:
 2235              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 2236              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 2237              		.file 4 "Generated_Source\\PSoC4\\CyLFClk.h"
 2238              		.file 5 "Generated_Source\\PSoC4\\CyFlash.h"
 2239              		.section	.debug_info,"",%progbits
 2240              	.Ldebug_info0:
 2241 0000 CA0B0000 		.4byte	0xbca
 2242 0004 0400     		.2byte	0x4
 2243 0006 00000000 		.4byte	.Ldebug_abbrev0
 2244 000a 04       		.byte	0x4
 2245 000b 01       		.uleb128 0x1
 2246 000c EA040000 		.4byte	.LASF108
 2247 0010 0C       		.byte	0xc
 2248 0011 A5060000 		.4byte	.LASF109
 2249 0015 AE030000 		.4byte	.LASF110
 2250 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2251 001d 00000000 		.4byte	0
 2252 0021 00000000 		.4byte	.Ldebug_line0
 2253 0025 02       		.uleb128 0x2
 2254 0026 01       		.byte	0x1
 2255 0027 06       		.byte	0x6
 2256 0028 02010000 		.4byte	.LASF0
 2257 002c 02       		.uleb128 0x2
 2258 002d 01       		.byte	0x1
 2259 002e 08       		.byte	0x8
 2260 002f 99040000 		.4byte	.LASF1
 2261 0033 02       		.uleb128 0x2
 2262 0034 02       		.byte	0x2
 2263 0035 05       		.byte	0x5
 2264 0036 A7040000 		.4byte	.LASF2
 2265 003a 02       		.uleb128 0x2
 2266 003b 02       		.byte	0x2
 2267 003c 07       		.byte	0x7
 2268 003d DF020000 		.4byte	.LASF3
 2269 0041 02       		.uleb128 0x2
 2270 0042 04       		.byte	0x4
 2271 0043 05       		.byte	0x5
 2272 0044 67010000 		.4byte	.LASF4
 2273 0048 02       		.uleb128 0x2
 2274 0049 04       		.byte	0x4
 2275 004a 07       		.byte	0x7
 2276 004b 82020000 		.4byte	.LASF5
 2277 004f 02       		.uleb128 0x2
 2278 0050 08       		.byte	0x8
 2279 0051 05       		.byte	0x5
 2280 0052 F4000000 		.4byte	.LASF6
 2281 0056 02       		.uleb128 0x2
 2282 0057 08       		.byte	0x8
 2283 0058 07       		.byte	0x7
 2284 0059 75000000 		.4byte	.LASF7
 2285 005d 03       		.uleb128 0x3
 2286 005e 04       		.byte	0x4
 2287 005f 05       		.byte	0x5
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 106


 2288 0060 696E7400 		.ascii	"int\000"
 2289 0064 02       		.uleb128 0x2
 2290 0065 04       		.byte	0x4
 2291 0066 07       		.byte	0x7
 2292 0067 66020000 		.4byte	.LASF8
 2293 006b 04       		.uleb128 0x4
 2294 006c 92010000 		.4byte	.LASF9
 2295 0070 02       		.byte	0x2
 2296 0071 FB01     		.2byte	0x1fb
 2297 0073 2C000000 		.4byte	0x2c
 2298 0077 04       		.uleb128 0x4
 2299 0078 0F000000 		.4byte	.LASF10
 2300 007c 02       		.byte	0x2
 2301 007d FC01     		.2byte	0x1fc
 2302 007f 3A000000 		.4byte	0x3a
 2303 0083 04       		.uleb128 0x4
 2304 0084 BB010000 		.4byte	.LASF11
 2305 0088 02       		.byte	0x2
 2306 0089 FD01     		.2byte	0x1fd
 2307 008b 48000000 		.4byte	0x48
 2308 008f 02       		.uleb128 0x2
 2309 0090 04       		.byte	0x4
 2310 0091 04       		.byte	0x4
 2311 0092 35040000 		.4byte	.LASF12
 2312 0096 02       		.uleb128 0x2
 2313 0097 08       		.byte	0x8
 2314 0098 04       		.byte	0x4
 2315 0099 AE010000 		.4byte	.LASF13
 2316 009d 02       		.uleb128 0x2
 2317 009e 01       		.byte	0x1
 2318 009f 08       		.byte	0x8
 2319 00a0 7C050000 		.4byte	.LASF14
 2320 00a4 04       		.uleb128 0x4
 2321 00a5 8D040000 		.4byte	.LASF15
 2322 00a9 02       		.byte	0x2
 2323 00aa A502     		.2byte	0x2a5
 2324 00ac B0000000 		.4byte	0xb0
 2325 00b0 05       		.uleb128 0x5
 2326 00b1 6B000000 		.4byte	0x6b
 2327 00b5 04       		.uleb128 0x4
 2328 00b6 71030000 		.4byte	.LASF16
 2329 00ba 02       		.byte	0x2
 2330 00bb A702     		.2byte	0x2a7
 2331 00bd C1000000 		.4byte	0xc1
 2332 00c1 05       		.uleb128 0x5
 2333 00c2 83000000 		.4byte	0x83
 2334 00c6 04       		.uleb128 0x4
 2335 00c7 81050000 		.4byte	.LASF17
 2336 00cb 02       		.byte	0x2
 2337 00cc B702     		.2byte	0x2b7
 2338 00ce D2000000 		.4byte	0xd2
 2339 00d2 06       		.uleb128 0x6
 2340 00d3 04       		.byte	0x4
 2341 00d4 D8000000 		.4byte	0xd8
 2342 00d8 07       		.uleb128 0x7
 2343 00d9 02       		.uleb128 0x2
 2344 00da 08       		.byte	0x8
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 107


 2345 00db 04       		.byte	0x4
 2346 00dc C2010000 		.4byte	.LASF18
 2347 00e0 02       		.uleb128 0x2
 2348 00e1 04       		.byte	0x4
 2349 00e2 07       		.byte	0x7
 2350 00e3 93030000 		.4byte	.LASF19
 2351 00e7 04       		.uleb128 0x4
 2352 00e8 51040000 		.4byte	.LASF20
 2353 00ec 03       		.byte	0x3
 2354 00ed 0801     		.2byte	0x108
 2355 00ef D2000000 		.4byte	0xd2
 2356 00f3 08       		.uleb128 0x8
 2357 00f4 7C060000 		.4byte	.LASF61
 2358 00f8 01       		.byte	0x1
 2359 00f9 69       		.byte	0x69
 2360 00fa 00000000 		.4byte	.LFB1
 2361 00fe 14000000 		.4byte	.LFE1-.LFB1
 2362 0102 01       		.uleb128 0x1
 2363 0103 9C       		.byte	0x9c
 2364 0104 09       		.uleb128 0x9
 2365 0105 57030000 		.4byte	.LASF21
 2366 0109 01       		.byte	0x1
 2367 010a 1B01     		.2byte	0x11b
 2368 010c 00000000 		.4byte	.LFB4
 2369 0110 4C000000 		.4byte	.LFE4-.LFB4
 2370 0114 01       		.uleb128 0x1
 2371 0115 9C       		.byte	0x9c
 2372 0116 2B010000 		.4byte	0x12b
 2373 011a 0A       		.uleb128 0xa
 2374 011b 0E010000 		.4byte	.LASF24
 2375 011f 01       		.byte	0x1
 2376 0120 2101     		.2byte	0x121
 2377 0122 83000000 		.4byte	0x83
 2378 0126 00000000 		.4byte	.LLST0
 2379 012a 00       		.byte	0
 2380 012b 0B       		.uleb128 0xb
 2381 012c 94020000 		.4byte	.LASF22
 2382 0130 01       		.byte	0x1
 2383 0131 8A       		.byte	0x8a
 2384 0132 00000000 		.4byte	.LFB2
 2385 0136 18000000 		.4byte	.LFE2-.LFB2
 2386 013a 01       		.uleb128 0x1
 2387 013b 9C       		.byte	0x9c
 2388 013c 4A010000 		.4byte	0x14a
 2389 0140 0C       		.uleb128 0xc
 2390 0141 06000000 		.4byte	.LVL3
 2391 0145 04010000 		.4byte	0x104
 2392 0149 00       		.byte	0
 2393 014a 0D       		.uleb128 0xd
 2394 014b 49010000 		.4byte	.LASF80
 2395 014f 01       		.byte	0x1
 2396 0150 5301     		.2byte	0x153
 2397 0152 83000000 		.4byte	0x83
 2398 0156 00000000 		.4byte	.LFB5
 2399 015a 14000000 		.4byte	.LFE5-.LFB5
 2400 015e 01       		.uleb128 0x1
 2401 015f 9C       		.byte	0x9c
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 108


 2402 0160 09       		.uleb128 0x9
 2403 0161 1F000000 		.4byte	.LASF23
 2404 0165 01       		.byte	0x1
 2405 0166 4802     		.2byte	0x248
 2406 0168 00000000 		.4byte	.LFB6
 2407 016c 20000000 		.4byte	.LFE6-.LFB6
 2408 0170 01       		.uleb128 0x1
 2409 0171 9C       		.byte	0x9c
 2410 0172 B9010000 		.4byte	0x1b9
 2411 0176 0E       		.uleb128 0xe
 2412 0177 CF040000 		.4byte	.LASF28
 2413 017b 01       		.byte	0x1
 2414 017c 4802     		.2byte	0x248
 2415 017e 83000000 		.4byte	0x83
 2416 0182 24000000 		.4byte	.LLST1
 2417 0186 0A       		.uleb128 0xa
 2418 0187 1F010000 		.4byte	.LASF25
 2419 018b 01       		.byte	0x1
 2420 018c 4A02     		.2byte	0x24a
 2421 018e 6B000000 		.4byte	0x6b
 2422 0192 50000000 		.4byte	.LLST2
 2423 0196 0A       		.uleb128 0xa
 2424 0197 D1060000 		.4byte	.LASF26
 2425 019b 01       		.byte	0x1
 2426 019c 4B02     		.2byte	0x24b
 2427 019e 83000000 		.4byte	0x83
 2428 01a2 63000000 		.4byte	.LLST3
 2429 01a6 0C       		.uleb128 0xc
 2430 01a7 08000000 		.4byte	.LVL5
 2431 01ab 960B0000 		.4byte	0xb96
 2432 01af 0C       		.uleb128 0xc
 2433 01b0 1A000000 		.4byte	.LVL9
 2434 01b4 A10B0000 		.4byte	0xba1
 2435 01b8 00       		.byte	0
 2436 01b9 09       		.uleb128 0x9
 2437 01ba 4B000000 		.4byte	.LASF27
 2438 01be 01       		.byte	0x1
 2439 01bf 9502     		.2byte	0x295
 2440 01c1 00000000 		.4byte	.LFB7
 2441 01c5 34000000 		.4byte	.LFE7-.LFB7
 2442 01c9 01       		.uleb128 0x1
 2443 01ca 9C       		.byte	0x9c
 2444 01cb DE010000 		.4byte	0x1de
 2445 01cf 0F       		.uleb128 0xf
 2446 01d0 A7010000 		.4byte	.LASF29
 2447 01d4 01       		.byte	0x1
 2448 01d5 9502     		.2byte	0x295
 2449 01d7 83000000 		.4byte	0x83
 2450 01db 01       		.uleb128 0x1
 2451 01dc 50       		.byte	0x50
 2452 01dd 00       		.byte	0
 2453 01de 10       		.uleb128 0x10
 2454 01df D3010000 		.4byte	.LASF34
 2455 01e3 01       		.byte	0x1
 2456 01e4 BA02     		.2byte	0x2ba
 2457 01e6 83000000 		.4byte	0x83
 2458 01ea 00000000 		.4byte	.LFB8
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 109


 2459 01ee 1C000000 		.4byte	.LFE8-.LFB8
 2460 01f2 01       		.uleb128 0x1
 2461 01f3 9C       		.byte	0x9c
 2462 01f4 2B020000 		.4byte	0x22b
 2463 01f8 0A       		.uleb128 0xa
 2464 01f9 1F010000 		.4byte	.LASF25
 2465 01fd 01       		.byte	0x1
 2466 01fe BC02     		.2byte	0x2bc
 2467 0200 6B000000 		.4byte	0x6b
 2468 0204 81000000 		.4byte	.LLST4
 2469 0208 0A       		.uleb128 0xa
 2470 0209 EE030000 		.4byte	.LASF30
 2471 020d 01       		.byte	0x1
 2472 020e BD02     		.2byte	0x2bd
 2473 0210 83000000 		.4byte	0x83
 2474 0214 94000000 		.4byte	.LLST5
 2475 0218 0C       		.uleb128 0xc
 2476 0219 06000000 		.4byte	.LVL12
 2477 021d 960B0000 		.4byte	0xb96
 2478 0221 0C       		.uleb128 0xc
 2479 0222 12000000 		.4byte	.LVL14
 2480 0226 A10B0000 		.4byte	0xba1
 2481 022a 00       		.byte	0
 2482 022b 09       		.uleb128 0x9
 2483 022c B4050000 		.4byte	.LASF31
 2484 0230 01       		.byte	0x1
 2485 0231 F702     		.2byte	0x2f7
 2486 0233 00000000 		.4byte	.LFB9
 2487 0237 24000000 		.4byte	.LFE9-.LFB9
 2488 023b 01       		.uleb128 0x1
 2489 023c 9C       		.byte	0x9c
 2490 023d 74020000 		.4byte	0x274
 2491 0241 0E       		.uleb128 0xe
 2492 0242 74060000 		.4byte	.LASF32
 2493 0246 01       		.byte	0x1
 2494 0247 F702     		.2byte	0x2f7
 2495 0249 83000000 		.4byte	0x83
 2496 024d B2000000 		.4byte	.LLST6
 2497 0251 0A       		.uleb128 0xa
 2498 0252 1F010000 		.4byte	.LASF25
 2499 0256 01       		.byte	0x1
 2500 0257 F902     		.2byte	0x2f9
 2501 0259 6B000000 		.4byte	0x6b
 2502 025d DE000000 		.4byte	.LLST7
 2503 0261 0C       		.uleb128 0xc
 2504 0262 08000000 		.4byte	.LVL17
 2505 0266 960B0000 		.4byte	0xb96
 2506 026a 0C       		.uleb128 0xc
 2507 026b 1E000000 		.4byte	.LVL19
 2508 026f A10B0000 		.4byte	0xba1
 2509 0273 00       		.byte	0
 2510 0274 09       		.uleb128 0x9
 2511 0275 9E050000 		.4byte	.LASF33
 2512 0279 01       		.byte	0x1
 2513 027a 8304     		.2byte	0x483
 2514 027c 00000000 		.4byte	.LFB11
 2515 0280 24000000 		.4byte	.LFE11-.LFB11
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 110


 2516 0284 01       		.uleb128 0x1
 2517 0285 9C       		.byte	0x9c
 2518 0286 BD020000 		.4byte	0x2bd
 2519 028a 0E       		.uleb128 0xe
 2520 028b 74060000 		.4byte	.LASF32
 2521 028f 01       		.byte	0x1
 2522 0290 8304     		.2byte	0x483
 2523 0292 83000000 		.4byte	0x83
 2524 0296 F1000000 		.4byte	.LLST8
 2525 029a 0A       		.uleb128 0xa
 2526 029b 1F010000 		.4byte	.LASF25
 2527 029f 01       		.byte	0x1
 2528 02a0 8504     		.2byte	0x485
 2529 02a2 6B000000 		.4byte	0x6b
 2530 02a6 1D010000 		.4byte	.LLST9
 2531 02aa 0C       		.uleb128 0xc
 2532 02ab 08000000 		.4byte	.LVL21
 2533 02af 960B0000 		.4byte	0xb96
 2534 02b3 0C       		.uleb128 0xc
 2535 02b4 1E000000 		.4byte	.LVL23
 2536 02b8 A10B0000 		.4byte	0xba1
 2537 02bc 00       		.byte	0
 2538 02bd 10       		.uleb128 0x10
 2539 02be CB020000 		.4byte	.LASF35
 2540 02c2 01       		.byte	0x1
 2541 02c3 C00A     		.2byte	0xac0
 2542 02c5 83000000 		.4byte	0x83
 2543 02c9 00000000 		.4byte	.LFB12
 2544 02cd 14000000 		.4byte	.LFE12-.LFB12
 2545 02d1 01       		.uleb128 0x1
 2546 02d2 9C       		.byte	0x9c
 2547 02d3 F6020000 		.4byte	0x2f6
 2548 02d7 0E       		.uleb128 0xe
 2549 02d8 E3040000 		.4byte	.LASF36
 2550 02dc 01       		.byte	0x1
 2551 02dd C00A     		.2byte	0xac0
 2552 02df 83000000 		.4byte	0x83
 2553 02e3 30010000 		.4byte	.LLST10
 2554 02e7 11       		.uleb128 0x11
 2555 02e8 86030000 		.4byte	.LASF37
 2556 02ec 01       		.byte	0x1
 2557 02ed C20A     		.2byte	0xac2
 2558 02ef 83000000 		.4byte	0x83
 2559 02f3 01       		.uleb128 0x1
 2560 02f4 50       		.byte	0x50
 2561 02f5 00       		.byte	0
 2562 02f6 10       		.uleb128 0x10
 2563 02f7 67000000 		.4byte	.LASF38
 2564 02fb 01       		.byte	0x1
 2565 02fc D70A     		.2byte	0xad7
 2566 02fe 83000000 		.4byte	0x83
 2567 0302 00000000 		.4byte	.LFB13
 2568 0306 10000000 		.4byte	.LFE13-.LFB13
 2569 030a 01       		.uleb128 0x1
 2570 030b 9C       		.byte	0x9c
 2571 030c 1F030000 		.4byte	0x31f
 2572 0310 11       		.uleb128 0x11
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 111


 2573 0311 16000000 		.4byte	.LASF39
 2574 0315 01       		.byte	0x1
 2575 0316 D90A     		.2byte	0xad9
 2576 0318 83000000 		.4byte	0x83
 2577 031c 01       		.uleb128 0x1
 2578 031d 50       		.byte	0x50
 2579 031e 00       		.byte	0
 2580 031f 09       		.uleb128 0x9
 2581 0320 9D000000 		.4byte	.LASF40
 2582 0324 01       		.byte	0x1
 2583 0325 EE0A     		.2byte	0xaee
 2584 0327 00000000 		.4byte	.LFB14
 2585 032b 0C000000 		.4byte	.LFE14-.LFB14
 2586 032f 01       		.uleb128 0x1
 2587 0330 9C       		.byte	0x9c
 2588 0331 44030000 		.4byte	0x344
 2589 0335 0F       		.uleb128 0xf
 2590 0336 CE010000 		.4byte	.LASF41
 2591 033a 01       		.byte	0x1
 2592 033b EE0A     		.2byte	0xaee
 2593 033d 83000000 		.4byte	0x83
 2594 0341 01       		.uleb128 0x1
 2595 0342 50       		.byte	0x50
 2596 0343 00       		.byte	0
 2597 0344 09       		.uleb128 0x9
 2598 0345 B1040000 		.4byte	.LASF42
 2599 0349 01       		.byte	0x1
 2600 034a A50B     		.2byte	0xba5
 2601 034c 00000000 		.4byte	.LFB21
 2602 0350 14000000 		.4byte	.LFE21-.LFB21
 2603 0354 01       		.uleb128 0x1
 2604 0355 9C       		.byte	0x9c
 2605 0356 6B030000 		.4byte	0x36b
 2606 035a 0E       		.uleb128 0xe
 2607 035b 20030000 		.4byte	.LASF43
 2608 035f 01       		.byte	0x1
 2609 0360 A50B     		.2byte	0xba5
 2610 0362 6B000000 		.4byte	0x6b
 2611 0366 4E010000 		.4byte	.LLST11
 2612 036a 00       		.byte	0
 2613 036b 10       		.uleb128 0x10
 2614 036c E6000000 		.4byte	.LASF44
 2615 0370 01       		.byte	0x1
 2616 0371 B70B     		.2byte	0xbb7
 2617 0373 6B000000 		.4byte	0x6b
 2618 0377 00000000 		.4byte	.LFB22
 2619 037b 18000000 		.4byte	.LFE22-.LFB22
 2620 037f 01       		.uleb128 0x1
 2621 0380 9C       		.byte	0x9c
 2622 0381 96030000 		.4byte	0x396
 2623 0385 0E       		.uleb128 0xe
 2624 0386 20030000 		.4byte	.LASF43
 2625 038a 01       		.byte	0x1
 2626 038b B70B     		.2byte	0xbb7
 2627 038d 6B000000 		.4byte	0x6b
 2628 0391 6F010000 		.4byte	.LLST12
 2629 0395 00       		.byte	0
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 112


 2630 0396 09       		.uleb128 0x9
 2631 0397 70010000 		.4byte	.LASF45
 2632 039b 01       		.byte	0x1
 2633 039c C70B     		.2byte	0xbc7
 2634 039e 00000000 		.4byte	.LFB23
 2635 03a2 14000000 		.4byte	.LFE23-.LFB23
 2636 03a6 01       		.uleb128 0x1
 2637 03a7 9C       		.byte	0x9c
 2638 03a8 BD030000 		.4byte	0x3bd
 2639 03ac 0E       		.uleb128 0xe
 2640 03ad 20030000 		.4byte	.LASF43
 2641 03b1 01       		.byte	0x1
 2642 03b2 C70B     		.2byte	0xbc7
 2643 03b4 6B000000 		.4byte	0x6b
 2644 03b8 90010000 		.4byte	.LLST13
 2645 03bc 00       		.byte	0
 2646 03bd 09       		.uleb128 0x9
 2647 03be BB020000 		.4byte	.LASF46
 2648 03c2 01       		.byte	0x1
 2649 03c3 D50B     		.2byte	0xbd5
 2650 03c5 00000000 		.4byte	.LFB24
 2651 03c9 14000000 		.4byte	.LFE24-.LFB24
 2652 03cd 01       		.uleb128 0x1
 2653 03ce 9C       		.byte	0x9c
 2654 03cf E4030000 		.4byte	0x3e4
 2655 03d3 0E       		.uleb128 0xe
 2656 03d4 20030000 		.4byte	.LASF43
 2657 03d8 01       		.byte	0x1
 2658 03d9 D50B     		.2byte	0xbd5
 2659 03db 6B000000 		.4byte	0x6b
 2660 03df B1010000 		.4byte	.LLST14
 2661 03e3 00       		.byte	0
 2662 03e4 09       		.uleb128 0x9
 2663 03e5 9C030000 		.4byte	.LASF47
 2664 03e9 01       		.byte	0x1
 2665 03ea E40B     		.2byte	0xbe4
 2666 03ec 00000000 		.4byte	.LFB25
 2667 03f0 14000000 		.4byte	.LFE25-.LFB25
 2668 03f4 01       		.uleb128 0x1
 2669 03f5 9C       		.byte	0x9c
 2670 03f6 0B040000 		.4byte	0x40b
 2671 03fa 0E       		.uleb128 0xe
 2672 03fb 20030000 		.4byte	.LASF43
 2673 03ff 01       		.byte	0x1
 2674 0400 E40B     		.2byte	0xbe4
 2675 0402 6B000000 		.4byte	0x6b
 2676 0406 D2010000 		.4byte	.LLST15
 2677 040a 00       		.byte	0
 2678 040b 09       		.uleb128 0x9
 2679 040c 92040000 		.4byte	.LASF48
 2680 0410 01       		.byte	0x1
 2681 0411 F30B     		.2byte	0xbf3
 2682 0413 00000000 		.4byte	.LFB26
 2683 0417 04000000 		.4byte	.LFE26-.LFB26
 2684 041b 01       		.uleb128 0x1
 2685 041c 9C       		.byte	0x9c
 2686 041d 30040000 		.4byte	0x430
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 113


 2687 0421 0F       		.uleb128 0xf
 2688 0422 E3040000 		.4byte	.LASF36
 2689 0426 01       		.byte	0x1
 2690 0427 F30B     		.2byte	0xbf3
 2691 0429 6B000000 		.4byte	0x6b
 2692 042d 01       		.uleb128 0x1
 2693 042e 50       		.byte	0x50
 2694 042f 00       		.byte	0
 2695 0430 10       		.uleb128 0x10
 2696 0431 45030000 		.4byte	.LASF49
 2697 0435 01       		.byte	0x1
 2698 0436 070B     		.2byte	0xb07
 2699 0438 C6000000 		.4byte	0xc6
 2700 043c 00000000 		.4byte	.LFB15
 2701 0440 20000000 		.4byte	.LFE15-.LFB15
 2702 0444 01       		.uleb128 0x1
 2703 0445 9C       		.byte	0x9c
 2704 0446 98040000 		.4byte	0x498
 2705 044a 0E       		.uleb128 0xe
 2706 044b 20030000 		.4byte	.LASF43
 2707 044f 01       		.byte	0x1
 2708 0450 070B     		.2byte	0xb07
 2709 0452 6B000000 		.4byte	0x6b
 2710 0456 F3010000 		.4byte	.LLST16
 2711 045a 0E       		.uleb128 0xe
 2712 045b E6030000 		.4byte	.LASF50
 2713 045f 01       		.byte	0x1
 2714 0460 070B     		.2byte	0xb07
 2715 0462 C6000000 		.4byte	0xc6
 2716 0466 14020000 		.4byte	.LLST17
 2717 046a 11       		.uleb128 0x11
 2718 046b 50060000 		.4byte	.LASF51
 2719 046f 01       		.byte	0x1
 2720 0470 090B     		.2byte	0xb09
 2721 0472 C6000000 		.4byte	0xc6
 2722 0476 01       		.uleb128 0x1
 2723 0477 50       		.byte	0x50
 2724 0478 12       		.uleb128 0x12
 2725 0479 00000000 		.4byte	.LASF52
 2726 047d 01       		.byte	0x1
 2727 047e 0A0B     		.2byte	0xb0a
 2728 0480 98040000 		.4byte	0x498
 2729 0484 00000020 		.4byte	0x20000000
 2730 0488 13       		.uleb128 0x13
 2731 0489 10000000 		.4byte	.LVL44
 2732 048d 0B040000 		.4byte	0x40b
 2733 0491 14       		.uleb128 0x14
 2734 0492 01       		.uleb128 0x1
 2735 0493 50       		.byte	0x50
 2736 0494 01       		.uleb128 0x1
 2737 0495 30       		.byte	0x30
 2738 0496 00       		.byte	0
 2739 0497 00       		.byte	0
 2740 0498 06       		.uleb128 0x6
 2741 0499 04       		.byte	0x4
 2742 049a C6000000 		.4byte	0xc6
 2743 049e 10       		.uleb128 0x10
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 114


 2744 049f BD040000 		.4byte	.LASF53
 2745 04a3 01       		.byte	0x1
 2746 04a4 290B     		.2byte	0xb29
 2747 04a6 C6000000 		.4byte	0xc6
 2748 04aa 00000000 		.4byte	.LFB16
 2749 04ae 1C000000 		.4byte	.LFE16-.LFB16
 2750 04b2 01       		.uleb128 0x1
 2751 04b3 9C       		.byte	0x9c
 2752 04b4 E8040000 		.4byte	0x4e8
 2753 04b8 0E       		.uleb128 0xe
 2754 04b9 20030000 		.4byte	.LASF43
 2755 04bd 01       		.byte	0x1
 2756 04be 290B     		.2byte	0xb29
 2757 04c0 6B000000 		.4byte	0x6b
 2758 04c4 40020000 		.4byte	.LLST18
 2759 04c8 12       		.uleb128 0x12
 2760 04c9 00000000 		.4byte	.LASF52
 2761 04cd 01       		.byte	0x1
 2762 04ce 2B0B     		.2byte	0xb2b
 2763 04d0 98040000 		.4byte	0x498
 2764 04d4 00000020 		.4byte	0x20000000
 2765 04d8 13       		.uleb128 0x13
 2766 04d9 0E000000 		.4byte	.LVL50
 2767 04dd 0B040000 		.4byte	0x40b
 2768 04e1 14       		.uleb128 0x14
 2769 04e2 01       		.uleb128 0x1
 2770 04e3 50       		.byte	0x50
 2771 04e4 01       		.uleb128 0x1
 2772 04e5 30       		.byte	0x30
 2773 04e6 00       		.byte	0
 2774 04e7 00       		.byte	0
 2775 04e8 10       		.uleb128 0x10
 2776 04e9 11030000 		.4byte	.LASF54
 2777 04ed 01       		.byte	0x1
 2778 04ee 3F0B     		.2byte	0xb3f
 2779 04f0 C6000000 		.4byte	0xc6
 2780 04f4 00000000 		.4byte	.LFB17
 2781 04f8 22000000 		.4byte	.LFE17-.LFB17
 2782 04fc 01       		.uleb128 0x1
 2783 04fd 9C       		.byte	0x9c
 2784 04fe 50050000 		.4byte	0x550
 2785 0502 0E       		.uleb128 0xe
 2786 0503 20030000 		.4byte	.LASF43
 2787 0507 01       		.byte	0x1
 2788 0508 3F0B     		.2byte	0xb3f
 2789 050a 6B000000 		.4byte	0x6b
 2790 050e 61020000 		.4byte	.LLST19
 2791 0512 0E       		.uleb128 0xe
 2792 0513 E6030000 		.4byte	.LASF50
 2793 0517 01       		.byte	0x1
 2794 0518 3F0B     		.2byte	0xb3f
 2795 051a C6000000 		.4byte	0xc6
 2796 051e 82020000 		.4byte	.LLST20
 2797 0522 11       		.uleb128 0x11
 2798 0523 50060000 		.4byte	.LASF51
 2799 0527 01       		.byte	0x1
 2800 0528 410B     		.2byte	0xb41
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 115


 2801 052a C6000000 		.4byte	0xc6
 2802 052e 01       		.uleb128 0x1
 2803 052f 50       		.byte	0x50
 2804 0530 12       		.uleb128 0x12
 2805 0531 00000000 		.4byte	.LASF52
 2806 0535 01       		.byte	0x1
 2807 0536 420B     		.2byte	0xb42
 2808 0538 98040000 		.4byte	0x498
 2809 053c 00000020 		.4byte	0x20000000
 2810 0540 13       		.uleb128 0x13
 2811 0541 10000000 		.4byte	.LVL54
 2812 0545 0B040000 		.4byte	0x40b
 2813 0549 14       		.uleb128 0x14
 2814 054a 01       		.uleb128 0x1
 2815 054b 50       		.byte	0x50
 2816 054c 01       		.uleb128 0x1
 2817 054d 30       		.byte	0x30
 2818 054e 00       		.byte	0
 2819 054f 00       		.byte	0
 2820 0550 10       		.uleb128 0x10
 2821 0551 63040000 		.4byte	.LASF55
 2822 0555 01       		.byte	0x1
 2823 0556 5B0B     		.2byte	0xb5b
 2824 0558 C6000000 		.4byte	0xc6
 2825 055c 00000000 		.4byte	.LFB18
 2826 0560 1E000000 		.4byte	.LFE18-.LFB18
 2827 0564 01       		.uleb128 0x1
 2828 0565 9C       		.byte	0x9c
 2829 0566 9A050000 		.4byte	0x59a
 2830 056a 0E       		.uleb128 0xe
 2831 056b 20030000 		.4byte	.LASF43
 2832 056f 01       		.byte	0x1
 2833 0570 5B0B     		.2byte	0xb5b
 2834 0572 6B000000 		.4byte	0x6b
 2835 0576 AE020000 		.4byte	.LLST21
 2836 057a 12       		.uleb128 0x12
 2837 057b 00000000 		.4byte	.LASF52
 2838 057f 01       		.byte	0x1
 2839 0580 5D0B     		.2byte	0xb5d
 2840 0582 98040000 		.4byte	0x498
 2841 0586 00000020 		.4byte	0x20000000
 2842 058a 13       		.uleb128 0x13
 2843 058b 0E000000 		.4byte	.LVL60
 2844 058f 0B040000 		.4byte	0x40b
 2845 0593 14       		.uleb128 0x14
 2846 0594 01       		.uleb128 0x1
 2847 0595 50       		.byte	0x50
 2848 0596 01       		.uleb128 0x1
 2849 0597 30       		.byte	0x30
 2850 0598 00       		.byte	0
 2851 0599 00       		.byte	0
 2852 059a 09       		.uleb128 0x9
 2853 059b 24040000 		.4byte	.LASF56
 2854 059f 01       		.byte	0x1
 2855 05a0 6E0B     		.2byte	0xb6e
 2856 05a2 00000000 		.4byte	.LFB19
 2857 05a6 4C000000 		.4byte	.LFE19-.LFB19
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 116


 2858 05aa 01       		.uleb128 0x1
 2859 05ab 9C       		.byte	0x9c
 2860 05ac 39060000 		.4byte	0x639
 2861 05b0 0E       		.uleb128 0xe
 2862 05b1 20030000 		.4byte	.LASF43
 2863 05b5 01       		.byte	0x1
 2864 05b6 6E0B     		.2byte	0xb6e
 2865 05b8 6B000000 		.4byte	0x6b
 2866 05bc CF020000 		.4byte	.LLST22
 2867 05c0 0E       		.uleb128 0xe
 2868 05c1 27030000 		.4byte	.LASF57
 2869 05c5 01       		.byte	0x1
 2870 05c6 6E0B     		.2byte	0xb6e
 2871 05c8 6B000000 		.4byte	0x6b
 2872 05cc F0020000 		.4byte	.LLST23
 2873 05d0 0A       		.uleb128 0xa
 2874 05d1 1F010000 		.4byte	.LASF25
 2875 05d5 01       		.byte	0x1
 2876 05d6 700B     		.2byte	0xb70
 2877 05d8 6B000000 		.4byte	0x6b
 2878 05dc 11030000 		.4byte	.LLST24
 2879 05e0 0A       		.uleb128 0xa
 2880 05e1 B5010000 		.4byte	.LASF58
 2881 05e5 01       		.byte	0x1
 2882 05e6 710B     		.2byte	0xb71
 2883 05e8 83000000 		.4byte	0x83
 2884 05ec 24030000 		.4byte	.LLST25
 2885 05f0 0A       		.uleb128 0xa
 2886 05f1 30020000 		.4byte	.LASF59
 2887 05f5 01       		.byte	0x1
 2888 05f6 720B     		.2byte	0xb72
 2889 05f8 83000000 		.4byte	0x83
 2890 05fc 37030000 		.4byte	.LLST26
 2891 0600 15       		.uleb128 0x15
 2892 0601 10000000 		.4byte	.LVL63
 2893 0605 0B040000 		.4byte	0x40b
 2894 0609 13060000 		.4byte	0x613
 2895 060d 14       		.uleb128 0x14
 2896 060e 01       		.uleb128 0x1
 2897 060f 50       		.byte	0x50
 2898 0610 01       		.uleb128 0x1
 2899 0611 30       		.byte	0x30
 2900 0612 00       		.byte	0
 2901 0613 15       		.uleb128 0x15
 2902 0614 1A000000 		.4byte	.LVL64
 2903 0618 0B040000 		.4byte	0x40b
 2904 061c 26060000 		.4byte	0x626
 2905 0620 14       		.uleb128 0x14
 2906 0621 01       		.uleb128 0x1
 2907 0622 50       		.byte	0x50
 2908 0623 01       		.uleb128 0x1
 2909 0624 30       		.byte	0x30
 2910 0625 00       		.byte	0
 2911 0626 0C       		.uleb128 0xc
 2912 0627 26000000 		.4byte	.LVL66
 2913 062b 960B0000 		.4byte	0xb96
 2914 062f 0C       		.uleb128 0xc
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 117


 2915 0630 46000000 		.4byte	.LVL72
 2916 0634 A10B0000 		.4byte	0xba1
 2917 0638 00       		.byte	0
 2918 0639 10       		.uleb128 0x10
 2919 063a 04020000 		.4byte	.LASF60
 2920 063e 01       		.byte	0x1
 2921 063f 900B     		.2byte	0xb90
 2922 0641 6B000000 		.4byte	0x6b
 2923 0645 00000000 		.4byte	.LFB20
 2924 0649 2C000000 		.4byte	.LFE20-.LFB20
 2925 064d 01       		.uleb128 0x1
 2926 064e 9C       		.byte	0x9c
 2927 064f 83060000 		.4byte	0x683
 2928 0653 0E       		.uleb128 0xe
 2929 0654 20030000 		.4byte	.LASF43
 2930 0658 01       		.byte	0x1
 2931 0659 900B     		.2byte	0xb90
 2932 065b 6B000000 		.4byte	0x6b
 2933 065f 6B030000 		.4byte	.LLST27
 2934 0663 0A       		.uleb128 0xa
 2935 0664 27030000 		.4byte	.LASF57
 2936 0668 01       		.byte	0x1
 2937 0669 920B     		.2byte	0xb92
 2938 066b 6B000000 		.4byte	0x6b
 2939 066f 8C030000 		.4byte	.LLST28
 2940 0673 13       		.uleb128 0x13
 2941 0674 0E000000 		.4byte	.LVL76
 2942 0678 0B040000 		.4byte	0x40b
 2943 067c 14       		.uleb128 0x14
 2944 067d 01       		.uleb128 0x1
 2945 067e 50       		.byte	0x50
 2946 067f 01       		.uleb128 0x1
 2947 0680 30       		.byte	0x30
 2948 0681 00       		.byte	0
 2949 0682 00       		.byte	0
 2950 0683 16       		.uleb128 0x16
 2951 0684 BD000000 		.4byte	.LASF62
 2952 0688 01       		.byte	0x1
 2953 0689 0B0C     		.2byte	0xc0b
 2954 068b 00000000 		.4byte	.LFB27
 2955 068f 18000000 		.4byte	.LFE27-.LFB27
 2956 0693 01       		.uleb128 0x1
 2957 0694 9C       		.byte	0x9c
 2958 0695 09       		.uleb128 0x9
 2959 0696 16060000 		.4byte	.LASF63
 2960 069a 01       		.byte	0x1
 2961 069b 1F0C     		.2byte	0xc1f
 2962 069d 00000000 		.4byte	.LFB28
 2963 06a1 30000000 		.4byte	.LFE28-.LFB28
 2964 06a5 01       		.uleb128 0x1
 2965 06a6 9C       		.byte	0x9c
 2966 06a7 CE060000 		.4byte	0x6ce
 2967 06ab 0E       		.uleb128 0xe
 2968 06ac 72040000 		.4byte	.LASF64
 2969 06b0 01       		.byte	0x1
 2970 06b1 1F0C     		.2byte	0xc1f
 2971 06b3 83000000 		.4byte	0x83
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 118


 2972 06b7 9F030000 		.4byte	.LLST29
 2973 06bb 0C       		.uleb128 0xc
 2974 06bc 0E000000 		.4byte	.LVL81
 2975 06c0 AC0B0000 		.4byte	0xbac
 2976 06c4 0C       		.uleb128 0xc
 2977 06c5 26000000 		.4byte	.LVL83
 2978 06c9 AC0B0000 		.4byte	0xbac
 2979 06cd 00       		.byte	0
 2980 06ce 0B       		.uleb128 0xb
 2981 06cf EB010000 		.4byte	.LASF65
 2982 06d3 01       		.byte	0x1
 2983 06d4 AE       		.byte	0xae
 2984 06d5 00000000 		.4byte	.LFB3
 2985 06d9 D0000000 		.4byte	.LFE3-.LFB3
 2986 06dd 01       		.uleb128 0x1
 2987 06de 9C       		.byte	0x9c
 2988 06df 8A070000 		.4byte	0x78a
 2989 06e3 17       		.uleb128 0x17
 2990 06e4 0E010000 		.4byte	.LASF24
 2991 06e8 01       		.byte	0x1
 2992 06e9 B4       		.byte	0xb4
 2993 06ea 83000000 		.4byte	0x83
 2994 06ee BD030000 		.4byte	.LLST30
 2995 06f2 17       		.uleb128 0x17
 2996 06f3 1F010000 		.4byte	.LASF25
 2997 06f7 01       		.byte	0x1
 2998 06f8 B5       		.byte	0xb5
 2999 06f9 6B000000 		.4byte	0x6b
 3000 06fd D0030000 		.4byte	.LLST31
 3001 0701 17       		.uleb128 0x17
 3002 0702 F2020000 		.4byte	.LASF66
 3003 0706 01       		.byte	0x1
 3004 0707 B6       		.byte	0xb6
 3005 0708 83000000 		.4byte	0x83
 3006 070c E3030000 		.4byte	.LLST32
 3007 0710 17       		.uleb128 0x17
 3008 0711 2E010000 		.4byte	.LASF67
 3009 0715 01       		.byte	0x1
 3010 0716 B7       		.byte	0xb7
 3011 0717 83000000 		.4byte	0x83
 3012 071b 0D040000 		.4byte	.LLST33
 3013 071f 18       		.uleb128 0x18
 3014 0720 0A060000 		.4byte	.LASF68
 3015 0724 01       		.byte	0x1
 3016 0725 B8       		.byte	0xb8
 3017 0726 C1000000 		.4byte	0xc1
 3018 072a 02       		.uleb128 0x2
 3019 072b 91       		.byte	0x91
 3020 072c 6C       		.sleb128 -20
 3021 072d 0C       		.uleb128 0xc
 3022 072e 08000000 		.4byte	.LVL86
 3023 0732 B70B0000 		.4byte	0xbb7
 3024 0736 0C       		.uleb128 0xc
 3025 0737 10000000 		.4byte	.LVL87
 3026 073b 960B0000 		.4byte	0xb96
 3027 073f 15       		.uleb128 0x15
 3028 0740 62000000 		.4byte	.LVL96
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 119


 3029 0744 C20B0000 		.4byte	0xbc2
 3030 0748 53070000 		.4byte	0x753
 3031 074c 14       		.uleb128 0x14
 3032 074d 01       		.uleb128 0x1
 3033 074e 50       		.byte	0x50
 3034 074f 02       		.uleb128 0x2
 3035 0750 08       		.byte	0x8
 3036 0751 30       		.byte	0x30
 3037 0752 00       		.byte	0
 3038 0753 15       		.uleb128 0x15
 3039 0754 7E000000 		.4byte	.LVL99
 3040 0758 95060000 		.4byte	0x695
 3041 075c 66070000 		.4byte	0x766
 3042 0760 14       		.uleb128 0x14
 3043 0761 01       		.uleb128 0x1
 3044 0762 50       		.byte	0x50
 3045 0763 01       		.uleb128 0x1
 3046 0764 31       		.byte	0x31
 3047 0765 00       		.byte	0
 3048 0766 15       		.uleb128 0x15
 3049 0767 92000000 		.4byte	.LVL102
 3050 076b 95060000 		.4byte	0x695
 3051 076f 79070000 		.4byte	0x779
 3052 0773 14       		.uleb128 0x14
 3053 0774 01       		.uleb128 0x1
 3054 0775 50       		.byte	0x50
 3055 0776 01       		.uleb128 0x1
 3056 0777 31       		.byte	0x31
 3057 0778 00       		.byte	0
 3058 0779 13       		.uleb128 0x13
 3059 077a A8000000 		.4byte	.LVL104
 3060 077e A10B0000 		.4byte	0xba1
 3061 0782 14       		.uleb128 0x14
 3062 0783 01       		.uleb128 0x1
 3063 0784 50       		.byte	0x50
 3064 0785 02       		.uleb128 0x2
 3065 0786 75       		.byte	0x75
 3066 0787 00       		.sleb128 0
 3067 0788 00       		.byte	0
 3068 0789 00       		.byte	0
 3069 078a 09       		.uleb128 0x9
 3070 078b 30030000 		.4byte	.LASF69
 3071 078f 01       		.byte	0x1
 3072 0790 EA03     		.2byte	0x3ea
 3073 0792 00000000 		.4byte	.LFB10
 3074 0796 D8000000 		.4byte	.LFE10-.LFB10
 3075 079a 01       		.uleb128 0x1
 3076 079b 9C       		.byte	0x9c
 3077 079c 52080000 		.4byte	0x852
 3078 07a0 0E       		.uleb128 0xe
 3079 07a1 0E010000 		.4byte	.LASF24
 3080 07a5 01       		.byte	0x1
 3081 07a6 EA03     		.2byte	0x3ea
 3082 07a8 83000000 		.4byte	0x83
 3083 07ac 2C040000 		.4byte	.LLST34
 3084 07b0 0A       		.uleb128 0xa
 3085 07b1 1F010000 		.4byte	.LASF25
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 120


 3086 07b5 01       		.byte	0x1
 3087 07b6 EC03     		.2byte	0x3ec
 3088 07b8 6B000000 		.4byte	0x6b
 3089 07bc 7C040000 		.4byte	.LLST35
 3090 07c0 0A       		.uleb128 0xa
 3091 07c1 F3050000 		.4byte	.LASF70
 3092 07c5 01       		.byte	0x1
 3093 07c6 ED03     		.2byte	0x3ed
 3094 07c8 6B000000 		.4byte	0x6b
 3095 07cc 90040000 		.4byte	.LLST36
 3096 07d0 0A       		.uleb128 0xa
 3097 07d1 5F010000 		.4byte	.LASF71
 3098 07d5 01       		.byte	0x1
 3099 07d6 F003     		.2byte	0x3f0
 3100 07d8 83000000 		.4byte	0x83
 3101 07dc B4040000 		.4byte	.LLST37
 3102 07e0 0C       		.uleb128 0xc
 3103 07e1 26000000 		.4byte	.LVL107
 3104 07e5 960B0000 		.4byte	0xb96
 3105 07e9 0C       		.uleb128 0xc
 3106 07ea 2C000000 		.4byte	.LVL109
 3107 07ee 4A010000 		.4byte	0x14a
 3108 07f2 0C       		.uleb128 0xc
 3109 07f3 34000000 		.4byte	.LVL111
 3110 07f7 04010000 		.4byte	0x104
 3111 07fb 15       		.uleb128 0x15
 3112 07fc 74000000 		.4byte	.LVL118
 3113 0800 AC0B0000 		.4byte	0xbac
 3114 0804 0F080000 		.4byte	0x80f
 3115 0808 14       		.uleb128 0x14
 3116 0809 01       		.uleb128 0x1
 3117 080a 50       		.byte	0x50
 3118 080b 02       		.uleb128 0x2
 3119 080c 08       		.byte	0x8
 3120 080d 32       		.byte	0x32
 3121 080e 00       		.byte	0
 3122 080f 15       		.uleb128 0x15
 3123 0810 94000000 		.4byte	.LVL119
 3124 0814 AC0B0000 		.4byte	0xbac
 3125 0818 23080000 		.4byte	0x823
 3126 081c 14       		.uleb128 0x14
 3127 081d 01       		.uleb128 0x1
 3128 081e 50       		.byte	0x50
 3129 081f 02       		.uleb128 0x2
 3130 0820 08       		.byte	0x8
 3131 0821 32       		.byte	0x32
 3132 0822 00       		.byte	0
 3133 0823 0C       		.uleb128 0xc
 3134 0824 AE000000 		.4byte	.LVL121
 3135 0828 CE060000 		.4byte	0x6ce
 3136 082c 15       		.uleb128 0x15
 3137 082d B4000000 		.4byte	.LVL122
 3138 0831 A10B0000 		.4byte	0xba1
 3139 0835 42080000 		.4byte	0x842
 3140 0839 14       		.uleb128 0x14
 3141 083a 01       		.uleb128 0x1
 3142 083b 50       		.byte	0x50
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 121


 3143 083c 04       		.uleb128 0x4
 3144 083d 91       		.byte	0x91
 3145 083e 64       		.sleb128 -28
 3146 083f 94       		.byte	0x94
 3147 0840 01       		.byte	0x1
 3148 0841 00       		.byte	0
 3149 0842 13       		.uleb128 0x13
 3150 0843 BC000000 		.4byte	.LVL125
 3151 0847 0B040000 		.4byte	0x40b
 3152 084b 14       		.uleb128 0x14
 3153 084c 01       		.uleb128 0x1
 3154 084d 50       		.byte	0x50
 3155 084e 01       		.uleb128 0x1
 3156 084f 30       		.byte	0x30
 3157 0850 00       		.byte	0
 3158 0851 00       		.byte	0
 3159 0852 09       		.uleb128 0x9
 3160 0853 D9040000 		.4byte	.LASF72
 3161 0857 01       		.byte	0x1
 3162 0858 360C     		.2byte	0xc36
 3163 085a 00000000 		.4byte	.LFB29
 3164 085e 14000000 		.4byte	.LFE29-.LFB29
 3165 0862 01       		.uleb128 0x1
 3166 0863 9C       		.byte	0x9c
 3167 0864 82080000 		.4byte	0x882
 3168 0868 0E       		.uleb128 0xe
 3169 0869 C4060000 		.4byte	.LASF73
 3170 086d 01       		.byte	0x1
 3171 086e 360C     		.2byte	0xc36
 3172 0870 77000000 		.4byte	0x77
 3173 0874 F7040000 		.4byte	.LLST38
 3174 0878 0C       		.uleb128 0xc
 3175 0879 0C000000 		.4byte	.LVL128
 3176 087d AC0B0000 		.4byte	0xbac
 3177 0881 00       		.byte	0
 3178 0882 19       		.uleb128 0x19
 3179 0883 13010000 		.4byte	.LASF74
 3180 0887 01       		.byte	0x1
 3181 0888 440C     		.2byte	0xc44
 3182 088a 00000000 		.4byte	.LFB30
 3183 088e 4C000000 		.4byte	.LFE30-.LFB30
 3184 0892 01       		.uleb128 0x1
 3185 0893 9C       		.byte	0x9c
 3186 0894 A9080000 		.4byte	0x8a9
 3187 0898 0E       		.uleb128 0xe
 3188 0899 0E010000 		.4byte	.LASF24
 3189 089d 01       		.byte	0x1
 3190 089e 440C     		.2byte	0xc44
 3191 08a0 83000000 		.4byte	0x83
 3192 08a4 18050000 		.4byte	.LLST39
 3193 08a8 00       		.byte	0
 3194 08a9 16       		.uleb128 0x16
 3195 08aa 66060000 		.4byte	.LASF75
 3196 08ae 01       		.byte	0x1
 3197 08af B00C     		.2byte	0xcb0
 3198 08b1 00000000 		.4byte	.LFB34
 3199 08b5 10000000 		.4byte	.LFE34-.LFB34
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 122


 3200 08b9 01       		.uleb128 0x1
 3201 08ba 9C       		.byte	0x9c
 3202 08bb 16       		.uleb128 0x16
 3203 08bc CD000000 		.4byte	.LASF76
 3204 08c0 01       		.byte	0x1
 3205 08c1 C00C     		.2byte	0xcc0
 3206 08c3 00000000 		.4byte	.LFB35
 3207 08c7 10000000 		.4byte	.LFE35-.LFB35
 3208 08cb 01       		.uleb128 0x1
 3209 08cc 9C       		.byte	0x9c
 3210 08cd 09       		.uleb128 0x9
 3211 08ce 8E050000 		.4byte	.LASF77
 3212 08d2 01       		.byte	0x1
 3213 08d3 9F0C     		.2byte	0xc9f
 3214 08d5 00000000 		.4byte	.LFB33
 3215 08d9 18000000 		.4byte	.LFE33-.LFB33
 3216 08dd 01       		.uleb128 0x1
 3217 08de 9C       		.byte	0x9c
 3218 08df ED080000 		.4byte	0x8ed
 3219 08e3 0C       		.uleb128 0xc
 3220 08e4 06000000 		.4byte	.LVL133
 3221 08e8 BB080000 		.4byte	0x8bb
 3222 08ec 00       		.byte	0
 3223 08ed 16       		.uleb128 0x16
 3224 08ee 36060000 		.4byte	.LASF78
 3225 08f2 01       		.byte	0x1
 3226 08f3 D00C     		.2byte	0xcd0
 3227 08f5 00000000 		.4byte	.LFB36
 3228 08f9 10000000 		.4byte	.LFE36-.LFB36
 3229 08fd 01       		.uleb128 0x1
 3230 08fe 9C       		.byte	0x9c
 3231 08ff 09       		.uleb128 0x9
 3232 0900 D8060000 		.4byte	.LASF79
 3233 0904 01       		.byte	0x1
 3234 0905 E10C     		.2byte	0xce1
 3235 0907 00000000 		.4byte	.LFB37
 3236 090b 10000000 		.4byte	.LFE37-.LFB37
 3237 090f 01       		.uleb128 0x1
 3238 0910 9C       		.byte	0x9c
 3239 0911 26090000 		.4byte	0x926
 3240 0915 0E       		.uleb128 0xe
 3241 0916 30020000 		.4byte	.LASF59
 3242 091a 01       		.byte	0x1
 3243 091b E10C     		.2byte	0xce1
 3244 091d 83000000 		.4byte	0x83
 3245 0921 39050000 		.4byte	.LLST40
 3246 0925 00       		.byte	0
 3247 0926 0D       		.uleb128 0xd
 3248 0927 36010000 		.4byte	.LASF81
 3249 092b 01       		.byte	0x1
 3250 092c F10C     		.2byte	0xcf1
 3251 092e 83000000 		.4byte	0x83
 3252 0932 00000000 		.4byte	.LFB38
 3253 0936 10000000 		.4byte	.LFE38-.LFB38
 3254 093a 01       		.uleb128 0x1
 3255 093b 9C       		.byte	0x9c
 3256 093c 0D       		.uleb128 0xd
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 123


 3257 093d 04040000 		.4byte	.LASF82
 3258 0941 01       		.byte	0x1
 3259 0942 010D     		.2byte	0xd01
 3260 0944 83000000 		.4byte	0x83
 3261 0948 00000000 		.4byte	.LFB39
 3262 094c 10000000 		.4byte	.LFE39-.LFB39
 3263 0950 01       		.uleb128 0x1
 3264 0951 9C       		.byte	0x9c
 3265 0952 09       		.uleb128 0x9
 3266 0953 F9020000 		.4byte	.LASF83
 3267 0957 01       		.byte	0x1
 3268 0958 210D     		.2byte	0xd21
 3269 095a 00000000 		.4byte	.LFB40
 3270 095e 20000000 		.4byte	.LFE40-.LFB40
 3271 0962 01       		.uleb128 0x1
 3272 0963 9C       		.byte	0x9c
 3273 0964 77090000 		.4byte	0x977
 3274 0968 0F       		.uleb128 0xf
 3275 0969 36020000 		.4byte	.LASF84
 3276 096d 01       		.byte	0x1
 3277 096e 210D     		.2byte	0xd21
 3278 0970 83000000 		.4byte	0x83
 3279 0974 01       		.uleb128 0x1
 3280 0975 50       		.byte	0x50
 3281 0976 00       		.byte	0
 3282 0977 0D       		.uleb128 0xd
 3283 0978 1E060000 		.4byte	.LASF85
 3284 097c 01       		.byte	0x1
 3285 097d 3A0D     		.2byte	0xd3a
 3286 097f 83000000 		.4byte	0x83
 3287 0983 00000000 		.4byte	.LFB41
 3288 0987 10000000 		.4byte	.LFE41-.LFB41
 3289 098b 01       		.uleb128 0x1
 3290 098c 9C       		.byte	0x9c
 3291 098d 0D       		.uleb128 0xd
 3292 098e 50020000 		.4byte	.LASF86
 3293 0992 01       		.byte	0x1
 3294 0993 510D     		.2byte	0xd51
 3295 0995 83000000 		.4byte	0x83
 3296 0999 00000000 		.4byte	.LFB42
 3297 099d 10000000 		.4byte	.LFE42-.LFB42
 3298 09a1 01       		.uleb128 0x1
 3299 09a2 9C       		.byte	0x9c
 3300 09a3 1A       		.uleb128 0x1a
 3301 09a4 EB060000 		.4byte	.LASF111
 3302 09a8 01       		.byte	0x1
 3303 09a9 A60D     		.2byte	0xda6
 3304 09ab 00000000 		.4byte	.LFB46
 3305 09af 28000000 		.4byte	.LFE46-.LFB46
 3306 09b3 01       		.uleb128 0x1
 3307 09b4 9C       		.byte	0x9c
 3308 09b5 D1090000 		.4byte	0x9d1
 3309 09b9 1B       		.uleb128 0x1b
 3310 09ba 6900     		.ascii	"i\000"
 3311 09bc 01       		.byte	0x1
 3312 09bd A80D     		.2byte	0xda8
 3313 09bf 83000000 		.4byte	0x83
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 124


 3314 09c3 5A050000 		.4byte	.LLST41
 3315 09c7 0C       		.uleb128 0xc
 3316 09c8 06000000 		.4byte	.LVL137
 3317 09cc 8D090000 		.4byte	0x98d
 3318 09d0 00       		.byte	0
 3319 09d1 16       		.uleb128 0x16
 3320 09d2 73020000 		.4byte	.LASF87
 3321 09d6 01       		.byte	0x1
 3322 09d7 5E0D     		.2byte	0xd5e
 3323 09d9 00000000 		.4byte	.LFB43
 3324 09dd 0C000000 		.4byte	.LFE43-.LFB43
 3325 09e1 01       		.uleb128 0x1
 3326 09e2 9C       		.byte	0x9c
 3327 09e3 19       		.uleb128 0x19
 3328 09e4 22020000 		.4byte	.LASF88
 3329 09e8 01       		.byte	0x1
 3330 09e9 810C     		.2byte	0xc81
 3331 09eb 00000000 		.4byte	.LFB32
 3332 09ef 44000000 		.4byte	.LFE32-.LFB32
 3333 09f3 01       		.uleb128 0x1
 3334 09f4 9C       		.byte	0x9c
 3335 09f5 490A0000 		.4byte	0xa49
 3336 09f9 1B       		.uleb128 0x1b
 3337 09fa 6900     		.ascii	"i\000"
 3338 09fc 01       		.byte	0x1
 3339 09fd 830C     		.2byte	0xc83
 3340 09ff 83000000 		.4byte	0x83
 3341 0a03 78050000 		.4byte	.LLST42
 3342 0a07 15       		.uleb128 0x15
 3343 0a08 1C000000 		.4byte	.LVL147
 3344 0a0c 30040000 		.4byte	0x430
 3345 0a10 230A0000 		.4byte	0xa23
 3346 0a14 14       		.uleb128 0x14
 3347 0a15 01       		.uleb128 0x1
 3348 0a16 50       		.byte	0x50
 3349 0a17 01       		.uleb128 0x1
 3350 0a18 3F       		.byte	0x3f
 3351 0a19 14       		.uleb128 0x14
 3352 0a1a 01       		.uleb128 0x1
 3353 0a1b 51       		.byte	0x51
 3354 0a1c 05       		.uleb128 0x5
 3355 0a1d 03       		.byte	0x3
 3356 0a1e 00000000 		.4byte	CySysTickServiceCallbacks
 3357 0a22 00       		.byte	0
 3358 0a23 15       		.uleb128 0x15
 3359 0a24 22000000 		.4byte	.LVL148
 3360 0a28 52090000 		.4byte	0x952
 3361 0a2c 360A0000 		.4byte	0xa36
 3362 0a30 14       		.uleb128 0x14
 3363 0a31 01       		.uleb128 0x1
 3364 0a32 50       		.byte	0x50
 3365 0a33 01       		.uleb128 0x1
 3366 0a34 31       		.byte	0x31
 3367 0a35 00       		.byte	0
 3368 0a36 0C       		.uleb128 0xc
 3369 0a37 32000000 		.4byte	.LVL150
 3370 0a3b FF080000 		.4byte	0x8ff
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 125


 3371 0a3f 0C       		.uleb128 0xc
 3372 0a40 36000000 		.4byte	.LVL151
 3373 0a44 D1090000 		.4byte	0x9d1
 3374 0a48 00       		.byte	0
 3375 0a49 09       		.uleb128 0x9
 3376 0a4a 77030000 		.4byte	.LASF89
 3377 0a4e 01       		.byte	0x1
 3378 0a4f 640C     		.2byte	0xc64
 3379 0a51 00000000 		.4byte	.LFB31
 3380 0a55 20000000 		.4byte	.LFE31-.LFB31
 3381 0a59 01       		.uleb128 0x1
 3382 0a5a 9C       		.byte	0x9c
 3383 0a5b 720A0000 		.4byte	0xa72
 3384 0a5f 0C       		.uleb128 0xc
 3385 0a60 0E000000 		.4byte	.LVL152
 3386 0a64 E3090000 		.4byte	0x9e3
 3387 0a68 0C       		.uleb128 0xc
 3388 0a69 18000000 		.4byte	.LVL153
 3389 0a6d CD080000 		.4byte	0x8cd
 3390 0a71 00       		.byte	0
 3391 0a72 10       		.uleb128 0x10
 3392 0a73 CB050000 		.4byte	.LASF90
 3393 0a77 01       		.byte	0x1
 3394 0a78 810D     		.2byte	0xd81
 3395 0a7a E7000000 		.4byte	0xe7
 3396 0a7e 00000000 		.4byte	.LFB44
 3397 0a82 10000000 		.4byte	.LFE44-.LFB44
 3398 0a86 01       		.uleb128 0x1
 3399 0a87 9C       		.byte	0x9c
 3400 0a88 B90A0000 		.4byte	0xab9
 3401 0a8c 0E       		.uleb128 0xe
 3402 0a8d 20030000 		.4byte	.LASF43
 3403 0a91 01       		.byte	0x1
 3404 0a92 810D     		.2byte	0xd81
 3405 0a94 83000000 		.4byte	0x83
 3406 0a98 97050000 		.4byte	.LLST43
 3407 0a9c 0F       		.uleb128 0xf
 3408 0a9d FB030000 		.4byte	.LASF91
 3409 0aa1 01       		.byte	0x1
 3410 0aa2 810D     		.2byte	0xd81
 3411 0aa4 E7000000 		.4byte	0xe7
 3412 0aa8 01       		.uleb128 0x1
 3413 0aa9 51       		.byte	0x51
 3414 0aaa 11       		.uleb128 0x11
 3415 0aab 60000000 		.4byte	.LASF92
 3416 0aaf 01       		.byte	0x1
 3417 0ab0 830D     		.2byte	0xd83
 3418 0ab2 E7000000 		.4byte	0xe7
 3419 0ab6 01       		.uleb128 0x1
 3420 0ab7 50       		.byte	0x50
 3421 0ab8 00       		.byte	0
 3422 0ab9 10       		.uleb128 0x10
 3423 0aba 7D010000 		.4byte	.LASF93
 3424 0abe 01       		.byte	0x1
 3425 0abf 990D     		.2byte	0xd99
 3426 0ac1 E7000000 		.4byte	0xe7
 3427 0ac5 00000000 		.4byte	.LFB45
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 126


 3428 0ac9 0C000000 		.4byte	.LFE45-.LFB45
 3429 0acd 01       		.uleb128 0x1
 3430 0ace 9C       		.byte	0x9c
 3431 0acf E40A0000 		.4byte	0xae4
 3432 0ad3 0E       		.uleb128 0xe
 3433 0ad4 20030000 		.4byte	.LASF43
 3434 0ad8 01       		.byte	0x1
 3435 0ad9 990D     		.2byte	0xd99
 3436 0adb 83000000 		.4byte	0x83
 3437 0adf B8050000 		.4byte	.LLST44
 3438 0ae3 00       		.byte	0
 3439 0ae4 09       		.uleb128 0x9
 3440 0ae5 42020000 		.4byte	.LASF94
 3441 0ae9 01       		.byte	0x1
 3442 0aea C60D     		.2byte	0xdc6
 3443 0aec 00000000 		.4byte	.LFB47
 3444 0af0 70000000 		.4byte	.LFE47-.LFB47
 3445 0af4 01       		.uleb128 0x1
 3446 0af5 9C       		.byte	0x9c
 3447 0af6 090B0000 		.4byte	0xb09
 3448 0afa 0F       		.uleb128 0xf
 3449 0afb 01060000 		.4byte	.LASF95
 3450 0aff 01       		.byte	0x1
 3451 0b00 C60D     		.2byte	0xdc6
 3452 0b02 090B0000 		.4byte	0xb09
 3453 0b06 01       		.uleb128 0x1
 3454 0b07 50       		.byte	0x50
 3455 0b08 00       		.byte	0
 3456 0b09 06       		.uleb128 0x6
 3457 0b0a 04       		.byte	0x4
 3458 0b0b 83000000 		.4byte	0x83
 3459 0b0f 1C       		.uleb128 0x1c
 3460 0b10 E7000000 		.4byte	0xe7
 3461 0b14 1F0B0000 		.4byte	0xb1f
 3462 0b18 1D       		.uleb128 0x1d
 3463 0b19 E0000000 		.4byte	0xe0
 3464 0b1d 04       		.byte	0x4
 3465 0b1e 00       		.byte	0
 3466 0b1f 18       		.uleb128 0x18
 3467 0b20 E0050000 		.4byte	.LASF96
 3468 0b24 01       		.byte	0x1
 3469 0b25 22       		.byte	0x22
 3470 0b26 0F0B0000 		.4byte	0xb0f
 3471 0b2a 05       		.uleb128 0x5
 3472 0b2b 03       		.byte	0x3
 3473 0b2c 00000000 		.4byte	CySysTickCallbacks
 3474 0b30 1E       		.uleb128 0x1e
 3475 0b31 16040000 		.4byte	.LASF97
 3476 0b35 01       		.byte	0x1
 3477 0b36 1B       		.byte	0x1b
 3478 0b37 83000000 		.4byte	0x83
 3479 0b3b 05       		.uleb128 0x5
 3480 0b3c 03       		.byte	0x3
 3481 0b3d 00000000 		.4byte	cydelayFreqHz
 3482 0b41 1E       		.uleb128 0x1e
 3483 0b42 98010000 		.4byte	.LASF98
 3484 0b46 01       		.byte	0x1
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 127


 3485 0b47 1C       		.byte	0x1c
 3486 0b48 83000000 		.4byte	0x83
 3487 0b4c 05       		.uleb128 0x5
 3488 0b4d 03       		.byte	0x3
 3489 0b4e 00000000 		.4byte	cydelayFreqKhz
 3490 0b52 1E       		.uleb128 0x1e
 3491 0b53 57060000 		.4byte	.LASF99
 3492 0b57 01       		.byte	0x1
 3493 0b58 1D       		.byte	0x1d
 3494 0b59 6B000000 		.4byte	0x6b
 3495 0b5d 05       		.uleb128 0x5
 3496 0b5e 03       		.byte	0x3
 3497 0b5f 00000000 		.4byte	cydelayFreqMhz
 3498 0b63 1E       		.uleb128 0x1e
 3499 0b64 15020000 		.4byte	.LASF100
 3500 0b68 01       		.byte	0x1
 3501 0b69 1E       		.byte	0x1e
 3502 0b6a 83000000 		.4byte	0x83
 3503 0b6e 05       		.uleb128 0x5
 3504 0b6f 03       		.byte	0x3
 3505 0b70 00000000 		.4byte	cydelay32kMs
 3506 0b74 1E       		.uleb128 0x1e
 3507 0b75 8C000000 		.4byte	.LASF101
 3508 0b79 01       		.byte	0x1
 3509 0b7a 36       		.byte	0x36
 3510 0b7b 83000000 		.4byte	0x83
 3511 0b7f 05       		.uleb128 0x5
 3512 0b80 03       		.byte	0x3
 3513 0b81 00000000 		.4byte	CySysTickInitVar
 3514 0b85 1E       		.uleb128 0x1e
 3515 0b86 38000000 		.4byte	.LASF102
 3516 0b8a 01       		.byte	0x1
 3517 0b8b 58       		.byte	0x58
 3518 0b8c 83000000 		.4byte	0x83
 3519 0b90 05       		.uleb128 0x5
 3520 0b91 03       		.byte	0x3
 3521 0b92 00000000 		.4byte	CySysClkPumpConfig
 3522 0b96 1F       		.uleb128 0x1f
 3523 0b97 A4020000 		.4byte	.LASF103
 3524 0b9b A4020000 		.4byte	.LASF103
 3525 0b9f 03       		.byte	0x3
 3526 0ba0 F8       		.byte	0xf8
 3527 0ba1 1F       		.uleb128 0x1f
 3528 0ba2 3B040000 		.4byte	.LASF104
 3529 0ba6 3B040000 		.4byte	.LASF104
 3530 0baa 03       		.byte	0x3
 3531 0bab F9       		.byte	0xf9
 3532 0bac 1F       		.uleb128 0x1f
 3533 0bad 7F040000 		.4byte	.LASF105
 3534 0bb1 7F040000 		.4byte	.LASF105
 3535 0bb5 03       		.byte	0x3
 3536 0bb6 EF       		.byte	0xef
 3537 0bb7 1F       		.uleb128 0x1f
 3538 0bb8 AA000000 		.4byte	.LASF106
 3539 0bbc AA000000 		.4byte	.LASF106
 3540 0bc0 04       		.byte	0x4
 3541 0bc1 54       		.byte	0x54
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 128


 3542 0bc2 1F       		.uleb128 0x1f
 3543 0bc3 8D060000 		.4byte	.LASF107
 3544 0bc7 8D060000 		.4byte	.LASF107
 3545 0bcb 05       		.byte	0x5
 3546 0bcc 52       		.byte	0x52
 3547 0bcd 00       		.byte	0
 3548              		.section	.debug_abbrev,"",%progbits
 3549              	.Ldebug_abbrev0:
 3550 0000 01       		.uleb128 0x1
 3551 0001 11       		.uleb128 0x11
 3552 0002 01       		.byte	0x1
 3553 0003 25       		.uleb128 0x25
 3554 0004 0E       		.uleb128 0xe
 3555 0005 13       		.uleb128 0x13
 3556 0006 0B       		.uleb128 0xb
 3557 0007 03       		.uleb128 0x3
 3558 0008 0E       		.uleb128 0xe
 3559 0009 1B       		.uleb128 0x1b
 3560 000a 0E       		.uleb128 0xe
 3561 000b 55       		.uleb128 0x55
 3562 000c 17       		.uleb128 0x17
 3563 000d 11       		.uleb128 0x11
 3564 000e 01       		.uleb128 0x1
 3565 000f 10       		.uleb128 0x10
 3566 0010 17       		.uleb128 0x17
 3567 0011 00       		.byte	0
 3568 0012 00       		.byte	0
 3569 0013 02       		.uleb128 0x2
 3570 0014 24       		.uleb128 0x24
 3571 0015 00       		.byte	0
 3572 0016 0B       		.uleb128 0xb
 3573 0017 0B       		.uleb128 0xb
 3574 0018 3E       		.uleb128 0x3e
 3575 0019 0B       		.uleb128 0xb
 3576 001a 03       		.uleb128 0x3
 3577 001b 0E       		.uleb128 0xe
 3578 001c 00       		.byte	0
 3579 001d 00       		.byte	0
 3580 001e 03       		.uleb128 0x3
 3581 001f 24       		.uleb128 0x24
 3582 0020 00       		.byte	0
 3583 0021 0B       		.uleb128 0xb
 3584 0022 0B       		.uleb128 0xb
 3585 0023 3E       		.uleb128 0x3e
 3586 0024 0B       		.uleb128 0xb
 3587 0025 03       		.uleb128 0x3
 3588 0026 08       		.uleb128 0x8
 3589 0027 00       		.byte	0
 3590 0028 00       		.byte	0
 3591 0029 04       		.uleb128 0x4
 3592 002a 16       		.uleb128 0x16
 3593 002b 00       		.byte	0
 3594 002c 03       		.uleb128 0x3
 3595 002d 0E       		.uleb128 0xe
 3596 002e 3A       		.uleb128 0x3a
 3597 002f 0B       		.uleb128 0xb
 3598 0030 3B       		.uleb128 0x3b
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 129


 3599 0031 05       		.uleb128 0x5
 3600 0032 49       		.uleb128 0x49
 3601 0033 13       		.uleb128 0x13
 3602 0034 00       		.byte	0
 3603 0035 00       		.byte	0
 3604 0036 05       		.uleb128 0x5
 3605 0037 35       		.uleb128 0x35
 3606 0038 00       		.byte	0
 3607 0039 49       		.uleb128 0x49
 3608 003a 13       		.uleb128 0x13
 3609 003b 00       		.byte	0
 3610 003c 00       		.byte	0
 3611 003d 06       		.uleb128 0x6
 3612 003e 0F       		.uleb128 0xf
 3613 003f 00       		.byte	0
 3614 0040 0B       		.uleb128 0xb
 3615 0041 0B       		.uleb128 0xb
 3616 0042 49       		.uleb128 0x49
 3617 0043 13       		.uleb128 0x13
 3618 0044 00       		.byte	0
 3619 0045 00       		.byte	0
 3620 0046 07       		.uleb128 0x7
 3621 0047 15       		.uleb128 0x15
 3622 0048 00       		.byte	0
 3623 0049 27       		.uleb128 0x27
 3624 004a 19       		.uleb128 0x19
 3625 004b 00       		.byte	0
 3626 004c 00       		.byte	0
 3627 004d 08       		.uleb128 0x8
 3628 004e 2E       		.uleb128 0x2e
 3629 004f 00       		.byte	0
 3630 0050 3F       		.uleb128 0x3f
 3631 0051 19       		.uleb128 0x19
 3632 0052 03       		.uleb128 0x3
 3633 0053 0E       		.uleb128 0xe
 3634 0054 3A       		.uleb128 0x3a
 3635 0055 0B       		.uleb128 0xb
 3636 0056 3B       		.uleb128 0x3b
 3637 0057 0B       		.uleb128 0xb
 3638 0058 27       		.uleb128 0x27
 3639 0059 19       		.uleb128 0x19
 3640 005a 11       		.uleb128 0x11
 3641 005b 01       		.uleb128 0x1
 3642 005c 12       		.uleb128 0x12
 3643 005d 06       		.uleb128 0x6
 3644 005e 40       		.uleb128 0x40
 3645 005f 18       		.uleb128 0x18
 3646 0060 9742     		.uleb128 0x2117
 3647 0062 19       		.uleb128 0x19
 3648 0063 00       		.byte	0
 3649 0064 00       		.byte	0
 3650 0065 09       		.uleb128 0x9
 3651 0066 2E       		.uleb128 0x2e
 3652 0067 01       		.byte	0x1
 3653 0068 3F       		.uleb128 0x3f
 3654 0069 19       		.uleb128 0x19
 3655 006a 03       		.uleb128 0x3
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 130


 3656 006b 0E       		.uleb128 0xe
 3657 006c 3A       		.uleb128 0x3a
 3658 006d 0B       		.uleb128 0xb
 3659 006e 3B       		.uleb128 0x3b
 3660 006f 05       		.uleb128 0x5
 3661 0070 27       		.uleb128 0x27
 3662 0071 19       		.uleb128 0x19
 3663 0072 11       		.uleb128 0x11
 3664 0073 01       		.uleb128 0x1
 3665 0074 12       		.uleb128 0x12
 3666 0075 06       		.uleb128 0x6
 3667 0076 40       		.uleb128 0x40
 3668 0077 18       		.uleb128 0x18
 3669 0078 9742     		.uleb128 0x2117
 3670 007a 19       		.uleb128 0x19
 3671 007b 01       		.uleb128 0x1
 3672 007c 13       		.uleb128 0x13
 3673 007d 00       		.byte	0
 3674 007e 00       		.byte	0
 3675 007f 0A       		.uleb128 0xa
 3676 0080 34       		.uleb128 0x34
 3677 0081 00       		.byte	0
 3678 0082 03       		.uleb128 0x3
 3679 0083 0E       		.uleb128 0xe
 3680 0084 3A       		.uleb128 0x3a
 3681 0085 0B       		.uleb128 0xb
 3682 0086 3B       		.uleb128 0x3b
 3683 0087 05       		.uleb128 0x5
 3684 0088 49       		.uleb128 0x49
 3685 0089 13       		.uleb128 0x13
 3686 008a 02       		.uleb128 0x2
 3687 008b 17       		.uleb128 0x17
 3688 008c 00       		.byte	0
 3689 008d 00       		.byte	0
 3690 008e 0B       		.uleb128 0xb
 3691 008f 2E       		.uleb128 0x2e
 3692 0090 01       		.byte	0x1
 3693 0091 3F       		.uleb128 0x3f
 3694 0092 19       		.uleb128 0x19
 3695 0093 03       		.uleb128 0x3
 3696 0094 0E       		.uleb128 0xe
 3697 0095 3A       		.uleb128 0x3a
 3698 0096 0B       		.uleb128 0xb
 3699 0097 3B       		.uleb128 0x3b
 3700 0098 0B       		.uleb128 0xb
 3701 0099 27       		.uleb128 0x27
 3702 009a 19       		.uleb128 0x19
 3703 009b 11       		.uleb128 0x11
 3704 009c 01       		.uleb128 0x1
 3705 009d 12       		.uleb128 0x12
 3706 009e 06       		.uleb128 0x6
 3707 009f 40       		.uleb128 0x40
 3708 00a0 18       		.uleb128 0x18
 3709 00a1 9742     		.uleb128 0x2117
 3710 00a3 19       		.uleb128 0x19
 3711 00a4 01       		.uleb128 0x1
 3712 00a5 13       		.uleb128 0x13
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 131


 3713 00a6 00       		.byte	0
 3714 00a7 00       		.byte	0
 3715 00a8 0C       		.uleb128 0xc
 3716 00a9 898201   		.uleb128 0x4109
 3717 00ac 00       		.byte	0
 3718 00ad 11       		.uleb128 0x11
 3719 00ae 01       		.uleb128 0x1
 3720 00af 31       		.uleb128 0x31
 3721 00b0 13       		.uleb128 0x13
 3722 00b1 00       		.byte	0
 3723 00b2 00       		.byte	0
 3724 00b3 0D       		.uleb128 0xd
 3725 00b4 2E       		.uleb128 0x2e
 3726 00b5 00       		.byte	0
 3727 00b6 3F       		.uleb128 0x3f
 3728 00b7 19       		.uleb128 0x19
 3729 00b8 03       		.uleb128 0x3
 3730 00b9 0E       		.uleb128 0xe
 3731 00ba 3A       		.uleb128 0x3a
 3732 00bb 0B       		.uleb128 0xb
 3733 00bc 3B       		.uleb128 0x3b
 3734 00bd 05       		.uleb128 0x5
 3735 00be 27       		.uleb128 0x27
 3736 00bf 19       		.uleb128 0x19
 3737 00c0 49       		.uleb128 0x49
 3738 00c1 13       		.uleb128 0x13
 3739 00c2 11       		.uleb128 0x11
 3740 00c3 01       		.uleb128 0x1
 3741 00c4 12       		.uleb128 0x12
 3742 00c5 06       		.uleb128 0x6
 3743 00c6 40       		.uleb128 0x40
 3744 00c7 18       		.uleb128 0x18
 3745 00c8 9742     		.uleb128 0x2117
 3746 00ca 19       		.uleb128 0x19
 3747 00cb 00       		.byte	0
 3748 00cc 00       		.byte	0
 3749 00cd 0E       		.uleb128 0xe
 3750 00ce 05       		.uleb128 0x5
 3751 00cf 00       		.byte	0
 3752 00d0 03       		.uleb128 0x3
 3753 00d1 0E       		.uleb128 0xe
 3754 00d2 3A       		.uleb128 0x3a
 3755 00d3 0B       		.uleb128 0xb
 3756 00d4 3B       		.uleb128 0x3b
 3757 00d5 05       		.uleb128 0x5
 3758 00d6 49       		.uleb128 0x49
 3759 00d7 13       		.uleb128 0x13
 3760 00d8 02       		.uleb128 0x2
 3761 00d9 17       		.uleb128 0x17
 3762 00da 00       		.byte	0
 3763 00db 00       		.byte	0
 3764 00dc 0F       		.uleb128 0xf
 3765 00dd 05       		.uleb128 0x5
 3766 00de 00       		.byte	0
 3767 00df 03       		.uleb128 0x3
 3768 00e0 0E       		.uleb128 0xe
 3769 00e1 3A       		.uleb128 0x3a
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 132


 3770 00e2 0B       		.uleb128 0xb
 3771 00e3 3B       		.uleb128 0x3b
 3772 00e4 05       		.uleb128 0x5
 3773 00e5 49       		.uleb128 0x49
 3774 00e6 13       		.uleb128 0x13
 3775 00e7 02       		.uleb128 0x2
 3776 00e8 18       		.uleb128 0x18
 3777 00e9 00       		.byte	0
 3778 00ea 00       		.byte	0
 3779 00eb 10       		.uleb128 0x10
 3780 00ec 2E       		.uleb128 0x2e
 3781 00ed 01       		.byte	0x1
 3782 00ee 3F       		.uleb128 0x3f
 3783 00ef 19       		.uleb128 0x19
 3784 00f0 03       		.uleb128 0x3
 3785 00f1 0E       		.uleb128 0xe
 3786 00f2 3A       		.uleb128 0x3a
 3787 00f3 0B       		.uleb128 0xb
 3788 00f4 3B       		.uleb128 0x3b
 3789 00f5 05       		.uleb128 0x5
 3790 00f6 27       		.uleb128 0x27
 3791 00f7 19       		.uleb128 0x19
 3792 00f8 49       		.uleb128 0x49
 3793 00f9 13       		.uleb128 0x13
 3794 00fa 11       		.uleb128 0x11
 3795 00fb 01       		.uleb128 0x1
 3796 00fc 12       		.uleb128 0x12
 3797 00fd 06       		.uleb128 0x6
 3798 00fe 40       		.uleb128 0x40
 3799 00ff 18       		.uleb128 0x18
 3800 0100 9742     		.uleb128 0x2117
 3801 0102 19       		.uleb128 0x19
 3802 0103 01       		.uleb128 0x1
 3803 0104 13       		.uleb128 0x13
 3804 0105 00       		.byte	0
 3805 0106 00       		.byte	0
 3806 0107 11       		.uleb128 0x11
 3807 0108 34       		.uleb128 0x34
 3808 0109 00       		.byte	0
 3809 010a 03       		.uleb128 0x3
 3810 010b 0E       		.uleb128 0xe
 3811 010c 3A       		.uleb128 0x3a
 3812 010d 0B       		.uleb128 0xb
 3813 010e 3B       		.uleb128 0x3b
 3814 010f 05       		.uleb128 0x5
 3815 0110 49       		.uleb128 0x49
 3816 0111 13       		.uleb128 0x13
 3817 0112 02       		.uleb128 0x2
 3818 0113 18       		.uleb128 0x18
 3819 0114 00       		.byte	0
 3820 0115 00       		.byte	0
 3821 0116 12       		.uleb128 0x12
 3822 0117 34       		.uleb128 0x34
 3823 0118 00       		.byte	0
 3824 0119 03       		.uleb128 0x3
 3825 011a 0E       		.uleb128 0xe
 3826 011b 3A       		.uleb128 0x3a
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 133


 3827 011c 0B       		.uleb128 0xb
 3828 011d 3B       		.uleb128 0x3b
 3829 011e 05       		.uleb128 0x5
 3830 011f 49       		.uleb128 0x49
 3831 0120 13       		.uleb128 0x13
 3832 0121 1C       		.uleb128 0x1c
 3833 0122 06       		.uleb128 0x6
 3834 0123 00       		.byte	0
 3835 0124 00       		.byte	0
 3836 0125 13       		.uleb128 0x13
 3837 0126 898201   		.uleb128 0x4109
 3838 0129 01       		.byte	0x1
 3839 012a 11       		.uleb128 0x11
 3840 012b 01       		.uleb128 0x1
 3841 012c 31       		.uleb128 0x31
 3842 012d 13       		.uleb128 0x13
 3843 012e 00       		.byte	0
 3844 012f 00       		.byte	0
 3845 0130 14       		.uleb128 0x14
 3846 0131 8A8201   		.uleb128 0x410a
 3847 0134 00       		.byte	0
 3848 0135 02       		.uleb128 0x2
 3849 0136 18       		.uleb128 0x18
 3850 0137 9142     		.uleb128 0x2111
 3851 0139 18       		.uleb128 0x18
 3852 013a 00       		.byte	0
 3853 013b 00       		.byte	0
 3854 013c 15       		.uleb128 0x15
 3855 013d 898201   		.uleb128 0x4109
 3856 0140 01       		.byte	0x1
 3857 0141 11       		.uleb128 0x11
 3858 0142 01       		.uleb128 0x1
 3859 0143 31       		.uleb128 0x31
 3860 0144 13       		.uleb128 0x13
 3861 0145 01       		.uleb128 0x1
 3862 0146 13       		.uleb128 0x13
 3863 0147 00       		.byte	0
 3864 0148 00       		.byte	0
 3865 0149 16       		.uleb128 0x16
 3866 014a 2E       		.uleb128 0x2e
 3867 014b 00       		.byte	0
 3868 014c 3F       		.uleb128 0x3f
 3869 014d 19       		.uleb128 0x19
 3870 014e 03       		.uleb128 0x3
 3871 014f 0E       		.uleb128 0xe
 3872 0150 3A       		.uleb128 0x3a
 3873 0151 0B       		.uleb128 0xb
 3874 0152 3B       		.uleb128 0x3b
 3875 0153 05       		.uleb128 0x5
 3876 0154 27       		.uleb128 0x27
 3877 0155 19       		.uleb128 0x19
 3878 0156 11       		.uleb128 0x11
 3879 0157 01       		.uleb128 0x1
 3880 0158 12       		.uleb128 0x12
 3881 0159 06       		.uleb128 0x6
 3882 015a 40       		.uleb128 0x40
 3883 015b 18       		.uleb128 0x18
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 134


 3884 015c 9742     		.uleb128 0x2117
 3885 015e 19       		.uleb128 0x19
 3886 015f 00       		.byte	0
 3887 0160 00       		.byte	0
 3888 0161 17       		.uleb128 0x17
 3889 0162 34       		.uleb128 0x34
 3890 0163 00       		.byte	0
 3891 0164 03       		.uleb128 0x3
 3892 0165 0E       		.uleb128 0xe
 3893 0166 3A       		.uleb128 0x3a
 3894 0167 0B       		.uleb128 0xb
 3895 0168 3B       		.uleb128 0x3b
 3896 0169 0B       		.uleb128 0xb
 3897 016a 49       		.uleb128 0x49
 3898 016b 13       		.uleb128 0x13
 3899 016c 02       		.uleb128 0x2
 3900 016d 17       		.uleb128 0x17
 3901 016e 00       		.byte	0
 3902 016f 00       		.byte	0
 3903 0170 18       		.uleb128 0x18
 3904 0171 34       		.uleb128 0x34
 3905 0172 00       		.byte	0
 3906 0173 03       		.uleb128 0x3
 3907 0174 0E       		.uleb128 0xe
 3908 0175 3A       		.uleb128 0x3a
 3909 0176 0B       		.uleb128 0xb
 3910 0177 3B       		.uleb128 0x3b
 3911 0178 0B       		.uleb128 0xb
 3912 0179 49       		.uleb128 0x49
 3913 017a 13       		.uleb128 0x13
 3914 017b 02       		.uleb128 0x2
 3915 017c 18       		.uleb128 0x18
 3916 017d 00       		.byte	0
 3917 017e 00       		.byte	0
 3918 017f 19       		.uleb128 0x19
 3919 0180 2E       		.uleb128 0x2e
 3920 0181 01       		.byte	0x1
 3921 0182 3F       		.uleb128 0x3f
 3922 0183 19       		.uleb128 0x19
 3923 0184 03       		.uleb128 0x3
 3924 0185 0E       		.uleb128 0xe
 3925 0186 3A       		.uleb128 0x3a
 3926 0187 0B       		.uleb128 0xb
 3927 0188 3B       		.uleb128 0x3b
 3928 0189 05       		.uleb128 0x5
 3929 018a 27       		.uleb128 0x27
 3930 018b 19       		.uleb128 0x19
 3931 018c 11       		.uleb128 0x11
 3932 018d 01       		.uleb128 0x1
 3933 018e 12       		.uleb128 0x12
 3934 018f 06       		.uleb128 0x6
 3935 0190 40       		.uleb128 0x40
 3936 0191 18       		.uleb128 0x18
 3937 0192 9642     		.uleb128 0x2116
 3938 0194 19       		.uleb128 0x19
 3939 0195 01       		.uleb128 0x1
 3940 0196 13       		.uleb128 0x13
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 135


 3941 0197 00       		.byte	0
 3942 0198 00       		.byte	0
 3943 0199 1A       		.uleb128 0x1a
 3944 019a 2E       		.uleb128 0x2e
 3945 019b 01       		.byte	0x1
 3946 019c 03       		.uleb128 0x3
 3947 019d 0E       		.uleb128 0xe
 3948 019e 3A       		.uleb128 0x3a
 3949 019f 0B       		.uleb128 0xb
 3950 01a0 3B       		.uleb128 0x3b
 3951 01a1 05       		.uleb128 0x5
 3952 01a2 27       		.uleb128 0x27
 3953 01a3 19       		.uleb128 0x19
 3954 01a4 11       		.uleb128 0x11
 3955 01a5 01       		.uleb128 0x1
 3956 01a6 12       		.uleb128 0x12
 3957 01a7 06       		.uleb128 0x6
 3958 01a8 40       		.uleb128 0x40
 3959 01a9 18       		.uleb128 0x18
 3960 01aa 9642     		.uleb128 0x2116
 3961 01ac 19       		.uleb128 0x19
 3962 01ad 01       		.uleb128 0x1
 3963 01ae 13       		.uleb128 0x13
 3964 01af 00       		.byte	0
 3965 01b0 00       		.byte	0
 3966 01b1 1B       		.uleb128 0x1b
 3967 01b2 34       		.uleb128 0x34
 3968 01b3 00       		.byte	0
 3969 01b4 03       		.uleb128 0x3
 3970 01b5 08       		.uleb128 0x8
 3971 01b6 3A       		.uleb128 0x3a
 3972 01b7 0B       		.uleb128 0xb
 3973 01b8 3B       		.uleb128 0x3b
 3974 01b9 05       		.uleb128 0x5
 3975 01ba 49       		.uleb128 0x49
 3976 01bb 13       		.uleb128 0x13
 3977 01bc 02       		.uleb128 0x2
 3978 01bd 17       		.uleb128 0x17
 3979 01be 00       		.byte	0
 3980 01bf 00       		.byte	0
 3981 01c0 1C       		.uleb128 0x1c
 3982 01c1 01       		.uleb128 0x1
 3983 01c2 01       		.byte	0x1
 3984 01c3 49       		.uleb128 0x49
 3985 01c4 13       		.uleb128 0x13
 3986 01c5 01       		.uleb128 0x1
 3987 01c6 13       		.uleb128 0x13
 3988 01c7 00       		.byte	0
 3989 01c8 00       		.byte	0
 3990 01c9 1D       		.uleb128 0x1d
 3991 01ca 21       		.uleb128 0x21
 3992 01cb 00       		.byte	0
 3993 01cc 49       		.uleb128 0x49
 3994 01cd 13       		.uleb128 0x13
 3995 01ce 2F       		.uleb128 0x2f
 3996 01cf 0B       		.uleb128 0xb
 3997 01d0 00       		.byte	0
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 136


 3998 01d1 00       		.byte	0
 3999 01d2 1E       		.uleb128 0x1e
 4000 01d3 34       		.uleb128 0x34
 4001 01d4 00       		.byte	0
 4002 01d5 03       		.uleb128 0x3
 4003 01d6 0E       		.uleb128 0xe
 4004 01d7 3A       		.uleb128 0x3a
 4005 01d8 0B       		.uleb128 0xb
 4006 01d9 3B       		.uleb128 0x3b
 4007 01da 0B       		.uleb128 0xb
 4008 01db 49       		.uleb128 0x49
 4009 01dc 13       		.uleb128 0x13
 4010 01dd 3F       		.uleb128 0x3f
 4011 01de 19       		.uleb128 0x19
 4012 01df 02       		.uleb128 0x2
 4013 01e0 18       		.uleb128 0x18
 4014 01e1 00       		.byte	0
 4015 01e2 00       		.byte	0
 4016 01e3 1F       		.uleb128 0x1f
 4017 01e4 2E       		.uleb128 0x2e
 4018 01e5 00       		.byte	0
 4019 01e6 3F       		.uleb128 0x3f
 4020 01e7 19       		.uleb128 0x19
 4021 01e8 3C       		.uleb128 0x3c
 4022 01e9 19       		.uleb128 0x19
 4023 01ea 6E       		.uleb128 0x6e
 4024 01eb 0E       		.uleb128 0xe
 4025 01ec 03       		.uleb128 0x3
 4026 01ed 0E       		.uleb128 0xe
 4027 01ee 3A       		.uleb128 0x3a
 4028 01ef 0B       		.uleb128 0xb
 4029 01f0 3B       		.uleb128 0x3b
 4030 01f1 0B       		.uleb128 0xb
 4031 01f2 00       		.byte	0
 4032 01f3 00       		.byte	0
 4033 01f4 00       		.byte	0
 4034              		.section	.debug_loc,"",%progbits
 4035              	.Ldebug_loc0:
 4036              	.LLST0:
 4037 0000 18000000 		.4byte	.LVL0
 4038 0004 28000000 		.4byte	.LVL1
 4039 0008 0100     		.2byte	0x1
 4040 000a 53       		.byte	0x53
 4041 000b 28000000 		.4byte	.LVL1
 4042 000f 2A000000 		.4byte	.LVL2
 4043 0013 0700     		.2byte	0x7
 4044 0015 73       		.byte	0x73
 4045 0016 B39C8080 		.sleb128 -268431821
 4045      7F
 4046 001b 9F       		.byte	0x9f
 4047 001c 00000000 		.4byte	0
 4048 0020 00000000 		.4byte	0
 4049              	.LLST1:
 4050 0024 00000000 		.4byte	.LVL4
 4051 0028 07000000 		.4byte	.LVL5-1
 4052 002c 0100     		.2byte	0x1
 4053 002e 50       		.byte	0x50
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 137


 4054 002f 07000000 		.4byte	.LVL5-1
 4055 0033 12000000 		.4byte	.LVL7
 4056 0037 0100     		.2byte	0x1
 4057 0039 54       		.byte	0x54
 4058 003a 12000000 		.4byte	.LVL7
 4059 003e 20000000 		.4byte	.LFE6
 4060 0042 0400     		.2byte	0x4
 4061 0044 F3       		.byte	0xf3
 4062 0045 01       		.uleb128 0x1
 4063 0046 50       		.byte	0x50
 4064 0047 9F       		.byte	0x9f
 4065 0048 00000000 		.4byte	0
 4066 004c 00000000 		.4byte	0
 4067              	.LLST2:
 4068 0050 08000000 		.4byte	.LVL5
 4069 0054 19000000 		.4byte	.LVL9-1
 4070 0058 0100     		.2byte	0x1
 4071 005a 50       		.byte	0x50
 4072 005b 00000000 		.4byte	0
 4073 005f 00000000 		.4byte	0
 4074              	.LLST3:
 4075 0063 10000000 		.4byte	.LVL6
 4076 0067 14000000 		.4byte	.LVL8
 4077 006b 0100     		.2byte	0x1
 4078 006d 53       		.byte	0x53
 4079 006e 14000000 		.4byte	.LVL8
 4080 0072 1A000000 		.4byte	.LVL10
 4081 0076 0100     		.2byte	0x1
 4082 0078 54       		.byte	0x54
 4083 0079 00000000 		.4byte	0
 4084 007d 00000000 		.4byte	0
 4085              	.LLST4:
 4086 0081 06000000 		.4byte	.LVL12
 4087 0085 11000000 		.4byte	.LVL14-1
 4088 0089 0100     		.2byte	0x1
 4089 008b 50       		.byte	0x50
 4090 008c 00000000 		.4byte	0
 4091 0090 00000000 		.4byte	0
 4092              	.LLST5:
 4093 0094 0E000000 		.4byte	.LVL13
 4094 0098 14000000 		.4byte	.LVL15
 4095 009c 0100     		.2byte	0x1
 4096 009e 54       		.byte	0x54
 4097 009f 14000000 		.4byte	.LVL15
 4098 00a3 1C000000 		.4byte	.LFE8
 4099 00a7 0100     		.2byte	0x1
 4100 00a9 50       		.byte	0x50
 4101 00aa 00000000 		.4byte	0
 4102 00ae 00000000 		.4byte	0
 4103              	.LLST6:
 4104 00b2 00000000 		.4byte	.LVL16
 4105 00b6 07000000 		.4byte	.LVL17-1
 4106 00ba 0100     		.2byte	0x1
 4107 00bc 50       		.byte	0x50
 4108 00bd 07000000 		.4byte	.LVL17-1
 4109 00c1 0A000000 		.4byte	.LVL18
 4110 00c5 0100     		.2byte	0x1
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 138


 4111 00c7 54       		.byte	0x54
 4112 00c8 0A000000 		.4byte	.LVL18
 4113 00cc 24000000 		.4byte	.LFE9
 4114 00d0 0400     		.2byte	0x4
 4115 00d2 F3       		.byte	0xf3
 4116 00d3 01       		.uleb128 0x1
 4117 00d4 50       		.byte	0x50
 4118 00d5 9F       		.byte	0x9f
 4119 00d6 00000000 		.4byte	0
 4120 00da 00000000 		.4byte	0
 4121              	.LLST7:
 4122 00de 08000000 		.4byte	.LVL17
 4123 00e2 1D000000 		.4byte	.LVL19-1
 4124 00e6 0100     		.2byte	0x1
 4125 00e8 50       		.byte	0x50
 4126 00e9 00000000 		.4byte	0
 4127 00ed 00000000 		.4byte	0
 4128              	.LLST8:
 4129 00f1 00000000 		.4byte	.LVL20
 4130 00f5 07000000 		.4byte	.LVL21-1
 4131 00f9 0100     		.2byte	0x1
 4132 00fb 50       		.byte	0x50
 4133 00fc 07000000 		.4byte	.LVL21-1
 4134 0100 14000000 		.4byte	.LVL22
 4135 0104 0100     		.2byte	0x1
 4136 0106 54       		.byte	0x54
 4137 0107 14000000 		.4byte	.LVL22
 4138 010b 24000000 		.4byte	.LFE11
 4139 010f 0400     		.2byte	0x4
 4140 0111 F3       		.byte	0xf3
 4141 0112 01       		.uleb128 0x1
 4142 0113 50       		.byte	0x50
 4143 0114 9F       		.byte	0x9f
 4144 0115 00000000 		.4byte	0
 4145 0119 00000000 		.4byte	0
 4146              	.LLST9:
 4147 011d 08000000 		.4byte	.LVL21
 4148 0121 1D000000 		.4byte	.LVL23-1
 4149 0125 0100     		.2byte	0x1
 4150 0127 50       		.byte	0x50
 4151 0128 00000000 		.4byte	0
 4152 012c 00000000 		.4byte	0
 4153              	.LLST10:
 4154 0130 00000000 		.4byte	.LVL24
 4155 0134 04000000 		.4byte	.LVL25
 4156 0138 0100     		.2byte	0x1
 4157 013a 50       		.byte	0x50
 4158 013b 04000000 		.4byte	.LVL25
 4159 013f 14000000 		.4byte	.LFE12
 4160 0143 0100     		.2byte	0x1
 4161 0145 52       		.byte	0x52
 4162 0146 00000000 		.4byte	0
 4163 014a 00000000 		.4byte	0
 4164              	.LLST11:
 4165 014e 00000000 		.4byte	.LVL30
 4166 0152 04000000 		.4byte	.LVL31
 4167 0156 0100     		.2byte	0x1
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 139


 4168 0158 50       		.byte	0x50
 4169 0159 04000000 		.4byte	.LVL31
 4170 015d 14000000 		.4byte	.LFE21
 4171 0161 0400     		.2byte	0x4
 4172 0163 F3       		.byte	0xf3
 4173 0164 01       		.uleb128 0x1
 4174 0165 50       		.byte	0x50
 4175 0166 9F       		.byte	0x9f
 4176 0167 00000000 		.4byte	0
 4177 016b 00000000 		.4byte	0
 4178              	.LLST12:
 4179 016f 00000000 		.4byte	.LVL32
 4180 0173 08000000 		.4byte	.LVL33
 4181 0177 0100     		.2byte	0x1
 4182 0179 50       		.byte	0x50
 4183 017a 08000000 		.4byte	.LVL33
 4184 017e 18000000 		.4byte	.LFE22
 4185 0182 0400     		.2byte	0x4
 4186 0184 F3       		.byte	0xf3
 4187 0185 01       		.uleb128 0x1
 4188 0186 50       		.byte	0x50
 4189 0187 9F       		.byte	0x9f
 4190 0188 00000000 		.4byte	0
 4191 018c 00000000 		.4byte	0
 4192              	.LLST13:
 4193 0190 00000000 		.4byte	.LVL34
 4194 0194 04000000 		.4byte	.LVL35
 4195 0198 0100     		.2byte	0x1
 4196 019a 50       		.byte	0x50
 4197 019b 04000000 		.4byte	.LVL35
 4198 019f 14000000 		.4byte	.LFE23
 4199 01a3 0400     		.2byte	0x4
 4200 01a5 F3       		.byte	0xf3
 4201 01a6 01       		.uleb128 0x1
 4202 01a7 50       		.byte	0x50
 4203 01a8 9F       		.byte	0x9f
 4204 01a9 00000000 		.4byte	0
 4205 01ad 00000000 		.4byte	0
 4206              	.LLST14:
 4207 01b1 00000000 		.4byte	.LVL36
 4208 01b5 04000000 		.4byte	.LVL37
 4209 01b9 0100     		.2byte	0x1
 4210 01bb 50       		.byte	0x50
 4211 01bc 04000000 		.4byte	.LVL37
 4212 01c0 14000000 		.4byte	.LFE24
 4213 01c4 0400     		.2byte	0x4
 4214 01c6 F3       		.byte	0xf3
 4215 01c7 01       		.uleb128 0x1
 4216 01c8 50       		.byte	0x50
 4217 01c9 9F       		.byte	0x9f
 4218 01ca 00000000 		.4byte	0
 4219 01ce 00000000 		.4byte	0
 4220              	.LLST15:
 4221 01d2 00000000 		.4byte	.LVL38
 4222 01d6 04000000 		.4byte	.LVL39
 4223 01da 0100     		.2byte	0x1
 4224 01dc 50       		.byte	0x50
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 140


 4225 01dd 04000000 		.4byte	.LVL39
 4226 01e1 14000000 		.4byte	.LFE25
 4227 01e5 0400     		.2byte	0x4
 4228 01e7 F3       		.byte	0xf3
 4229 01e8 01       		.uleb128 0x1
 4230 01e9 50       		.byte	0x50
 4231 01ea 9F       		.byte	0x9f
 4232 01eb 00000000 		.4byte	0
 4233 01ef 00000000 		.4byte	0
 4234              	.LLST16:
 4235 01f3 00000000 		.4byte	.LVL41
 4236 01f7 0C000000 		.4byte	.LVL43
 4237 01fb 0100     		.2byte	0x1
 4238 01fd 50       		.byte	0x50
 4239 01fe 0C000000 		.4byte	.LVL43
 4240 0202 20000000 		.4byte	.LFE15
 4241 0206 0400     		.2byte	0x4
 4242 0208 F3       		.byte	0xf3
 4243 0209 01       		.uleb128 0x1
 4244 020a 50       		.byte	0x50
 4245 020b 9F       		.byte	0x9f
 4246 020c 00000000 		.4byte	0
 4247 0210 00000000 		.4byte	0
 4248              	.LLST17:
 4249 0214 00000000 		.4byte	.LVL41
 4250 0218 0F000000 		.4byte	.LVL44-1
 4251 021c 0100     		.2byte	0x1
 4252 021e 51       		.byte	0x51
 4253 021f 0F000000 		.4byte	.LVL44-1
 4254 0223 1E000000 		.4byte	.LVL46
 4255 0227 0100     		.2byte	0x1
 4256 0229 55       		.byte	0x55
 4257 022a 1E000000 		.4byte	.LVL46
 4258 022e 20000000 		.4byte	.LFE15
 4259 0232 0400     		.2byte	0x4
 4260 0234 F3       		.byte	0xf3
 4261 0235 01       		.uleb128 0x1
 4262 0236 51       		.byte	0x51
 4263 0237 9F       		.byte	0x9f
 4264 0238 00000000 		.4byte	0
 4265 023c 00000000 		.4byte	0
 4266              	.LLST18:
 4267 0240 00000000 		.4byte	.LVL47
 4268 0244 0A000000 		.4byte	.LVL49
 4269 0248 0100     		.2byte	0x1
 4270 024a 50       		.byte	0x50
 4271 024b 0A000000 		.4byte	.LVL49
 4272 024f 1C000000 		.4byte	.LFE16
 4273 0253 0400     		.2byte	0x4
 4274 0255 F3       		.byte	0xf3
 4275 0256 01       		.uleb128 0x1
 4276 0257 50       		.byte	0x50
 4277 0258 9F       		.byte	0x9f
 4278 0259 00000000 		.4byte	0
 4279 025d 00000000 		.4byte	0
 4280              	.LLST19:
 4281 0261 00000000 		.4byte	.LVL51
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 141


 4282 0265 0C000000 		.4byte	.LVL53
 4283 0269 0100     		.2byte	0x1
 4284 026b 50       		.byte	0x50
 4285 026c 0C000000 		.4byte	.LVL53
 4286 0270 22000000 		.4byte	.LFE17
 4287 0274 0400     		.2byte	0x4
 4288 0276 F3       		.byte	0xf3
 4289 0277 01       		.uleb128 0x1
 4290 0278 50       		.byte	0x50
 4291 0279 9F       		.byte	0x9f
 4292 027a 00000000 		.4byte	0
 4293 027e 00000000 		.4byte	0
 4294              	.LLST20:
 4295 0282 00000000 		.4byte	.LVL51
 4296 0286 0F000000 		.4byte	.LVL54-1
 4297 028a 0100     		.2byte	0x1
 4298 028c 51       		.byte	0x51
 4299 028d 0F000000 		.4byte	.LVL54-1
 4300 0291 20000000 		.4byte	.LVL56
 4301 0295 0100     		.2byte	0x1
 4302 0297 55       		.byte	0x55
 4303 0298 20000000 		.4byte	.LVL56
 4304 029c 22000000 		.4byte	.LFE17
 4305 02a0 0400     		.2byte	0x4
 4306 02a2 F3       		.byte	0xf3
 4307 02a3 01       		.uleb128 0x1
 4308 02a4 51       		.byte	0x51
 4309 02a5 9F       		.byte	0x9f
 4310 02a6 00000000 		.4byte	0
 4311 02aa 00000000 		.4byte	0
 4312              	.LLST21:
 4313 02ae 00000000 		.4byte	.LVL57
 4314 02b2 0A000000 		.4byte	.LVL59
 4315 02b6 0100     		.2byte	0x1
 4316 02b8 50       		.byte	0x50
 4317 02b9 0A000000 		.4byte	.LVL59
 4318 02bd 1E000000 		.4byte	.LFE18
 4319 02c1 0400     		.2byte	0x4
 4320 02c3 F3       		.byte	0xf3
 4321 02c4 01       		.uleb128 0x1
 4322 02c5 50       		.byte	0x50
 4323 02c6 9F       		.byte	0x9f
 4324 02c7 00000000 		.4byte	0
 4325 02cb 00000000 		.4byte	0
 4326              	.LLST22:
 4327 02cf 00000000 		.4byte	.LVL61
 4328 02d3 0C000000 		.4byte	.LVL62
 4329 02d7 0100     		.2byte	0x1
 4330 02d9 50       		.byte	0x50
 4331 02da 0C000000 		.4byte	.LVL62
 4332 02de 4C000000 		.4byte	.LFE19
 4333 02e2 0400     		.2byte	0x4
 4334 02e4 F3       		.byte	0xf3
 4335 02e5 01       		.uleb128 0x1
 4336 02e6 50       		.byte	0x50
 4337 02e7 9F       		.byte	0x9f
 4338 02e8 00000000 		.4byte	0
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 142


 4339 02ec 00000000 		.4byte	0
 4340              	.LLST23:
 4341 02f0 00000000 		.4byte	.LVL61
 4342 02f4 0F000000 		.4byte	.LVL63-1
 4343 02f8 0100     		.2byte	0x1
 4344 02fa 51       		.byte	0x51
 4345 02fb 0F000000 		.4byte	.LVL63-1
 4346 02ff 4C000000 		.4byte	.LFE19
 4347 0303 0400     		.2byte	0x4
 4348 0305 F3       		.byte	0xf3
 4349 0306 01       		.uleb128 0x1
 4350 0307 51       		.byte	0x51
 4351 0308 9F       		.byte	0x9f
 4352 0309 00000000 		.4byte	0
 4353 030d 00000000 		.4byte	0
 4354              	.LLST24:
 4355 0311 26000000 		.4byte	.LVL66
 4356 0315 45000000 		.4byte	.LVL72-1
 4357 0319 0100     		.2byte	0x1
 4358 031b 50       		.byte	0x50
 4359 031c 00000000 		.4byte	0
 4360 0320 00000000 		.4byte	0
 4361              	.LLST25:
 4362 0324 22000000 		.4byte	.LVL65
 4363 0328 46000000 		.4byte	.LVL73
 4364 032c 0100     		.2byte	0x1
 4365 032e 55       		.byte	0x55
 4366 032f 00000000 		.4byte	0
 4367 0333 00000000 		.4byte	0
 4368              	.LLST26:
 4369 0337 32000000 		.4byte	.LVL67
 4370 033b 38000000 		.4byte	.LVL68
 4371 033f 0100     		.2byte	0x1
 4372 0341 51       		.byte	0x51
 4373 0342 3A000000 		.4byte	.LVL69
 4374 0346 3C000000 		.4byte	.LVL70
 4375 034a 0100     		.2byte	0x1
 4376 034c 51       		.byte	0x51
 4377 034d 3C000000 		.4byte	.LVL70
 4378 0351 40000000 		.4byte	.LVL71
 4379 0355 0100     		.2byte	0x1
 4380 0357 53       		.byte	0x53
 4381 0358 40000000 		.4byte	.LVL71
 4382 035c 45000000 		.4byte	.LVL72-1
 4383 0360 0100     		.2byte	0x1
 4384 0362 51       		.byte	0x51
 4385 0363 00000000 		.4byte	0
 4386 0367 00000000 		.4byte	0
 4387              	.LLST27:
 4388 036b 00000000 		.4byte	.LVL74
 4389 036f 0A000000 		.4byte	.LVL75
 4390 0373 0100     		.2byte	0x1
 4391 0375 50       		.byte	0x50
 4392 0376 0A000000 		.4byte	.LVL75
 4393 037a 2C000000 		.4byte	.LFE20
 4394 037e 0400     		.2byte	0x4
 4395 0380 F3       		.byte	0xf3
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 143


 4396 0381 01       		.uleb128 0x1
 4397 0382 50       		.byte	0x50
 4398 0383 9F       		.byte	0x9f
 4399 0384 00000000 		.4byte	0
 4400 0388 00000000 		.4byte	0
 4401              	.LLST28:
 4402 038c 24000000 		.4byte	.LVL77
 4403 0390 26000000 		.4byte	.LVL78
 4404 0394 0100     		.2byte	0x1
 4405 0396 50       		.byte	0x50
 4406 0397 00000000 		.4byte	0
 4407 039b 00000000 		.4byte	0
 4408              	.LLST29:
 4409 039f 00000000 		.4byte	.LVL79
 4410 03a3 06000000 		.4byte	.LVL80
 4411 03a7 0100     		.2byte	0x1
 4412 03a9 50       		.byte	0x50
 4413 03aa 06000000 		.4byte	.LVL80
 4414 03ae 26000000 		.4byte	.LVL84
 4415 03b2 0100     		.2byte	0x1
 4416 03b4 54       		.byte	0x54
 4417 03b5 00000000 		.4byte	0
 4418 03b9 00000000 		.4byte	0
 4419              	.LLST30:
 4420 03bd 2A000000 		.4byte	.LVL89
 4421 03c1 3C000000 		.4byte	.LVL91
 4422 03c5 0100     		.2byte	0x1
 4423 03c7 52       		.byte	0x52
 4424 03c8 00000000 		.4byte	0
 4425 03cc 00000000 		.4byte	0
 4426              	.LLST31:
 4427 03d0 12000000 		.4byte	.LVL88
 4428 03d4 A8000000 		.4byte	.LVL104
 4429 03d8 0100     		.2byte	0x1
 4430 03da 55       		.byte	0x55
 4431 03db 00000000 		.4byte	0
 4432 03df 00000000 		.4byte	0
 4433              	.LLST32:
 4434 03e3 38000000 		.4byte	.LVL90
 4435 03e7 58000000 		.4byte	.LVL94
 4436 03eb 0100     		.2byte	0x1
 4437 03ed 53       		.byte	0x53
 4438 03ee 58000000 		.4byte	.LVL94
 4439 03f2 5C000000 		.4byte	.LVL95
 4440 03f6 0200     		.2byte	0x2
 4441 03f8 74       		.byte	0x74
 4442 03f9 00       		.sleb128 0
 4443 03fa 74000000 		.4byte	.LVL97
 4444 03fe 98000000 		.4byte	.LVL103
 4445 0402 0100     		.2byte	0x1
 4446 0404 56       		.byte	0x56
 4447 0405 00000000 		.4byte	0
 4448 0409 00000000 		.4byte	0
 4449              	.LLST33:
 4450 040d 04000000 		.4byte	.LVL85
 4451 0411 78000000 		.4byte	.LVL98
 4452 0415 0200     		.2byte	0x2
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 144


 4453 0417 30       		.byte	0x30
 4454 0418 9F       		.byte	0x9f
 4455 0419 78000000 		.4byte	.LVL98
 4456 041d A8000000 		.4byte	.LVL104
 4457 0421 0100     		.2byte	0x1
 4458 0423 54       		.byte	0x54
 4459 0424 00000000 		.4byte	0
 4460 0428 00000000 		.4byte	0
 4461              	.LLST34:
 4462 042c 00000000 		.4byte	.LVL105
 4463 0430 25000000 		.4byte	.LVL107-1
 4464 0434 0100     		.2byte	0x1
 4465 0436 50       		.byte	0x50
 4466 0437 25000000 		.4byte	.LVL107-1
 4467 043b A0000000 		.4byte	.LVL120
 4468 043f 0100     		.2byte	0x1
 4469 0441 54       		.byte	0x54
 4470 0442 A0000000 		.4byte	.LVL120
 4471 0446 B6000000 		.4byte	.LVL123
 4472 044a 0400     		.2byte	0x4
 4473 044c F3       		.byte	0xf3
 4474 044d 01       		.uleb128 0x1
 4475 044e 50       		.byte	0x50
 4476 044f 9F       		.byte	0x9f
 4477 0450 B6000000 		.4byte	.LVL123
 4478 0454 B8000000 		.4byte	.LVL124
 4479 0458 0100     		.2byte	0x1
 4480 045a 50       		.byte	0x50
 4481 045b B8000000 		.4byte	.LVL124
 4482 045f BC000000 		.4byte	.LVL125
 4483 0463 0100     		.2byte	0x1
 4484 0465 54       		.byte	0x54
 4485 0466 BC000000 		.4byte	.LVL125
 4486 046a D8000000 		.4byte	.LFE10
 4487 046e 0400     		.2byte	0x4
 4488 0470 F3       		.byte	0xf3
 4489 0471 01       		.uleb128 0x1
 4490 0472 50       		.byte	0x50
 4491 0473 9F       		.byte	0x9f
 4492 0474 00000000 		.4byte	0
 4493 0478 00000000 		.4byte	0
 4494              	.LLST35:
 4495 047c 28000000 		.4byte	.LVL108
 4496 0480 44000000 		.4byte	.LVL114
 4497 0484 0200     		.2byte	0x2
 4498 0486 91       		.byte	0x91
 4499 0487 64       		.sleb128 -28
 4500 0488 00000000 		.4byte	0
 4501 048c 00000000 		.4byte	0
 4502              	.LLST36:
 4503 0490 4C000000 		.4byte	.LVL115
 4504 0494 54000000 		.4byte	.LVL116
 4505 0498 0100     		.2byte	0x1
 4506 049a 53       		.byte	0x53
 4507 049b 54000000 		.4byte	.LVL116
 4508 049f 58000000 		.4byte	.LVL117
 4509 04a3 0700     		.2byte	0x7
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 145


 4510 04a5 0C       		.byte	0xc
 4511 04a6 0C0F0340 		.4byte	0x40030f0c
 4512 04aa 06       		.byte	0x6
 4513 04ab 9F       		.byte	0x9f
 4514 04ac 00000000 		.4byte	0
 4515 04b0 00000000 		.4byte	0
 4516              	.LLST37:
 4517 04b4 06000000 		.4byte	.LVL106
 4518 04b8 30000000 		.4byte	.LVL110
 4519 04bc 0200     		.2byte	0x2
 4520 04be 30       		.byte	0x30
 4521 04bf 9F       		.byte	0x9f
 4522 04c0 30000000 		.4byte	.LVL110
 4523 04c4 38000000 		.4byte	.LVL112
 4524 04c8 0200     		.2byte	0x2
 4525 04ca 31       		.byte	0x31
 4526 04cb 9F       		.byte	0x9f
 4527 04cc 38000000 		.4byte	.LVL112
 4528 04d0 3A000000 		.4byte	.LVL113
 4529 04d4 0200     		.2byte	0x2
 4530 04d6 30       		.byte	0x30
 4531 04d7 9F       		.byte	0x9f
 4532 04d8 3A000000 		.4byte	.LVL113
 4533 04dc B6000000 		.4byte	.LVL123
 4534 04e0 0100     		.2byte	0x1
 4535 04e2 56       		.byte	0x56
 4536 04e3 B6000000 		.4byte	.LVL123
 4537 04e7 BC000000 		.4byte	.LVL125
 4538 04eb 0200     		.2byte	0x2
 4539 04ed 30       		.byte	0x30
 4540 04ee 9F       		.byte	0x9f
 4541 04ef 00000000 		.4byte	0
 4542 04f3 00000000 		.4byte	0
 4543              	.LLST38:
 4544 04f7 00000000 		.4byte	.LVL126
 4545 04fb 08000000 		.4byte	.LVL127
 4546 04ff 0100     		.2byte	0x1
 4547 0501 50       		.byte	0x50
 4548 0502 08000000 		.4byte	.LVL127
 4549 0506 14000000 		.4byte	.LFE29
 4550 050a 0400     		.2byte	0x4
 4551 050c F3       		.byte	0xf3
 4552 050d 01       		.uleb128 0x1
 4553 050e 50       		.byte	0x50
 4554 050f 9F       		.byte	0x9f
 4555 0510 00000000 		.4byte	0
 4556 0514 00000000 		.4byte	0
 4557              	.LLST39:
 4558 0518 00000000 		.4byte	.LVL129
 4559 051c 1A000000 		.4byte	.LVL130
 4560 0520 0100     		.2byte	0x1
 4561 0522 50       		.byte	0x50
 4562 0523 1A000000 		.4byte	.LVL130
 4563 0527 4C000000 		.4byte	.LFE30
 4564 052b 0400     		.2byte	0x4
 4565 052d F3       		.byte	0xf3
 4566 052e 01       		.uleb128 0x1
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 146


 4567 052f 50       		.byte	0x50
 4568 0530 9F       		.byte	0x9f
 4569 0531 00000000 		.4byte	0
 4570 0535 00000000 		.4byte	0
 4571              	.LLST40:
 4572 0539 00000000 		.4byte	.LVL134
 4573 053d 02000000 		.4byte	.LVL135
 4574 0541 0100     		.2byte	0x1
 4575 0543 50       		.byte	0x50
 4576 0544 02000000 		.4byte	.LVL135
 4577 0548 10000000 		.4byte	.LFE37
 4578 054c 0400     		.2byte	0x4
 4579 054e F3       		.byte	0xf3
 4580 054f 01       		.uleb128 0x1
 4581 0550 50       		.byte	0x50
 4582 0551 9F       		.byte	0x9f
 4583 0552 00000000 		.4byte	0
 4584 0556 00000000 		.4byte	0
 4585              	.LLST41:
 4586 055a 0C000000 		.4byte	.LVL138
 4587 055e 1C000000 		.4byte	.LVL141
 4588 0562 0100     		.2byte	0x1
 4589 0564 54       		.byte	0x54
 4590 0565 1E000000 		.4byte	.LVL142
 4591 0569 22000000 		.4byte	.LVL143
 4592 056d 0100     		.2byte	0x1
 4593 056f 54       		.byte	0x54
 4594 0570 00000000 		.4byte	0
 4595 0574 00000000 		.4byte	0
 4596              	.LLST42:
 4597 0578 02000000 		.4byte	.LVL144
 4598 057c 06000000 		.4byte	.LVL145
 4599 0580 0200     		.2byte	0x2
 4600 0582 30       		.byte	0x30
 4601 0583 9F       		.byte	0x9f
 4602 0584 06000000 		.4byte	.LVL145
 4603 0588 1B000000 		.4byte	.LVL147-1
 4604 058c 0100     		.2byte	0x1
 4605 058e 53       		.byte	0x53
 4606 058f 00000000 		.4byte	0
 4607 0593 00000000 		.4byte	0
 4608              	.LLST43:
 4609 0597 00000000 		.4byte	.LVL154
 4610 059b 06000000 		.4byte	.LVL155
 4611 059f 0100     		.2byte	0x1
 4612 05a1 50       		.byte	0x50
 4613 05a2 06000000 		.4byte	.LVL155
 4614 05a6 10000000 		.4byte	.LFE44
 4615 05aa 0400     		.2byte	0x4
 4616 05ac F3       		.byte	0xf3
 4617 05ad 01       		.uleb128 0x1
 4618 05ae 50       		.byte	0x50
 4619 05af 9F       		.byte	0x9f
 4620 05b0 00000000 		.4byte	0
 4621 05b4 00000000 		.4byte	0
 4622              	.LLST44:
 4623 05b8 00000000 		.4byte	.LVL156
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 147


 4624 05bc 02000000 		.4byte	.LVL157
 4625 05c0 0100     		.2byte	0x1
 4626 05c2 50       		.byte	0x50
 4627 05c3 02000000 		.4byte	.LVL157
 4628 05c7 0C000000 		.4byte	.LFE45
 4629 05cb 0400     		.2byte	0x4
 4630 05cd F3       		.byte	0xf3
 4631 05ce 01       		.uleb128 0x1
 4632 05cf 50       		.byte	0x50
 4633 05d0 9F       		.byte	0x9f
 4634 05d1 00000000 		.4byte	0
 4635 05d5 00000000 		.4byte	0
 4636              		.section	.debug_aranges,"",%progbits
 4637 0000 8C010000 		.4byte	0x18c
 4638 0004 0200     		.2byte	0x2
 4639 0006 00000000 		.4byte	.Ldebug_info0
 4640 000a 04       		.byte	0x4
 4641 000b 00       		.byte	0
 4642 000c 0000     		.2byte	0
 4643 000e 0000     		.2byte	0
 4644 0010 00000000 		.4byte	.LFB1
 4645 0014 14000000 		.4byte	.LFE1-.LFB1
 4646 0018 00000000 		.4byte	.LFB4
 4647 001c 4C000000 		.4byte	.LFE4-.LFB4
 4648 0020 00000000 		.4byte	.LFB2
 4649 0024 18000000 		.4byte	.LFE2-.LFB2
 4650 0028 00000000 		.4byte	.LFB5
 4651 002c 14000000 		.4byte	.LFE5-.LFB5
 4652 0030 00000000 		.4byte	.LFB6
 4653 0034 20000000 		.4byte	.LFE6-.LFB6
 4654 0038 00000000 		.4byte	.LFB7
 4655 003c 34000000 		.4byte	.LFE7-.LFB7
 4656 0040 00000000 		.4byte	.LFB8
 4657 0044 1C000000 		.4byte	.LFE8-.LFB8
 4658 0048 00000000 		.4byte	.LFB9
 4659 004c 24000000 		.4byte	.LFE9-.LFB9
 4660 0050 00000000 		.4byte	.LFB11
 4661 0054 24000000 		.4byte	.LFE11-.LFB11
 4662 0058 00000000 		.4byte	.LFB12
 4663 005c 14000000 		.4byte	.LFE12-.LFB12
 4664 0060 00000000 		.4byte	.LFB13
 4665 0064 10000000 		.4byte	.LFE13-.LFB13
 4666 0068 00000000 		.4byte	.LFB14
 4667 006c 0C000000 		.4byte	.LFE14-.LFB14
 4668 0070 00000000 		.4byte	.LFB21
 4669 0074 14000000 		.4byte	.LFE21-.LFB21
 4670 0078 00000000 		.4byte	.LFB22
 4671 007c 18000000 		.4byte	.LFE22-.LFB22
 4672 0080 00000000 		.4byte	.LFB23
 4673 0084 14000000 		.4byte	.LFE23-.LFB23
 4674 0088 00000000 		.4byte	.LFB24
 4675 008c 14000000 		.4byte	.LFE24-.LFB24
 4676 0090 00000000 		.4byte	.LFB25
 4677 0094 14000000 		.4byte	.LFE25-.LFB25
 4678 0098 00000000 		.4byte	.LFB26
 4679 009c 04000000 		.4byte	.LFE26-.LFB26
 4680 00a0 00000000 		.4byte	.LFB15
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 148


 4681 00a4 20000000 		.4byte	.LFE15-.LFB15
 4682 00a8 00000000 		.4byte	.LFB16
 4683 00ac 1C000000 		.4byte	.LFE16-.LFB16
 4684 00b0 00000000 		.4byte	.LFB17
 4685 00b4 22000000 		.4byte	.LFE17-.LFB17
 4686 00b8 00000000 		.4byte	.LFB18
 4687 00bc 1E000000 		.4byte	.LFE18-.LFB18
 4688 00c0 00000000 		.4byte	.LFB19
 4689 00c4 4C000000 		.4byte	.LFE19-.LFB19
 4690 00c8 00000000 		.4byte	.LFB20
 4691 00cc 2C000000 		.4byte	.LFE20-.LFB20
 4692 00d0 00000000 		.4byte	.LFB27
 4693 00d4 18000000 		.4byte	.LFE27-.LFB27
 4694 00d8 00000000 		.4byte	.LFB28
 4695 00dc 30000000 		.4byte	.LFE28-.LFB28
 4696 00e0 00000000 		.4byte	.LFB3
 4697 00e4 D0000000 		.4byte	.LFE3-.LFB3
 4698 00e8 00000000 		.4byte	.LFB10
 4699 00ec D8000000 		.4byte	.LFE10-.LFB10
 4700 00f0 00000000 		.4byte	.LFB29
 4701 00f4 14000000 		.4byte	.LFE29-.LFB29
 4702 00f8 00000000 		.4byte	.LFB30
 4703 00fc 4C000000 		.4byte	.LFE30-.LFB30
 4704 0100 00000000 		.4byte	.LFB34
 4705 0104 10000000 		.4byte	.LFE34-.LFB34
 4706 0108 00000000 		.4byte	.LFB35
 4707 010c 10000000 		.4byte	.LFE35-.LFB35
 4708 0110 00000000 		.4byte	.LFB33
 4709 0114 18000000 		.4byte	.LFE33-.LFB33
 4710 0118 00000000 		.4byte	.LFB36
 4711 011c 10000000 		.4byte	.LFE36-.LFB36
 4712 0120 00000000 		.4byte	.LFB37
 4713 0124 10000000 		.4byte	.LFE37-.LFB37
 4714 0128 00000000 		.4byte	.LFB38
 4715 012c 10000000 		.4byte	.LFE38-.LFB38
 4716 0130 00000000 		.4byte	.LFB39
 4717 0134 10000000 		.4byte	.LFE39-.LFB39
 4718 0138 00000000 		.4byte	.LFB40
 4719 013c 20000000 		.4byte	.LFE40-.LFB40
 4720 0140 00000000 		.4byte	.LFB41
 4721 0144 10000000 		.4byte	.LFE41-.LFB41
 4722 0148 00000000 		.4byte	.LFB42
 4723 014c 10000000 		.4byte	.LFE42-.LFB42
 4724 0150 00000000 		.4byte	.LFB46
 4725 0154 28000000 		.4byte	.LFE46-.LFB46
 4726 0158 00000000 		.4byte	.LFB43
 4727 015c 0C000000 		.4byte	.LFE43-.LFB43
 4728 0160 00000000 		.4byte	.LFB32
 4729 0164 44000000 		.4byte	.LFE32-.LFB32
 4730 0168 00000000 		.4byte	.LFB31
 4731 016c 20000000 		.4byte	.LFE31-.LFB31
 4732 0170 00000000 		.4byte	.LFB44
 4733 0174 10000000 		.4byte	.LFE44-.LFB44
 4734 0178 00000000 		.4byte	.LFB45
 4735 017c 0C000000 		.4byte	.LFE45-.LFB45
 4736 0180 00000000 		.4byte	.LFB47
 4737 0184 70000000 		.4byte	.LFE47-.LFB47
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 149


 4738 0188 00000000 		.4byte	0
 4739 018c 00000000 		.4byte	0
 4740              		.section	.debug_ranges,"",%progbits
 4741              	.Ldebug_ranges0:
 4742 0000 00000000 		.4byte	.LFB1
 4743 0004 14000000 		.4byte	.LFE1
 4744 0008 00000000 		.4byte	.LFB4
 4745 000c 4C000000 		.4byte	.LFE4
 4746 0010 00000000 		.4byte	.LFB2
 4747 0014 18000000 		.4byte	.LFE2
 4748 0018 00000000 		.4byte	.LFB5
 4749 001c 14000000 		.4byte	.LFE5
 4750 0020 00000000 		.4byte	.LFB6
 4751 0024 20000000 		.4byte	.LFE6
 4752 0028 00000000 		.4byte	.LFB7
 4753 002c 34000000 		.4byte	.LFE7
 4754 0030 00000000 		.4byte	.LFB8
 4755 0034 1C000000 		.4byte	.LFE8
 4756 0038 00000000 		.4byte	.LFB9
 4757 003c 24000000 		.4byte	.LFE9
 4758 0040 00000000 		.4byte	.LFB11
 4759 0044 24000000 		.4byte	.LFE11
 4760 0048 00000000 		.4byte	.LFB12
 4761 004c 14000000 		.4byte	.LFE12
 4762 0050 00000000 		.4byte	.LFB13
 4763 0054 10000000 		.4byte	.LFE13
 4764 0058 00000000 		.4byte	.LFB14
 4765 005c 0C000000 		.4byte	.LFE14
 4766 0060 00000000 		.4byte	.LFB21
 4767 0064 14000000 		.4byte	.LFE21
 4768 0068 00000000 		.4byte	.LFB22
 4769 006c 18000000 		.4byte	.LFE22
 4770 0070 00000000 		.4byte	.LFB23
 4771 0074 14000000 		.4byte	.LFE23
 4772 0078 00000000 		.4byte	.LFB24
 4773 007c 14000000 		.4byte	.LFE24
 4774 0080 00000000 		.4byte	.LFB25
 4775 0084 14000000 		.4byte	.LFE25
 4776 0088 00000000 		.4byte	.LFB26
 4777 008c 04000000 		.4byte	.LFE26
 4778 0090 00000000 		.4byte	.LFB15
 4779 0094 20000000 		.4byte	.LFE15
 4780 0098 00000000 		.4byte	.LFB16
 4781 009c 1C000000 		.4byte	.LFE16
 4782 00a0 00000000 		.4byte	.LFB17
 4783 00a4 22000000 		.4byte	.LFE17
 4784 00a8 00000000 		.4byte	.LFB18
 4785 00ac 1E000000 		.4byte	.LFE18
 4786 00b0 00000000 		.4byte	.LFB19
 4787 00b4 4C000000 		.4byte	.LFE19
 4788 00b8 00000000 		.4byte	.LFB20
 4789 00bc 2C000000 		.4byte	.LFE20
 4790 00c0 00000000 		.4byte	.LFB27
 4791 00c4 18000000 		.4byte	.LFE27
 4792 00c8 00000000 		.4byte	.LFB28
 4793 00cc 30000000 		.4byte	.LFE28
 4794 00d0 00000000 		.4byte	.LFB3
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 150


 4795 00d4 D0000000 		.4byte	.LFE3
 4796 00d8 00000000 		.4byte	.LFB10
 4797 00dc D8000000 		.4byte	.LFE10
 4798 00e0 00000000 		.4byte	.LFB29
 4799 00e4 14000000 		.4byte	.LFE29
 4800 00e8 00000000 		.4byte	.LFB30
 4801 00ec 4C000000 		.4byte	.LFE30
 4802 00f0 00000000 		.4byte	.LFB34
 4803 00f4 10000000 		.4byte	.LFE34
 4804 00f8 00000000 		.4byte	.LFB35
 4805 00fc 10000000 		.4byte	.LFE35
 4806 0100 00000000 		.4byte	.LFB33
 4807 0104 18000000 		.4byte	.LFE33
 4808 0108 00000000 		.4byte	.LFB36
 4809 010c 10000000 		.4byte	.LFE36
 4810 0110 00000000 		.4byte	.LFB37
 4811 0114 10000000 		.4byte	.LFE37
 4812 0118 00000000 		.4byte	.LFB38
 4813 011c 10000000 		.4byte	.LFE38
 4814 0120 00000000 		.4byte	.LFB39
 4815 0124 10000000 		.4byte	.LFE39
 4816 0128 00000000 		.4byte	.LFB40
 4817 012c 20000000 		.4byte	.LFE40
 4818 0130 00000000 		.4byte	.LFB41
 4819 0134 10000000 		.4byte	.LFE41
 4820 0138 00000000 		.4byte	.LFB42
 4821 013c 10000000 		.4byte	.LFE42
 4822 0140 00000000 		.4byte	.LFB46
 4823 0144 28000000 		.4byte	.LFE46
 4824 0148 00000000 		.4byte	.LFB43
 4825 014c 0C000000 		.4byte	.LFE43
 4826 0150 00000000 		.4byte	.LFB32
 4827 0154 44000000 		.4byte	.LFE32
 4828 0158 00000000 		.4byte	.LFB31
 4829 015c 20000000 		.4byte	.LFE31
 4830 0160 00000000 		.4byte	.LFB44
 4831 0164 10000000 		.4byte	.LFE44
 4832 0168 00000000 		.4byte	.LFB45
 4833 016c 0C000000 		.4byte	.LFE45
 4834 0170 00000000 		.4byte	.LFB47
 4835 0174 70000000 		.4byte	.LFE47
 4836 0178 00000000 		.4byte	0
 4837 017c 00000000 		.4byte	0
 4838              		.section	.debug_line,"",%progbits
 4839              	.Ldebug_line0:
 4840 0000 D8040000 		.section	.debug_str,"MS",%progbits,1
 4840      02006700 
 4840      00000201 
 4840      FB0E0D00 
 4840      01010101 
 4841              	.LASF52:
 4842 0000 72616D56 		.ascii	"ramVectorTable\000"
 4842      6563746F 
 4842      72546162 
 4842      6C6500
 4843              	.LASF10:
 4844 000f 75696E74 		.ascii	"uint16\000"
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 151


 4844      313600
 4845              	.LASF39:
 4846 0016 696E7453 		.ascii	"intState\000"
 4846      74617465 
 4846      00
 4847              	.LASF23:
 4848 001f 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 4848      73436C6B 
 4848      57726974 
 4848      65486663 
 4848      6C6B4469 
 4849              	.LASF102:
 4850 0038 43795379 		.ascii	"CySysClkPumpConfig\000"
 4850      73436C6B 
 4850      50756D70 
 4850      436F6E66 
 4850      696700
 4851              	.LASF27:
 4852 004b 43795379 		.ascii	"CySysEnablePumpClock\000"
 4852      73456E61 
 4852      626C6550 
 4852      756D7043 
 4852      6C6F636B 
 4853              	.LASF92:
 4854 0060 72657456 		.ascii	"retVal\000"
 4854      616C00
 4855              	.LASF38:
 4856 0067 43794469 		.ascii	"CyDisableInts\000"
 4856      7361626C 
 4856      65496E74 
 4856      7300
 4857              	.LASF7:
 4858 0075 6C6F6E67 		.ascii	"long long unsigned int\000"
 4858      206C6F6E 
 4858      6720756E 
 4858      7369676E 
 4858      65642069 
 4859              	.LASF101:
 4860 008c 43795379 		.ascii	"CySysTickInitVar\000"
 4860      73546963 
 4860      6B496E69 
 4860      74566172 
 4860      00
 4861              	.LASF40:
 4862 009d 4379456E 		.ascii	"CyEnableInts\000"
 4862      61626C65 
 4862      496E7473 
 4862      00
 4863              	.LASF106:
 4864 00aa 43795379 		.ascii	"CySysClkWcoEnabled\000"
 4864      73436C6B 
 4864      57636F45 
 4864      6E61626C 
 4864      656400
 4865              	.LASF62:
 4866 00bd 4379536F 		.ascii	"CySoftwareReset\000"
 4866      66747761 
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 152


 4866      72655265 
 4866      73657400 
 4867              	.LASF76:
 4868 00cd 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 4868      73546963 
 4868      6B456E61 
 4868      626C6549 
 4868      6E746572 
 4869              	.LASF44:
 4870 00e6 4379496E 		.ascii	"CyIntGetState\000"
 4870      74476574 
 4870      53746174 
 4870      6500
 4871              	.LASF6:
 4872 00f4 6C6F6E67 		.ascii	"long long int\000"
 4872      206C6F6E 
 4872      6720696E 
 4872      7400
 4873              	.LASF0:
 4874 0102 7369676E 		.ascii	"signed char\000"
 4874      65642063 
 4874      68617200 
 4875              	.LASF24:
 4876 010e 66726571 		.ascii	"freq\000"
 4876      00
 4877              	.LASF74:
 4878 0113 43794465 		.ascii	"CyDelayFreq\000"
 4878      6C617946 
 4878      72657100 
 4879              	.LASF25:
 4880 011f 696E7465 		.ascii	"interruptState\000"
 4880      72727570 
 4880      74537461 
 4880      746500
 4881              	.LASF67:
 4882 012e 6C664C69 		.ascii	"lfLimit\000"
 4882      6D697400 
 4883              	.LASF81:
 4884 0136 43795379 		.ascii	"CySysTickGetReload\000"
 4884      73546963 
 4884      6B476574 
 4884      52656C6F 
 4884      616400
 4885              	.LASF80:
 4886 0149 43795379 		.ascii	"CySysClkImoGetWcoLock\000"
 4886      73436C6B 
 4886      496D6F47 
 4886      65745763 
 4886      6F4C6F63 
 4887              	.LASF71:
 4888 015f 77636F4C 		.ascii	"wcoLock\000"
 4888      6F636B00 
 4889              	.LASF4:
 4890 0167 6C6F6E67 		.ascii	"long int\000"
 4890      20696E74 
 4890      00
 4891              	.LASF45:
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 153


 4892 0170 4379496E 		.ascii	"CyIntDisable\000"
 4892      74446973 
 4892      61626C65 
 4892      00
 4893              	.LASF93:
 4894 017d 43795379 		.ascii	"CySysTickGetCallback\000"
 4894      73546963 
 4894      6B476574 
 4894      43616C6C 
 4894      6261636B 
 4895              	.LASF9:
 4896 0192 75696E74 		.ascii	"uint8\000"
 4896      3800
 4897              	.LASF98:
 4898 0198 63796465 		.ascii	"cydelayFreqKhz\000"
 4898      6C617946 
 4898      7265714B 
 4898      687A00
 4899              	.LASF29:
 4900 01a7 656E6162 		.ascii	"enable\000"
 4900      6C6500
 4901              	.LASF13:
 4902 01ae 646F7562 		.ascii	"double\000"
 4902      6C6500
 4903              	.LASF58:
 4904 01b5 73686966 		.ascii	"shift\000"
 4904      7400
 4905              	.LASF11:
 4906 01bb 75696E74 		.ascii	"uint32\000"
 4906      333200
 4907              	.LASF18:
 4908 01c2 6C6F6E67 		.ascii	"long double\000"
 4908      20646F75 
 4908      626C6500 
 4909              	.LASF41:
 4910 01ce 6D61736B 		.ascii	"mask\000"
 4910      00
 4911              	.LASF34:
 4912 01d3 43795379 		.ascii	"CySysClkGetSysclkSource\000"
 4912      73436C6B 
 4912      47657453 
 4912      7973636C 
 4912      6B536F75 
 4913              	.LASF65:
 4914 01eb 43795379 		.ascii	"CySysClkImoEnableWcoLock\000"
 4914      73436C6B 
 4914      496D6F45 
 4914      6E61626C 
 4914      6557636F 
 4915              	.LASF60:
 4916 0204 4379496E 		.ascii	"CyIntGetPriority\000"
 4916      74476574 
 4916      5072696F 
 4916      72697479 
 4916      00
 4917              	.LASF100:
 4918 0215 63796465 		.ascii	"cydelay32kMs\000"
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 154


 4918      6C617933 
 4918      326B4D73 
 4918      00
 4919              	.LASF88:
 4920 0222 43795379 		.ascii	"CySysTickInit\000"
 4920      73546963 
 4920      6B496E69 
 4920      7400
 4921              	.LASF59:
 4922 0230 76616C75 		.ascii	"value\000"
 4922      6500
 4923              	.LASF84:
 4924 0236 636C6F63 		.ascii	"clockSource\000"
 4924      6B536F75 
 4924      72636500 
 4925              	.LASF94:
 4926 0242 43794765 		.ascii	"CyGetUniqueId\000"
 4926      74556E69 
 4926      71756549 
 4926      6400
 4927              	.LASF86:
 4928 0250 43795379 		.ascii	"CySysTickGetCountFlag\000"
 4928      73546963 
 4928      6B476574 
 4928      436F756E 
 4928      74466C61 
 4929              	.LASF8:
 4930 0266 756E7369 		.ascii	"unsigned int\000"
 4930      676E6564 
 4930      20696E74 
 4930      00
 4931              	.LASF87:
 4932 0273 43795379 		.ascii	"CySysTickClear\000"
 4932      73546963 
 4932      6B436C65 
 4932      617200
 4933              	.LASF5:
 4934 0282 6C6F6E67 		.ascii	"long unsigned int\000"
 4934      20756E73 
 4934      69676E65 
 4934      6420696E 
 4934      7400
 4935              	.LASF22:
 4936 0294 43795379 		.ascii	"CySysClkImoStop\000"
 4936      73436C6B 
 4936      496D6F53 
 4936      746F7000 
 4937              	.LASF103:
 4938 02a4 4379456E 		.ascii	"CyEnterCriticalSection\000"
 4938      74657243 
 4938      72697469 
 4938      63616C53 
 4938      65637469 
 4939              	.LASF46:
 4940 02bb 4379496E 		.ascii	"CyIntSetPending\000"
 4940      74536574 
 4940      50656E64 
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 155


 4940      696E6700 
 4941              	.LASF35:
 4942 02cb 43795379 		.ascii	"CySysGetResetReason\000"
 4942      73476574 
 4942      52657365 
 4942      74526561 
 4942      736F6E00 
 4943              	.LASF3:
 4944 02df 73686F72 		.ascii	"short unsigned int\000"
 4944      7420756E 
 4944      7369676E 
 4944      65642069 
 4944      6E7400
 4945              	.LASF66:
 4946 02f2 72656754 		.ascii	"regTmp\000"
 4946      6D7000
 4947              	.LASF83:
 4948 02f9 43795379 		.ascii	"CySysTickSetClockSource\000"
 4948      73546963 
 4948      6B536574 
 4948      436C6F63 
 4948      6B536F75 
 4949              	.LASF54:
 4950 0311 4379496E 		.ascii	"CyIntSetVector\000"
 4950      74536574 
 4950      56656374 
 4950      6F7200
 4951              	.LASF43:
 4952 0320 6E756D62 		.ascii	"number\000"
 4952      657200
 4953              	.LASF57:
 4954 0327 7072696F 		.ascii	"priority\000"
 4954      72697479 
 4954      00
 4955              	.LASF69:
 4956 0330 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 4956      73436C6B 
 4956      57726974 
 4956      65496D6F 
 4956      46726571 
 4957              	.LASF49:
 4958 0345 4379496E 		.ascii	"CyIntSetSysVector\000"
 4958      74536574 
 4958      53797356 
 4958      6563746F 
 4958      7200
 4959              	.LASF21:
 4960 0357 43795379 		.ascii	"CySysClkImoDisableWcoLock\000"
 4960      73436C6B 
 4960      496D6F44 
 4960      69736162 
 4960      6C655763 
 4961              	.LASF16:
 4962 0371 72656733 		.ascii	"reg32\000"
 4962      3200
 4963              	.LASF89:
 4964 0377 43795379 		.ascii	"CySysTickStart\000"
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 156


 4964      73546963 
 4964      6B537461 
 4964      727400
 4965              	.LASF37:
 4966 0386 72657475 		.ascii	"returnStatus\000"
 4966      726E5374 
 4966      61747573 
 4966      00
 4967              	.LASF19:
 4968 0393 73697A65 		.ascii	"sizetype\000"
 4968      74797065 
 4968      00
 4969              	.LASF47:
 4970 039c 4379496E 		.ascii	"CyIntClearPending\000"
 4970      74436C65 
 4970      61725065 
 4970      6E64696E 
 4970      6700
 4971              	.LASF110:
 4972 03ae 433A5C55 		.ascii	"C:\\Users\\PC\\Documents\\PSoC Creator\\yellowChip\\"
 4972      73657273 
 4972      5C50435C 
 4972      446F6375 
 4972      6D656E74 
 4973 03dc 50574D2E 		.ascii	"PWM.cydsn\000"
 4973      63796473 
 4973      6E00
 4974              	.LASF50:
 4975 03e6 61646472 		.ascii	"address\000"
 4975      65737300 
 4976              	.LASF30:
 4977 03ee 73797363 		.ascii	"sysclkSource\000"
 4977      6C6B536F 
 4977      75726365 
 4977      00
 4978              	.LASF91:
 4979 03fb 66756E63 		.ascii	"function\000"
 4979      74696F6E 
 4979      00
 4980              	.LASF82:
 4981 0404 43795379 		.ascii	"CySysTickGetValue\000"
 4981      73546963 
 4981      6B476574 
 4981      56616C75 
 4981      6500
 4982              	.LASF97:
 4983 0416 63796465 		.ascii	"cydelayFreqHz\000"
 4983      6C617946 
 4983      72657148 
 4983      7A00
 4984              	.LASF56:
 4985 0424 4379496E 		.ascii	"CyIntSetPriority\000"
 4985      74536574 
 4985      5072696F 
 4985      72697479 
 4985      00
 4986              	.LASF12:
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 157


 4987 0435 666C6F61 		.ascii	"float\000"
 4987      7400
 4988              	.LASF104:
 4989 043b 43794578 		.ascii	"CyExitCriticalSection\000"
 4989      69744372 
 4989      69746963 
 4989      616C5365 
 4989      6374696F 
 4990              	.LASF20:
 4991 0451 63795379 		.ascii	"cySysTickCallback\000"
 4991      73546963 
 4991      6B43616C 
 4991      6C626163 
 4991      6B00
 4992              	.LASF55:
 4993 0463 4379496E 		.ascii	"CyIntGetVector\000"
 4993      74476574 
 4993      56656374 
 4993      6F7200
 4994              	.LASF64:
 4995 0472 6D696C6C 		.ascii	"milliseconds\000"
 4995      69736563 
 4995      6F6E6473 
 4995      00
 4996              	.LASF105:
 4997 047f 43794465 		.ascii	"CyDelayCycles\000"
 4997      6C617943 
 4997      79636C65 
 4997      7300
 4998              	.LASF15:
 4999 048d 72656738 		.ascii	"reg8\000"
 4999      00
 5000              	.LASF48:
 5001 0492 43794861 		.ascii	"CyHalt\000"
 5001      6C7400
 5002              	.LASF1:
 5003 0499 756E7369 		.ascii	"unsigned char\000"
 5003      676E6564 
 5003      20636861 
 5003      7200
 5004              	.LASF2:
 5005 04a7 73686F72 		.ascii	"short int\000"
 5005      7420696E 
 5005      7400
 5006              	.LASF42:
 5007 04b1 4379496E 		.ascii	"CyIntEnable\000"
 5007      74456E61 
 5007      626C6500 
 5008              	.LASF53:
 5009 04bd 4379496E 		.ascii	"CyIntGetSysVector\000"
 5009      74476574 
 5009      53797356 
 5009      6563746F 
 5009      7200
 5010              	.LASF28:
 5011 04cf 636C6B53 		.ascii	"clkSelect\000"
 5011      656C6563 
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 158


 5011      7400
 5012              	.LASF72:
 5013 04d9 43794465 		.ascii	"CyDelayUs\000"
 5013      6C617955 
 5013      7300
 5014              	.LASF36:
 5015 04e3 72656173 		.ascii	"reason\000"
 5015      6F6E00
 5016              	.LASF108:
 5017 04ea 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 5017      43313120 
 5017      352E342E 
 5017      31203230 
 5017      31363036 
 5018 051d 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 5018      20726576 
 5018      6973696F 
 5018      6E203233 
 5018      37373135 
 5019 0550 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 5019      67202D66 
 5019      66756E63 
 5019      74696F6E 
 5019      2D736563 
 5020              	.LASF14:
 5021 057c 63686172 		.ascii	"char\000"
 5021      00
 5022              	.LASF17:
 5023 0581 63796973 		.ascii	"cyisraddress\000"
 5023      72616464 
 5023      72657373 
 5023      00
 5024              	.LASF77:
 5025 058e 43795379 		.ascii	"CySysTickEnable\000"
 5025      73546963 
 5025      6B456E61 
 5025      626C6500 
 5026              	.LASF33:
 5027 059e 43795379 		.ascii	"CySysClkWriteHfclkDiv\000"
 5027      73436C6B 
 5027      57726974 
 5027      65486663 
 5027      6C6B4469 
 5028              	.LASF31:
 5029 05b4 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 5029      73436C6B 
 5029      57726974 
 5029      65537973 
 5029      636C6B44 
 5030              	.LASF90:
 5031 05cb 43795379 		.ascii	"CySysTickSetCallback\000"
 5031      73546963 
 5031      6B536574 
 5031      43616C6C 
 5031      6261636B 
 5032              	.LASF96:
 5033 05e0 43795379 		.ascii	"CySysTickCallbacks\000"
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 159


 5033      73546963 
 5033      6B43616C 
 5033      6C626163 
 5033      6B7300
 5034              	.LASF70:
 5035 05f3 696D6F54 		.ascii	"imoTrim1Value\000"
 5035      72696D31 
 5035      56616C75 
 5035      6500
 5036              	.LASF95:
 5037 0601 756E6971 		.ascii	"uniqueId\000"
 5037      75654964 
 5037      00
 5038              	.LASF68:
 5039 060a 666C6173 		.ascii	"flashCtlReg\000"
 5039      6843746C 
 5039      52656700 
 5040              	.LASF63:
 5041 0616 43794465 		.ascii	"CyDelay\000"
 5041      6C617900 
 5042              	.LASF85:
 5043 061e 43795379 		.ascii	"CySysTickGetClockSource\000"
 5043      73546963 
 5043      6B476574 
 5043      436C6F63 
 5043      6B536F75 
 5044              	.LASF78:
 5045 0636 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 5045      73546963 
 5045      6B446973 
 5045      61626C65 
 5045      496E7465 
 5046              	.LASF51:
 5047 0650 6F6C6449 		.ascii	"oldIsr\000"
 5047      737200
 5048              	.LASF99:
 5049 0657 63796465 		.ascii	"cydelayFreqMhz\000"
 5049      6C617946 
 5049      7265714D 
 5049      687A00
 5050              	.LASF75:
 5051 0666 43795379 		.ascii	"CySysTickStop\000"
 5051      73546963 
 5051      6B53746F 
 5051      7000
 5052              	.LASF32:
 5053 0674 64697669 		.ascii	"divider\000"
 5053      64657200 
 5054              	.LASF61:
 5055 067c 43795379 		.ascii	"CySysClkImoStart\000"
 5055      73436C6B 
 5055      496D6F53 
 5055      74617274 
 5055      00
 5056              	.LASF107:
 5057 068d 43795379 		.ascii	"CySysFlashSetWaitCycles\000"
 5057      73466C61 
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccOytCsp.s 			page 160


 5057      73685365 
 5057      74576169 
 5057      74437963 
 5058              	.LASF109:
 5059 06a5 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLib.c\000"
 5059      72617465 
 5059      645F536F 
 5059      75726365 
 5059      5C50536F 
 5060              	.LASF73:
 5061 06c4 6D696372 		.ascii	"microseconds\000"
 5061      6F736563 
 5061      6F6E6473 
 5061      00
 5062              	.LASF26:
 5063 06d1 746D7052 		.ascii	"tmpReg\000"
 5063      656700
 5064              	.LASF79:
 5065 06d8 43795379 		.ascii	"CySysTickSetReload\000"
 5065      73546963 
 5065      6B536574 
 5065      52656C6F 
 5065      616400
 5066              	.LASF111:
 5067 06eb 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 5067      73546963 
 5067      6B536572 
 5067      76696365 
 5067      43616C6C 
 5068              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
