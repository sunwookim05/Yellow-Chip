ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CyLib.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CySysClkImoStart,"ax",%progbits
  20              		.align	1
  21              		.global	CySysClkImoStart
  22              		.code	16
  23              		.thumb_func
  24              		.type	CySysClkImoStart, %function
  25              	CySysClkImoStart:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC4\\CyLib.c"
   1:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLib.c **** * \file CyLib.c
   3:Generated_Source\PSoC4/CyLib.c **** * \version 6.0
   4:Generated_Source\PSoC4/CyLib.c **** *
   5:Generated_Source\PSoC4/CyLib.c **** * \brief Provides a system API for the Clocking, Interrupts, SysTick, and
   6:Generated_Source\PSoC4/CyLib.c **** * Voltage Detect.
   7:Generated_Source\PSoC4/CyLib.c **** *
   8:Generated_Source\PSoC4/CyLib.c **** * \note Documentation of the API's in this file is located in the PSoC 4 System
   9:Generated_Source\PSoC4/CyLib.c **** * Reference Guide provided with PSoC Creator.
  10:Generated_Source\PSoC4/CyLib.c **** *
  11:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CyLib.c **** * \copyright
  13:Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2020, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/CyLib.c **** 
  19:Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  20:Generated_Source\PSoC4/CyLib.c **** 
  21:Generated_Source\PSoC4/CyLib.c **** /* CySysClkWriteImoFreq() || CySysClkImoEnableWcoLock() */
  22:Generated_Source\PSoC4/CyLib.c **** #if ((CY_IP_SRSSV2 && CY_IP_FMLT) || CY_IP_IMO_TRIMMABLE_BY_WCO)
  23:Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  24:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  25:Generated_Source\PSoC4/CyLib.c **** 
  26:Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  27:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  28:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  29:Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  30:Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 2


  31:Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
  32:Generated_Source\PSoC4/CyLib.c **** 
  33:Generated_Source\PSoC4/CyLib.c **** 
  34:Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  35:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  36:Generated_Source\PSoC4/CyLib.c **** 
  37:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_PLL)
  38:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll);
  39:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll);
  40:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_PLL) */
  41:Generated_Source\PSoC4/CyLib.c **** 
  42:Generated_Source\PSoC4/CyLib.c **** 
  43:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
  44:Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  45:Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  46:Generated_Source\PSoC4/CyLib.c **** *
  47:Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
  48:Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  49:Generated_Source\PSoC4/CyLib.c **** *
  50:Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  51:Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  52:Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  53:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  54:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  55:Generated_Source\PSoC4/CyLib.c **** 
  56:Generated_Source\PSoC4/CyLib.c **** 
  57:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  58:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  59:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  60:Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  61:Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  62:Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  63:Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  64:Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  65:Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  66:Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  67:Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  68:Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  69:Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  70:Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  71:Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  72:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  73:Generated_Source\PSoC4/CyLib.c **** 
  74:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2)
  75:Generated_Source\PSoC4/CyLib.c ****     #define CY_CRI_TESTPGM_6_REV            (6u)
  76:Generated_Source\PSoC4/CyLib.c ****     #define CY_CRI_TESTPGM_9_REV            (9u)
  77:Generated_Source\PSoC4/CyLib.c ****     #define CYSFLASH_CRI_testpgm_rev_MASK   (0x0000003Fu)
  78:Generated_Source\PSoC4/CyLib.c **** 
  79:Generated_Source\PSoC4/CyLib.c ****     /* Stored CY_SYS_CLK_IMO_TRIM4_REG when modified for USB lock */
  80:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim4 = 0u;
  81:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim5 = 0u;
  82:Generated_Source\PSoC4/CyLib.c **** 
  83:Generated_Source\PSoC4/CyLib.c ****     static void CySysClkImoSetPwrBgTrim5(void);
  84:Generated_Source\PSoC4/CyLib.c ****     static void CySysClkImoSetImoTrims(void);
  85:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2) */
  86:Generated_Source\PSoC4/CyLib.c **** 
  87:Generated_Source\PSoC4/CyLib.c **** /* Stored PUMP_SEL configuration during disable (IMO output by default) */
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 3


  88:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkPumpConfig = CY_SYS_CLK_PUMP_ENABLE;
  89:Generated_Source\PSoC4/CyLib.c **** 
  90:Generated_Source\PSoC4/CyLib.c **** 
  91:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  92:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  93:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
  94:Generated_Source\PSoC4/CyLib.c **** *
  95:Generated_Source\PSoC4/CyLib.c **** * Enables the IMO.
  96:Generated_Source\PSoC4/CyLib.c **** *
  97:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4500 / PSoC Analog
  98:Generated_Source\PSoC4/CyLib.c **** * Coprocessor devices, this function will also enable WCO lock if selected in
  99:Generated_Source\PSoC4/CyLib.c **** * the Design Wide Resources tab.
 100:Generated_Source\PSoC4/CyLib.c **** *
 101:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L devices, this function will also enable USB lock if selected
 102:Generated_Source\PSoC4/CyLib.c **** * in the Design Wide Resources tab.
 103:Generated_Source\PSoC4/CyLib.c **** *
 104:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 105:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
 106:Generated_Source\PSoC4/CyLib.c **** {
  28              		.loc 1 106 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 107:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
  33              		.loc 1 107 0
  34 0000 8021     		movs	r1, #128
  35 0002 034A     		ldr	r2, .L2
  36 0004 0906     		lsls	r1, r1, #24
  37 0006 1368     		ldr	r3, [r2]
 108:Generated_Source\PSoC4/CyLib.c **** 
 109:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 110:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
 111:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
 112:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 113:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 114:Generated_Source\PSoC4/CyLib.c **** 
 115:Generated_Source\PSoC4/CyLib.c **** 
 116:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 117:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_USB == 1u)
 118:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableUsbLock();
 119:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 1u) */
 120:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 121:Generated_Source\PSoC4/CyLib.c **** 
 122:Generated_Source\PSoC4/CyLib.c **** }
  38              		.loc 1 122 0
  39              		@ sp needed
 107:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
  40              		.loc 1 107 0
  41 0008 0B43     		orrs	r3, r1
  42 000a 1360     		str	r3, [r2]
  43              		.loc 1 122 0
  44 000c 7047     		bx	lr
  45              	.L3:
  46 000e C046     		.align	2
  47              	.L2:
  48 0010 30000340 		.word	1073938480
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 4


  49              		.cfi_endproc
  50              	.LFE1:
  51              		.size	CySysClkImoStart, .-CySysClkImoStart
  52              		.section	.text.CySysClkImoDisableWcoLock,"ax",%progbits
  53              		.align	1
  54              		.global	CySysClkImoDisableWcoLock
  55              		.code	16
  56              		.thumb_func
  57              		.type	CySysClkImoDisableWcoLock, %function
  58              	CySysClkImoDisableWcoLock:
  59              	.LFB4:
 123:Generated_Source\PSoC4/CyLib.c **** 
 124:Generated_Source\PSoC4/CyLib.c **** 
 125:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 126:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 127:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 128:Generated_Source\PSoC4/CyLib.c **** *
 129:Generated_Source\PSoC4/CyLib.c **** * Disables the IMO.
 130:Generated_Source\PSoC4/CyLib.c **** *
 131:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4200L / PSoC 4000S / PSoC 4100S /
 132:Generated_Source\PSoC4/CyLib.c **** * PSoC 4500 / PSoC Analog Coprocessor devices, this function will also
 133:Generated_Source\PSoC4/CyLib.c **** * disable WCO lock.
 134:Generated_Source\PSoC4/CyLib.c **** *
 135:Generated_Source\PSoC4/CyLib.c **** * For PSoC PSoC 4200L devices, this function will also disable USB lock.
 136:Generated_Source\PSoC4/CyLib.c **** *
 137:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 138:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 139:Generated_Source\PSoC4/CyLib.c **** {
 140:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 141:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 142:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 143:Generated_Source\PSoC4/CyLib.c **** 
 144:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 145:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableUsbLock();
 146:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 147:Generated_Source\PSoC4/CyLib.c **** 
 148:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
 149:Generated_Source\PSoC4/CyLib.c **** }
 150:Generated_Source\PSoC4/CyLib.c **** 
 151:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 152:Generated_Source\PSoC4/CyLib.c **** 
 153:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 154:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 155:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 156:Generated_Source\PSoC4/CyLib.c ****     *
 157:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to WCO lock feature. This function works only if the WCO is
 158:Generated_Source\PSoC4/CyLib.c ****     * already enabled. If the WCO is not enabled then this function returns
 159:Generated_Source\PSoC4/CyLib.c ****     * without enabling the lock feature.
 160:Generated_Source\PSoC4/CyLib.c ****     *
 161:Generated_Source\PSoC4/CyLib.c ****     * It takes up to 20 ms for the IMO to stabilize. The delay is implemented with
 162:Generated_Source\PSoC4/CyLib.c ****     * CyDelay() function. The delay interval is measured based on the system
 163:Generated_Source\PSoC4/CyLib.c ****     * frequency defined by PSoC Creator at build time. If System clock frequency
 164:Generated_Source\PSoC4/CyLib.c ****     * is changed in runtime, the CyDelayFreq() with the appropriate parameter
 165:Generated_Source\PSoC4/CyLib.c ****     * should be called.
 166:Generated_Source\PSoC4/CyLib.c ****     *
 167:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 168:Generated_Source\PSoC4/CyLib.c ****     * but not both.
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 5


 169:Generated_Source\PSoC4/CyLib.c ****     *
 170:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 171:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4500 / PSoC Analog Coprocessor / PSoC 4200L.
 172:Generated_Source\PSoC4/CyLib.c ****     *
 173:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 174:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 175:Generated_Source\PSoC4/CyLib.c ****     {
 176:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 177:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 178:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 179:Generated_Source\PSoC4/CyLib.c **** 
 180:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 181:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 182:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 183:Generated_Source\PSoC4/CyLib.c ****         uint32 lfLimit = 0u;
 184:Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 185:Generated_Source\PSoC4/CyLib.c **** 
 186:Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 187:Generated_Source\PSoC4/CyLib.c ****         {
 188:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 189:Generated_Source\PSoC4/CyLib.c **** 
 190:Generated_Source\PSoC4/CyLib.c ****             /* Set oscillator interface control port to WCO */
 191:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 192:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_OSCINTF_CTL_REG =
 193:Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 194:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_WCO;
 195:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 196:Generated_Source\PSoC4/CyLib.c **** 
 197:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 198:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 199:Generated_Source\PSoC4/CyLib.c ****                 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 200:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 201:Generated_Source\PSoC4/CyLib.c ****                 {
 202:Generated_Source\PSoC4/CyLib.c ****                     if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImo
 203:Generated_Source\PSoC4/CyLib.c ****                     {
 204:Generated_Source\PSoC4/CyLib.c ****                         freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 205:Generated_Source\PSoC4/CyLib.c ****                         break;
 206:Generated_Source\PSoC4/CyLib.c ****                     }
 207:Generated_Source\PSoC4/CyLib.c ****                 }
 208:Generated_Source\PSoC4/CyLib.c ****             #else
 209:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate frequency by shifting register field value and adding constant. */
 210:Generated_Source\PSoC4/CyLib.c ****                 #if(CY_IP_SRSSLT)
 211:Generated_Source\PSoC4/CyLib.c ****                     freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT
 212:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 213:Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 214:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 215:Generated_Source\PSoC4/CyLib.c ****                 #else
 216:Generated_Source\PSoC4/CyLib.c ****                     freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_
 217:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_
 218:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CY_IP_SRSSLT) */
 219:Generated_Source\PSoC4/CyLib.c **** 
 220:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSV2) */
 221:Generated_Source\PSoC4/CyLib.c **** 
 222:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = 0;
 223:Generated_Source\PSoC4/CyLib.c **** 
 224:Generated_Source\PSoC4/CyLib.c ****             /* For the WCO locking mode, the IMO gain needs to be CY_SYS_CLK_IMO_TRIM4_GAIN */
 225:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 6


 226:Generated_Source\PSoC4/CyLib.c ****                 if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 227:Generated_Source\PSoC4/CyLib.c ****                 {
 228:Generated_Source\PSoC4/CyLib.c ****                      CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IM
 229:Generated_Source\PSoC4/CyLib.c ****                                                  CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 230:Generated_Source\PSoC4/CyLib.c ****                 }
 231:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
 232:Generated_Source\PSoC4/CyLib.c **** 
 233:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 234:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 235:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK |
 236:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 237:Generated_Source\PSoC4/CyLib.c **** 
 238:Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 239:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 240:Generated_Source\PSoC4/CyLib.c **** 
 241:Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 242:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 243:Generated_Source\PSoC4/CyLib.c **** 
 244:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 245:Generated_Source\PSoC4/CyLib.c **** 
 246:Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 247:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 248:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 249:Generated_Source\PSoC4/CyLib.c **** 
 250:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 251:Generated_Source\PSoC4/CyLib.c **** 
 252:Generated_Source\PSoC4/CyLib.c ****             while (lfLimit < (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX - CY_SYS_CLK_WCO_CONFIG_DPLL_
 253:Generated_Source\PSoC4/CyLib.c ****             {
 254:Generated_Source\PSoC4/CyLib.c ****                 CyDelay(CY_SYS_CLK_WCO_DPLL_TIMEOUT_MS);
 255:Generated_Source\PSoC4/CyLib.c ****                 lfLimit += CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_STEP;
 256:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT
 257:Generated_Source\PSoC4/CyLib.c ****             }
 258:Generated_Source\PSoC4/CyLib.c **** 
 259:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_DPLL_TIMEOUT_MS);
 260:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX <<
 261:Generated_Source\PSoC4/CyLib.c ****                                                  CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT));
 262:Generated_Source\PSoC4/CyLib.c **** 
 263:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 264:Generated_Source\PSoC4/CyLib.c **** 
 265:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 266:Generated_Source\PSoC4/CyLib.c ****         }
 267:Generated_Source\PSoC4/CyLib.c ****     }
 268:Generated_Source\PSoC4/CyLib.c **** 
 269:Generated_Source\PSoC4/CyLib.c **** 
 270:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 271:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 272:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 273:Generated_Source\PSoC4/CyLib.c ****     *
 274:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to WCO lock feature.
 275:Generated_Source\PSoC4/CyLib.c ****     *
 276:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 277:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 278:Generated_Source\PSoC4/CyLib.c ****     *
 279:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 280:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4500 / PSoC Analog Coprocessor / PSoC 4200L.
 281:Generated_Source\PSoC4/CyLib.c ****     *
 282:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 7


 283:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 284:Generated_Source\PSoC4/CyLib.c ****     {
  60              		.loc 1 284 0
  61              		.cfi_startproc
  62              		@ args = 0, pretend = 0, frame = 0
  63              		@ frame_needed = 0, uses_anonymous_args = 0
 285:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 286:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 287:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 288:Generated_Source\PSoC4/CyLib.c **** 
 289:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 290:Generated_Source\PSoC4/CyLib.c **** 
 291:Generated_Source\PSoC4/CyLib.c ****         /* Get current IMO frequency based on the register value */
 292:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 293:Generated_Source\PSoC4/CyLib.c ****             freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 294:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 295:Generated_Source\PSoC4/CyLib.c ****             {
 296:Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 297:Generated_Source\PSoC4/CyLib.c ****                 {
 298:Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 299:Generated_Source\PSoC4/CyLib.c ****                     break;
 300:Generated_Source\PSoC4/CyLib.c ****                 }
 301:Generated_Source\PSoC4/CyLib.c ****             }
 302:Generated_Source\PSoC4/CyLib.c ****         #else
 303:Generated_Source\PSoC4/CyLib.c ****             /* Calculate frequency by shifting register field value and adding constant. */
 304:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSLT)
 305:Generated_Source\PSoC4/CyLib.c ****                 freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_FRE
 306:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_MHZ
 307:Generated_Source\PSoC4/CyLib.c ****                                   ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT) &
 308:Generated_Source\PSoC4/CyLib.c ****                                    (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 309:Generated_Source\PSoC4/CyLib.c ****             #else
 310:Generated_Source\PSoC4/CyLib.c ****                 freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_FREQ
 311:Generated_Source\PSoC4/CyLib.c ****                                    CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
 312:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSLT) */
 313:Generated_Source\PSoC4/CyLib.c **** 
 314:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 315:Generated_Source\PSoC4/CyLib.c **** 
 316:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
  64              		.loc 1 316 0
  65 0000 0B48     		ldr	r0, .L5
 307:Generated_Source\PSoC4/CyLib.c ****                                    (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
  66              		.loc 1 307 0
  67 0002 0C4A     		ldr	r2, .L5+4
 305:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_MHZ
  68              		.loc 1 305 0
  69 0004 0C4B     		ldr	r3, .L5+8
 284:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
  70              		.loc 1 284 0
  71 0006 10B5     		push	{r4, lr}
  72              		.cfi_def_cfa_offset 8
  73              		.cfi_offset 4, -8
  74              		.cfi_offset 14, -4
 305:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_MHZ
  75              		.loc 1 305 0
  76 0008 1B68     		ldr	r3, [r3]
 307:Generated_Source\PSoC4/CyLib.c ****                                    (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
  77              		.loc 1 307 0
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 8


  78 000a 1168     		ldr	r1, [r2]
  79              	.LVL0:
  80              		.loc 1 316 0
  81 000c 0468     		ldr	r4, [r0]
  82 000e 0B4A     		ldr	r2, .L5+12
 317:Generated_Source\PSoC4/CyLib.c **** 
 318:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSLT)
 319:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
  83              		.loc 1 319 0
  84 0010 9B00     		lsls	r3, r3, #2
  85              	.LVL1:
 316:Generated_Source\PSoC4/CyLib.c **** 
  86              		.loc 1 316 0
  87 0012 2240     		ands	r2, r4
  88 0014 0260     		str	r2, [r0]
  89              		.loc 1 319 0
  90 0016 1C22     		movs	r2, #28
  91 0018 1340     		ands	r3, r2
  92 001a 0A07     		lsls	r2, r1, #28
  93 001c 920F     		lsrs	r2, r2, #30
  94 001e 1833     		adds	r3, r3, #24
  95 0020 D340     		lsrs	r3, r3, r2
  96 0022 074A     		ldr	r2, .L5+16
 320:Generated_Source\PSoC4/CyLib.c ****         #else
 321:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 322:Generated_Source\PSoC4/CyLib.c ****         #endif
 323:Generated_Source\PSoC4/CyLib.c ****     }
  97              		.loc 1 323 0
  98              		@ sp needed
 319:Generated_Source\PSoC4/CyLib.c ****         #else
  99              		.loc 1 319 0
 100 0024 9B18     		adds	r3, r3, r2
 101 0026 1B78     		ldrb	r3, [r3]
 102 0028 064A     		ldr	r2, .L5+20
 103 002a DBB2     		uxtb	r3, r3
 104 002c 1360     		str	r3, [r2]
 105              		.loc 1 323 0
 106 002e 10BD     		pop	{r4, pc}
 107              	.L6:
 108              		.align	2
 109              	.L5:
 110 0030 00000740 		.word	1074200576
 111 0034 28000340 		.word	1073938472
 112 0038 080F0340 		.word	1073942280
 113 003c FFFFFFBF 		.word	-1073741825
 114 0040 CDF1FF0F 		.word	268431821
 115 0044 0C0F0340 		.word	1073942284
 116              		.cfi_endproc
 117              	.LFE4:
 118              		.size	CySysClkImoDisableWcoLock, .-CySysClkImoDisableWcoLock
 119              		.section	.text.CySysClkImoStop,"ax",%progbits
 120              		.align	1
 121              		.global	CySysClkImoStop
 122              		.code	16
 123              		.thumb_func
 124              		.type	CySysClkImoStop, %function
 125              	CySysClkImoStop:
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 9


 126              	.LFB2:
 139:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 127              		.loc 1 139 0
 128              		.cfi_startproc
 129              		@ args = 0, pretend = 0, frame = 0
 130              		@ frame_needed = 0, uses_anonymous_args = 0
 131 0000 10B5     		push	{r4, lr}
 132              		.cfi_def_cfa_offset 8
 133              		.cfi_offset 4, -8
 134              		.cfi_offset 14, -4
 141:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 135              		.loc 1 141 0
 136 0002 FFF7FEFF 		bl	CySysClkImoDisableWcoLock
 137              	.LVL2:
 148:Generated_Source\PSoC4/CyLib.c **** }
 138              		.loc 1 148 0
 139 0006 034A     		ldr	r2, .L8
 149:Generated_Source\PSoC4/CyLib.c **** 
 140              		.loc 1 149 0
 141              		@ sp needed
 148:Generated_Source\PSoC4/CyLib.c **** }
 142              		.loc 1 148 0
 143 0008 1368     		ldr	r3, [r2]
 144 000a 5B00     		lsls	r3, r3, #1
 145 000c 5B08     		lsrs	r3, r3, #1
 146 000e 1360     		str	r3, [r2]
 149:Generated_Source\PSoC4/CyLib.c **** 
 147              		.loc 1 149 0
 148 0010 10BD     		pop	{r4, pc}
 149              	.L9:
 150 0012 C046     		.align	2
 151              	.L8:
 152 0014 30000340 		.word	1073938480
 153              		.cfi_endproc
 154              	.LFE2:
 155              		.size	CySysClkImoStop, .-CySysClkImoStop
 156              		.section	.text.CySysClkImoGetWcoLock,"ax",%progbits
 157              		.align	1
 158              		.global	CySysClkImoGetWcoLock
 159              		.code	16
 160              		.thumb_func
 161              		.type	CySysClkImoGetWcoLock, %function
 162              	CySysClkImoGetWcoLock:
 163              	.LFB5:
 324:Generated_Source\PSoC4/CyLib.c **** 
 325:Generated_Source\PSoC4/CyLib.c **** 
 326:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 327:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 328:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 329:Generated_Source\PSoC4/CyLib.c ****     *
 330:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to WCO lock enable state.
 331:Generated_Source\PSoC4/CyLib.c ****     *
 332:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 333:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4500 / PSoC Analog Coprocessor / PSoC 4200L.
 334:Generated_Source\PSoC4/CyLib.c ****     *
 335:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to WCO lock is enabled.
 336:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to WCO lock is disabled.
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 10


 337:Generated_Source\PSoC4/CyLib.c ****     *
 338:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 339:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetWcoLock(void)
 340:Generated_Source\PSoC4/CyLib.c ****     {
 164              		.loc 1 340 0
 165              		.cfi_startproc
 166              		@ args = 0, pretend = 0, frame = 0
 167              		@ frame_needed = 0, uses_anonymous_args = 0
 168              		@ link register save eliminated.
 341:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 169              		.loc 1 341 0
 170 0000 024B     		ldr	r3, .L11
 342:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 343:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 344:Generated_Source\PSoC4/CyLib.c ****     }
 171              		.loc 1 344 0
 172              		@ sp needed
 341:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 173              		.loc 1 341 0
 174 0002 1868     		ldr	r0, [r3]
 175 0004 4000     		lsls	r0, r0, #1
 176 0006 C00F     		lsrs	r0, r0, #31
 177              		.loc 1 344 0
 178 0008 7047     		bx	lr
 179              	.L12:
 180 000a C046     		.align	2
 181              	.L11:
 182 000c 00000740 		.word	1074200576
 183              		.cfi_endproc
 184              	.LFE5:
 185              		.size	CySysClkImoGetWcoLock, .-CySysClkImoGetWcoLock
 186              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
 187              		.align	1
 188              		.global	CySysClkWriteHfclkDirect
 189              		.code	16
 190              		.thumb_func
 191              		.type	CySysClkWriteHfclkDirect, %function
 192              	CySysClkWriteHfclkDirect:
 193              	.LFB6:
 345:Generated_Source\PSoC4/CyLib.c **** 
 346:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 347:Generated_Source\PSoC4/CyLib.c **** 
 348:Generated_Source\PSoC4/CyLib.c **** 
 349:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 350:Generated_Source\PSoC4/CyLib.c **** 
 351:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 352:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableUsbLock
 353:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 354:Generated_Source\PSoC4/CyLib.c ****     *
 355:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to USB lock feature.
 356:Generated_Source\PSoC4/CyLib.c ****     *
 357:Generated_Source\PSoC4/CyLib.c ****     * This function must be called before CySysClkWriteImoFreq().
 358:Generated_Source\PSoC4/CyLib.c ****     *
 359:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStart() function if USB lock
 360:Generated_Source\PSoC4/CyLib.c ****     * selected in the Design Wide Resources tab.
 361:Generated_Source\PSoC4/CyLib.c ****     *
 362:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 11


 363:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 364:Generated_Source\PSoC4/CyLib.c ****     *
 365:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 366:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableUsbLock(void)
 367:Generated_Source\PSoC4/CyLib.c ****     {
 368:Generated_Source\PSoC4/CyLib.c ****         /* Set oscillator interface control port to USB */
 369:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 370:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_OSCINTF_CTL_REG = (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF
 371:Generated_Source\PSoC4/CyLib.c ****                                           CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_USB;
 372:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 373:Generated_Source\PSoC4/CyLib.c **** 
 374:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 375:Generated_Source\PSoC4/CyLib.c **** 
 376:Generated_Source\PSoC4/CyLib.c ****             /* Save trims to restore in CySysClkImoDisableUsbLock() */
 377:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim4 = CY_SYS_CLK_IMO_TRIM4_REG;
 378:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim5 = CY_PWR_BG_TRIM5_REG;
 379:Generated_Source\PSoC4/CyLib.c **** 
 380:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoSetImoTrims();
 381:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoSetPwrBgTrim5();
 382:Generated_Source\PSoC4/CyLib.c **** 
 383:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 384:Generated_Source\PSoC4/CyLib.c **** 
 385:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG |= CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 386:Generated_Source\PSoC4/CyLib.c ****     }
 387:Generated_Source\PSoC4/CyLib.c **** 
 388:Generated_Source\PSoC4/CyLib.c **** 
 389:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 390:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableUsbLock
 391:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 392:Generated_Source\PSoC4/CyLib.c ****     *
 393:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to USB lock feature.
 394:Generated_Source\PSoC4/CyLib.c ****     *
 395:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStop() function if USB lock selected
 396:Generated_Source\PSoC4/CyLib.c ****     * in the Design Wide Resources tab.
 397:Generated_Source\PSoC4/CyLib.c ****     *
 398:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 399:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 400:Generated_Source\PSoC4/CyLib.c ****     *
 401:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 402:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableUsbLock(void)
 403:Generated_Source\PSoC4/CyLib.c ****     {
 404:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 405:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 406:Generated_Source\PSoC4/CyLib.c **** 
 407:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 408:Generated_Source\PSoC4/CyLib.c ****             uint32 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 409:Generated_Source\PSoC4/CyLib.c **** 
 410:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 411:Generated_Source\PSoC4/CyLib.c ****             {
 412:Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 413:Generated_Source\PSoC4/CyLib.c ****                 {
 414:Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 415:Generated_Source\PSoC4/CyLib.c ****                     break;
 416:Generated_Source\PSoC4/CyLib.c ****                 }
 417:Generated_Source\PSoC4/CyLib.c ****             }
 418:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 419:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 12


 420:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG &= (uint32) ~CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 421:Generated_Source\PSoC4/CyLib.c **** 
 422:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 423:Generated_Source\PSoC4/CyLib.c ****             /* Restore IMO trim registers saved by CySysClkImoEnableUsbLock() */
 424:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = ((CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_
 425:Generated_Source\PSoC4/CyLib.c ****                                         (CySysClkImoTrim4 & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK));
 426:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG = CySysClkImoTrim5;
 427:Generated_Source\PSoC4/CyLib.c **** 
 428:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 429:Generated_Source\PSoC4/CyLib.c **** 
 430:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 431:Generated_Source\PSoC4/CyLib.c ****     }
 432:Generated_Source\PSoC4/CyLib.c **** 
 433:Generated_Source\PSoC4/CyLib.c **** 
 434:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 435:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetUsbLock
 436:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 437:Generated_Source\PSoC4/CyLib.c ****     *
 438:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to USB lock enable state.
 439:Generated_Source\PSoC4/CyLib.c ****     *
 440:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 441:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 442:Generated_Source\PSoC4/CyLib.c ****     *
 443:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to USB lock is enabled.
 444:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to USB lock is disabled.
 445:Generated_Source\PSoC4/CyLib.c ****     *
 446:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 447:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetUsbLock(void)
 448:Generated_Source\PSoC4/CyLib.c ****     {
 449:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 450:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 451:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 452:Generated_Source\PSoC4/CyLib.c ****     }
 453:Generated_Source\PSoC4/CyLib.c **** 
 454:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2)
 455:Generated_Source\PSoC4/CyLib.c **** 
 456:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 457:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoSetPwrBgTrim5
 458:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 459:Generated_Source\PSoC4/CyLib.c ****     *
 460:Generated_Source\PSoC4/CyLib.c ****     * Updates Bandgap trim register based on the test program revision.
 461:Generated_Source\PSoC4/CyLib.c ****     *
 462:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 463:Generated_Source\PSoC4/CyLib.c ****     static void CySysClkImoSetPwrBgTrim5(void)
 464:Generated_Source\PSoC4/CyLib.c ****     {
 465:Generated_Source\PSoC4/CyLib.c ****         /* Get sort test revision number */
 466:Generated_Source\PSoC4/CyLib.c ****         uint32  testRev = ((CY_SFLASH_CRI_TESTPGM_REV_REG >> CYSFLASH_CRI_testpgm_rev__OFFSET) &
 467:Generated_Source\PSoC4/CyLib.c ****                             CYSFLASH_CRI_testpgm_rev_MASK);
 468:Generated_Source\PSoC4/CyLib.c **** 
 469:Generated_Source\PSoC4/CyLib.c ****         if(testRev <= CY_CRI_TESTPGM_9_REV)
 470:Generated_Source\PSoC4/CyLib.c ****         {
 471:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG = CY_SFLASH_IMO_TMPCO0_REG;
 472:Generated_Source\PSoC4/CyLib.c ****         }
 473:Generated_Source\PSoC4/CyLib.c ****         else
 474:Generated_Source\PSoC4/CyLib.c ****         {
 475:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG = CY_SFLASH_USBMODE_IMO_TEMPCO_REG;
 476:Generated_Source\PSoC4/CyLib.c ****         }
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 13


 477:Generated_Source\PSoC4/CyLib.c ****     }
 478:Generated_Source\PSoC4/CyLib.c **** 
 479:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 480:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoSetImoTrims
 481:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 482:Generated_Source\PSoC4/CyLib.c ****     *
 483:Generated_Source\PSoC4/CyLib.c ****     * Updates IMO trim registers based on the IMO frequency and test program
 484:Generated_Source\PSoC4/CyLib.c ****     * revision.
 485:Generated_Source\PSoC4/CyLib.c ****     *
 486:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 487:Generated_Source\PSoC4/CyLib.c ****     static void CySysClkImoSetImoTrims(void)
 488:Generated_Source\PSoC4/CyLib.c ****     {
 489:Generated_Source\PSoC4/CyLib.c ****         uint32 i;
 490:Generated_Source\PSoC4/CyLib.c **** 
 491:Generated_Source\PSoC4/CyLib.c ****         /* Get current IMO frequency based on the register value */
 492:Generated_Source\PSoC4/CyLib.c ****         uint32 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 493:Generated_Source\PSoC4/CyLib.c **** 
 494:Generated_Source\PSoC4/CyLib.c ****         for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 495:Generated_Source\PSoC4/CyLib.c ****         {
 496:Generated_Source\PSoC4/CyLib.c ****             if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreqMhz2
 497:Generated_Source\PSoC4/CyLib.c ****             {
 498:Generated_Source\PSoC4/CyLib.c ****                 freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 499:Generated_Source\PSoC4/CyLib.c ****                 break;
 500:Generated_Source\PSoC4/CyLib.c ****             }
 501:Generated_Source\PSoC4/CyLib.c ****         }
 502:Generated_Source\PSoC4/CyLib.c **** 
 503:Generated_Source\PSoC4/CyLib.c ****         /* Get sort test revision number */
 504:Generated_Source\PSoC4/CyLib.c ****         uint32  testRev = ((CY_SFLASH_CRI_TESTPGM_REV_REG >> CYSFLASH_CRI_testpgm_rev__OFFSET) &
 505:Generated_Source\PSoC4/CyLib.c ****             CYSFLASH_CRI_testpgm_rev_MASK);
 506:Generated_Source\PSoC4/CyLib.c **** 
 507:Generated_Source\PSoC4/CyLib.c ****         if(testRev <= CY_CRI_TESTPGM_6_REV)
 508:Generated_Source\PSoC4/CyLib.c ****         {
 509:Generated_Source\PSoC4/CyLib.c ****             if (48u == freq)
 510:Generated_Source\PSoC4/CyLib.c ****             {
 511:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 512:Generated_Source\PSoC4/CyLib.c ****             }
 513:Generated_Source\PSoC4/CyLib.c ****             else if (24u == freq)
 514:Generated_Source\PSoC4/CyLib.c ****             {
 515:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 516:Generated_Source\PSoC4/CyLib.c ****             }
 517:Generated_Source\PSoC4/CyLib.c ****             else
 518:Generated_Source\PSoC4/CyLib.c ****             {
 519:Generated_Source\PSoC4/CyLib.c ****                 /* Do nothing */
 520:Generated_Source\PSoC4/CyLib.c ****             }
 521:Generated_Source\PSoC4/CyLib.c **** 
 522:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO Gain in IMO Trim Register 4 */
 523:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 524:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_TRIM4_USB_GAIN;
 525:Generated_Source\PSoC4/CyLib.c ****         }
 526:Generated_Source\PSoC4/CyLib.c ****         else
 527:Generated_Source\PSoC4/CyLib.c ****         {
 528:Generated_Source\PSoC4/CyLib.c ****             if (48u == freq)
 529:Generated_Source\PSoC4/CyLib.c ****             {
 530:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_CU_IMO_TRIM_USBMODE_48_REG;
 531:Generated_Source\PSoC4/CyLib.c ****             }
 532:Generated_Source\PSoC4/CyLib.c ****             else if (24u == freq)
 533:Generated_Source\PSoC4/CyLib.c ****             {
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 14


 534:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_CU_IMO_TRIM_USBMODE_24_REG;
 535:Generated_Source\PSoC4/CyLib.c ****             }
 536:Generated_Source\PSoC4/CyLib.c ****             else
 537:Generated_Source\PSoC4/CyLib.c ****             {
 538:Generated_Source\PSoC4/CyLib.c ****                 /* Do nothing */
 539:Generated_Source\PSoC4/CyLib.c ****             }
 540:Generated_Source\PSoC4/CyLib.c **** 
 541:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO Gain in IMO Trim Register 4 */
 542:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 543:Generated_Source\PSoC4/CyLib.c ****                                         CY_SFLASH_USBMODE_IMO_GAIN_TRIM_REG;
 544:Generated_Source\PSoC4/CyLib.c ****         }
 545:Generated_Source\PSoC4/CyLib.c ****     }
 546:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SRSSV2) */
 547:Generated_Source\PSoC4/CyLib.c **** 
 548:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 549:Generated_Source\PSoC4/CyLib.c **** 
 550:Generated_Source\PSoC4/CyLib.c **** 
 551:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 552:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 553:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 554:Generated_Source\PSoC4/CyLib.c **** *
 555:Generated_Source\PSoC4/CyLib.c **** * Selects the direct source for the HFCLK.
 556:Generated_Source\PSoC4/CyLib.c **** *
 557:Generated_Source\PSoC4/CyLib.c **** * The new source must be running and stable before calling this function.
 558:Generated_Source\PSoC4/CyLib.c **** *
 559:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000:
 560:Generated_Source\PSoC4/CyLib.c **** * The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 561:Generated_Source\PSoC4/CyLib.c **** * be selected in a way to not to exceed 16 MHz for the System clock.
 562:Generated_Source\PSoC4/CyLib.c **** *
 563:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during device operation, call
 564:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 565:Generated_Source\PSoC4/CyLib.c **** * of clock cycles the cache will wait before sampling data comes back from
 566:Generated_Source\PSoC4/CyLib.c **** * Flash. If the SYSCLK clock frequency decreases, you can call
 567:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() to improve the CPU performance. See
 568:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() description for more information.
 569:Generated_Source\PSoC4/CyLib.c **** *
 570:Generated_Source\PSoC4/CyLib.c **** * Do not select PLL as the source for HFCLK if PLL output frequency exceeds
 571:Generated_Source\PSoC4/CyLib.c **** * maximum permissible value for HFCLK.
 572:Generated_Source\PSoC4/CyLib.c **** *
 573:Generated_Source\PSoC4/CyLib.c **** * \param clkSelect One of the available HFCLK direct sources.
 574:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_IMO     IMO.
 575:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_EXTCLK  External clock pin.
 576:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_ECO     External crystal oscillator. Applicable for
 577:Generated_Source\PSoC4/CyLib.c **** *                          PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L /
 578:Generated_Source\PSoC4/CyLib.c **** *                          4100S / 4500 with ECO.
 579:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL0    PLL#0. Applicable for PSoC 4200L /
 580:Generated_Source\PSoC4/CyLib.c **** *                          4100S / 4500 with PLL.
 581:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL1    PLL#1. Applicable for PSoC 4200L.
 582:Generated_Source\PSoC4/CyLib.c **** *
 583:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 584:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 585:Generated_Source\PSoC4/CyLib.c **** {
 194              		.loc 1 585 0
 195              		.cfi_startproc
 196              		@ args = 0, pretend = 0, frame = 0
 197              		@ frame_needed = 0, uses_anonymous_args = 0
 198              	.LVL3:
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 15


 199 0000 10B5     		push	{r4, lr}
 200              		.cfi_def_cfa_offset 8
 201              		.cfi_offset 4, -8
 202              		.cfi_offset 14, -4
 203              		.loc 1 585 0
 204 0002 0400     		movs	r4, r0
 586:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 587:Generated_Source\PSoC4/CyLib.c ****     uint32 tmpReg;
 588:Generated_Source\PSoC4/CyLib.c **** 
 589:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SRSSLT && CY_IP_PLL)
 590:Generated_Source\PSoC4/CyLib.c ****         uint8 i = 0u;
 591:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 592:Generated_Source\PSoC4/CyLib.c **** 
 593:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 205              		.loc 1 593 0
 206 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 207              	.LVL4:
 594:Generated_Source\PSoC4/CyLib.c **** 
 595:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSLT && CY_IP_PLL)
 596:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_ECO == clkSelect))
 597:Generated_Source\PSoC4/CyLib.c ****     {
 598:Generated_Source\PSoC4/CyLib.c ****         tmpReg = CY_SYS_CLK_SELECT_REG & ~CY_SYS_CLK_SELECT_DIRECT_SEL_MASK;
 599:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= CY_SYS_CLK_HFCLK_IMO;
 600:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = tmpReg;
 601:Generated_Source\PSoC4/CyLib.c **** 
 602:Generated_Source\PSoC4/CyLib.c ****         /* SRSSLT block does not have registers to select PLL. It is part of EXCO */
 603:Generated_Source\PSoC4/CyLib.c ****         tmpReg = CY_SYS_ECO_CLK_SELECT_REG & ~CY_SYS_ECO_CLK_SELECT_ECO_PLL_MASK;
 604:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= ((clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_PLL_MASK) >> CY_SYS_CLK_SELECT_HFCLK_PL
 605:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_ECO_CLK_SELECT_REG = tmpReg;
 606:Generated_Source\PSoC4/CyLib.c **** 
 607:Generated_Source\PSoC4/CyLib.c ****         /* Check if ECO is enabled and running */
 608:Generated_Source\PSoC4/CyLib.c ****         if ((0UL == (CY_SYS_CLK_ECO_CONFIG_REG & CY_SYS_CLK_ECO_CONFIG_ENABLE)) ||
 609:Generated_Source\PSoC4/CyLib.c ****             (0UL != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)))
 610:Generated_Source\PSoC4/CyLib.c ****         {
 611:Generated_Source\PSoC4/CyLib.c ****             /* Generate clock sequence to change clock source in CY_SYS_ECO_CLK_SELECT_REG */
 612:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
 613:Generated_Source\PSoC4/CyLib.c **** 
 614:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_EXCO_PGM_CLK_SEQ_GENERATOR; i++)
 615:Generated_Source\PSoC4/CyLib.c ****             {
 616:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
 617:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
 618:Generated_Source\PSoC4/CyLib.c ****             }
 619:Generated_Source\PSoC4/CyLib.c **** 
 620:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
 621:Generated_Source\PSoC4/CyLib.c ****         }
 622:Generated_Source\PSoC4/CyLib.c ****     }
 623:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 624:Generated_Source\PSoC4/CyLib.c **** 
 625:Generated_Source\PSoC4/CyLib.c ****     tmpReg = CY_SYS_CLK_SELECT_REG & ~(CY_SYS_CLK_SELECT_DIRECT_SEL_MASK |
 208              		.loc 1 625 0
 209 0008 0323     		movs	r3, #3
 210 000a 0449     		ldr	r1, .L14
 626:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 627:Generated_Source\PSoC4/CyLib.c **** 
 628:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 629:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_PLL1 == clkSelect))
 630:Generated_Source\PSoC4/CyLib.c ****     {
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 16


 631:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 632:Generated_Source\PSoC4/CyLib.c ****     }
 633:Generated_Source\PSoC4/CyLib.c ****     else
 634:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 635:Generated_Source\PSoC4/CyLib.c ****     {
 636:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 637:Generated_Source\PSoC4/CyLib.c ****     }
 638:Generated_Source\PSoC4/CyLib.c **** 
 639:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = tmpReg;
 640:Generated_Source\PSoC4/CyLib.c **** 
 641:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 642:Generated_Source\PSoC4/CyLib.c **** }
 211              		.loc 1 642 0
 212              		@ sp needed
 625:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 213              		.loc 1 625 0
 214 000c 0A68     		ldr	r2, [r1]
 215 000e 9A43     		bics	r2, r3
 216              	.LVL5:
 636:Generated_Source\PSoC4/CyLib.c ****     }
 217              		.loc 1 636 0
 218 0010 2340     		ands	r3, r4
 219 0012 1343     		orrs	r3, r2
 220              	.LVL6:
 639:Generated_Source\PSoC4/CyLib.c **** 
 221              		.loc 1 639 0
 222 0014 0B60     		str	r3, [r1]
 641:Generated_Source\PSoC4/CyLib.c **** }
 223              		.loc 1 641 0
 224 0016 FFF7FEFF 		bl	CyExitCriticalSection
 225              	.LVL7:
 226              	.LVL8:
 227              		.loc 1 642 0
 228 001a 10BD     		pop	{r4, pc}
 229              	.L15:
 230              		.align	2
 231              	.L14:
 232 001c 28000340 		.word	1073938472
 233              		.cfi_endproc
 234              	.LFE6:
 235              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 236              		.section	.text.CySysEnablePumpClock,"ax",%progbits
 237              		.align	1
 238              		.global	CySysEnablePumpClock
 239              		.code	16
 240              		.thumb_func
 241              		.type	CySysEnablePumpClock, %function
 242              	CySysEnablePumpClock:
 243              	.LFB7:
 643:Generated_Source\PSoC4/CyLib.c **** 
 644:Generated_Source\PSoC4/CyLib.c **** 
 645:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 646:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysEnablePumpClock
 647:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 648:Generated_Source\PSoC4/CyLib.c **** *
 649:Generated_Source\PSoC4/CyLib.c **** * Enables / disables the pump clock.
 650:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 17


 651:Generated_Source\PSoC4/CyLib.c **** * \param enable
 652:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_DISABLE - Disables the pump clock
 653:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_ENABLE - Enables and restores the operating source of
 654:Generated_Source\PSoC4/CyLib.c **** * the pump clock.
 655:Generated_Source\PSoC4/CyLib.c **** *
 656:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
 657:Generated_Source\PSoC4/CyLib.c **** *  Enabling/disabling the pump clock does not guarantee glitch free operation
 658:Generated_Source\PSoC4/CyLib.c **** *  when changing the IMO parameters or clock divider settings.
 659:Generated_Source\PSoC4/CyLib.c **** *
 660:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 661:Generated_Source\PSoC4/CyLib.c **** void CySysEnablePumpClock(uint32 enable)
 662:Generated_Source\PSoC4/CyLib.c **** {
 244              		.loc 1 662 0
 245              		.cfi_startproc
 246              		@ args = 0, pretend = 0, frame = 0
 247              		@ frame_needed = 0, uses_anonymous_args = 0
 248              	.LVL9:
 249 0000 10B5     		push	{r4, lr}
 250              		.cfi_def_cfa_offset 8
 251              		.cfi_offset 4, -8
 252              		.cfi_offset 14, -4
 253 0002 094B     		ldr	r3, .L21
 254 0004 094C     		ldr	r4, .L21+4
 663:Generated_Source\PSoC4/CyLib.c ****     #if(CY_IP_SRSSV2)
 664:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 665:Generated_Source\PSoC4/CyLib.c ****         {
 666:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG |= (CySysClkPumpConfig << CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIF
 667:Generated_Source\PSoC4/CyLib.c ****         }
 668:Generated_Source\PSoC4/CyLib.c ****         else
 669:Generated_Source\PSoC4/CyLib.c ****         {
 670:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_IMO_CONFIG_REG >> CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIFT
 671:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK;
 672:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG &= ~(CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK << CY_SYS_CLK_IMO_CO
 673:Generated_Source\PSoC4/CyLib.c ****         }
 674:Generated_Source\PSoC4/CyLib.c ****     #else /* CY_IP_SRSSLT */
 675:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 255              		.loc 1 675 0
 256 0006 C207     		lsls	r2, r0, #31
 257 0008 04D5     		bpl	.L17
 676:Generated_Source\PSoC4/CyLib.c ****         {
 677:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG |= (CySysClkPumpConfig << CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT);
 258              		.loc 1 677 0
 259 000a 2268     		ldr	r2, [r4]
 260 000c 1968     		ldr	r1, [r3]
 261 000e 1201     		lsls	r2, r2, #4
 262 0010 0A43     		orrs	r2, r1
 263 0012 06E0     		b	.L19
 264              	.L17:
 678:Generated_Source\PSoC4/CyLib.c ****         }
 679:Generated_Source\PSoC4/CyLib.c ****         else
 680:Generated_Source\PSoC4/CyLib.c ****         {
 681:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT) &
 682:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_SELECT_PUMP_SEL_MASK;
 683:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG &= ~(CY_SYS_CLK_SELECT_PUMP_SEL_MASK << CY_SYS_CLK_SELECT_PUMP_SE
 265              		.loc 1 683 0
 266 0014 3021     		movs	r1, #48
 681:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_SELECT_PUMP_SEL_MASK;
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 18


 267              		.loc 1 681 0
 268 0016 1A68     		ldr	r2, [r3]
 269 0018 9206     		lsls	r2, r2, #26
 270 001a 920F     		lsrs	r2, r2, #30
 271 001c 2260     		str	r2, [r4]
 272              		.loc 1 683 0
 273 001e 1A68     		ldr	r2, [r3]
 274 0020 8A43     		bics	r2, r1
 275              	.L19:
 276 0022 1A60     		str	r2, [r3]
 684:Generated_Source\PSoC4/CyLib.c ****         }
 685:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_SRSSV2) */
 686:Generated_Source\PSoC4/CyLib.c **** }
 277              		.loc 1 686 0
 278              		@ sp needed
 279 0024 10BD     		pop	{r4, pc}
 280              	.L22:
 281 0026 C046     		.align	2
 282              	.L21:
 283 0028 28000340 		.word	1073938472
 284 002c 00000000 		.word	.LANCHOR0
 285              		.cfi_endproc
 286              	.LFE7:
 287              		.size	CySysEnablePumpClock, .-CySysEnablePumpClock
 288              		.section	.text.CySysClkGetSysclkSource,"ax",%progbits
 289              		.align	1
 290              		.global	CySysClkGetSysclkSource
 291              		.code	16
 292              		.thumb_func
 293              		.type	CySysClkGetSysclkSource, %function
 294              	CySysClkGetSysclkSource:
 295              	.LFB8:
 687:Generated_Source\PSoC4/CyLib.c **** 
 688:Generated_Source\PSoC4/CyLib.c **** 
 689:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 690:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkGetSysclkSource
 691:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 692:Generated_Source\PSoC4/CyLib.c **** *
 693:Generated_Source\PSoC4/CyLib.c **** * Returns the source of the System clock.
 694:Generated_Source\PSoC4/CyLib.c **** *
 695:Generated_Source\PSoC4/CyLib.c **** * \return The same as \ref CySysClkWriteHfclkDirect() function parameters.
 696:Generated_Source\PSoC4/CyLib.c **** *
 697:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 698:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkGetSysclkSource(void)
 699:Generated_Source\PSoC4/CyLib.c **** {
 296              		.loc 1 699 0
 297              		.cfi_startproc
 298              		@ args = 0, pretend = 0, frame = 0
 299              		@ frame_needed = 0, uses_anonymous_args = 0
 300 0000 10B5     		push	{r4, lr}
 301              		.cfi_def_cfa_offset 8
 302              		.cfi_offset 4, -8
 303              		.cfi_offset 14, -4
 700:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 701:Generated_Source\PSoC4/CyLib.c ****     uint32 sysclkSource;
 702:Generated_Source\PSoC4/CyLib.c **** 
 703:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 19


 304              		.loc 1 703 0
 305 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 306              	.LVL10:
 704:Generated_Source\PSoC4/CyLib.c **** 
 705:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 706:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK) != 0u)
 707:Generated_Source\PSoC4/CyLib.c ****     {
 708:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 709:Generated_Source\PSoC4/CyLib.c ****     }
 710:Generated_Source\PSoC4/CyLib.c ****     else
 711:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 712:Generated_Source\PSoC4/CyLib.c ****     {
 713:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 307              		.loc 1 713 0
 308 0006 034B     		ldr	r3, .L24
 714:Generated_Source\PSoC4/CyLib.c **** 
 715:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SRSSLT && CY_IP_PLL)
 716:Generated_Source\PSoC4/CyLib.c ****         sysclkSource |= (((uint32)(CY_SYS_ECO_CLK_SELECT_REG & CY_SYS_ECO_CLK_SELECT_ECO_PLL_MASK))
 717:Generated_Source\PSoC4/CyLib.c ****                          CY_SYS_CLK_SELECT_HFCLK_PLL_SHIFT);
 718:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 719:Generated_Source\PSoC4/CyLib.c **** 
 720:Generated_Source\PSoC4/CyLib.c ****     }
 721:Generated_Source\PSoC4/CyLib.c **** 
 722:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 723:Generated_Source\PSoC4/CyLib.c **** 
 724:Generated_Source\PSoC4/CyLib.c ****     return (sysclkSource);
 725:Generated_Source\PSoC4/CyLib.c **** }
 309              		.loc 1 725 0
 310              		@ sp needed
 713:Generated_Source\PSoC4/CyLib.c **** 
 311              		.loc 1 713 0
 312 0008 1C68     		ldr	r4, [r3]
 313              	.LVL11:
 722:Generated_Source\PSoC4/CyLib.c **** 
 314              		.loc 1 722 0
 315 000a FFF7FEFF 		bl	CyExitCriticalSection
 316              	.LVL12:
 724:Generated_Source\PSoC4/CyLib.c **** }
 317              		.loc 1 724 0
 318 000e 0320     		movs	r0, #3
 319 0010 2040     		ands	r0, r4
 320              	.LVL13:
 321              		.loc 1 725 0
 322 0012 10BD     		pop	{r4, pc}
 323              	.L25:
 324              		.align	2
 325              	.L24:
 326 0014 28000340 		.word	1073938472
 327              		.cfi_endproc
 328              	.LFE8:
 329              		.size	CySysClkGetSysclkSource, .-CySysClkGetSysclkSource
 330              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 331              		.align	1
 332              		.global	CySysClkWriteSysclkDiv
 333              		.code	16
 334              		.thumb_func
 335              		.type	CySysClkWriteSysclkDiv, %function
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 20


 336              	CySysClkWriteSysclkDiv:
 337              	.LFB9:
 726:Generated_Source\PSoC4/CyLib.c **** 
 727:Generated_Source\PSoC4/CyLib.c **** 
 728:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 729:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 730:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 731:Generated_Source\PSoC4/CyLib.c **** *
 732:Generated_Source\PSoC4/CyLib.c **** * Selects the prescaler divide amount for SYSCLK from HFCLK.
 733:Generated_Source\PSoC4/CyLib.c **** *
 734:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 735:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 736:Generated_Source\PSoC4/CyLib.c **** *
 737:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 738:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 739:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 740:Generated_Source\PSoC4/CyLib.c **** *
 741:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 742:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 743:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 744:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 745:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 746:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 747:Generated_Source\PSoC4/CyLib.c **** *
 748:Generated_Source\PSoC4/CyLib.c **** * \param divider Power of 2 prescaler selection
 749:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 750:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 751:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 752:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 753:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 754:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 755:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 756:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 757:Generated_Source\PSoC4/CyLib.c **** *
 758:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 759:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 760:Generated_Source\PSoC4/CyLib.c **** {
 338              		.loc 1 760 0
 339              		.cfi_startproc
 340              		@ args = 0, pretend = 0, frame = 0
 341              		@ frame_needed = 0, uses_anonymous_args = 0
 342              	.LVL14:
 343 0000 70B5     		push	{r4, r5, r6, lr}
 344              		.cfi_def_cfa_offset 16
 345              		.cfi_offset 4, -16
 346              		.cfi_offset 5, -12
 347              		.cfi_offset 6, -8
 348              		.cfi_offset 14, -4
 349              		.loc 1 760 0
 350 0002 0400     		movs	r4, r0
 761:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 762:Generated_Source\PSoC4/CyLib.c **** 
 763:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 351              		.loc 1 763 0
 352 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 353              	.LVL15:
 764:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 21


 765:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 766:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 354              		.loc 1 766 0
 355 0008 FF21     		movs	r1, #255
 767:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 356              		.loc 1 767 0
 357 000a 054D     		ldr	r5, .L27
 766:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 358              		.loc 1 766 0
 359 000c A301     		lsls	r3, r4, #6
 360              		.loc 1 767 0
 361 000e 2A68     		ldr	r2, [r5]
 766:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 362              		.loc 1 766 0
 363 0010 0B40     		ands	r3, r1
 364 0012 3F39     		subs	r1, r1, #63
 365 0014 8A43     		bics	r2, r1
 366 0016 1343     		orrs	r3, r2
 765:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 367              		.loc 1 765 0
 368 0018 2B60     		str	r3, [r5]
 768:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 769:Generated_Source\PSoC4/CyLib.c **** 
 770:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 369              		.loc 1 770 0
 370 001a FFF7FEFF 		bl	CyExitCriticalSection
 371              	.LVL16:
 771:Generated_Source\PSoC4/CyLib.c **** }
 372              		.loc 1 771 0
 373              		@ sp needed
 374              	.LVL17:
 375 001e 70BD     		pop	{r4, r5, r6, pc}
 376              	.L28:
 377              		.align	2
 378              	.L27:
 379 0020 28000340 		.word	1073938472
 380              		.cfi_endproc
 381              	.LFE9:
 382              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 383              		.section	.text.CySysClkWriteHfclkDiv,"ax",%progbits
 384              		.align	1
 385              		.global	CySysClkWriteHfclkDiv
 386              		.code	16
 387              		.thumb_func
 388              		.type	CySysClkWriteHfclkDiv, %function
 389              	CySysClkWriteHfclkDiv:
 390              	.LFB11:
 772:Generated_Source\PSoC4/CyLib.c **** 
 773:Generated_Source\PSoC4/CyLib.c **** 
 774:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 775:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 776:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 777:Generated_Source\PSoC4/CyLib.c **** *
 778:Generated_Source\PSoC4/CyLib.c **** * Sets the frequency of the IMO.
 779:Generated_Source\PSoC4/CyLib.c **** *
 780:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 781:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 22


 782:Generated_Source\PSoC4/CyLib.c **** *
 783:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 784:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 785:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 786:Generated_Source\PSoC4/CyLib.c **** *
 787:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200M and PSoC 4200L device families, if WCO lock feature is enabled
 788:Generated_Source\PSoC4/CyLib.c **** * then this API will disable the lock, write the new IMO frequency and then
 789:Generated_Source\PSoC4/CyLib.c **** * re-enable the lock.
 790:Generated_Source\PSoC4/CyLib.c **** *
 791:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L device families, this function enables the USB lock when 24 or
 792:Generated_Source\PSoC4/CyLib.c **** * 48 MHz passed as a parameter if the USB lock option is enabled in Design Wide
 793:Generated_Source\PSoC4/CyLib.c **** * Resources tab or CySysClkImoEnableUsbLock() was called before. Note the USB
 794:Generated_Source\PSoC4/CyLib.c **** * lock is disabled during IMO frequency change.
 795:Generated_Source\PSoC4/CyLib.c **** *
 796:Generated_Source\PSoC4/CyLib.c **** * The CPU is halted if new frequency is invalid and project is compiled
 797:Generated_Source\PSoC4/CyLib.c **** * in debug mode.
 798:Generated_Source\PSoC4/CyLib.c **** *
 799:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 800:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 801:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 802:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 803:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 804:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 805:Generated_Source\PSoC4/CyLib.c **** *
 806:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 807:Generated_Source\PSoC4/CyLib.c **** * and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 808:Generated_Source\PSoC4/CyLib.c **** * the System clock.
 809:Generated_Source\PSoC4/CyLib.c **** *
 810:Generated_Source\PSoC4/CyLib.c **** * \param freq All PSoC 4 families excluding the following: Valid range [3-48]
 811:Generated_Source\PSoC4/CyLib.c **** * with step size equals 1. PSoC 4000: Valid values are 24, 32, and 48.
 812:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor: Valid range [24-48] with
 813:Generated_Source\PSoC4/CyLib.c **** * step size equals 4.
 814:Generated_Source\PSoC4/CyLib.c **** *
 815:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 816:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 817:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 818:Generated_Source\PSoC4/CyLib.c ****     {
 819:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 820:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 821:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 822:Generated_Source\PSoC4/CyLib.c ****         #else
 823:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 824:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 825:Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
 826:Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 827:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 828:Generated_Source\PSoC4/CyLib.c **** 
 829:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 830:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 831:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 832:Generated_Source\PSoC4/CyLib.c **** 
 833:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 834:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 835:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 836:Generated_Source\PSoC4/CyLib.c **** 
 837:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 838:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 23


 839:Generated_Source\PSoC4/CyLib.c **** 
 840:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 841:Generated_Source\PSoC4/CyLib.c **** 
 842:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 843:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 844:Generated_Source\PSoC4/CyLib.c ****             {
 845:Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 846:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 847:Generated_Source\PSoC4/CyLib.c ****             }
 848:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 849:Generated_Source\PSoC4/CyLib.c **** 
 850:Generated_Source\PSoC4/CyLib.c **** 
 851:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 852:Generated_Source\PSoC4/CyLib.c **** 
 853:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 854:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetUsbLock())
 855:Generated_Source\PSoC4/CyLib.c ****                 {
 856:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 857:Generated_Source\PSoC4/CyLib.c **** 
 858:Generated_Source\PSoC4/CyLib.c ****                 if ((24u == freq) || (48u == freq))
 859:Generated_Source\PSoC4/CyLib.c ****                 {
 860:Generated_Source\PSoC4/CyLib.c ****                     usbLock = 1u;
 861:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableUsbLock();
 862:Generated_Source\PSoC4/CyLib.c ****                 }
 863:Generated_Source\PSoC4/CyLib.c **** 
 864:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 865:Generated_Source\PSoC4/CyLib.c ****                 }
 866:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 867:Generated_Source\PSoC4/CyLib.c **** 
 868:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 869:Generated_Source\PSoC4/CyLib.c **** 
 870:Generated_Source\PSoC4/CyLib.c **** 
 871:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 872:Generated_Source\PSoC4/CyLib.c **** 
 873:Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 874:Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 875:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 876:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 877:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 878:Generated_Source\PSoC4/CyLib.c **** 
 879:Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 880:Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 881:Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
 882:Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 883:Generated_Source\PSoC4/CyLib.c **** 
 884:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 885:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 886:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 887:Generated_Source\PSoC4/CyLib.c **** 
 888:Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 889:Generated_Source\PSoC4/CyLib.c **** 
 890:Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 891:Generated_Source\PSoC4/CyLib.c ****         {
 892:Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 893:Generated_Source\PSoC4/CyLib.c ****             {
 894:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 895:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 24


 896:Generated_Source\PSoC4/CyLib.c ****             }
 897:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 898:Generated_Source\PSoC4/CyLib.c ****             {
 899:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 900:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 901:Generated_Source\PSoC4/CyLib.c ****             }
 902:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 903:Generated_Source\PSoC4/CyLib.c ****             {
 904:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 905:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 906:Generated_Source\PSoC4/CyLib.c ****             }
 907:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 908:Generated_Source\PSoC4/CyLib.c ****             {
 909:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 910:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 911:Generated_Source\PSoC4/CyLib.c ****             }
 912:Generated_Source\PSoC4/CyLib.c ****             else
 913:Generated_Source\PSoC4/CyLib.c ****             {
 914:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 915:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 916:Generated_Source\PSoC4/CyLib.c ****             }
 917:Generated_Source\PSoC4/CyLib.c **** 
 918:Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 919:Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 920:Generated_Source\PSoC4/CyLib.c **** 
 921:Generated_Source\PSoC4/CyLib.c **** 
 922:Generated_Source\PSoC4/CyLib.c ****             /****************************************************************************
 923:Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 924:Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 925:Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 926:Generated_Source\PSoC4/CyLib.c ****             *
 927:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 928:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 929:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 930:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 931:Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 932:Generated_Source\PSoC4/CyLib.c ****             {
 933:Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 934:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 935:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 936:Generated_Source\PSoC4/CyLib.c **** 
 937:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 938:Generated_Source\PSoC4/CyLib.c **** 
 939:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 940:Generated_Source\PSoC4/CyLib.c ****             }
 941:Generated_Source\PSoC4/CyLib.c ****             else
 942:Generated_Source\PSoC4/CyLib.c ****             {
 943:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 944:Generated_Source\PSoC4/CyLib.c ****             }
 945:Generated_Source\PSoC4/CyLib.c **** 
 946:Generated_Source\PSoC4/CyLib.c **** 
 947:Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 948:Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 949:Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 950:Generated_Source\PSoC4/CyLib.c ****             *
 951:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 952:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 25


 953:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 954:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 955:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 956:Generated_Source\PSoC4/CyLib.c ****             {
 957:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 958:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 959:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 960:Generated_Source\PSoC4/CyLib.c ****             }
 961:Generated_Source\PSoC4/CyLib.c **** 
 962:Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 963:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_T
 964:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 965:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 966:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 967:Generated_Source\PSoC4/CyLib.c **** 
 968:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 969:Generated_Source\PSoC4/CyLib.c ****             {
 970:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 971:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 972:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 973:Generated_Source\PSoC4/CyLib.c ****             }
 974:Generated_Source\PSoC4/CyLib.c ****         }
 975:Generated_Source\PSoC4/CyLib.c ****         else
 976:Generated_Source\PSoC4/CyLib.c ****         {
 977:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 978:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 979:Generated_Source\PSoC4/CyLib.c ****         }
 980:Generated_Source\PSoC4/CyLib.c **** 
 981:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 982:Generated_Source\PSoC4/CyLib.c **** 
 983:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 984:Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 985:Generated_Source\PSoC4/CyLib.c ****             {
 986:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 987:Generated_Source\PSoC4/CyLib.c ****             }
 988:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 989:Generated_Source\PSoC4/CyLib.c **** 
 990:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 991:Generated_Source\PSoC4/CyLib.c ****             if (1u == usbLock)
 992:Generated_Source\PSoC4/CyLib.c ****             {
 993:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableUsbLock();
 994:Generated_Source\PSoC4/CyLib.c ****             }
 995:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 996:Generated_Source\PSoC4/CyLib.c **** 
 997:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 998:Generated_Source\PSoC4/CyLib.c ****     }
 999:Generated_Source\PSoC4/CyLib.c **** 
1000:Generated_Source\PSoC4/CyLib.c **** #else
1001:Generated_Source\PSoC4/CyLib.c **** 
1002:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
1003:Generated_Source\PSoC4/CyLib.c ****     {
1004:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1005:Generated_Source\PSoC4/CyLib.c ****         uint8  imoTrim1Value;
1006:Generated_Source\PSoC4/CyLib.c **** 
1007:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
1008:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
1009:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 26


1010:Generated_Source\PSoC4/CyLib.c **** 
1011:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
1012:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
1013:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
1014:Generated_Source\PSoC4/CyLib.c **** 
1015:Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4000)
1016:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 32u) || (freq == 48u))
1017:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_CCG3)
1018:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 36u) || (freq == 48u))
1019:Generated_Source\PSoC4/CyLib.c ****         #else
1020:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 28u) || (freq == 32u) ||
1021:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
1022:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
1023:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_PSOC4_4000) */
1024:Generated_Source\PSoC4/CyLib.c ****         {
1025:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1026:Generated_Source\PSoC4/CyLib.c **** 
1027:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
1028:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetWcoLock())
1029:Generated_Source\PSoC4/CyLib.c ****                 {
1030:Generated_Source\PSoC4/CyLib.c ****                     wcoLock = 1u;
1031:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
1032:Generated_Source\PSoC4/CyLib.c ****                 }
1033:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
1034:Generated_Source\PSoC4/CyLib.c **** 
1035:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
1036:Generated_Source\PSoC4/CyLib.c **** 
1037:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
1038:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkImoGetUsbLock())
1039:Generated_Source\PSoC4/CyLib.c ****                     {
1040:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
1041:Generated_Source\PSoC4/CyLib.c **** 
1042:Generated_Source\PSoC4/CyLib.c ****                     if (48u == freq)
1043:Generated_Source\PSoC4/CyLib.c ****                     {
1044:Generated_Source\PSoC4/CyLib.c ****                         usbLock = 1u;
1045:Generated_Source\PSoC4/CyLib.c ****                         CySysClkImoDisableUsbLock();
1046:Generated_Source\PSoC4/CyLib.c ****                     }
1047:Generated_Source\PSoC4/CyLib.c **** 
1048:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
1049:Generated_Source\PSoC4/CyLib.c ****                     }
1050:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
1051:Generated_Source\PSoC4/CyLib.c **** 
1052:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
1053:Generated_Source\PSoC4/CyLib.c **** 
1054:Generated_Source\PSoC4/CyLib.c **** 
1055:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
1056:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
1057:Generated_Source\PSoC4/CyLib.c **** 
1058:Generated_Source\PSoC4/CyLib.c **** 
1059:Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
1060:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
1061:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
1062:Generated_Source\PSoC4/CyLib.c ****                 {
1063:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
1064:Generated_Source\PSoC4/CyLib.c ****                 }
1065:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
1066:Generated_Source\PSoC4/CyLib.c ****                 {
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 27


1067:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
1068:Generated_Source\PSoC4/CyLib.c ****                 }
1069:Generated_Source\PSoC4/CyLib.c ****                 else
1070:Generated_Source\PSoC4/CyLib.c ****                 {
1071:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_M
1072:Generated_Source\PSoC4/CyLib.c ****                 }
1073:Generated_Source\PSoC4/CyLib.c ****             #else
1074:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
1075:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
1076:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
1077:Generated_Source\PSoC4/CyLib.c **** 
1078:Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
1079:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
1080:Generated_Source\PSoC4/CyLib.c **** 
1081:Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
1082:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
1083:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
1084:Generated_Source\PSoC4/CyLib.c **** 
1085:Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
1086:Generated_Source\PSoC4/CyLib.c **** 
1087:Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
1088:Generated_Source\PSoC4/CyLib.c ****             {
1089:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
1090:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
1091:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
1092:Generated_Source\PSoC4/CyLib.c **** 
1093:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
1094:Generated_Source\PSoC4/CyLib.c **** 
1095:Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
1096:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
1097:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
1098:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
1099:Generated_Source\PSoC4/CyLib.c ****             }
1100:Generated_Source\PSoC4/CyLib.c **** 
1101:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
1102:Generated_Source\PSoC4/CyLib.c ****                 if (1u == wcoLock)
1103:Generated_Source\PSoC4/CyLib.c ****                 {
1104:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableWcoLock();
1105:Generated_Source\PSoC4/CyLib.c ****                 }
1106:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
1107:Generated_Source\PSoC4/CyLib.c **** 
1108:Generated_Source\PSoC4/CyLib.c **** 
1109:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
1110:Generated_Source\PSoC4/CyLib.c ****                 if (1u == usbLock)
1111:Generated_Source\PSoC4/CyLib.c ****                 {
1112:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableUsbLock();
1113:Generated_Source\PSoC4/CyLib.c ****                 }
1114:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
1115:Generated_Source\PSoC4/CyLib.c **** 
1116:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1117:Generated_Source\PSoC4/CyLib.c ****         }
1118:Generated_Source\PSoC4/CyLib.c ****         else
1119:Generated_Source\PSoC4/CyLib.c ****         {
1120:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
1121:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
1122:Generated_Source\PSoC4/CyLib.c ****         }
1123:Generated_Source\PSoC4/CyLib.c ****     }
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 28


1124:Generated_Source\PSoC4/CyLib.c **** 
1125:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
1126:Generated_Source\PSoC4/CyLib.c **** 
1127:Generated_Source\PSoC4/CyLib.c **** 
1128:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
1129:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1130:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
1131:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1132:Generated_Source\PSoC4/CyLib.c ****     *
1133:Generated_Source\PSoC4/CyLib.c ****     * Selects the pre-scaler divider value for HFCLK from IMO.
1134:Generated_Source\PSoC4/CyLib.c ****     *
1135:Generated_Source\PSoC4/CyLib.c ****     * The HFCLK predivider allows the device to divide the HFCLK selection mux
1136:Generated_Source\PSoC4/CyLib.c ****     * input before use as HFCLK. The predivider is capable of dividing the HFCLK by
1137:Generated_Source\PSoC4/CyLib.c ****     * powers of 2 between 1 and 8.
1138:Generated_Source\PSoC4/CyLib.c ****     *
1139:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
1140:Generated_Source\PSoC4/CyLib.c ****     * should be selected in a way, not to exceed 16 MHz for SYSCLK.
1141:Generated_Source\PSoC4/CyLib.c ****     *
1142:Generated_Source\PSoC4/CyLib.c ****     * If the SYSCLK clock frequency increases during the device operation, call
1143:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
1144:Generated_Source\PSoC4/CyLib.c ****     * number of clock cycles the cache will wait before sampling data comes back
1145:Generated_Source\PSoC4/CyLib.c ****     * from Flash. If the SYSCLK clock frequency decreases, you can call
1146:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
1147:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() description for more information.
1148:Generated_Source\PSoC4/CyLib.c ****     *
1149:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
1150:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
1151:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
1152:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
1153:Generated_Source\PSoC4/CyLib.c ****     *
1154:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1155:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
1156:Generated_Source\PSoC4/CyLib.c ****     {
 391              		.loc 1 1156 0
 392              		.cfi_startproc
 393              		@ args = 0, pretend = 0, frame = 0
 394              		@ frame_needed = 0, uses_anonymous_args = 0
 395              	.LVL18:
 396 0000 10B5     		push	{r4, lr}
 397              		.cfi_def_cfa_offset 8
 398              		.cfi_offset 4, -8
 399              		.cfi_offset 14, -4
 400              		.loc 1 1156 0
 401 0002 0400     		movs	r4, r0
1157:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1158:Generated_Source\PSoC4/CyLib.c **** 
1159:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 402              		.loc 1 1159 0
 403 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 404              	.LVL19:
1160:Generated_Source\PSoC4/CyLib.c **** 
1161:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
1162:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 405              		.loc 1 1162 0
 406 0008 A300     		lsls	r3, r4, #2
 407 000a 0C24     		movs	r4, #12
 408              	.LVL20:
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 29


1161:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 409              		.loc 1 1161 0
 410 000c 0449     		ldr	r1, .L30
 411              		.loc 1 1162 0
 412 000e 2340     		ands	r3, r4
1161:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 413              		.loc 1 1161 0
 414 0010 0A68     		ldr	r2, [r1]
1163:Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
1164:Generated_Source\PSoC4/CyLib.c **** 
1165:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1166:Generated_Source\PSoC4/CyLib.c ****     }
 415              		.loc 1 1166 0
 416              		@ sp needed
1162:Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
 417              		.loc 1 1162 0
 418 0012 A243     		bics	r2, r4
 419 0014 1343     		orrs	r3, r2
1161:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 420              		.loc 1 1161 0
 421 0016 0B60     		str	r3, [r1]
1165:Generated_Source\PSoC4/CyLib.c ****     }
 422              		.loc 1 1165 0
 423 0018 FFF7FEFF 		bl	CyExitCriticalSection
 424              	.LVL21:
 425              		.loc 1 1166 0
 426 001c 10BD     		pop	{r4, pc}
 427              	.L31:
 428 001e C046     		.align	2
 429              	.L30:
 430 0020 28000340 		.word	1073938472
 431              		.cfi_endproc
 432              	.LFE11:
 433              		.size	CySysClkWriteHfclkDiv, .-CySysClkWriteHfclkDiv
 434              		.section	.text.CySysGetResetReason,"ax",%progbits
 435              		.align	1
 436              		.global	CySysGetResetReason
 437              		.code	16
 438              		.thumb_func
 439              		.type	CySysGetResetReason, %function
 440              	CySysGetResetReason:
 441              	.LFB12:
1167:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
1168:Generated_Source\PSoC4/CyLib.c **** 
1169:Generated_Source\PSoC4/CyLib.c **** 
1170:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_ECO)
1171:Generated_Source\PSoC4/CyLib.c **** 
1172:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1173:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
1174:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1175:Generated_Source\PSoC4/CyLib.c ****     *
1176:Generated_Source\PSoC4/CyLib.c ****     * Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
1177:Generated_Source\PSoC4/CyLib.c ****     * for the ECO startup time.
1178:Generated_Source\PSoC4/CyLib.c ****     *
1179:Generated_Source\PSoC4/CyLib.c ****     * The timeout interval is measured based on the system frequency defined by
1180:Generated_Source\PSoC4/CyLib.c ****     * PSoC Creator at build time. If System clock frequency is changed in
1181:Generated_Source\PSoC4/CyLib.c ****     * runtime, the \ref CyDelayFreq() with the appropriate parameter should be
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 30


1182:Generated_Source\PSoC4/CyLib.c ****     * called.
1183:Generated_Source\PSoC4/CyLib.c ****     *
1184:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100 BLE / PSoC 4200 BLE: The WCO must be enabled prior to enabling ECO.
1185:Generated_Source\PSoC4/CyLib.c ****     *
1186:Generated_Source\PSoC4/CyLib.c ****     * \param timeoutUs Timeout in microseconds.
1187:Generated_Source\PSoC4/CyLib.c ****     *
1188:Generated_Source\PSoC4/CyLib.c ****     * If zero is specified, the function does not wait for timeout and returns
1189:Generated_Source\PSoC4/CyLib.c ****     * CYRET_SUCCESS. If non-zero is specified, the function waits for the timeout.
1190:Generated_Source\PSoC4/CyLib.c ****     *
1191:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS Completed successfully. The ECO is oscillating and
1192:Generated_Source\PSoC4/CyLib.c ****     * amplitude reached 60% and it does not mean 24 MHz crystal is within 50 ppm.
1193:Generated_Source\PSoC4/CyLib.c ****     *
1194:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_TIMEOUT Timeout occurred. If the crystal is not oscillating
1195:Generated_Source\PSoC4/CyLib.c ****     * or amplitude didn't reach 60% after specified amount of time, CYRET_TIMEOUT
1196:Generated_Source\PSoC4/CyLib.c ****     * is returned.
1197:Generated_Source\PSoC4/CyLib.c ****     *
1198:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1199:Generated_Source\PSoC4/CyLib.c ****     *
1200:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1201:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
1202:Generated_Source\PSoC4/CyLib.c ****     {
1203:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1204:Generated_Source\PSoC4/CyLib.c **** 
1205:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_ECO_BLESS)
1206:Generated_Source\PSoC4/CyLib.c ****             /* Enable the RF oscillator band gap */
1207:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1208:Generated_Source\PSoC4/CyLib.c **** 
1209:Generated_Source\PSoC4/CyLib.c ****             /* Update trimming register */
1210:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
1211:Generated_Source\PSoC4/CyLib.c **** 
1212:Generated_Source\PSoC4/CyLib.c ****             /* Enable the Crystal */
1213:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1214:Generated_Source\PSoC4/CyLib.c **** 
1215:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1216:Generated_Source\PSoC4/CyLib.c ****             uint32 regConfig;
1217:Generated_Source\PSoC4/CyLib.c ****             uint32 intrRegMaskStore = 0u;
1218:Generated_Source\PSoC4/CyLib.c **** 
1219:Generated_Source\PSoC4/CyLib.c ****             if (0u != (CY_SYS_BLESS_MT_CFG_REG & (CY_SYS_BLESS_MT_CFG_ENABLE_BLERD <<  CYFLD_BLE_BL
1220:Generated_Source\PSoC4/CyLib.c ****             {
1221:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG |= (CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_D
1222:Generated_Source\PSoC4/CyLib.c ****             }
1223:Generated_Source\PSoC4/CyLib.c ****             else
1224:Generated_Source\PSoC4/CyLib.c ****             {
1225:Generated_Source\PSoC4/CyLib.c ****                 /* Init BLE core */
1226:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG_REG = CY_SYS_BLESS_MT_DELAY_CFG_INIT;
1227:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG2_REG = CY_SYS_BLESS_MT_DELAY_CFG2_INIT;
1228:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG3_REG = CY_SYS_BLESS_MT_DELAY_CFG3_INIT;
1229:Generated_Source\PSoC4/CyLib.c **** 
1230:Generated_Source\PSoC4/CyLib.c ****                 /* RCB init */
1231:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_CTRL_REG;
1232:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_RCB_CTRL_CLEAR;
1233:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_RCB_CTRL_INIT;
1234:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_CTRL_REG = regConfig;
1235:Generated_Source\PSoC4/CyLib.c **** 
1236:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1237:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1238:Generated_Source\PSoC4/CyLib.c ****                 {
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 31


1239:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1240:Generated_Source\PSoC4/CyLib.c ****                 }
1241:Generated_Source\PSoC4/CyLib.c **** 
1242:Generated_Source\PSoC4/CyLib.c ****                 /* Enable BLE core */
1243:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_BLESS_MT_CFG_REG;
1244:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_BLESS_MT_CFG_CLEAR;
1245:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_BLESS_MT_CFG_INIT;
1246:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG = regConfig;
1247:Generated_Source\PSoC4/CyLib.c **** 
1248:Generated_Source\PSoC4/CyLib.c ****                 while(0u == ((CY_SYS_BLESS_BLERD_ACTIVE_INTR_STAT & CY_SYS_BLESS_INTR_STAT_REG)))
1249:Generated_Source\PSoC4/CyLib.c ****                 {
1250:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until BLERD55 moves to active state */
1251:Generated_Source\PSoC4/CyLib.c ****                 }
1252:Generated_Source\PSoC4/CyLib.c **** 
1253:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1254:Generated_Source\PSoC4/CyLib.c ****                 {
1255:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1256:Generated_Source\PSoC4/CyLib.c ****                 }
1257:Generated_Source\PSoC4/CyLib.c **** 
1258:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1259:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_NRST_SET;
1260:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_DIG_CLK_SET;
1261:Generated_Source\PSoC4/CyLib.c **** 
1262:Generated_Source\PSoC4/CyLib.c ****                 #if (CY_SYS_BLE_CLK_ECO_FREQ_32MHZ == CYDEV_ECO_CLK_MHZ)
1263:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_DIV_SET;
1264:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | CY_SYS_RCB_RBUS_
1265:Generated_Source\PSoC4/CyLib.c ****                 #else
1266:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_NODIV_SET;
1267:Generated_Source\PSoC4/CyLib.c ****                 #endif
1268:Generated_Source\PSoC4/CyLib.c **** 
1269:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1270:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_RCB_INTR_RCB_DONE & intrRegMaskStore))
1271:Generated_Source\PSoC4/CyLib.c ****                 {
1272:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~(CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_
1273:Generated_Source\PSoC4/CyLib.c ****                 }
1274:Generated_Source\PSoC4/CyLib.c **** 
1275:Generated_Source\PSoC4/CyLib.c ****                 /* Send read commands to RBUS */
1276:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RD_CMD |
1277:Generated_Source\PSoC4/CyLib.c ****                                             (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET & ~CY_SYS_RCB_RBUS_VAL
1278:Generated_Source\PSoC4/CyLib.c **** 
1279:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY & CY_SYS_RCB_INTR_REG))
1280:Generated_Source\PSoC4/CyLib.c ****                 {
1281:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RX_FIFO_NOT_EMPTY state */
1282:Generated_Source\PSoC4/CyLib.c ****                 }
1283:Generated_Source\PSoC4/CyLib.c **** 
1284:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG |= CY_SYS_RCB_INTR_RCB_DONE;
1285:Generated_Source\PSoC4/CyLib.c **** 
1286:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_RX_FIFO_RD_REG & CY_SYS_RCB_RBUS_TRIM_MASK;
1287:Generated_Source\PSoC4/CyLib.c **** 
1288:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1289:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | regConfig | CY_SYS_R
1290:Generated_Source\PSoC4/CyLib.c **** 
1291:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_DONE & CY_SYS_RCB_INTR_REG))
1292:Generated_Source\PSoC4/CyLib.c ****                 {
1293:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RCB_DONE state */
1294:Generated_Source\PSoC4/CyLib.c ****                 }
1295:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 32


1296:Generated_Source\PSoC4/CyLib.c ****                 /* Clear Interrupt */
1297:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG = CY_SYS_RCB_INTR_CLEAR;
1298:Generated_Source\PSoC4/CyLib.c **** 
1299:Generated_Source\PSoC4/CyLib.c ****                 if(0u != ((CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY) & intr
1300:Generated_Source\PSoC4/CyLib.c ****                 {
1301:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= intrRegMaskStore;
1302:Generated_Source\PSoC4/CyLib.c ****                 }
1303:Generated_Source\PSoC4/CyLib.c **** 
1304:Generated_Source\PSoC4/CyLib.c ****             }
1305:Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_ECO_SRSSV2 || CY_IP_ECO_SRSSLT */
1306:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_ENABLE;
1307:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
1308:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_ECOV2_SRSSLT)
1309:Generated_Source\PSoC4/CyLib.c ****                 CySysClkPllClearPendingInterrupt(CY_SYS_PLL_INTR_WD_ERR);
1310:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_ECOV2_SRSSLT) */
1311:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_CLK_EN;
1312:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_ECO_BLESS) */
1313:Generated_Source\PSoC4/CyLib.c **** 
1314:Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
1315:Generated_Source\PSoC4/CyLib.c ****         {
1316:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_TIMEOUT;
1317:Generated_Source\PSoC4/CyLib.c **** 
1318:Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
1319:Generated_Source\PSoC4/CyLib.c ****             {
1320:Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
1321:Generated_Source\PSoC4/CyLib.c **** 
1322:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
1323:Generated_Source\PSoC4/CyLib.c ****                 {
1324:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_SUCCESS;
1325:Generated_Source\PSoC4/CyLib.c ****                     break;
1326:Generated_Source\PSoC4/CyLib.c ****                 }
1327:Generated_Source\PSoC4/CyLib.c ****             }
1328:Generated_Source\PSoC4/CyLib.c **** 
1329:Generated_Source\PSoC4/CyLib.c ****         }
1330:Generated_Source\PSoC4/CyLib.c **** 
1331:Generated_Source\PSoC4/CyLib.c ****         return(returnStatus);
1332:Generated_Source\PSoC4/CyLib.c ****     }
1333:Generated_Source\PSoC4/CyLib.c **** 
1334:Generated_Source\PSoC4/CyLib.c **** 
1335:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1336:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
1337:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1338:Generated_Source\PSoC4/CyLib.c ****     *
1339:Generated_Source\PSoC4/CyLib.c ****     * Stops the megahertz crystal.
1340:Generated_Source\PSoC4/CyLib.c ****     *
1341:Generated_Source\PSoC4/CyLib.c ****     * If ECO is disabled when it is sourcing HFCLK, the CPU will halt. In addition,
1342:Generated_Source\PSoC4/CyLib.c ****     * for PSoC 4100 BLE / PSoC 4200 BLE devices, the BLE sub-system will stop
1343:Generated_Source\PSoC4/CyLib.c ****     * functioning.
1344:Generated_Source\PSoC4/CyLib.c ****     *
1345:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1346:Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
1347:Generated_Source\PSoC4/CyLib.c ****     {
1348:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1349:Generated_Source\PSoC4/CyLib.c ****             /* Disable the RF oscillator band gap */
1350:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1351:Generated_Source\PSoC4/CyLib.c **** 
1352:Generated_Source\PSoC4/CyLib.c ****             /* Disable the Crystal */
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 33


1353:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1354:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1355:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_BLESS_MT_CFG_REG &= ~(CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_DPSL
1356:Generated_Source\PSoC4/CyLib.c ****         #else
1357:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~(CY_SYS_CLK_ECO_CONFIG_ENABLE | CY_SYS_CLK_ECO_C
1358:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1359:Generated_Source\PSoC4/CyLib.c ****     }
1360:Generated_Source\PSoC4/CyLib.c **** 
1361:Generated_Source\PSoC4/CyLib.c **** 
1362:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1363:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
1364:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1365:Generated_Source\PSoC4/CyLib.c ****     *
1366:Generated_Source\PSoC4/CyLib.c ****     * Reads the status bit for the megahertz crystal.
1367:Generated_Source\PSoC4/CyLib.c ****     *
1368:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4100 BLE / PSoC 4200 BLE devices, the status bit is the
1369:Generated_Source\PSoC4/CyLib.c ****     * XO_AMP_DETECT bit in FSM register.
1370:Generated_Source\PSoC4/CyLib.c ****     *
1371:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L / 4100S / 4500 with ECO devices, the error status bit is
1372:Generated_Source\PSoC4/CyLib.c ****     * the WATCHDOG_ERROR bit in ECO_STATUS register.
1373:Generated_Source\PSoC4/CyLib.c ****     *
1374:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4100 BLE/PSoC 4200 BLE: Non-zero indicates that ECO output
1375:Generated_Source\PSoC4/CyLib.c ****     * reached 50 ppm and is oscillating in valid range.
1376:Generated_Source\PSoC4/CyLib.c ****     *
1377:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4200L / 4100S / 4500 with ECO: Non-zero indicates that ECO
1378:Generated_Source\PSoC4/CyLib.c ****     * is running.
1379:Generated_Source\PSoC4/CyLib.c ****     *
1380:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1381:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
1382:Generated_Source\PSoC4/CyLib.c ****     {
1383:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1384:Generated_Source\PSoC4/CyLib.c **** 
1385:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1386:Generated_Source\PSoC4/CyLib.c ****             returnValue = CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT;
1387:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1388:Generated_Source\PSoC4/CyLib.c ****             returnValue = (CY_SYS_BLESS_MT_STATUS_REG & CY_SYS_BLESS_MT_STATUS_CURR_STATE_MASK) >> 
1389:Generated_Source\PSoC4/CyLib.c **** 
1390:Generated_Source\PSoC4/CyLib.c ****             returnValue =  ((CY_SYS_BLESS_MT_STATUS_BLERD_IDLE == returnValue) ||
1391:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_SWITCH_EN  == returnValue) ||
1392:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ACTIVE  ==  returnValue) ||
1393:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ISOLATE == returnValue));
1394:Generated_Source\PSoC4/CyLib.c ****         #else
1395:Generated_Source\PSoC4/CyLib.c ****             returnValue = (0u != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)
1396:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1397:Generated_Source\PSoC4/CyLib.c **** 
1398:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1399:Generated_Source\PSoC4/CyLib.c ****     }
1400:Generated_Source\PSoC4/CyLib.c **** 
1401:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECO_BLESS || CY_IP_ECO_BLESSV3)
1402:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1403:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkWriteEcoDiv
1404:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1405:Generated_Source\PSoC4/CyLib.c ****         *
1406:Generated_Source\PSoC4/CyLib.c ****         * Selects value for the ECO divider.
1407:Generated_Source\PSoC4/CyLib.c ****         *
1408:Generated_Source\PSoC4/CyLib.c ****         * The ECO must not be the HFCLK clock source when this function is called.
1409:Generated_Source\PSoC4/CyLib.c ****         * The HFCLK source can be changed to the other clock source by call to the
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 34


1410:Generated_Source\PSoC4/CyLib.c ****         * CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
1411:Generated_Source\PSoC4/CyLib.c ****         * function will not have any effect if compiler in release mode, and halt the
1412:Generated_Source\PSoC4/CyLib.c ****         * CPU when compiler in debug mode.
1413:Generated_Source\PSoC4/CyLib.c ****         *
1414:Generated_Source\PSoC4/CyLib.c ****         * If the SYSCLK clock frequency increases during the device operation, call
1415:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
1416:Generated_Source\PSoC4/CyLib.c ****         * of clock cycles the cache will wait before sampling data comes back from
1417:Generated_Source\PSoC4/CyLib.c ****         * Flash. If the SYSCLK clock frequency decreases, you can call
1418:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() to improve the CPU performance. See
1419:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() description for more information.
1420:Generated_Source\PSoC4/CyLib.c ****         *
1421:Generated_Source\PSoC4/CyLib.c ****         * \param divider Power of 2 divider selection.
1422:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV1
1423:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV2
1424:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV4
1425:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV8
1426:Generated_Source\PSoC4/CyLib.c ****         *
1427:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1428:Generated_Source\PSoC4/CyLib.c ****         void CySysClkWriteEcoDiv(uint32 divider)
1429:Generated_Source\PSoC4/CyLib.c ****         {
1430:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1431:Generated_Source\PSoC4/CyLib.c **** 
1432:Generated_Source\PSoC4/CyLib.c ****             if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK)
1433:Generated_Source\PSoC4/CyLib.c ****             {
1434:Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
1435:Generated_Source\PSoC4/CyLib.c **** 
1436:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
1437:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
1438:Generated_Source\PSoC4/CyLib.c **** 
1439:Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
1440:Generated_Source\PSoC4/CyLib.c ****             }
1441:Generated_Source\PSoC4/CyLib.c ****             else
1442:Generated_Source\PSoC4/CyLib.c ****             {
1443:Generated_Source\PSoC4/CyLib.c ****                 /* Halt CPU in debug mode if ECO sources HFCLK */
1444:Generated_Source\PSoC4/CyLib.c ****                 CYASSERT(0u != 0u);
1445:Generated_Source\PSoC4/CyLib.c ****             }
1446:Generated_Source\PSoC4/CyLib.c ****         }
1447:Generated_Source\PSoC4/CyLib.c **** 
1448:Generated_Source\PSoC4/CyLib.c ****     #else
1449:Generated_Source\PSoC4/CyLib.c **** 
1450:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1451:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoTrim
1452:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1453:Generated_Source\PSoC4/CyLib.c ****         *
1454:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO. This API is available only for PSoC
1455:Generated_Source\PSoC4/CyLib.c ****         * 4200L / 4100S /4500 with ECO devices only.
1456:Generated_Source\PSoC4/CyLib.c ****         *
1457:Generated_Source\PSoC4/CyLib.c ****         * The following parameters can be trimmed for ECO. The affected registers are
1458:Generated_Source\PSoC4/CyLib.c ****         * ECO_TRIM0 and ECO_TRIM1.
1459:Generated_Source\PSoC4/CyLib.c ****         *
1460:Generated_Source\PSoC4/CyLib.c ****         * Watchdog trim - This bit field sets the error threshold below the steady
1461:Generated_Source\PSoC4/CyLib.c ****         * state amplitude level.
1462:Generated_Source\PSoC4/CyLib.c ****         *
1463:Generated_Source\PSoC4/CyLib.c ****         * Amplitude trim - This bit field is to set the crystal drive level when
1464:Generated_Source\PSoC4/CyLib.c ****         * ECO_CONFIG.AGC_EN = 1. WARNING: use care when setting this field because
1465:Generated_Source\PSoC4/CyLib.c ****         * driving a crystal beyond its rated limit can permanently damage the crystal.
1466:Generated_Source\PSoC4/CyLib.c ****         *
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 35


1467:Generated_Source\PSoC4/CyLib.c ****         * Filter frequency trim - This bit field sets LPF frequency trim and affects
1468:Generated_Source\PSoC4/CyLib.c ****         * the 3rd harmonic content.
1469:Generated_Source\PSoC4/CyLib.c ****         *
1470:Generated_Source\PSoC4/CyLib.c ****         * Feedback resistor trim - This bit field sets the feedback resistor trim and
1471:Generated_Source\PSoC4/CyLib.c ****         * impacts the oscillation amplitude.
1472:Generated_Source\PSoC4/CyLib.c ****         *
1473:Generated_Source\PSoC4/CyLib.c ****         * Amplifier gain trim - This bit field sets the amplifier gain trim and affects
1474:Generated_Source\PSoC4/CyLib.c ****         * the startup time of the crystal.
1475:Generated_Source\PSoC4/CyLib.c ****         *
1476:Generated_Source\PSoC4/CyLib.c ****         * Use care when setting the amplitude trim field because driving a crystal
1477:Generated_Source\PSoC4/CyLib.c ****         * beyond its rated limit can permanently damage the crystal.
1478:Generated_Source\PSoC4/CyLib.c ****         *
1479:Generated_Source\PSoC4/CyLib.c ****         * \param wDTrim: Watchdog trim
1480:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM0      Error threshold is 0.05 V
1481:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM1      Error threshold is 0.10 V
1482:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM2      Error threshold is 0.15 V
1483:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM3      Error threshold is 0.20 V
1484:Generated_Source\PSoC4/CyLib.c ****         *
1485:Generated_Source\PSoC4/CyLib.c ****         * \param aTrim: Amplitude trim
1486:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM0       Amplitude is 0.3 Vpp
1487:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM1       Amplitude is 0.4 Vpp
1488:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM2       Amplitude is 0.5 Vpp
1489:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM3       Amplitude is 0.6 Vpp
1490:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM4       Amplitude is 0.7 Vpp
1491:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM5       Amplitude is 0.8 Vpp
1492:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM6       Amplitude is 0.9 Vpp
1493:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM7       Amplitude is 1.0 Vpp
1494:Generated_Source\PSoC4/CyLib.c ****         *
1495:Generated_Source\PSoC4/CyLib.c ****         * \param fTrim: Filter frequency trim
1496:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM0       Crystal frequency > 30 MHz
1497:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM1       24 MHz < Crystal frequency <= 30 MHz
1498:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM2       17 MHz < Crystal frequency <= 24 MHz
1499:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM3       Crystal frequency <= 17 MHz
1500:Generated_Source\PSoC4/CyLib.c ****         *
1501:Generated_Source\PSoC4/CyLib.c ****         * \param rTrim: Feedback resistor trim
1502:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM0       Crystal frequency > 30 MHz
1503:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM1       24 MHz < Crystal frequency <= 30 MHz
1504:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM2       17 MHz < Crystal frequency <= 24 MHz
1505:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM3       Crystal frequency <= 17 MHz
1506:Generated_Source\PSoC4/CyLib.c ****         *
1507:Generated_Source\PSoC4/CyLib.c ****         * \param gTrim: Amplifier gain trim. Calculate the minimum required gm
1508:Generated_Source\PSoC4/CyLib.c ****         * (trans-conductance value). Divide the calculated gm value by 4.5 to
1509:Generated_Source\PSoC4/CyLib.c ****         * obtain an integer value 'result'. For more information please refer
1510:Generated_Source\PSoC4/CyLib.c ****         * to the device TRM.
1511:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM0       If result = 1
1512:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM1       If result = 0
1513:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 2
1514:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 3
1515:Generated_Source\PSoC4/CyLib.c ****         *
1516:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1517:Generated_Source\PSoC4/CyLib.c ****         void CySysClkConfigureEcoTrim(uint32 wDTrim, uint32 aTrim, uint32 fTrim, uint32 rTrim, uint
1518:Generated_Source\PSoC4/CyLib.c ****         {
1519:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1520:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
1521:Generated_Source\PSoC4/CyLib.c **** 
1522:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1523:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 36


1524:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM0_REG & ~(CY_SYS_CLK_ECO_TRIM0_WDTRIM_MASK | CY_SYS_CLK_EC
1525:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (wDTrim << CY_SYS_CLK_ECO_TRIM0_WDTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM
1526:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (aTrim << CY_SYS_CLK_ECO_TRIM0_ATRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM0_
1527:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM0_REG = regTmp;
1528:Generated_Source\PSoC4/CyLib.c **** 
1529:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM1_REG & ~(CY_SYS_CLK_ECO_TRIM1_FTRIM_MASK |
1530:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_RTRIM_MASK |
1531:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_GTRIM_MASK);
1532:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (fTrim << CY_SYS_CLK_ECO_TRIM1_FTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1533:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (rTrim << CY_SYS_CLK_ECO_TRIM1_RTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1534:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (gTrim << CY_SYS_CLK_ECO_TRIM1_GTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1535:Generated_Source\PSoC4/CyLib.c **** 
1536:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM1_REG = regTmp;
1537:Generated_Source\PSoC4/CyLib.c **** 
1538:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1539:Generated_Source\PSoC4/CyLib.c ****         }
1540:Generated_Source\PSoC4/CyLib.c **** 
1541:Generated_Source\PSoC4/CyLib.c **** 
1542:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1543:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoDrive
1544:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1545:Generated_Source\PSoC4/CyLib.c ****         *
1546:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO based on crystal parameters. Use care
1547:Generated_Source\PSoC4/CyLib.c ****         * when setting the driveLevel parameter because driving a crystal beyond its
1548:Generated_Source\PSoC4/CyLib.c ****         * rated limit can permanently damage the crystal.
1549:Generated_Source\PSoC4/CyLib.c ****         *
1550:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4200L / 4100S / 4500 with ECO
1551:Generated_Source\PSoC4/CyLib.c ****         * devices only.
1552:Generated_Source\PSoC4/CyLib.c ****         *
1553:Generated_Source\PSoC4/CyLib.c ****         * \param freq Frequency of the crystal in kHz.
1554:Generated_Source\PSoC4/CyLib.c ****         * \param cLoad Crystal load capacitance in pF.
1555:Generated_Source\PSoC4/CyLib.c ****         * \param esr Equivalent series resistance of the crystal in ohm.
1556:Generated_Source\PSoC4/CyLib.c ****         *  maxAmplitude: maximum amplitude level in mV. Calculate as
1557:Generated_Source\PSoC4/CyLib.c ****         *  ((sqrt(driveLevel in uW / 2 / esr))/(3.14 * freq * cLoad)) * 10^9.
1558:Generated_Source\PSoC4/CyLib.c ****         *
1559:Generated_Source\PSoC4/CyLib.c ****         *  The Automatic Gain Control (AGC) is disabled when the specified maximum
1560:Generated_Source\PSoC4/CyLib.c ****         *  amplitude level equals or above 2. In this case the amplitude is not
1561:Generated_Source\PSoC4/CyLib.c ****         *  explicitly controlled and will grow until it saturates to the supply rail
1562:Generated_Source\PSoC4/CyLib.c ****         *  (1.8V nom). WARNING: use care when disabling AGC because driving a crystal
1563:Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1564:Generated_Source\PSoC4/CyLib.c ****         *
1565:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_SUCCESS ECO configuration completed successfully.
1566:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1567:Generated_Source\PSoC4/CyLib.c ****         *
1568:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1569:Generated_Source\PSoC4/CyLib.c ****         cystatus CySysClkConfigureEcoDrive(uint32 freq, uint32 cLoad, uint32 esr, uint32 maxAmplitu
1570:Generated_Source\PSoC4/CyLib.c ****         {
1571:Generated_Source\PSoC4/CyLib.c ****             cystatus returnStatus = CYRET_SUCCESS;
1572:Generated_Source\PSoC4/CyLib.c **** 
1573:Generated_Source\PSoC4/CyLib.c ****             uint32 wDTrim;
1574:Generated_Source\PSoC4/CyLib.c ****             uint32 aTrim;
1575:Generated_Source\PSoC4/CyLib.c ****             uint32 fTrim;
1576:Generated_Source\PSoC4/CyLib.c ****             uint32 rTrim;
1577:Generated_Source\PSoC4/CyLib.c ****             uint32 gTrim;
1578:Generated_Source\PSoC4/CyLib.c **** 
1579:Generated_Source\PSoC4/CyLib.c ****             uint32 gmMin;
1580:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 37


1581:Generated_Source\PSoC4/CyLib.c **** 
1582:Generated_Source\PSoC4/CyLib.c ****             if ((maxAmplitude < CY_SYS_CLK_ECO_MAX_AMPL_MIN_mV) ||
1583:Generated_Source\PSoC4/CyLib.c ****                 (freq < CY_SYS_CLK_ECO_FREQ_KHZ_MIN) || (freq > CY_SYS_CLK_ECO_FREQ_KHZ_MAX))
1584:Generated_Source\PSoC4/CyLib.c ****             {
1585:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_BAD_PARAM;
1586:Generated_Source\PSoC4/CyLib.c ****             }
1587:Generated_Source\PSoC4/CyLib.c ****             else
1588:Generated_Source\PSoC4/CyLib.c ****             {
1589:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplitude trim */
1590:Generated_Source\PSoC4/CyLib.c ****                 aTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/100u) - 4u) 
1591:Generated_Source\PSoC4/CyLib.c **** 
1592:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM0)
1593:Generated_Source\PSoC4/CyLib.c ****                 {
1594:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM0;
1595:Generated_Source\PSoC4/CyLib.c ****                 }
1596:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM1)
1597:Generated_Source\PSoC4/CyLib.c ****                 {
1598:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM1;
1599:Generated_Source\PSoC4/CyLib.c ****                 }
1600:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM2)
1601:Generated_Source\PSoC4/CyLib.c ****                 {
1602:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM2;
1603:Generated_Source\PSoC4/CyLib.c ****                 }
1604:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM3)
1605:Generated_Source\PSoC4/CyLib.c ****                 {
1606:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM3;
1607:Generated_Source\PSoC4/CyLib.c ****                 }
1608:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM4)
1609:Generated_Source\PSoC4/CyLib.c ****                 {
1610:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM4;
1611:Generated_Source\PSoC4/CyLib.c ****                 }
1612:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM5)
1613:Generated_Source\PSoC4/CyLib.c ****                 {
1614:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM5;
1615:Generated_Source\PSoC4/CyLib.c ****                 }
1616:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM6)
1617:Generated_Source\PSoC4/CyLib.c ****                 {
1618:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM6;
1619:Generated_Source\PSoC4/CyLib.c ****                 }
1620:Generated_Source\PSoC4/CyLib.c ****                 else
1621:Generated_Source\PSoC4/CyLib.c ****                 {
1622:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM7;
1623:Generated_Source\PSoC4/CyLib.c ****                 }
1624:Generated_Source\PSoC4/CyLib.c **** 
1625:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate Watchdog trim. */
1626:Generated_Source\PSoC4/CyLib.c ****                 wDTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/200u) - 2u)
1627:Generated_Source\PSoC4/CyLib.c **** 
1628:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplifier gain trim. */
1629:Generated_Source\PSoC4/CyLib.c ****                 gmMin = (uint32) (((((CY_SYS_CLK_ECO_GMMIN_COEFFICIENT * freq * cLoad) / 1000) * ((
1630:Generated_Source\PSoC4/CyLib.c ****                 if (gmMin > 3u)
1631:Generated_Source\PSoC4/CyLib.c ****                 {
1632:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_BAD_PARAM;
1633:Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
1634:Generated_Source\PSoC4/CyLib.c ****                 }
1635:Generated_Source\PSoC4/CyLib.c ****                 else if (gmMin > 1u)
1636:Generated_Source\PSoC4/CyLib.c ****                 {
1637:Generated_Source\PSoC4/CyLib.c ****                     gTrim = gmMin;
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 38


1638:Generated_Source\PSoC4/CyLib.c ****                 }
1639:Generated_Source\PSoC4/CyLib.c ****                 else
1640:Generated_Source\PSoC4/CyLib.c ****                 {
1641:Generated_Source\PSoC4/CyLib.c ****                     gTrim = (gmMin == 1u) ? 0u : 1u;
1642:Generated_Source\PSoC4/CyLib.c ****                 }
1643:Generated_Source\PSoC4/CyLib.c **** 
1644:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate feedback resistor trim */
1645:Generated_Source\PSoC4/CyLib.c ****                 if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM0)
1646:Generated_Source\PSoC4/CyLib.c ****                 {
1647:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM0;
1648:Generated_Source\PSoC4/CyLib.c ****                 }
1649:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM1)
1650:Generated_Source\PSoC4/CyLib.c ****                 {
1651:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM1;
1652:Generated_Source\PSoC4/CyLib.c ****                 }
1653:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM2)
1654:Generated_Source\PSoC4/CyLib.c ****                 {
1655:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM2;
1656:Generated_Source\PSoC4/CyLib.c ****                 }
1657:Generated_Source\PSoC4/CyLib.c ****                 else
1658:Generated_Source\PSoC4/CyLib.c ****                 {
1659:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM3;
1660:Generated_Source\PSoC4/CyLib.c ****                 }
1661:Generated_Source\PSoC4/CyLib.c **** 
1662:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate filter frequency trim */
1663:Generated_Source\PSoC4/CyLib.c ****                 fTrim = rTrim;
1664:Generated_Source\PSoC4/CyLib.c **** 
1665:Generated_Source\PSoC4/CyLib.c ****                 CySysClkConfigureEcoTrim(wDTrim, aTrim, fTrim, rTrim, gTrim);
1666:Generated_Source\PSoC4/CyLib.c **** 
1667:Generated_Source\PSoC4/CyLib.c ****                 /* Automatic Gain Control (AGC) enable */
1668:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < 2u)
1669:Generated_Source\PSoC4/CyLib.c ****                 {
1670:Generated_Source\PSoC4/CyLib.c ****                     /* The oscillation amplitude is controlled to the level selected by amplitude t
1671:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1672:Generated_Source\PSoC4/CyLib.c ****                 }
1673:Generated_Source\PSoC4/CyLib.c ****                 else
1674:Generated_Source\PSoC4/CyLib.c ****                 {
1675:Generated_Source\PSoC4/CyLib.c ****                     /* The amplitude is not explicitly controlled and will grow until it saturates 
1676:Generated_Source\PSoC4/CyLib.c ****                     * supply rail (1.8V nom).
1677:Generated_Source\PSoC4/CyLib.c ****                     */
1678:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1679:Generated_Source\PSoC4/CyLib.c ****                 }
1680:Generated_Source\PSoC4/CyLib.c ****             }
1681:Generated_Source\PSoC4/CyLib.c **** 
1682:Generated_Source\PSoC4/CyLib.c ****             return (returnStatus);
1683:Generated_Source\PSoC4/CyLib.c ****         }
1684:Generated_Source\PSoC4/CyLib.c **** 
1685:Generated_Source\PSoC4/CyLib.c ****     #endif /* CY_IP_ECO_BLESS */
1686:Generated_Source\PSoC4/CyLib.c **** 
1687:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_ECO) */
1688:Generated_Source\PSoC4/CyLib.c **** 
1689:Generated_Source\PSoC4/CyLib.c **** 
1690:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_PLL)
1691:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1692:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStart
1693:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1694:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 39


1695:Generated_Source\PSoC4/CyLib.c ****     * Enables the PLL. Optionally waits for it to become stable. Waits at least
1696:Generated_Source\PSoC4/CyLib.c ****     * 250 us or until it is detected that the PLL is stable.
1697:Generated_Source\PSoC4/CyLib.c ****     *
1698:Generated_Source\PSoC4/CyLib.c ****     * Clears the unlock occurred status bit by calling CySysClkPllGetUnlockStatus(),
1699:Generated_Source\PSoC4/CyLib.c ****     * once the PLL is locked if the wait parameter is 1).
1700:Generated_Source\PSoC4/CyLib.c ****     *
1701:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1702:Generated_Source\PSoC4/CyLib.c ****     *
1703:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1704:Generated_Source\PSoC4/CyLib.c ****     * 0   PLL#0
1705:Generated_Source\PSoC4/CyLib.c ****     * 1   PLL#1 (available only for PSoC 4200L)
1706:Generated_Source\PSoC4/CyLib.c ****     *
1707:Generated_Source\PSoC4/CyLib.c ****     * \param wait:
1708:Generated_Source\PSoC4/CyLib.c ****     * 0 - Return immediately after configuration.
1709:Generated_Source\PSoC4/CyLib.c ****     * 1 - Wait for PLL lock or timeout. This API shall use the CyDelayUs() to
1710:Generated_Source\PSoC4/CyLib.c ****     * implement the timeout feature.
1711:Generated_Source\PSoC4/CyLib.c ****     *
1712:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1713:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_TIMEOUT The timeout occurred without detecting a stable clock.
1714:Generated_Source\PSoC4/CyLib.c ****     * If the input source of the clock is jittery, then the lock indication may
1715:Generated_Source\PSoC4/CyLib.c ****     * not occur. However, after the timeout has expired, the generated PLL clock can
1716:Generated_Source\PSoC4/CyLib.c ****     * still be used.
1717:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM - Either the PLL or wait parameter is invalid.
1718:Generated_Source\PSoC4/CyLib.c ****     *
1719:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1720:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllStart(uint32 pll, uint32 wait)
1721:Generated_Source\PSoC4/CyLib.c ****     {
1722:Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
1723:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1724:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1725:Generated_Source\PSoC4/CyLib.c **** 
1726:Generated_Source\PSoC4/CyLib.c ****         if((pll < CY_IP_PLL_NR) && (wait <= 1u))
1727:Generated_Source\PSoC4/CyLib.c ****         {
1728:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1729:Generated_Source\PSoC4/CyLib.c **** 
1730:Generated_Source\PSoC4/CyLib.c ****             /* Isolate PLL outputs */
1731:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1732:Generated_Source\PSoC4/CyLib.c **** 
1733:Generated_Source\PSoC4/CyLib.c ****             /* Enable PLL */
1734:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ENABLE;
1735:Generated_Source\PSoC4/CyLib.c **** 
1736:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1737:Generated_Source\PSoC4/CyLib.c **** 
1738:Generated_Source\PSoC4/CyLib.c ****             /* De-isolate >= CY_SYS_CLK_PLL_MIN_STARTUP_US after PLL enabled */
1739:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_PLL_MIN_STARTUP_US);
1740:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1741:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1742:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1743:Generated_Source\PSoC4/CyLib.c **** 
1744:Generated_Source\PSoC4/CyLib.c ****             if(wait != 0u)
1745:Generated_Source\PSoC4/CyLib.c ****             {
1746:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_TIMEOUT;
1747:Generated_Source\PSoC4/CyLib.c **** 
1748:Generated_Source\PSoC4/CyLib.c ****                 while(0u != counts)
1749:Generated_Source\PSoC4/CyLib.c ****                 {
1750:Generated_Source\PSoC4/CyLib.c **** 
1751:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkPllGetLockStatus(pll))
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 40


1752:Generated_Source\PSoC4/CyLib.c ****                     {
1753:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CYRET_SUCCESS;
1754:Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
1755:Generated_Source\PSoC4/CyLib.c ****                         break;
1756:Generated_Source\PSoC4/CyLib.c ****                     }
1757:Generated_Source\PSoC4/CyLib.c **** 
1758:Generated_Source\PSoC4/CyLib.c ****                     CyDelayUs(1u);
1759:Generated_Source\PSoC4/CyLib.c ****                     counts--;
1760:Generated_Source\PSoC4/CyLib.c ****                 }
1761:Generated_Source\PSoC4/CyLib.c ****             }
1762:Generated_Source\PSoC4/CyLib.c ****         }
1763:Generated_Source\PSoC4/CyLib.c ****         else
1764:Generated_Source\PSoC4/CyLib.c ****         {
1765:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_BAD_PARAM;
1766:Generated_Source\PSoC4/CyLib.c ****         }
1767:Generated_Source\PSoC4/CyLib.c **** 
1768:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1769:Generated_Source\PSoC4/CyLib.c ****     }
1770:Generated_Source\PSoC4/CyLib.c **** 
1771:Generated_Source\PSoC4/CyLib.c **** 
1772:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1773:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetLockStatus
1774:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1775:Generated_Source\PSoC4/CyLib.c ****     *
1776:Generated_Source\PSoC4/CyLib.c ****     * Returns non-zero if the output of the specified PLL output is locked.
1777:Generated_Source\PSoC4/CyLib.c ****     *
1778:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1779:Generated_Source\PSoC4/CyLib.c ****     *
1780:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1781:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1782:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1783:Generated_Source\PSoC4/CyLib.c ****     *
1784:Generated_Source\PSoC4/CyLib.c ****     * \return A non-zero value when the specified PLL is locked.
1785:Generated_Source\PSoC4/CyLib.c ****     *
1786:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1787:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetLockStatus(uint32 pll)
1788:Generated_Source\PSoC4/CyLib.c ****     {
1789:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1790:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus;
1791:Generated_Source\PSoC4/CyLib.c **** 
1792:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1793:Generated_Source\PSoC4/CyLib.c **** 
1794:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1795:Generated_Source\PSoC4/CyLib.c **** 
1796:Generated_Source\PSoC4/CyLib.c ****         /* PLL is locked if reported so for two consecutive read. */
1797:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1798:Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
1799:Generated_Source\PSoC4/CyLib.c ****         {
1800:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1801:Generated_Source\PSoC4/CyLib.c ****         }
1802:Generated_Source\PSoC4/CyLib.c **** 
1803:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1804:Generated_Source\PSoC4/CyLib.c **** 
1805:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1806:Generated_Source\PSoC4/CyLib.c ****     }
1807:Generated_Source\PSoC4/CyLib.c **** 
1808:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 41


1809:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStop
1810:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1811:Generated_Source\PSoC4/CyLib.c ****     *
1812:Generated_Source\PSoC4/CyLib.c ****     * Disables the PLL.
1813:Generated_Source\PSoC4/CyLib.c ****     *
1814:Generated_Source\PSoC4/CyLib.c ****     * Ensures that either PLL is not the source of HFCLK before it is disabled,
1815:Generated_Source\PSoC4/CyLib.c ****     * otherwise, the CPU will halt.
1816:Generated_Source\PSoC4/CyLib.c ****     *
1817:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1818:Generated_Source\PSoC4/CyLib.c ****     *
1819:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1820:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1821:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1822:Generated_Source\PSoC4/CyLib.c ****     *
1823:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1824:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllStop(uint32 pll)
1825:Generated_Source\PSoC4/CyLib.c ****     {
1826:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1827:Generated_Source\PSoC4/CyLib.c **** 
1828:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1829:Generated_Source\PSoC4/CyLib.c ****         {
1830:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1831:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~(CY_SYS_CLK_PLL_CONFIG_ISOLATE | CY_SY
1832:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1833:Generated_Source\PSoC4/CyLib.c ****         }
1834:Generated_Source\PSoC4/CyLib.c ****     }
1835:Generated_Source\PSoC4/CyLib.c **** 
1836:Generated_Source\PSoC4/CyLib.c **** 
1837:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1838:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetPQ
1839:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1840:Generated_Source\PSoC4/CyLib.c ****     *
1841:Generated_Source\PSoC4/CyLib.c ****     * Sets feedback (P) and reference the (Q) divider value. This API also sets the
1842:Generated_Source\PSoC4/CyLib.c ****     * programmable charge pump current value. Note that the PLL has to be disabled
1843:Generated_Source\PSoC4/CyLib.c ****     * before calling this API. If this function is called while any PLL is sourcing,
1844:Generated_Source\PSoC4/CyLib.c ****     * the SYSCLK will return an error.
1845:Generated_Source\PSoC4/CyLib.c ****     *
1846:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1847:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1848:Generated_Source\PSoC4/CyLib.c ****     *
1849:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1850:Generated_Source\PSoC4/CyLib.c ****     *
1851:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1852:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1853:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1854:Generated_Source\PSoC4/CyLib.c ****     *
1855:Generated_Source\PSoC4/CyLib.c ****     * \param feedback The P divider. Range 4 - 259. Control bits for the feedback
1856:Generated_Source\PSoC4/CyLib.c ****     * divider.
1857:Generated_Source\PSoC4/CyLib.c ****     *
1858:Generated_Source\PSoC4/CyLib.c ****     * \param reference The Q divider. Range 1 - 64. Divide by the reference.
1859:Generated_Source\PSoC4/CyLib.c ****     *
1860:Generated_Source\PSoC4/CyLib.c ****     * \param current Charge the pump current in uA. The 2 uA for output frequencies
1861:Generated_Source\PSoC4/CyLib.c ****     * of 67 MHz or less, and 3 uA for higher output frequencies. The default
1862:Generated_Source\PSoC4/CyLib.c ****     * value is 2 uA.
1863:Generated_Source\PSoC4/CyLib.c ****     *
1864:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1865:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The parameters are out of range or the specified PLL
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 42


1866:Generated_Source\PSoC4/CyLib.c ****     * sources the system clock.
1867:Generated_Source\PSoC4/CyLib.c ****     *
1868:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1869:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetPQ(uint32 pll, uint32 feedback, uint32 reference, uint32 current)
1870:Generated_Source\PSoC4/CyLib.c ****     {
1871:Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
1872:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1873:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1874:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1875:Generated_Source\PSoC4/CyLib.c **** 
1876:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1877:Generated_Source\PSoC4/CyLib.c **** 
1878:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1879:Generated_Source\PSoC4/CyLib.c **** 
1880:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1881:Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
1882:Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
1883:Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
1884:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1885:Generated_Source\PSoC4/CyLib.c ****         {
1886:Generated_Source\PSoC4/CyLib.c ****             /* Set new feedback, reference and current values */
1887:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_FEEDBA
1888:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
1889:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_ICP_SE
1890:Generated_Source\PSoC4/CyLib.c **** 
1891:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((feedback << CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_SHIFT) & CY_SYS_CLK_PLL_CONF
1892:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
1893:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
1894:Generated_Source\PSoC4/CyLib.c **** 
1895:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1896:Generated_Source\PSoC4/CyLib.c **** 
1897:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1898:Generated_Source\PSoC4/CyLib.c ****         }
1899:Generated_Source\PSoC4/CyLib.c **** 
1900:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1901:Generated_Source\PSoC4/CyLib.c **** 
1902:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1903:Generated_Source\PSoC4/CyLib.c ****     }
1904:Generated_Source\PSoC4/CyLib.c **** 
1905:Generated_Source\PSoC4/CyLib.c **** 
1906:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1907:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetBypassMode
1908:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1909:Generated_Source\PSoC4/CyLib.c ****     *
1910:Generated_Source\PSoC4/CyLib.c ****     * Sets the bypass mode for the specified PLL.
1911:Generated_Source\PSoC4/CyLib.c ****     *
1912:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function.
1913:Generated_Source\PSoC4/CyLib.c ****     * The PLL output will glitch during this function call.
1914:Generated_Source\PSoC4/CyLib.c ****     *
1915:Generated_Source\PSoC4/CyLib.c ****     * When the PLL's reference input is higher than HFCLK frequency the device may
1916:Generated_Source\PSoC4/CyLib.c ****     * lock due to incorrect flash wait cycle configuration and bypass switches from
1917:Generated_Source\PSoC4/CyLib.c ****     * PLL output to the reference input. See description of
1918:Generated_Source\PSoC4/CyLib.c ****     * CySysFlashSetWaitCycles() for more information.
1919:Generated_Source\PSoC4/CyLib.c ****     *
1920:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 swith PLL devices.
1921:Generated_Source\PSoC4/CyLib.c ****     *
1922:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 43


1923:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1924:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1925:Generated_Source\PSoC4/CyLib.c ****     *
1926:Generated_Source\PSoC4/CyLib.c ****     * \param bypass: The bypass mode.
1927:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_AUTO - Automatic usage of the lock indicator. When unlocked,
1928:Generated_Source\PSoC4/CyLib.c ****     * automatically selects PLL the reference input (bypass mode). When locked,
1929:Generated_Source\PSoC4/CyLib.c ****     * automatically selects the PLL output.
1930:Generated_Source\PSoC4/CyLib.c ****     *
1931:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_REF - Selects the PLL reference input (bypass mode).
1932:Generated_Source\PSoC4/CyLib.c ****     * Ignores the lock indicator.
1933:Generated_Source\PSoC4/CyLib.c ****     *
1934:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_OUT - Selects the PLL output.  Ignores the lock indicator.
1935:Generated_Source\PSoC4/CyLib.c ****     *
1936:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1937:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetBypassMode(uint32 pll, uint32 bypass)
1938:Generated_Source\PSoC4/CyLib.c ****     {
1939:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1940:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1941:Generated_Source\PSoC4/CyLib.c **** 
1942:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1943:Generated_Source\PSoC4/CyLib.c **** 
1944:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (bypass <= CY_SYS_PLL_BYPASS_PLL_OUT))
1945:Generated_Source\PSoC4/CyLib.c ****         {
1946:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~CY_SYS_CLK_PLL_CONFIG_BYPASS_
1947:Generated_Source\PSoC4/CyLib.c ****             regTmp |=  (uint32)(bypass << CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT);
1948:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1949:Generated_Source\PSoC4/CyLib.c ****         }
1950:Generated_Source\PSoC4/CyLib.c **** 
1951:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1952:Generated_Source\PSoC4/CyLib.c ****     }
1953:Generated_Source\PSoC4/CyLib.c **** 
1954:Generated_Source\PSoC4/CyLib.c **** 
1955:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1956:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetBypassMode
1957:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1958:Generated_Source\PSoC4/CyLib.c ****     *
1959:Generated_Source\PSoC4/CyLib.c ****     *  Gets the bypass mode for the specified PLL.
1960:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1961:Generated_Source\PSoC4/CyLib.c ****     *
1962:Generated_Source\PSoC4/CyLib.c ****     *  \return bypass: Bypass mode.
1963:Generated_Source\PSoC4/CyLib.c ****     *   The same as the parameter of the CySysClkPllSetBypassMode().
1964:Generated_Source\PSoC4/CyLib.c ****     *
1965:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1966:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll)
1967:Generated_Source\PSoC4/CyLib.c ****     {
1968:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1969:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1970:Generated_Source\PSoC4/CyLib.c **** 
1971:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1972:Generated_Source\PSoC4/CyLib.c **** 
1973:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1974:Generated_Source\PSoC4/CyLib.c **** 
1975:Generated_Source\PSoC4/CyLib.c ****         returnValue = CY_SYS_CLK_PLL_BASE.pll[pll].config & CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_MASK;
1976:Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
1977:Generated_Source\PSoC4/CyLib.c **** 
1978:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1979:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 44


1980:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1981:Generated_Source\PSoC4/CyLib.c ****     }
1982:Generated_Source\PSoC4/CyLib.c **** 
1983:Generated_Source\PSoC4/CyLib.c **** 
1984:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1985:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllConfigChangeAllowed
1986:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1987:Generated_Source\PSoC4/CyLib.c ****     *
1988:Generated_Source\PSoC4/CyLib.c ****     *  The function returns non-zero value if the specified PLL sources the System
1989:Generated_Source\PSoC4/CyLib.c ****     *  clock and the PLL is not in the bypass mode.
1990:Generated_Source\PSoC4/CyLib.c ****     *
1991:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1992:Generated_Source\PSoC4/CyLib.c ****     *
1993:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1994:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1995:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
1996:Generated_Source\PSoC4/CyLib.c ****     *
1997:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL sources the System clock and
1998:Generated_Source\PSoC4/CyLib.c ****     * the PLL is not in the bypass mode.
1999:Generated_Source\PSoC4/CyLib.c ****     *
2000:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2001:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll)
2002:Generated_Source\PSoC4/CyLib.c ****     {
2003:Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
2004:Generated_Source\PSoC4/CyLib.c ****         uint32   sysclkSource;
2005:Generated_Source\PSoC4/CyLib.c ****         cystatus returnValue = CYRET_INVALID_STATE;
2006:Generated_Source\PSoC4/CyLib.c **** 
2007:Generated_Source\PSoC4/CyLib.c ****         sysclkSource  = CySysClkGetSysclkSource();
2008:Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
2009:Generated_Source\PSoC4/CyLib.c **** 
2010:Generated_Source\PSoC4/CyLib.c ****         if ((CY_SYS_PLL_BYPASS_PLL_REF == pllBypassMode)             ||
2011:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll))
2012:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_SRSSV2)
2013:Generated_Source\PSoC4/CyLib.c ****             || ((CY_SYS_CLK_HFCLK_PLL1 != sysclkSource) && (1u == pll))
2014:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_SRSSV2) */
2015:Generated_Source\PSoC4/CyLib.c ****             )
2016:Generated_Source\PSoC4/CyLib.c ****         {
2017:Generated_Source\PSoC4/CyLib.c ****             returnValue = CYRET_SUCCESS;
2018:Generated_Source\PSoC4/CyLib.c ****         }
2019:Generated_Source\PSoC4/CyLib.c **** 
2020:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
2021:Generated_Source\PSoC4/CyLib.c ****     }
2022:Generated_Source\PSoC4/CyLib.c **** 
2023:Generated_Source\PSoC4/CyLib.c **** 
2024:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2025:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetUnlockStatus
2026:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2027:Generated_Source\PSoC4/CyLib.c ****     *
2028:Generated_Source\PSoC4/CyLib.c ****     *  Returns a non-zero value if the specified PLL output was unlocked.
2029:Generated_Source\PSoC4/CyLib.c ****     *  The unlock status is an indicator that the PLL has lost a lock at least once
2030:Generated_Source\PSoC4/CyLib.c ****     *  during its operation. The unlock status is cleared once it is read using
2031:Generated_Source\PSoC4/CyLib.c ****     *  this API.
2032:Generated_Source\PSoC4/CyLib.c ****     *
2033:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
2034:Generated_Source\PSoC4/CyLib.c ****     *
2035:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2036:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 45


2037:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
2038:Generated_Source\PSoC4/CyLib.c ****     *
2039:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL was unlocked.
2040:Generated_Source\PSoC4/CyLib.c ****     *
2041:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2042:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetUnlockStatus(uint32 pll)
2043:Generated_Source\PSoC4/CyLib.c ****     {
2044:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus = 0u;
2045:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
2046:Generated_Source\PSoC4/CyLib.c **** 
2047:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2048:Generated_Source\PSoC4/CyLib.c **** 
2049:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].test & CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK
2050:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_PLL_BASE.pll[pll].test |= CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK;
2051:Generated_Source\PSoC4/CyLib.c **** 
2052:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2053:Generated_Source\PSoC4/CyLib.c **** 
2054:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2055:Generated_Source\PSoC4/CyLib.c ****     }
2056:Generated_Source\PSoC4/CyLib.c **** 
2057:Generated_Source\PSoC4/CyLib.c **** 
2058:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2059:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetFrequency
2060:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2061:Generated_Source\PSoC4/CyLib.c ****     *
2062:Generated_Source\PSoC4/CyLib.c ****     * Configures either PLL#0 or PLL#1 for the requested input/output frequencies.
2063:Generated_Source\PSoC4/CyLib.c ****     * The input frequency is the frequency of the source to the PLL. The source is
2064:Generated_Source\PSoC4/CyLib.c ****     * set using the CySysClkPllSetSource() function.
2065:Generated_Source\PSoC4/CyLib.c ****     *
2066:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
2067:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
2068:Generated_Source\PSoC4/CyLib.c ****     *
2069:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
2070:Generated_Source\PSoC4/CyLib.c ****     *
2071:Generated_Source\PSoC4/CyLib.c ****     * \param pll:
2072:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2073:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
2074:Generated_Source\PSoC4/CyLib.c ****     *
2075:Generated_Source\PSoC4/CyLib.c ****     * \param inputFreq The reference frequency in KHz. The valid range is from 1000 to 49152 KHz.
2076:Generated_Source\PSoC4/CyLib.c ****     *
2077:Generated_Source\PSoC4/CyLib.c ****     * \param pllFreq The target frequency in KHz. The valid range is from 22500 to 49152 KHz.
2078:Generated_Source\PSoC4/CyLib.c ****     *
2079:Generated_Source\PSoC4/CyLib.c ****     * \param divider The output clock divider for the PLL:
2080:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIVPASS    Pass Through
2081:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2082:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2083:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2084:Generated_Source\PSoC4/CyLib.c ****     *
2085:Generated_Source\PSoC4/CyLib.c ****     * \param freqTol The tolerance in ppm, 10 ppm is equal to 0.001%.
2086:Generated_Source\PSoC4/CyLib.c ****     *
2087:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS The PLL was successfully configured for the requested
2088:Generated_Source\PSoC4/CyLib.c ****     * frequency.
2089:Generated_Source\PSoC4/CyLib.c ****     *
2090:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The PLL was not able to successfully configure for the
2091:Generated_Source\PSoC4/CyLib.c ****     * requested frequency.
2092:Generated_Source\PSoC4/CyLib.c ****     *
2093:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 46


2094:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetFrequency(uint32 pll, uint32 inputFreq, uint32 pllFreq, uint32 divider, 
2095:Generated_Source\PSoC4/CyLib.c ****     {
2096:Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
2097:Generated_Source\PSoC4/CyLib.c ****         uint32 qMax;
2098:Generated_Source\PSoC4/CyLib.c **** 
2099:Generated_Source\PSoC4/CyLib.c ****         uint32 qVal = CY_SYS_CLK_PLL_INVALID;
2100:Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
2101:Generated_Source\PSoC4/CyLib.c **** 
2102:Generated_Source\PSoC4/CyLib.c ****         uint32 q;
2103:Generated_Source\PSoC4/CyLib.c ****         uint32 p;
2104:Generated_Source\PSoC4/CyLib.c **** 
2105:Generated_Source\PSoC4/CyLib.c ****         uint32 fvco;
2106:Generated_Source\PSoC4/CyLib.c ****         int32 ferr;
2107:Generated_Source\PSoC4/CyLib.c **** 
2108:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2109:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2110:Generated_Source\PSoC4/CyLib.c **** 
2111:Generated_Source\PSoC4/CyLib.c **** 
2112:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2113:Generated_Source\PSoC4/CyLib.c **** 
2114:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
2115:Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
2116:Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
2117:Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
2118:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
2119:Generated_Source\PSoC4/CyLib.c ****         {
2120:Generated_Source\PSoC4/CyLib.c **** 
2121:Generated_Source\PSoC4/CyLib.c ****             /* Minimum feed forward loop divisor */
2122:Generated_Source\PSoC4/CyLib.c ****             qMin = (inputFreq + (CY_SYS_CLK_PLL_FPFDMAX - 1u)) / CY_SYS_CLK_PLL_FPFDMAX;
2123:Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
2124:Generated_Source\PSoC4/CyLib.c **** 
2125:Generated_Source\PSoC4/CyLib.c ****             /* Maximum feed forward loop divisor */
2126:Generated_Source\PSoC4/CyLib.c ****             qMax = inputFreq / CY_SYS_CLK_PLL_FPFDMIN;
2127:Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
2128:Generated_Source\PSoC4/CyLib.c **** 
2129:Generated_Source\PSoC4/CyLib.c ****             if (qMin <= qMax)
2130:Generated_Source\PSoC4/CyLib.c ****             {
2131:Generated_Source\PSoC4/CyLib.c ****                 for(q = qMin; q <= qMax; q++)
2132:Generated_Source\PSoC4/CyLib.c ****                 {
2133:Generated_Source\PSoC4/CyLib.c ****                     /* Solve for the feedback divisor value */
2134:Generated_Source\PSoC4/CyLib.c **** 
2135:Generated_Source\PSoC4/CyLib.c ****                     /* INT((pllFreq * q ) / inputFreq), where INT is normal rounding  */
2136:Generated_Source\PSoC4/CyLib.c ****                     p = ((pllFreq * q) + (inputFreq / 2u)) / inputFreq;
2137:Generated_Source\PSoC4/CyLib.c **** 
2138:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the actual VCO frequency (FVCO) */
2139:Generated_Source\PSoC4/CyLib.c ****                     fvco = ((inputFreq * p) / q);
2140:Generated_Source\PSoC4/CyLib.c **** 
2141:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the frequency error (FERR) */
2142:Generated_Source\PSoC4/CyLib.c ****                     ferr = ((1000000 * ((int32) fvco - (int32) pllFreq))/ (int32) pllFreq);
2143:Generated_Source\PSoC4/CyLib.c **** 
2144:Generated_Source\PSoC4/CyLib.c ****                     /* Bound check the frequency error and decide next action */
2145:Generated_Source\PSoC4/CyLib.c ****                     if ((( -1 * (int32) freqTol) <= ferr) && (ferr <= (int32) freqTol))
2146:Generated_Source\PSoC4/CyLib.c ****                     {
2147:Generated_Source\PSoC4/CyLib.c ****                         qVal = q;
2148:Generated_Source\PSoC4/CyLib.c ****                         pVal = p;
2149:Generated_Source\PSoC4/CyLib.c ****                         break;
2150:Generated_Source\PSoC4/CyLib.c ****                     }
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 47


2151:Generated_Source\PSoC4/CyLib.c ****                 }
2152:Generated_Source\PSoC4/CyLib.c **** 
2153:Generated_Source\PSoC4/CyLib.c **** 
2154:Generated_Source\PSoC4/CyLib.c ****                 if ((pVal != CY_SYS_CLK_PLL_INVALID) && (qVal != CY_SYS_CLK_PLL_INVALID))
2155:Generated_Source\PSoC4/CyLib.c ****                 {
2156:Generated_Source\PSoC4/CyLib.c ****                     if (CySysClkPllSetPQ(pll, pVal, qVal, CY_SYS_CLK_PLL_CURRENT_DEFAULT) == CYRET_
2157:Generated_Source\PSoC4/CyLib.c ****                     {
2158:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CySysClkPllSetOutputDivider(pll, divider);
2159:Generated_Source\PSoC4/CyLib.c ****                     }
2160:Generated_Source\PSoC4/CyLib.c ****                 }
2161:Generated_Source\PSoC4/CyLib.c ****             }
2162:Generated_Source\PSoC4/CyLib.c **** 
2163:Generated_Source\PSoC4/CyLib.c ****         }
2164:Generated_Source\PSoC4/CyLib.c **** 
2165:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2166:Generated_Source\PSoC4/CyLib.c ****     }
2167:Generated_Source\PSoC4/CyLib.c **** 
2168:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2169:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetSource
2170:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2171:Generated_Source\PSoC4/CyLib.c ****     *
2172:Generated_Source\PSoC4/CyLib.c ****     *  Sets the input clock source to the PLL. The PLL must be disabled before
2173:Generated_Source\PSoC4/CyLib.c ****     *  calling this function.
2174:Generated_Source\PSoC4/CyLib.c ****     *
2175:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S /4500 with PLL devices.
2176:Generated_Source\PSoC4/CyLib.c ****     *
2177:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2178:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2179:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
2180:Generated_Source\PSoC4/CyLib.c ****     *
2181:Generated_Source\PSoC4/CyLib.c ****     * \param source:
2182:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_IMO        IMO
2183:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_EXTCLK     External Clock (available only for PSoC 4200L
2184:Generated_Source\PSoC4/CyLib.c ****     *  and PSoC 4500 with PLL devices)
2185:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_ECO        ECO
2186:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI0       DSI_OUT[0] (available only for PSoC 4200L)
2187:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI1       DSI_OUT[1] (available only for PSoC 4200L)
2188:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI2       DSI_OUT[2] (available only for PSoC 4200L)
2189:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI3       DSI_OUT[3] (available only for PSoC 4200L)
2190:Generated_Source\PSoC4/CyLib.c ****     *
2191:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2192:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetSource(uint32 pll, uint32 source)
2193:Generated_Source\PSoC4/CyLib.c ****     {
2194:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
2195:Generated_Source\PSoC4/CyLib.c **** 
2196:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_SRSSLT)
2197:Generated_Source\PSoC4/CyLib.c ****             uint8 i = 0u;
2198:Generated_Source\PSoC4/CyLib.c ****         #else
2199:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
2200:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_SRSSLT) */
2201:Generated_Source\PSoC4/CyLib.c **** 
2202:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2203:Generated_Source\PSoC4/CyLib.c **** 
2204:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
2205:Generated_Source\PSoC4/CyLib.c ****         {
2206:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
2207:Generated_Source\PSoC4/CyLib.c ****                 regTmp = CY_SYS_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL_MASK(pll);
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 48


2208:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= ((source << CY_SYS_CLK_SELECT_PLL_SHIFT(pll)) & CY_SYS_CLK_SELECT_PLL_MAS
2209:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_SELECT_REG = regTmp;
2210:Generated_Source\PSoC4/CyLib.c ****             #else
2211:Generated_Source\PSoC4/CyLib.c ****                 CY_SET_REG32_FIELD(CYREG_EXCO_CLK_SELECT, CYFLD_EXCO_REF_SEL, source);
2212:Generated_Source\PSoC4/CyLib.c **** 
2213:Generated_Source\PSoC4/CyLib.c ****                 /* Check if ECO is enabled and running */
2214:Generated_Source\PSoC4/CyLib.c ****                 if ((0UL == (CY_SYS_CLK_ECO_CONFIG_REG & CY_SYS_CLK_ECO_CONFIG_ENABLE)) ||
2215:Generated_Source\PSoC4/CyLib.c ****                     (0UL != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)))
2216:Generated_Source\PSoC4/CyLib.c ****                 {
2217:Generated_Source\PSoC4/CyLib.c ****                     /* Generate clock sequence to change clock source in CY_SYS_ECO_CLK_SELECT_REG 
2218:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
2219:Generated_Source\PSoC4/CyLib.c **** 
2220:Generated_Source\PSoC4/CyLib.c ****                     for(i = 0u; i < CY_SYS_EXCO_PGM_CLK_SEQ_GENERATOR; i++)
2221:Generated_Source\PSoC4/CyLib.c ****                     {
2222:Generated_Source\PSoC4/CyLib.c ****                         CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
2223:Generated_Source\PSoC4/CyLib.c ****                         CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
2224:Generated_Source\PSoC4/CyLib.c ****                     }
2225:Generated_Source\PSoC4/CyLib.c **** 
2226:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
2227:Generated_Source\PSoC4/CyLib.c ****                 }
2228:Generated_Source\PSoC4/CyLib.c **** 
2229:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
2230:Generated_Source\PSoC4/CyLib.c ****         }
2231:Generated_Source\PSoC4/CyLib.c **** 
2232:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2233:Generated_Source\PSoC4/CyLib.c ****     }
2234:Generated_Source\PSoC4/CyLib.c **** 
2235:Generated_Source\PSoC4/CyLib.c **** 
2236:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2237:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetOutputDivider
2238:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2239:Generated_Source\PSoC4/CyLib.c ****     *
2240:Generated_Source\PSoC4/CyLib.c ****     *  Sets the output clock divider for the PLL.
2241:Generated_Source\PSoC4/CyLib.c ****     *
2242:Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the System Clock source when calling this function. The
2243:Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
2244:Generated_Source\PSoC4/CyLib.c ****     *
2245:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
2246:Generated_Source\PSoC4/CyLib.c ****     *
2247:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2248:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
2249:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
2250:Generated_Source\PSoC4/CyLib.c ****     *
2251:Generated_Source\PSoC4/CyLib.c ****     * \param divider:
2252:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass through
2253:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2254:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2255:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2256:Generated_Source\PSoC4/CyLib.c ****     *
2257:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS    Completed successfully.
2258:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM  The parameters are out of range or the
2259:Generated_Source\PSoC4/CyLib.c ****     * specified PLL sources the System clock.
2260:Generated_Source\PSoC4/CyLib.c ****     *
2261:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2262:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetOutputDivider(uint32 pll, uint32 divider)
2263:Generated_Source\PSoC4/CyLib.c ****     {
2264:Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 49


2265:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
2266:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2267:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2268:Generated_Source\PSoC4/CyLib.c **** 
2269:Generated_Source\PSoC4/CyLib.c **** 
2270:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2271:Generated_Source\PSoC4/CyLib.c **** 
2272:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2273:Generated_Source\PSoC4/CyLib.c **** 
2274:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (CYRET_SUCCESS == tmp) && (divider <= CY_SYS_PLL_OUTPUT_DIV8))
2275:Generated_Source\PSoC4/CyLib.c ****         {
2276:Generated_Source\PSoC4/CyLib.c ****             tmpReg  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_OUTPUT
2277:Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
2278:Generated_Source\PSoC4/CyLib.c **** 
2279:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = tmpReg;
2280:Generated_Source\PSoC4/CyLib.c **** 
2281:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
2282:Generated_Source\PSoC4/CyLib.c ****         }
2283:Generated_Source\PSoC4/CyLib.c **** 
2284:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2285:Generated_Source\PSoC4/CyLib.c **** 
2286:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2287:Generated_Source\PSoC4/CyLib.c ****     }
2288:Generated_Source\PSoC4/CyLib.c **** 
2289:Generated_Source\PSoC4/CyLib.c **** 
2290:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECOV2_SRSSLT)
2291:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2292:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllGetInterruptCauseMasked
2293:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2294:Generated_Source\PSoC4/CyLib.c ****         *
2295:Generated_Source\PSoC4/CyLib.c ****         *  Returns a non-zero value that reflects a bit-wise AND between interrupt
2296:Generated_Source\PSoC4/CyLib.c ****         *  request and mask registers. The API allows firmware to read the status of
2297:Generated_Source\PSoC4/CyLib.c ****         *  all mask enabled interrupt causes with a single load operation.
2298:Generated_Source\PSoC4/CyLib.c ****         *
2299:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2300:Generated_Source\PSoC4/CyLib.c ****         *
2301:Generated_Source\PSoC4/CyLib.c ****         * \return A set bit indicates the source of the interrupt:
2302:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_PLL_LOCK
2303:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_WD_ERR
2304:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_CSV_CLK_SW
2305:Generated_Source\PSoC4/CyLib.c ****         *
2306:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2307:Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkPllGetInterruptCauseMasked(void)
2308:Generated_Source\PSoC4/CyLib.c ****         {
2309:Generated_Source\PSoC4/CyLib.c ****             return ((uint32)CY_GET_REG32(CYREG_EXCO_INTR_MASKED));
2310:Generated_Source\PSoC4/CyLib.c ****         }
2311:Generated_Source\PSoC4/CyLib.c **** 
2312:Generated_Source\PSoC4/CyLib.c **** 
2313:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2314:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllGetInterruptCause
2315:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2316:Generated_Source\PSoC4/CyLib.c ****         *
2317:Generated_Source\PSoC4/CyLib.c ****         *  Returns a non-zero value that reflects the interrupt request registers.
2318:Generated_Source\PSoC4/CyLib.c ****         *
2319:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2320:Generated_Source\PSoC4/CyLib.c ****         *
2321:Generated_Source\PSoC4/CyLib.c ****         * \return A set bit indicates the source of the interrupt:
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 50


2322:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_PLL_LOCK
2323:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_WD_ERR
2324:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_CSV_CLK_SW
2325:Generated_Source\PSoC4/CyLib.c ****         *
2326:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2327:Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkPllGetInterruptCause(void)
2328:Generated_Source\PSoC4/CyLib.c ****         {
2329:Generated_Source\PSoC4/CyLib.c ****             return ((uint32)CY_GET_REG32(CYREG_EXCO_INTR));
2330:Generated_Source\PSoC4/CyLib.c ****         }
2331:Generated_Source\PSoC4/CyLib.c **** 
2332:Generated_Source\PSoC4/CyLib.c **** 
2333:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2334:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllClearPendingInterrupt
2335:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2336:Generated_Source\PSoC4/CyLib.c ****         *
2337:Generated_Source\PSoC4/CyLib.c ****         *  Clears the pending interrupt.
2338:Generated_Source\PSoC4/CyLib.c ****         *
2339:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2340:Generated_Source\PSoC4/CyLib.c ****         *
2341:Generated_Source\PSoC4/CyLib.c ****         * \param interrupt:
2342:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_PLL_LOCK
2343:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_WD_ERR
2344:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_CSV_CLK_SW
2345:Generated_Source\PSoC4/CyLib.c ****         *  A logical OR of above can be used as input parameter.
2346:Generated_Source\PSoC4/CyLib.c ****         *
2347:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2348:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllClearPendingInterrupt(uint32 interrupt)
2349:Generated_Source\PSoC4/CyLib.c ****         {
2350:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32(CYREG_EXCO_INTR, interrupt);
2351:Generated_Source\PSoC4/CyLib.c ****         }
2352:Generated_Source\PSoC4/CyLib.c **** 
2353:Generated_Source\PSoC4/CyLib.c **** 
2354:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2355:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllSetInterruptMask
2356:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2357:Generated_Source\PSoC4/CyLib.c ****         *
2358:Generated_Source\PSoC4/CyLib.c ****         *  This API sets the interrupt mask bit for the corresponding interrupts.
2359:Generated_Source\PSoC4/CyLib.c ****         *
2360:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2361:Generated_Source\PSoC4/CyLib.c ****         *
2362:Generated_Source\PSoC4/CyLib.c ****         * \param intrMask:
2363:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_PLL_LOCK
2364:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_WD_ERR
2365:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_CSV_CLK_SW
2366:Generated_Source\PSoC4/CyLib.c ****         *  A logical OR of above can be used as input parameter.
2367:Generated_Source\PSoC4/CyLib.c ****         *
2368:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2369:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllSetInterruptMask(uint32 intrMask)
2370:Generated_Source\PSoC4/CyLib.c ****         {
2371:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32(CYREG_EXCO_INTR_MASK, intrMask);
2372:Generated_Source\PSoC4/CyLib.c ****         }
2373:Generated_Source\PSoC4/CyLib.c **** 
2374:Generated_Source\PSoC4/CyLib.c **** 
2375:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2376:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllGetInterruptMask
2377:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2378:Generated_Source\PSoC4/CyLib.c ****         *
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 51


2379:Generated_Source\PSoC4/CyLib.c ****         *  This API returns the current interrupt mask register value.
2380:Generated_Source\PSoC4/CyLib.c ****         *
2381:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2382:Generated_Source\PSoC4/CyLib.c ****         *
2383:Generated_Source\PSoC4/CyLib.c ****         * \return A set bit indicates the source of the interrupt:
2384:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_PLL_LOCK
2385:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_WD_ERR
2386:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_CSV_CLK_SW
2387:Generated_Source\PSoC4/CyLib.c ****         *
2388:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2389:Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkPllGetInterruptMask(void)
2390:Generated_Source\PSoC4/CyLib.c ****         {
2391:Generated_Source\PSoC4/CyLib.c ****             return ((uint32)CY_GET_REG32(CYREG_EXCO_INTR_MASK));
2392:Generated_Source\PSoC4/CyLib.c ****         }
2393:Generated_Source\PSoC4/CyLib.c **** 
2394:Generated_Source\PSoC4/CyLib.c **** 
2395:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2396:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllSetInterrupt
2397:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2398:Generated_Source\PSoC4/CyLib.c ****         *
2399:Generated_Source\PSoC4/CyLib.c ****         *  This API asserts an interrupt. This can be used for firmware debugging.
2400:Generated_Source\PSoC4/CyLib.c ****         *
2401:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2402:Generated_Source\PSoC4/CyLib.c ****         *
2403:Generated_Source\PSoC4/CyLib.c ****         * \param interrupt:
2404:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_PLL_LOCK
2405:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_WD_ERR
2406:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_CSV_CLK_SW
2407:Generated_Source\PSoC4/CyLib.c ****         *  A logical OR of above can be used as input parameter.
2408:Generated_Source\PSoC4/CyLib.c ****         *
2409:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2410:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllSetInterrupt(uint32 interrupt)
2411:Generated_Source\PSoC4/CyLib.c ****         {
2412:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32(CYREG_EXCO_INTR_SET, interrupt);
2413:Generated_Source\PSoC4/CyLib.c ****         }
2414:Generated_Source\PSoC4/CyLib.c **** 
2415:Generated_Source\PSoC4/CyLib.c **** 
2416:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2417:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvEnable
2418:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2419:Generated_Source\PSoC4/CyLib.c ****         *
2420:Generated_Source\PSoC4/CyLib.c ****         * This API enables clock supervision on PLL frequency lock and loss.
2421:Generated_Source\PSoC4/CyLib.c ****         *
2422:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4500 with PLL devices.
2423:Generated_Source\PSoC4/CyLib.c ****         *
2424:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2425:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvEnable(void)
2426:Generated_Source\PSoC4/CyLib.c ****         {
2427:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_EXCO_REF_CTL, CYFLD_EXCO_CSV_EN, 0x1uL);
2428:Generated_Source\PSoC4/CyLib.c ****         }
2429:Generated_Source\PSoC4/CyLib.c **** 
2430:Generated_Source\PSoC4/CyLib.c **** 
2431:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2432:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvDisable
2433:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2434:Generated_Source\PSoC4/CyLib.c ****         *
2435:Generated_Source\PSoC4/CyLib.c ****         * This API disables clock supervision on PLL.
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 52


2436:Generated_Source\PSoC4/CyLib.c ****         *
2437:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4500 with PLL devices.
2438:Generated_Source\PSoC4/CyLib.c ****         *
2439:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2440:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvDisable(void)
2441:Generated_Source\PSoC4/CyLib.c ****         {
2442:Generated_Source\PSoC4/CyLib.c ****             CY_CLEAR_REG32_FIELD(CYREG_EXCO_REF_CTL, CYFLD_EXCO_CSV_EN);
2443:Generated_Source\PSoC4/CyLib.c ****         }
2444:Generated_Source\PSoC4/CyLib.c **** 
2445:Generated_Source\PSoC4/CyLib.c **** 
2446:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2447:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvSetSpvrCtl
2448:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2449:Generated_Source\PSoC4/CyLib.c ****         *
2450:Generated_Source\PSoC4/CyLib.c ****         *  This API enables sets the clock supervision parameters.
2451:Generated_Source\PSoC4/CyLib.c ****         *
2452:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2453:Generated_Source\PSoC4/CyLib.c ****         *
2454:Generated_Source\PSoC4/CyLib.c ****         * \param startupDelay:
2455:Generated_Source\PSoC4/CyLib.c ****         *  startup delay time -1 in reference clock cycles after enable
2456:Generated_Source\PSoC4/CyLib.c ****         *  or deep sleep wake up from reference clock start to monitored clock start
2457:Generated_Source\PSoC4/CyLib.c ****         *
2458:Generated_Source\PSoC4/CyLib.c ****         * \param csvSwitch:
2459:Generated_Source\PSoC4/CyLib.c ****         * CY_SYS_PLL_CSV_INT_EN – Enable INTR.CSV_CLK_SW if a clock switch occurs to IMO
2460:Generated_Source\PSoC4/CyLib.c ****         * CY_SYS_PLL_CSV_TRIG_EN – Enable CSV to cause trigger if a clock switch occurs to IMO
2461:Generated_Source\PSoC4/CyLib.c ****         * CY_SYS_PLL_CSV_CLK_SW_EN – Enable CSV to cause clock switch IMO (enabled by default in 
2462:Generated_Source\PSoC4/CyLib.c ****         *
2463:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2464:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvSetSpvrCtl(uint32 startupDelay, uint32 csvSwitch)
2465:Generated_Source\PSoC4/CyLib.c ****         {
2466:Generated_Source\PSoC4/CyLib.c ****             uint32 tmpRegVal = CY_GET_REG32(CYREG_EXCO_REF_CTL);
2467:Generated_Source\PSoC4/CyLib.c **** 
2468:Generated_Source\PSoC4/CyLib.c ****             tmpRegVal &= ~(CY_SYS_PLL_STARTUP_MASK | CY_SYS_PLL_CSV_MASK);
2469:Generated_Source\PSoC4/CyLib.c ****             tmpRegVal |= (startupDelay | csvSwitch);
2470:Generated_Source\PSoC4/CyLib.c **** 
2471:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32(CYREG_EXCO_REF_CTL, tmpRegVal);
2472:Generated_Source\PSoC4/CyLib.c ****         }
2473:Generated_Source\PSoC4/CyLib.c **** 
2474:Generated_Source\PSoC4/CyLib.c **** 
2475:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2476:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvSetRefLimits
2477:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2478:Generated_Source\PSoC4/CyLib.c ****         *
2479:Generated_Source\PSoC4/CyLib.c ****         *  This API sets the cycle time lower and upper limits.
2480:Generated_Source\PSoC4/CyLib.c ****         *
2481:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2482:Generated_Source\PSoC4/CyLib.c ****         *
2483:Generated_Source\PSoC4/CyLib.c ****         * \param lower:
2484:Generated_Source\PSoC4/CyLib.c ****         *  Sets the lower limit -1, in reference clock cycles,
2485:Generated_Source\PSoC4/CyLib.c ****         *  before the next monitored clock event is allowed to happen.  If a monitored
2486:Generated_Source\PSoC4/CyLib.c ****         *  clock event happens before this limit is reached a CSV error is detected.
2487:Generated_Source\PSoC4/CyLib.c ****         *
2488:Generated_Source\PSoC4/CyLib.c ****         * \param upper:
2489:Generated_Source\PSoC4/CyLib.c ****         *  Sets the upper limit -1, in reference clock cycles, before (or same time)
2490:Generated_Source\PSoC4/CyLib.c ****         *  the next monitored clock event must happen.  If a monitored clock event
2491:Generated_Source\PSoC4/CyLib.c ****         *  does not happen before this limit is reached, or does not happen at all
2492:Generated_Source\PSoC4/CyLib.c ****         *  (clock loss), a CSV error is detected.
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 53


2493:Generated_Source\PSoC4/CyLib.c ****         *
2494:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2495:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvSetRefLimits(uint32 lower, uint32 upper)
2496:Generated_Source\PSoC4/CyLib.c ****         {
2497:Generated_Source\PSoC4/CyLib.c ****             uint32 tmpRegVal = CY_GET_REG32(CYREG_EXCO_REF_LIMIT);
2498:Generated_Source\PSoC4/CyLib.c **** 
2499:Generated_Source\PSoC4/CyLib.c ****             tmpRegVal &= ~(CY_SYS_PLL_REF_LIMIT_LOWER_MASK | CY_SYS_PLL_REF_LIMIT_UPPER_MASK);
2500:Generated_Source\PSoC4/CyLib.c ****             tmpRegVal |= (lower | ((uint32)(upper << CY_SYS_PLL_REF_LIMIT_UPPER_OFFSET)));
2501:Generated_Source\PSoC4/CyLib.c **** 
2502:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32(CYREG_EXCO_REF_LIMIT, tmpRegVal);
2503:Generated_Source\PSoC4/CyLib.c ****         }
2504:Generated_Source\PSoC4/CyLib.c **** 
2505:Generated_Source\PSoC4/CyLib.c **** 
2506:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2507:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvGetRefLimits
2508:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2509:Generated_Source\PSoC4/CyLib.c ****         *
2510:Generated_Source\PSoC4/CyLib.c ****         *  This API gets the cycle time lower and upper limits.
2511:Generated_Source\PSoC4/CyLib.c ****         *
2512:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2513:Generated_Source\PSoC4/CyLib.c ****         *
2514:Generated_Source\PSoC4/CyLib.c ****         * \return
2515:Generated_Source\PSoC4/CyLib.c ****         *  *Bits 31:16 – upper limit
2516:Generated_Source\PSoC4/CyLib.c ****         *  *Bits 15:0 – lower limit
2517:Generated_Source\PSoC4/CyLib.c ****         *
2518:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2519:Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkPllCsvGetRefLimits(void)
2520:Generated_Source\PSoC4/CyLib.c ****         {
2521:Generated_Source\PSoC4/CyLib.c ****             return ((uint32)CY_GET_REG32(CYREG_EXCO_REF_LIMIT));
2522:Generated_Source\PSoC4/CyLib.c ****         }
2523:Generated_Source\PSoC4/CyLib.c **** 
2524:Generated_Source\PSoC4/CyLib.c **** 
2525:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2526:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvSetPeriod
2527:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2528:Generated_Source\PSoC4/CyLib.c ****         *
2529:Generated_Source\PSoC4/CyLib.c ****         *  This API sets the csv period time.
2530:Generated_Source\PSoC4/CyLib.c ****         *
2531:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2532:Generated_Source\PSoC4/CyLib.c ****         *
2533:Generated_Source\PSoC4/CyLib.c ****         * \param period:
2534:Generated_Source\PSoC4/CyLib.c ****         *  Set the Period -1, in monitored clock cycles, before the next monitored
2535:Generated_Source\PSoC4/CyLib.c ****         *  clock event happens.
2536:Generated_Source\PSoC4/CyLib.c ****         *  PERIOD <=  (UPPER+1) / FREQ_RATIO -1, with
2537:Generated_Source\PSoC4/CyLib.c ****         *  FREQ_RATIO = (Reference frequency / Monitored frequency).
2538:Generated_Source\PSoC4/CyLib.c ****         *  In case the clocks are asynchronous: PERIOD <=  UPPER / FREQ_RATIO -1
2539:Generated_Source\PSoC4/CyLib.c ****         *
2540:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2541:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvSetPeriod(uint32 period)
2542:Generated_Source\PSoC4/CyLib.c ****         {
2543:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_EXCO_MON_CTL, CYFLD_EXCO_PERIOD, period);
2544:Generated_Source\PSoC4/CyLib.c ****         }
2545:Generated_Source\PSoC4/CyLib.c **** 
2546:Generated_Source\PSoC4/CyLib.c **** 
2547:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2548:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvGetPeriod
2549:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 54


2550:Generated_Source\PSoC4/CyLib.c ****         *
2551:Generated_Source\PSoC4/CyLib.c ****         *  This API returns the CSV period time.
2552:Generated_Source\PSoC4/CyLib.c ****         *
2553:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2554:Generated_Source\PSoC4/CyLib.c ****         *
2555:Generated_Source\PSoC4/CyLib.c ****         * \return Period time
2556:Generated_Source\PSoC4/CyLib.c ****         *
2557:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2558:Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkPllCsvGetPeriod(void)
2559:Generated_Source\PSoC4/CyLib.c ****         {
2560:Generated_Source\PSoC4/CyLib.c ****             return ((uint32)CY_GET_REG32_FIELD(CYREG_EXCO_MON_CTL, CYFLD_EXCO_PERIOD));
2561:Generated_Source\PSoC4/CyLib.c ****         }
2562:Generated_Source\PSoC4/CyLib.c **** 
2563:Generated_Source\PSoC4/CyLib.c **** 
2564:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2565:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvEnableReset
2566:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2567:Generated_Source\PSoC4/CyLib.c ****         *
2568:Generated_Source\PSoC4/CyLib.c ****         *  This API enables the system reset feature when the clock supervisor switches
2569:Generated_Source\PSoC4/CyLib.c ****         *  the clock source to IMO. A programmable delay counter starts at delay count
2570:Generated_Source\PSoC4/CyLib.c ****         *  value (see CySysClkPllCsvReloadPgmDlyCounter API) and counts down.
2571:Generated_Source\PSoC4/CyLib.c ****         *
2572:Generated_Source\PSoC4/CyLib.c ****         *  The CSV block will assert system reset when the counter reaches zero unless
2573:Generated_Source\PSoC4/CyLib.c ****         *  firmware intervenes and reloads the counter using
2574:Generated_Source\PSoC4/CyLib.c ****         *  CySysClkPllCsvReloadPgmDlyCounter() API.
2575:Generated_Source\PSoC4/CyLib.c ****         *
2576:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2577:Generated_Source\PSoC4/CyLib.c ****         *
2578:Generated_Source\PSoC4/CyLib.c ****         *  Side Effects and Restrictions:
2579:Generated_Source\PSoC4/CyLib.c ****         *  If a clock switch occurs, CSV block will reset the device when the delay
2580:Generated_Source\PSoC4/CyLib.c ****         *  counter reaches zero unless firmware reloads the counter using
2581:Generated_Source\PSoC4/CyLib.c ****         *  CySysClkPllCsvReloadPgmDlyCounter() API.
2582:Generated_Source\PSoC4/CyLib.c ****         *
2583:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2584:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvEnableReset(void)
2585:Generated_Source\PSoC4/CyLib.c ****         {
2586:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_EXCO_RSTDLY_CTL, CYFLD_EXCO_EN, 0x1uL);
2587:Generated_Source\PSoC4/CyLib.c ****         }
2588:Generated_Source\PSoC4/CyLib.c **** 
2589:Generated_Source\PSoC4/CyLib.c **** 
2590:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2591:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvDisableReset
2592:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2593:Generated_Source\PSoC4/CyLib.c ****         *
2594:Generated_Source\PSoC4/CyLib.c ****         *  This API disables the system reset feature when the clock supervisor
2595:Generated_Source\PSoC4/CyLib.c ****         *  switches the clock source to IMO.
2596:Generated_Source\PSoC4/CyLib.c ****         *
2597:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2598:Generated_Source\PSoC4/CyLib.c ****         *
2599:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2600:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvDisableReset(void)
2601:Generated_Source\PSoC4/CyLib.c ****         {
2602:Generated_Source\PSoC4/CyLib.c ****             CY_CLEAR_REG32_FIELD(CYREG_EXCO_RSTDLY_CTL, CYFLD_EXCO_EN);
2603:Generated_Source\PSoC4/CyLib.c ****         }
2604:Generated_Source\PSoC4/CyLib.c **** 
2605:Generated_Source\PSoC4/CyLib.c **** 
2606:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 55


2607:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvReloadPgmDlyCounter
2608:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2609:Generated_Source\PSoC4/CyLib.c ****         *
2610:Generated_Source\PSoC4/CyLib.c ****         *  This API reloads the programmable delay counter with the delay count value.
2611:Generated_Source\PSoC4/CyLib.c ****         *
2612:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2613:Generated_Source\PSoC4/CyLib.c ****         *
2614:Generated_Source\PSoC4/CyLib.c ****         * \param delayCount:
2615:Generated_Source\PSoC4/CyLib.c ****         *  Valid range 0-65535, device default value is 256.
2616:Generated_Source\PSoC4/CyLib.c ****         *  Sets the # of counts of IMO clock before system reset is asserted.
2617:Generated_Source\PSoC4/CyLib.c ****         *
2618:Generated_Source\PSoC4/CyLib.c ****         *
2619:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2620:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvReloadPgmDlyCounter(uint32 delayCount)
2621:Generated_Source\PSoC4/CyLib.c ****         {
2622:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_EXCO_RSTDLY, CYFLD_EXCO_DLYCOUNT, delayCount);
2623:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_EXCO_RSTDLY_CTL, CYFLD_EXCO_LOAD, 0x1uL);
2624:Generated_Source\PSoC4/CyLib.c ****         }
2625:Generated_Source\PSoC4/CyLib.c **** 
2626:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_ECOV2_SRSSLT) */
2627:Generated_Source\PSoC4/CyLib.c **** 
2628:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_PLL) */
2629:Generated_Source\PSoC4/CyLib.c **** 
2630:Generated_Source\PSoC4/CyLib.c **** 
2631:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
2632:Generated_Source\PSoC4/CyLib.c **** 
2633:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2634:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
2635:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2636:Generated_Source\PSoC4/CyLib.c ****     *
2637:Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
2638:Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
2639:Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
2640:Generated_Source\PSoC4/CyLib.c ****     *
2641:Generated_Source\PSoC4/CyLib.c ****     *  \param threshold: Threshold selection for Low Voltage Detect circuit.
2642:Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
2643:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
2644:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
2645:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
2646:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
2647:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
2648:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
2649:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
2650:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
2651:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
2652:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
2653:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
2654:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
2655:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
2656:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
2657:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
2658:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
2659:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
2660:Generated_Source\PSoC4/CyLib.c ****     *
2661:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2662:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
2663:Generated_Source\PSoC4/CyLib.c ****     {
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 56


2664:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
2665:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
2666:Generated_Source\PSoC4/CyLib.c **** 
2667:Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
2668:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
2669:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
2670:Generated_Source\PSoC4/CyLib.c **** 
2671:Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
2672:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2673:Generated_Source\PSoC4/CyLib.c **** 
2674:Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
2675:Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
2676:Generated_Source\PSoC4/CyLib.c **** 
2677:Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
2678:Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
2679:Generated_Source\PSoC4/CyLib.c **** 
2680:Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
2681:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
2682:Generated_Source\PSoC4/CyLib.c ****     }
2683:Generated_Source\PSoC4/CyLib.c **** 
2684:Generated_Source\PSoC4/CyLib.c **** 
2685:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2686:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
2687:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2688:Generated_Source\PSoC4/CyLib.c ****     *
2689:Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
2690:Generated_Source\PSoC4/CyLib.c ****     *
2691:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2692:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
2693:Generated_Source\PSoC4/CyLib.c ****     {
2694:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
2695:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2696:Generated_Source\PSoC4/CyLib.c ****     }
2697:Generated_Source\PSoC4/CyLib.c **** 
2698:Generated_Source\PSoC4/CyLib.c **** 
2699:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2700:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
2701:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2702:Generated_Source\PSoC4/CyLib.c ****     *
2703:Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
2704:Generated_Source\PSoC4/CyLib.c ****     *
2705:Generated_Source\PSoC4/CyLib.c ****     * \return
2706:Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
2707:Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
2708:Generated_Source\PSoC4/CyLib.c ****     *
2709:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2710:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
2711:Generated_Source\PSoC4/CyLib.c ****     {
2712:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
2713:Generated_Source\PSoC4/CyLib.c ****     }
2714:Generated_Source\PSoC4/CyLib.c **** 
2715:Generated_Source\PSoC4/CyLib.c **** 
2716:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2717:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
2718:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2719:Generated_Source\PSoC4/CyLib.c ****     *
2720:Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 57


2721:Generated_Source\PSoC4/CyLib.c ****     *
2722:Generated_Source\PSoC4/CyLib.c ****     * \return
2723:Generated_Source\PSoC4/CyLib.c ****     *  None
2724:Generated_Source\PSoC4/CyLib.c ****     *
2725:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2726:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
2727:Generated_Source\PSoC4/CyLib.c ****     {
2728:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
2729:Generated_Source\PSoC4/CyLib.c ****     }
2730:Generated_Source\PSoC4/CyLib.c **** 
2731:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
2732:Generated_Source\PSoC4/CyLib.c **** 
2733:Generated_Source\PSoC4/CyLib.c **** 
2734:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2735:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
2736:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2737:Generated_Source\PSoC4/CyLib.c **** *
2738:Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
2739:Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
2740:Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
2741:Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
2742:Generated_Source\PSoC4/CyLib.c **** *
2743:Generated_Source\PSoC4/CyLib.c **** *  \param reason: bits in the RES_CAUSE register to clear.
2744:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
2745:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
2746:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
2747:Generated_Source\PSoC4/CyLib.c **** *
2748:Generated_Source\PSoC4/CyLib.c **** * \return
2749:Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
2750:Generated_Source\PSoC4/CyLib.c **** *
2751:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2752:Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
2753:Generated_Source\PSoC4/CyLib.c **** {
 442              		.loc 1 2753 0
 443              		.cfi_startproc
 444              		@ args = 0, pretend = 0, frame = 0
 445              		@ frame_needed = 0, uses_anonymous_args = 0
 446              		@ link register save eliminated.
 447              	.LVL22:
2754:Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
2755:Generated_Source\PSoC4/CyLib.c **** 
2756:Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 448              		.loc 1 2756 0
 449 0000 1923     		movs	r3, #25
 450 0002 0200     		movs	r2, r0
2757:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 451              		.loc 1 2757 0
 452 0004 0249     		ldr	r1, .L33
2756:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 453              		.loc 1 2756 0
 454 0006 1A40     		ands	r2, r3
 455              	.LVL23:
 456              		.loc 1 2757 0
 457 0008 0868     		ldr	r0, [r1]
 458              	.LVL24:
2758:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2759:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 58


2760:Generated_Source\PSoC4/CyLib.c **** 
2761:Generated_Source\PSoC4/CyLib.c ****     return (returnStatus);
2762:Generated_Source\PSoC4/CyLib.c **** }
 459              		.loc 1 2762 0
 460              		@ sp needed
2761:Generated_Source\PSoC4/CyLib.c **** }
 461              		.loc 1 2761 0
 462 000a 1840     		ands	r0, r3
 463              	.LVL25:
2759:Generated_Source\PSoC4/CyLib.c **** 
 464              		.loc 1 2759 0
 465 000c 0A60     		str	r2, [r1]
 466              		.loc 1 2762 0
 467 000e 7047     		bx	lr
 468              	.L34:
 469              		.align	2
 470              	.L33:
 471 0010 54000340 		.word	1073938516
 472              		.cfi_endproc
 473              	.LFE12:
 474              		.size	CySysGetResetReason, .-CySysGetResetReason
 475              		.section	.text.CyDisableInts,"ax",%progbits
 476              		.align	1
 477              		.global	CyDisableInts
 478              		.code	16
 479              		.thumb_func
 480              		.type	CyDisableInts, %function
 481              	CyDisableInts:
 482              	.LFB13:
2763:Generated_Source\PSoC4/CyLib.c **** 
2764:Generated_Source\PSoC4/CyLib.c **** 
2765:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2766:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
2767:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2768:Generated_Source\PSoC4/CyLib.c **** *
2769:Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
2770:Generated_Source\PSoC4/CyLib.c **** *
2771:Generated_Source\PSoC4/CyLib.c **** * \return
2772:Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
2773:Generated_Source\PSoC4/CyLib.c **** *
2774:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2775:Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
2776:Generated_Source\PSoC4/CyLib.c **** {
 483              		.loc 1 2776 0
 484              		.cfi_startproc
 485              		@ args = 0, pretend = 0, frame = 0
 486              		@ frame_needed = 0, uses_anonymous_args = 0
 487              		@ link register save eliminated.
2777:Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
2778:Generated_Source\PSoC4/CyLib.c **** 
2779:Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
2780:Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
2781:Generated_Source\PSoC4/CyLib.c **** 
2782:Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
2783:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
 488              		.loc 1 2783 0
 489 0000 0122     		movs	r2, #1
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 59


2780:Generated_Source\PSoC4/CyLib.c **** 
 490              		.loc 1 2780 0
 491 0002 024B     		ldr	r3, .L36
 492              		.loc 1 2783 0
 493 0004 5242     		rsbs	r2, r2, #0
2780:Generated_Source\PSoC4/CyLib.c **** 
 494              		.loc 1 2780 0
 495 0006 1868     		ldr	r0, [r3]
 496              	.LVL26:
2784:Generated_Source\PSoC4/CyLib.c **** 
2785:Generated_Source\PSoC4/CyLib.c ****     return (intState);
2786:Generated_Source\PSoC4/CyLib.c **** }
 497              		.loc 1 2786 0
 498              		@ sp needed
2783:Generated_Source\PSoC4/CyLib.c **** 
 499              		.loc 1 2783 0
 500 0008 1A60     		str	r2, [r3]
 501              		.loc 1 2786 0
 502 000a 7047     		bx	lr
 503              	.L37:
 504              		.align	2
 505              	.L36:
 506 000c 80E100E0 		.word	-536813184
 507              		.cfi_endproc
 508              	.LFE13:
 509              		.size	CyDisableInts, .-CyDisableInts
 510              		.section	.text.CyEnableInts,"ax",%progbits
 511              		.align	1
 512              		.global	CyEnableInts
 513              		.code	16
 514              		.thumb_func
 515              		.type	CyEnableInts, %function
 516              	CyEnableInts:
 517              	.LFB14:
2787:Generated_Source\PSoC4/CyLib.c **** 
2788:Generated_Source\PSoC4/CyLib.c **** 
2789:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2790:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
2791:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2792:Generated_Source\PSoC4/CyLib.c **** *
2793:Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
2794:Generated_Source\PSoC4/CyLib.c **** *
2795:Generated_Source\PSoC4/CyLib.c **** *  \param mask The 32 bit mask of interrupts to enable.
2796:Generated_Source\PSoC4/CyLib.c **** *
2797:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2798:Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
2799:Generated_Source\PSoC4/CyLib.c **** {
 518              		.loc 1 2799 0
 519              		.cfi_startproc
 520              		@ args = 0, pretend = 0, frame = 0
 521              		@ frame_needed = 0, uses_anonymous_args = 0
 522              		@ link register save eliminated.
 523              	.LVL27:
2800:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 524              		.loc 1 2800 0
 525 0000 014B     		ldr	r3, .L39
2801:Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 60


 526              		.loc 1 2801 0
 527              		@ sp needed
2800:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 528              		.loc 1 2800 0
 529 0002 1860     		str	r0, [r3]
 530              		.loc 1 2801 0
 531 0004 7047     		bx	lr
 532              	.L40:
 533 0006 C046     		.align	2
 534              	.L39:
 535 0008 00E100E0 		.word	-536813312
 536              		.cfi_endproc
 537              	.LFE14:
 538              		.size	CyEnableInts, .-CyEnableInts
 539              		.section	.text.CyIntSetSysVector,"ax",%progbits
 540              		.align	1
 541              		.global	CyIntSetSysVector
 542              		.code	16
 543              		.thumb_func
 544              		.type	CyIntSetSysVector, %function
 545              	CyIntSetSysVector:
 546              	.LFB15:
2802:Generated_Source\PSoC4/CyLib.c **** 
2803:Generated_Source\PSoC4/CyLib.c **** 
2804:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2805:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
2806:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2807:Generated_Source\PSoC4/CyLib.c **** *
2808:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
2809:Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
2810:Generated_Source\PSoC4/CyLib.c **** *
2811:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2812:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2813:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2814:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2815:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2816:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2817:Generated_Source\PSoC4/CyLib.c **** *
2818:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine.
2819:Generated_Source\PSoC4/CyLib.c **** *
2820:Generated_Source\PSoC4/CyLib.c **** * \return The old ISR vector at this location.
2821:Generated_Source\PSoC4/CyLib.c **** *
2822:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2823:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
2824:Generated_Source\PSoC4/CyLib.c **** {
 547              		.loc 1 2824 0
 548              		.cfi_startproc
 549              		@ args = 0, pretend = 0, frame = 0
 550              		@ frame_needed = 0, uses_anonymous_args = 0
 551              		@ link register save eliminated.
 552              	.LVL28:
2825:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2826:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2827:Generated_Source\PSoC4/CyLib.c **** 
2828:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2829:Generated_Source\PSoC4/CyLib.c **** 
2830:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 61


2831:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
 553              		.loc 1 2831 0
 554 0000 8023     		movs	r3, #128
 555 0002 8000     		lsls	r0, r0, #2
 556              	.LVL29:
 557 0004 9B05     		lsls	r3, r3, #22
 558 0006 C318     		adds	r3, r0, r3
 559 0008 1868     		ldr	r0, [r3]
 560              	.LVL30:
2832:Generated_Source\PSoC4/CyLib.c **** 
2833:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2834:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
2835:Generated_Source\PSoC4/CyLib.c **** 
2836:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2837:Generated_Source\PSoC4/CyLib.c **** }
 561              		.loc 1 2837 0
 562              		@ sp needed
2834:Generated_Source\PSoC4/CyLib.c **** 
 563              		.loc 1 2834 0
 564 000a 1960     		str	r1, [r3]
 565              		.loc 1 2837 0
 566 000c 7047     		bx	lr
 567              		.cfi_endproc
 568              	.LFE15:
 569              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 570              		.section	.text.CyIntGetSysVector,"ax",%progbits
 571              		.align	1
 572              		.global	CyIntGetSysVector
 573              		.code	16
 574              		.thumb_func
 575              		.type	CyIntGetSysVector, %function
 576              	CyIntGetSysVector:
 577              	.LFB16:
2838:Generated_Source\PSoC4/CyLib.c **** 
2839:Generated_Source\PSoC4/CyLib.c **** 
2840:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2841:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
2842:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2843:Generated_Source\PSoC4/CyLib.c **** *
2844:Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
2845:Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
2846:Generated_Source\PSoC4/CyLib.c **** *
2847:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2848:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2849:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2850:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2851:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2852:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2853:Generated_Source\PSoC4/CyLib.c **** *
2854:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2855:Generated_Source\PSoC4/CyLib.c **** *
2856:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2857:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
2858:Generated_Source\PSoC4/CyLib.c **** {
 578              		.loc 1 2858 0
 579              		.cfi_startproc
 580              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 62


 581              		@ frame_needed = 0, uses_anonymous_args = 0
 582              		@ link register save eliminated.
 583              	.LVL31:
2859:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2860:Generated_Source\PSoC4/CyLib.c **** 
2861:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2862:Generated_Source\PSoC4/CyLib.c **** 
2863:Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
 584              		.loc 1 2863 0
 585 0000 8023     		movs	r3, #128
 586 0002 8000     		lsls	r0, r0, #2
 587              	.LVL32:
 588 0004 9B05     		lsls	r3, r3, #22
 589 0006 C018     		adds	r0, r0, r3
 590 0008 0068     		ldr	r0, [r0]
2864:Generated_Source\PSoC4/CyLib.c **** }
 591              		.loc 1 2864 0
 592              		@ sp needed
 593 000a 7047     		bx	lr
 594              		.cfi_endproc
 595              	.LFE16:
 596              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 597              		.section	.text.CyIntSetVector,"ax",%progbits
 598              		.align	1
 599              		.global	CyIntSetVector
 600              		.code	16
 601              		.thumb_func
 602              		.type	CyIntSetVector, %function
 603              	CyIntSetVector:
 604              	.LFB17:
2865:Generated_Source\PSoC4/CyLib.c **** 
2866:Generated_Source\PSoC4/CyLib.c **** 
2867:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2868:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
2869:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2870:Generated_Source\PSoC4/CyLib.c **** *
2871:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
2872:Generated_Source\PSoC4/CyLib.c **** *
2873:Generated_Source\PSoC4/CyLib.c **** *  \param number Valid range [0-31].  Interrupt number
2874:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine
2875:Generated_Source\PSoC4/CyLib.c **** *
2876:Generated_Source\PSoC4/CyLib.c **** * \return Previous interrupt vector value.
2877:Generated_Source\PSoC4/CyLib.c **** *
2878:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2879:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
2880:Generated_Source\PSoC4/CyLib.c **** {
 605              		.loc 1 2880 0
 606              		.cfi_startproc
 607              		@ args = 0, pretend = 0, frame = 0
 608              		@ frame_needed = 0, uses_anonymous_args = 0
 609              		@ link register save eliminated.
 610              	.LVL33:
2881:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2882:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2883:Generated_Source\PSoC4/CyLib.c **** 
2884:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2885:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 63


2886:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2887:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
 611              		.loc 1 2887 0
 612 0000 024B     		ldr	r3, .L44
 613 0002 8000     		lsls	r0, r0, #2
 614              	.LVL34:
 615 0004 C318     		adds	r3, r0, r3
 616 0006 1868     		ldr	r0, [r3]
 617              	.LVL35:
2888:Generated_Source\PSoC4/CyLib.c **** 
2889:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2890:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
2891:Generated_Source\PSoC4/CyLib.c **** 
2892:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2893:Generated_Source\PSoC4/CyLib.c **** }
 618              		.loc 1 2893 0
 619              		@ sp needed
2890:Generated_Source\PSoC4/CyLib.c **** 
 620              		.loc 1 2890 0
 621 0008 1960     		str	r1, [r3]
 622              		.loc 1 2893 0
 623 000a 7047     		bx	lr
 624              	.L45:
 625              		.align	2
 626              	.L44:
 627 000c 40000020 		.word	536870976
 628              		.cfi_endproc
 629              	.LFE17:
 630              		.size	CyIntSetVector, .-CyIntSetVector
 631              		.section	.text.CyIntGetVector,"ax",%progbits
 632              		.align	1
 633              		.global	CyIntGetVector
 634              		.code	16
 635              		.thumb_func
 636              		.type	CyIntGetVector, %function
 637              	CyIntGetVector:
 638              	.LFB18:
2894:Generated_Source\PSoC4/CyLib.c **** 
2895:Generated_Source\PSoC4/CyLib.c **** 
2896:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2897:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
2898:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2899:Generated_Source\PSoC4/CyLib.c **** *
2900:Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
2901:Generated_Source\PSoC4/CyLib.c **** *
2902:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2903:Generated_Source\PSoC4/CyLib.c **** *
2904:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2905:Generated_Source\PSoC4/CyLib.c **** *
2906:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2907:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
2908:Generated_Source\PSoC4/CyLib.c **** {
 639              		.loc 1 2908 0
 640              		.cfi_startproc
 641              		@ args = 0, pretend = 0, frame = 0
 642              		@ frame_needed = 0, uses_anonymous_args = 0
 643              		@ link register save eliminated.
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 64


 644              	.LVL36:
2909:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2910:Generated_Source\PSoC4/CyLib.c **** 
2911:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2912:Generated_Source\PSoC4/CyLib.c **** 
2913:Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
 645              		.loc 1 2913 0
 646 0000 024B     		ldr	r3, .L47
 647 0002 8000     		lsls	r0, r0, #2
 648              	.LVL37:
 649 0004 C018     		adds	r0, r0, r3
 650 0006 0068     		ldr	r0, [r0]
2914:Generated_Source\PSoC4/CyLib.c **** }
 651              		.loc 1 2914 0
 652              		@ sp needed
 653 0008 7047     		bx	lr
 654              	.L48:
 655 000a C046     		.align	2
 656              	.L47:
 657 000c 40000020 		.word	536870976
 658              		.cfi_endproc
 659              	.LFE18:
 660              		.size	CyIntGetVector, .-CyIntGetVector
 661              		.section	.text.CyIntSetPriority,"ax",%progbits
 662              		.align	1
 663              		.global	CyIntSetPriority
 664              		.code	16
 665              		.thumb_func
 666              		.type	CyIntSetPriority, %function
 667              	CyIntSetPriority:
 668              	.LFB19:
2915:Generated_Source\PSoC4/CyLib.c **** 
2916:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2917:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
2918:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2919:Generated_Source\PSoC4/CyLib.c **** *
2920:Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
2921:Generated_Source\PSoC4/CyLib.c **** *
2922:Generated_Source\PSoC4/CyLib.c **** *  \param priority: Priority of the interrupt. 0 - 3, 0 being the highest.
2923:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2924:Generated_Source\PSoC4/CyLib.c **** *
2925:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2926:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
2927:Generated_Source\PSoC4/CyLib.c **** {
 669              		.loc 1 2927 0
 670              		.cfi_startproc
 671              		@ args = 0, pretend = 0, frame = 0
 672              		@ frame_needed = 0, uses_anonymous_args = 0
 673              	.LVL38:
 674 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 675              		.cfi_def_cfa_offset 24
 676              		.cfi_offset 3, -24
 677              		.cfi_offset 4, -20
 678              		.cfi_offset 5, -16
 679              		.cfi_offset 6, -12
 680              		.cfi_offset 7, -8
 681              		.cfi_offset 14, -4
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 65


2928:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
2929:Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
2930:Generated_Source\PSoC4/CyLib.c ****     uint32 value;
2931:Generated_Source\PSoC4/CyLib.c **** 
2932:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
2933:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2934:Generated_Source\PSoC4/CyLib.c **** 
2935:Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
 682              		.loc 1 2935 0
 683 0002 0326     		movs	r6, #3
 684 0004 0500     		movs	r5, r0
 685 0006 3540     		ands	r5, r6
 686 0008 B540     		lsls	r5, r5, r6
2927:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
 687              		.loc 1 2927 0
 688 000a 0F00     		movs	r7, r1
 689 000c 0400     		movs	r4, r0
 690              		.loc 1 2935 0
 691 000e 0635     		adds	r5, r5, #6
 692              	.LVL39:
2936:Generated_Source\PSoC4/CyLib.c **** 
2937:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
2938:Generated_Source\PSoC4/CyLib.c **** 
2939:Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
2940:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 693              		.loc 1 2940 0
 694 0010 AE40     		lsls	r6, r6, r5
2941:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 695              		.loc 1 2941 0
 696 0012 AF40     		lsls	r7, r7, r5
2937:Generated_Source\PSoC4/CyLib.c **** 
 697              		.loc 1 2937 0
 698 0014 FFF7FEFF 		bl	CyEnterCriticalSection
 699              	.LVL40:
2939:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 700              		.loc 1 2939 0
 701 0018 A408     		lsrs	r4, r4, #2
 702 001a 054B     		ldr	r3, .L50
 703 001c A400     		lsls	r4, r4, #2
 704 001e E418     		adds	r4, r4, r3
 705 0020 2368     		ldr	r3, [r4]
 706              	.LVL41:
2942:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
2943:Generated_Source\PSoC4/CyLib.c **** 
2944:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
2945:Generated_Source\PSoC4/CyLib.c **** }
 707              		.loc 1 2945 0
 708              		@ sp needed
2940:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 709              		.loc 1 2940 0
 710 0022 B343     		bics	r3, r6
 711              	.LVL42:
2941:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 712              		.loc 1 2941 0
 713 0024 1F43     		orrs	r7, r3
 714              	.LVL43:
2942:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 66


 715              		.loc 1 2942 0
 716 0026 2760     		str	r7, [r4]
2944:Generated_Source\PSoC4/CyLib.c **** }
 717              		.loc 1 2944 0
 718 0028 FFF7FEFF 		bl	CyExitCriticalSection
 719              	.LVL44:
 720              	.LVL45:
 721              	.LVL46:
 722              		.loc 1 2945 0
 723 002c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 724              	.L51:
 725 002e C046     		.align	2
 726              	.L50:
 727 0030 00E400E0 		.word	-536812544
 728              		.cfi_endproc
 729              	.LFE19:
 730              		.size	CyIntSetPriority, .-CyIntSetPriority
 731              		.section	.text.CyIntGetPriority,"ax",%progbits
 732              		.align	1
 733              		.global	CyIntGetPriority
 734              		.code	16
 735              		.thumb_func
 736              		.type	CyIntGetPriority, %function
 737              	CyIntGetPriority:
 738              	.LFB20:
2946:Generated_Source\PSoC4/CyLib.c **** 
2947:Generated_Source\PSoC4/CyLib.c **** 
2948:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2949:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
2950:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2951:Generated_Source\PSoC4/CyLib.c **** *
2952:Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
2953:Generated_Source\PSoC4/CyLib.c **** *
2954:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2955:Generated_Source\PSoC4/CyLib.c **** *
2956:Generated_Source\PSoC4/CyLib.c **** * \return
2957:Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
2958:Generated_Source\PSoC4/CyLib.c **** *
2959:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2960:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
2961:Generated_Source\PSoC4/CyLib.c **** {
 739              		.loc 1 2961 0
 740              		.cfi_startproc
 741              		@ args = 0, pretend = 0, frame = 0
 742              		@ frame_needed = 0, uses_anonymous_args = 0
 743              		@ link register save eliminated.
 744              	.LVL47:
2962:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
2963:Generated_Source\PSoC4/CyLib.c **** 
2964:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2965:Generated_Source\PSoC4/CyLib.c **** 
2966:Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
 745              		.loc 1 2966 0
 746 0000 8308     		lsrs	r3, r0, #2
 747 0002 064A     		ldr	r2, .L53
 748 0004 9B00     		lsls	r3, r3, #2
 749 0006 9B18     		adds	r3, r3, r2
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 67


 750 0008 1968     		ldr	r1, [r3]
 751              	.LVL48:
2967:Generated_Source\PSoC4/CyLib.c **** 
2968:Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
 752              		.loc 1 2968 0
 753 000a 0322     		movs	r2, #3
 754 000c 0300     		movs	r3, r0
 755 000e 1340     		ands	r3, r2
 756 0010 9340     		lsls	r3, r3, r2
 757 0012 0633     		adds	r3, r3, #6
 758 0014 D940     		lsrs	r1, r1, r3
 759              	.LVL49:
 760 0016 0800     		movs	r0, r1
 761              	.LVL50:
2969:Generated_Source\PSoC4/CyLib.c **** }
 762              		.loc 1 2969 0
 763              		@ sp needed
2968:Generated_Source\PSoC4/CyLib.c **** }
 764              		.loc 1 2968 0
 765 0018 1040     		ands	r0, r2
 766              		.loc 1 2969 0
 767 001a 7047     		bx	lr
 768              	.L54:
 769              		.align	2
 770              	.L53:
 771 001c 00E400E0 		.word	-536812544
 772              		.cfi_endproc
 773              	.LFE20:
 774              		.size	CyIntGetPriority, .-CyIntGetPriority
 775              		.section	.text.CyIntEnable,"ax",%progbits
 776              		.align	1
 777              		.global	CyIntEnable
 778              		.code	16
 779              		.thumb_func
 780              		.type	CyIntEnable, %function
 781              	CyIntEnable:
 782              	.LFB21:
2970:Generated_Source\PSoC4/CyLib.c **** 
2971:Generated_Source\PSoC4/CyLib.c **** 
2972:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2973:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
2974:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2975:Generated_Source\PSoC4/CyLib.c **** *
2976:Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
2977:Generated_Source\PSoC4/CyLib.c **** *
2978:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2979:Generated_Source\PSoC4/CyLib.c **** *
2980:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2981:Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
2982:Generated_Source\PSoC4/CyLib.c **** {
 783              		.loc 1 2982 0
 784              		.cfi_startproc
 785              		@ args = 0, pretend = 0, frame = 0
 786              		@ frame_needed = 0, uses_anonymous_args = 0
 787              		@ link register save eliminated.
 788              	.LVL51:
2983:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 68


 789              		.loc 1 2983 0
 790 0000 1F23     		movs	r3, #31
 791 0002 1840     		ands	r0, r3
 792              	.LVL52:
 793 0004 1E3B     		subs	r3, r3, #30
 794 0006 8340     		lsls	r3, r3, r0
 795 0008 014A     		ldr	r2, .L56
2984:Generated_Source\PSoC4/CyLib.c **** }
 796              		.loc 1 2984 0
 797              		@ sp needed
2983:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 798              		.loc 1 2983 0
 799 000a 1360     		str	r3, [r2]
 800              		.loc 1 2984 0
 801 000c 7047     		bx	lr
 802              	.L57:
 803 000e C046     		.align	2
 804              	.L56:
 805 0010 00E100E0 		.word	-536813312
 806              		.cfi_endproc
 807              	.LFE21:
 808              		.size	CyIntEnable, .-CyIntEnable
 809              		.section	.text.CyIntGetState,"ax",%progbits
 810              		.align	1
 811              		.global	CyIntGetState
 812              		.code	16
 813              		.thumb_func
 814              		.type	CyIntGetState, %function
 815              	CyIntGetState:
 816              	.LFB22:
2985:Generated_Source\PSoC4/CyLib.c **** 
2986:Generated_Source\PSoC4/CyLib.c **** 
2987:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2988:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
2989:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2990:Generated_Source\PSoC4/CyLib.c **** *
2991:Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
2992:Generated_Source\PSoC4/CyLib.c **** *
2993:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2994:Generated_Source\PSoC4/CyLib.c **** *
2995:Generated_Source\PSoC4/CyLib.c **** * \return
2996:Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
2997:Generated_Source\PSoC4/CyLib.c **** *
2998:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2999:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
3000:Generated_Source\PSoC4/CyLib.c **** {
 817              		.loc 1 3000 0
 818              		.cfi_startproc
 819              		@ args = 0, pretend = 0, frame = 0
 820              		@ frame_needed = 0, uses_anonymous_args = 0
 821              		@ link register save eliminated.
 822              	.LVL53:
3001:Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
3002:Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
 823              		.loc 1 3002 0
 824 0000 1F22     		movs	r2, #31
 825 0002 044B     		ldr	r3, .L59
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 69


 826 0004 1040     		ands	r0, r2
 827              	.LVL54:
 828 0006 1B68     		ldr	r3, [r3]
3003:Generated_Source\PSoC4/CyLib.c **** }
 829              		.loc 1 3003 0
 830              		@ sp needed
3002:Generated_Source\PSoC4/CyLib.c **** }
 831              		.loc 1 3002 0
 832 0008 C340     		lsrs	r3, r3, r0
 833 000a 1800     		movs	r0, r3
 834 000c 0123     		movs	r3, #1
 835 000e 1840     		ands	r0, r3
 836              		.loc 1 3003 0
 837 0010 7047     		bx	lr
 838              	.L60:
 839 0012 C046     		.align	2
 840              	.L59:
 841 0014 00E100E0 		.word	-536813312
 842              		.cfi_endproc
 843              	.LFE22:
 844              		.size	CyIntGetState, .-CyIntGetState
 845              		.section	.text.CyIntDisable,"ax",%progbits
 846              		.align	1
 847              		.global	CyIntDisable
 848              		.code	16
 849              		.thumb_func
 850              		.type	CyIntDisable, %function
 851              	CyIntDisable:
 852              	.LFB23:
3004:Generated_Source\PSoC4/CyLib.c **** 
3005:Generated_Source\PSoC4/CyLib.c **** 
3006:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3007:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
3008:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3009:Generated_Source\PSoC4/CyLib.c **** *
3010:Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
3011:Generated_Source\PSoC4/CyLib.c **** *
3012:Generated_Source\PSoC4/CyLib.c **** *   \param number: Valid range [0-31].  Interrupt number.
3013:Generated_Source\PSoC4/CyLib.c **** *
3014:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3015:Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
3016:Generated_Source\PSoC4/CyLib.c **** {
 853              		.loc 1 3016 0
 854              		.cfi_startproc
 855              		@ args = 0, pretend = 0, frame = 0
 856              		@ frame_needed = 0, uses_anonymous_args = 0
 857              		@ link register save eliminated.
 858              	.LVL55:
3017:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 859              		.loc 1 3017 0
 860 0000 1F23     		movs	r3, #31
 861 0002 1840     		ands	r0, r3
 862              	.LVL56:
 863 0004 1E3B     		subs	r3, r3, #30
 864 0006 8340     		lsls	r3, r3, r0
 865 0008 014A     		ldr	r2, .L62
3018:Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 70


 866              		.loc 1 3018 0
 867              		@ sp needed
3017:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 868              		.loc 1 3017 0
 869 000a 1360     		str	r3, [r2]
 870              		.loc 1 3018 0
 871 000c 7047     		bx	lr
 872              	.L63:
 873 000e C046     		.align	2
 874              	.L62:
 875 0010 80E100E0 		.word	-536813184
 876              		.cfi_endproc
 877              	.LFE23:
 878              		.size	CyIntDisable, .-CyIntDisable
 879              		.section	.text.CyIntSetPending,"ax",%progbits
 880              		.align	1
 881              		.global	CyIntSetPending
 882              		.code	16
 883              		.thumb_func
 884              		.type	CyIntSetPending, %function
 885              	CyIntSetPending:
 886              	.LFB24:
3019:Generated_Source\PSoC4/CyLib.c **** 
3020:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3021:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
3022:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3023:Generated_Source\PSoC4/CyLib.c **** *
3024:Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
3025:Generated_Source\PSoC4/CyLib.c **** *
3026:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
3027:Generated_Source\PSoC4/CyLib.c **** *
3028:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3029:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
3030:Generated_Source\PSoC4/CyLib.c **** {
 887              		.loc 1 3030 0
 888              		.cfi_startproc
 889              		@ args = 0, pretend = 0, frame = 0
 890              		@ frame_needed = 0, uses_anonymous_args = 0
 891              		@ link register save eliminated.
 892              	.LVL57:
3031:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 893              		.loc 1 3031 0
 894 0000 1F23     		movs	r3, #31
 895 0002 1840     		ands	r0, r3
 896              	.LVL58:
 897 0004 1E3B     		subs	r3, r3, #30
 898 0006 8340     		lsls	r3, r3, r0
 899 0008 014A     		ldr	r2, .L65
3032:Generated_Source\PSoC4/CyLib.c **** }
 900              		.loc 1 3032 0
 901              		@ sp needed
3031:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 902              		.loc 1 3031 0
 903 000a 1360     		str	r3, [r2]
 904              		.loc 1 3032 0
 905 000c 7047     		bx	lr
 906              	.L66:
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 71


 907 000e C046     		.align	2
 908              	.L65:
 909 0010 00E200E0 		.word	-536813056
 910              		.cfi_endproc
 911              	.LFE24:
 912              		.size	CyIntSetPending, .-CyIntSetPending
 913              		.section	.text.CyIntClearPending,"ax",%progbits
 914              		.align	1
 915              		.global	CyIntClearPending
 916              		.code	16
 917              		.thumb_func
 918              		.type	CyIntClearPending, %function
 919              	CyIntClearPending:
 920              	.LFB25:
3033:Generated_Source\PSoC4/CyLib.c **** 
3034:Generated_Source\PSoC4/CyLib.c **** 
3035:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3036:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
3037:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3038:Generated_Source\PSoC4/CyLib.c **** *
3039:Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
3040:Generated_Source\PSoC4/CyLib.c **** *
3041:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
3042:Generated_Source\PSoC4/CyLib.c **** *
3043:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3044:Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
3045:Generated_Source\PSoC4/CyLib.c **** {
 921              		.loc 1 3045 0
 922              		.cfi_startproc
 923              		@ args = 0, pretend = 0, frame = 0
 924              		@ frame_needed = 0, uses_anonymous_args = 0
 925              		@ link register save eliminated.
 926              	.LVL59:
3046:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 927              		.loc 1 3046 0
 928 0000 1F23     		movs	r3, #31
 929 0002 1840     		ands	r0, r3
 930              	.LVL60:
 931 0004 1E3B     		subs	r3, r3, #30
 932 0006 8340     		lsls	r3, r3, r0
 933 0008 014A     		ldr	r2, .L68
3047:Generated_Source\PSoC4/CyLib.c **** }
 934              		.loc 1 3047 0
 935              		@ sp needed
3046:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 936              		.loc 1 3046 0
 937 000a 1360     		str	r3, [r2]
 938              		.loc 1 3047 0
 939 000c 7047     		bx	lr
 940              	.L69:
 941 000e C046     		.align	2
 942              	.L68:
 943 0010 80E200E0 		.word	-536812928
 944              		.cfi_endproc
 945              	.LFE25:
 946              		.size	CyIntClearPending, .-CyIntClearPending
 947              		.section	.text.CyHalt,"ax",%progbits
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 72


 948              		.align	1
 949              		.global	CyHalt
 950              		.code	16
 951              		.thumb_func
 952              		.type	CyHalt, %function
 953              	CyHalt:
 954              	.LFB26:
3048:Generated_Source\PSoC4/CyLib.c **** 
3049:Generated_Source\PSoC4/CyLib.c **** 
3050:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3051:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
3052:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3053:Generated_Source\PSoC4/CyLib.c **** *
3054:Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
3055:Generated_Source\PSoC4/CyLib.c **** *
3056:Generated_Source\PSoC4/CyLib.c **** *  \param reason: Value to be used during debugging.
3057:Generated_Source\PSoC4/CyLib.c **** *
3058:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3059:Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
3060:Generated_Source\PSoC4/CyLib.c **** {
 955              		.loc 1 3060 0
 956              		.cfi_startproc
 957              		@ args = 0, pretend = 0, frame = 0
 958              		@ frame_needed = 0, uses_anonymous_args = 0
 959              		@ link register save eliminated.
 960              	.LVL61:
3061:Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
3062:Generated_Source\PSoC4/CyLib.c ****     {
3063:Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
3064:Generated_Source\PSoC4/CyLib.c ****     }
3065:Generated_Source\PSoC4/CyLib.c **** 
3066:Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
3067:Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
3068:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
3069:Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
 961              		.loc 1 3069 0
 962              		.syntax divided
 963              	@ 3069 "Generated_Source\PSoC4\CyLib.c" 1
 964 0000 01BE     		    bkpt    1
 965              	@ 0 "" 2
3070:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
3071:Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
3072:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
3073:Generated_Source\PSoC4/CyLib.c **** }
 966              		.loc 1 3073 0
 967              		.thumb
 968              		.syntax unified
 969              		@ sp needed
 970 0002 7047     		bx	lr
 971              		.cfi_endproc
 972              	.LFE26:
 973              		.size	CyHalt, .-CyHalt
 974              		.section	.text.CySoftwareReset,"ax",%progbits
 975              		.align	1
 976              		.global	CySoftwareReset
 977              		.code	16
 978              		.thumb_func
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 73


 979              		.type	CySoftwareReset, %function
 980              	CySoftwareReset:
 981              	.LFB27:
3074:Generated_Source\PSoC4/CyLib.c **** 
3075:Generated_Source\PSoC4/CyLib.c **** 
3076:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3077:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
3078:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3079:Generated_Source\PSoC4/CyLib.c **** *
3080:Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
3081:Generated_Source\PSoC4/CyLib.c **** *
3082:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3083:Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
3084:Generated_Source\PSoC4/CyLib.c **** {
 982              		.loc 1 3084 0
 983              		.cfi_startproc
 984              		@ args = 0, pretend = 0, frame = 0
 985              		@ frame_needed = 0, uses_anonymous_args = 0
 986              		@ link register save eliminated.
3085:Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
3086:Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
3087:Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
3088:Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
3089:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_AIRCR_REG = (CY_SYS_AIRCR_REG & (uint32)(~CY_SYS_AIRCR_VECTKEY_MASK)) |
 987              		.loc 1 3089 0
 988 0000 034A     		ldr	r2, .L72
3090:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 989              		.loc 1 3090 0
 990 0002 0449     		ldr	r1, .L72+4
3089:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 991              		.loc 1 3089 0
 992 0004 1368     		ldr	r3, [r2]
3091:Generated_Source\PSoC4/CyLib.c **** }
 993              		.loc 1 3091 0
 994              		@ sp needed
3090:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 995              		.loc 1 3090 0
 996 0006 9BB2     		uxth	r3, r3
 997 0008 0B43     		orrs	r3, r1
3089:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 998              		.loc 1 3089 0
 999 000a 1360     		str	r3, [r2]
 1000              		.loc 1 3091 0
 1001 000c 7047     		bx	lr
 1002              	.L73:
 1003 000e C046     		.align	2
 1004              	.L72:
 1005 0010 0CED00E0 		.word	-536810228
 1006 0014 0400FA05 		.word	100270084
 1007              		.cfi_endproc
 1008              	.LFE27:
 1009              		.size	CySoftwareReset, .-CySoftwareReset
 1010              		.section	.text.CyDelay,"ax",%progbits
 1011              		.align	1
 1012              		.global	CyDelay
 1013              		.code	16
 1014              		.thumb_func
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 74


 1015              		.type	CyDelay, %function
 1016              	CyDelay:
 1017              	.LFB28:
3092:Generated_Source\PSoC4/CyLib.c **** 
3093:Generated_Source\PSoC4/CyLib.c **** 
3094:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3095:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
3096:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3097:Generated_Source\PSoC4/CyLib.c **** *
3098:Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
3099:Generated_Source\PSoC4/CyLib.c **** *
3100:Generated_Source\PSoC4/CyLib.c **** *  \param milliseconds: number of milliseconds to delay.
3101:Generated_Source\PSoC4/CyLib.c **** *
3102:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3103:Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
3104:Generated_Source\PSoC4/CyLib.c **** {
 1018              		.loc 1 3104 0
 1019              		.cfi_startproc
 1020              		@ args = 0, pretend = 0, frame = 0
 1021              		@ frame_needed = 0, uses_anonymous_args = 0
 1022              	.LVL62:
 1023 0000 70B5     		push	{r4, r5, r6, lr}
 1024              		.cfi_def_cfa_offset 16
 1025              		.cfi_offset 4, -16
 1026              		.cfi_offset 5, -12
 1027              		.cfi_offset 6, -8
 1028              		.cfi_offset 14, -4
3105:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1029              		.loc 1 3105 0
 1030 0002 8025     		movs	r5, #128
3104:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1031              		.loc 1 3104 0
 1032 0004 0400     		movs	r4, r0
 1033              		.loc 1 3105 0
 1034 0006 2D02     		lsls	r5, r5, #8
 1035              	.LVL63:
 1036              	.L75:
 1037 0008 064B     		ldr	r3, .L78
 1038 000a AC42     		cmp	r4, r5
 1039 000c 05D9     		bls	.L77
3106:Generated_Source\PSoC4/CyLib.c ****     {
3107:Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
3108:Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
3109:Generated_Source\PSoC4/CyLib.c ****          */
3110:Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
 1040              		.loc 1 3110 0
 1041 000e 5868     		ldr	r0, [r3, #4]
 1042 0010 FFF7FEFF 		bl	CyDelayCycles
 1043              	.LVL64:
3111:Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 1044              		.loc 1 3111 0
 1045 0014 044B     		ldr	r3, .L78+4
 1046 0016 E418     		adds	r4, r4, r3
 1047              	.LVL65:
 1048 0018 F6E7     		b	.L75
 1049              	.L77:
3112:Generated_Source\PSoC4/CyLib.c ****     }
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 75


3113:Generated_Source\PSoC4/CyLib.c **** 
3114:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 1050              		.loc 1 3114 0
 1051 001a 9868     		ldr	r0, [r3, #8]
3115:Generated_Source\PSoC4/CyLib.c **** }
 1052              		.loc 1 3115 0
 1053              		@ sp needed
3114:Generated_Source\PSoC4/CyLib.c **** }
 1054              		.loc 1 3114 0
 1055 001c 6043     		muls	r0, r4
 1056 001e FFF7FEFF 		bl	CyDelayCycles
 1057              	.LVL66:
 1058              	.LVL67:
 1059              		.loc 1 3115 0
 1060 0022 70BD     		pop	{r4, r5, r6, pc}
 1061              	.L79:
 1062              		.align	2
 1063              	.L78:
 1064 0024 00000000 		.word	.LANCHOR0
 1065 0028 0080FFFF 		.word	-32768
 1066              		.cfi_endproc
 1067              	.LFE28:
 1068              		.size	CyDelay, .-CyDelay
 1069              		.section	.text.CySysClkImoEnableWcoLock,"ax",%progbits
 1070              		.align	1
 1071              		.global	CySysClkImoEnableWcoLock
 1072              		.code	16
 1073              		.thumb_func
 1074              		.type	CySysClkImoEnableWcoLock, %function
 1075              	CySysClkImoEnableWcoLock:
 1076              	.LFB3:
 175:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 1077              		.loc 1 175 0
 1078              		.cfi_startproc
 1079              		@ args = 0, pretend = 0, frame = 16
 1080              		@ frame_needed = 0, uses_anonymous_args = 0
 1081              	.LVL68:
 1082 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1083              		.cfi_def_cfa_offset 20
 1084              		.cfi_offset 4, -20
 1085              		.cfi_offset 5, -16
 1086              		.cfi_offset 6, -12
 1087              		.cfi_offset 7, -8
 1088              		.cfi_offset 14, -4
 1089 0002 85B0     		sub	sp, sp, #20
 1090              		.cfi_def_cfa_offset 40
 186:Generated_Source\PSoC4/CyLib.c ****         {
 1091              		.loc 1 186 0
 1092 0004 FFF7FEFF 		bl	CySysClkWcoEnabled
 1093              	.LVL69:
 1094 0008 0028     		cmp	r0, #0
 1095 000a 46D0     		beq	.L80
 1096              	.LBB12:
 1097              	.LBB13:
 188:Generated_Source\PSoC4/CyLib.c **** 
 1098              		.loc 1 188 0
 1099 000c FFF7FEFF 		bl	CyEnterCriticalSection
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 76


 1100              	.LVL70:
 222:Generated_Source\PSoC4/CyLib.c **** 
 1101              		.loc 1 222 0
 1102 0010 0024     		movs	r4, #0
 213:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 1103              		.loc 1 213 0
 1104 0012 234A     		ldr	r2, .L87
 211:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 1105              		.loc 1 211 0
 1106 0014 234B     		ldr	r3, .L87+4
 188:Generated_Source\PSoC4/CyLib.c **** 
 1107              		.loc 1 188 0
 1108 0016 0190     		str	r0, [sp, #4]
 1109              	.LVL71:
 211:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 1110              		.loc 1 211 0
 1111 0018 1B68     		ldr	r3, [r3]
 213:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 1112              		.loc 1 213 0
 1113 001a 1068     		ldr	r0, [r2]
 1114              	.LVL72:
 222:Generated_Source\PSoC4/CyLib.c **** 
 1115              		.loc 1 222 0
 1116 001c 224A     		ldr	r2, .L87+8
 233:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 1117              		.loc 1 233 0
 1118 001e 234D     		ldr	r5, .L87+12
 222:Generated_Source\PSoC4/CyLib.c **** 
 1119              		.loc 1 222 0
 1120 0020 1460     		str	r4, [r2]
 233:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 1121              		.loc 1 233 0
 1122 0022 2968     		ldr	r1, [r5]
 1123              	.LVL73:
 1124 0024 224A     		ldr	r2, .L87+16
 242:Generated_Source\PSoC4/CyLib.c **** 
 1125              		.loc 1 242 0
 1126 0026 9B00     		lsls	r3, r3, #2
 1127              	.LVL74:
 1128 0028 1140     		ands	r1, r2
 1129              	.LVL75:
 1130 002a A022     		movs	r2, #160
 1131 002c 5203     		lsls	r2, r2, #13
 1132 002e 1143     		orrs	r1, r2
 1133              	.LVL76:
 1134 0030 1C22     		movs	r2, #28
 1135 0032 1340     		ands	r3, r2
 1136              	.LVL77:
 1137 0034 0207     		lsls	r2, r0, #28
 1138 0036 920F     		lsrs	r2, r2, #30
 1139 0038 1833     		adds	r3, r3, #24
 1140 003a D340     		lsrs	r3, r3, r2
 1141 003c 1D4A     		ldr	r2, .L87+20
 246:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 1142              		.loc 1 246 0
 1143 003e 1E4E     		ldr	r6, .L87+24
 242:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 77


 1144              		.loc 1 242 0
 1145 0040 5343     		muls	r3, r2
 1146 0042 8022     		movs	r2, #128
 1147 0044 D201     		lsls	r2, r2, #7
 1148 0046 9B18     		adds	r3, r3, r2
 1149 0048 DB0B     		lsrs	r3, r3, #15
 1150 004a 013B     		subs	r3, r3, #1
 1151 004c 0B43     		orrs	r3, r1
 1152              	.LVL78:
 244:Generated_Source\PSoC4/CyLib.c **** 
 1153              		.loc 1 244 0
 1154 004e 2B60     		str	r3, [r5]
 246:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 1155              		.loc 1 246 0
 1156 0050 3368     		ldr	r3, [r6]
 1157              	.LVL79:
 247:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 1158              		.loc 1 247 0
 1159 0052 3020     		movs	r0, #48
 246:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 1160              		.loc 1 246 0
 1161 0054 0393     		str	r3, [sp, #12]
 1162              	.LVL80:
 247:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 1163              		.loc 1 247 0
 1164 0056 FFF7FEFF 		bl	CySysFlashSetWaitCycles
 1165              	.LVL81:
 248:Generated_Source\PSoC4/CyLib.c **** 
 1166              		.loc 1 248 0
 1167 005a 8021     		movs	r1, #128
 1168 005c 174A     		ldr	r2, .L87+28
 1169 005e C905     		lsls	r1, r1, #23
 1170 0060 1368     		ldr	r3, [r2]
 1171 0062 0B43     		orrs	r3, r1
 1172 0064 1360     		str	r3, [r2]
 250:Generated_Source\PSoC4/CyLib.c **** 
 1173              		.loc 1 250 0
 1174 0066 2A68     		ldr	r2, [r5]
 1175 0068 154B     		ldr	r3, .L87+32
 1176 006a 1A40     		ands	r2, r3
 1177 006c 1700     		movs	r7, r2
 1178              	.LVL82:
 1179              	.L82:
 254:Generated_Source\PSoC4/CyLib.c ****                 lfLimit += CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_STEP;
 1180              		.loc 1 254 0
 1181 006e 0120     		movs	r0, #1
 255:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT
 1182              		.loc 1 255 0
 1183 0070 1034     		adds	r4, r4, #16
 1184              	.LVL83:
 254:Generated_Source\PSoC4/CyLib.c ****                 lfLimit += CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_STEP;
 1185              		.loc 1 254 0
 1186 0072 FFF7FEFF 		bl	CyDelay
 1187              	.LVL84:
 256:Generated_Source\PSoC4/CyLib.c ****             }
 1188              		.loc 1 256 0
 1189 0076 A305     		lsls	r3, r4, #22
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 78


 1190 0078 3B43     		orrs	r3, r7
 1191 007a 2B60     		str	r3, [r5]
 252:Generated_Source\PSoC4/CyLib.c ****             {
 1192              		.loc 1 252 0
 1193 007c F02C     		cmp	r4, #240
 1194 007e F6D1     		bne	.L82
 259:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX <<
 1195              		.loc 1 259 0
 1196 0080 0120     		movs	r0, #1
 1197 0082 FFF7FEFF 		bl	CyDelay
 1198              	.LVL85:
 260:Generated_Source\PSoC4/CyLib.c ****                                                  CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT));
 1199              		.loc 1 260 0
 1200 0086 FF23     		movs	r3, #255
 1201 0088 084A     		ldr	r2, .L87+12
 1202 008a 9B05     		lsls	r3, r3, #22
 1203 008c 3B43     		orrs	r3, r7
 1204 008e 1360     		str	r3, [r2]
 263:Generated_Source\PSoC4/CyLib.c **** 
 1205              		.loc 1 263 0
 1206 0090 039B     		ldr	r3, [sp, #12]
 265:Generated_Source\PSoC4/CyLib.c ****         }
 1207              		.loc 1 265 0
 1208 0092 0198     		ldr	r0, [sp, #4]
 263:Generated_Source\PSoC4/CyLib.c **** 
 1209              		.loc 1 263 0
 1210 0094 3360     		str	r3, [r6]
 265:Generated_Source\PSoC4/CyLib.c ****         }
 1211              		.loc 1 265 0
 1212 0096 FFF7FEFF 		bl	CyExitCriticalSection
 1213              	.LVL86:
 1214              	.L80:
 1215              	.LBE13:
 1216              	.LBE12:
 267:Generated_Source\PSoC4/CyLib.c **** 
 1217              		.loc 1 267 0
 1218 009a 05B0     		add	sp, sp, #20
 1219              		@ sp needed
 1220 009c F0BD     		pop	{r4, r5, r6, r7, pc}
 1221              	.L88:
 1222 009e C046     		.align	2
 1223              	.L87:
 1224 00a0 28000340 		.word	1073938472
 1225 00a4 080F0340 		.word	1073942280
 1226 00a8 0C0F0340 		.word	1073942284
 1227 00ac 08000740 		.word	1074200584
 1228 00b0 00F800C0 		.word	-1073678336
 1229 00b4 40420F00 		.word	1000000
 1230 00b8 30001040 		.word	1074790448
 1231 00bc 00000740 		.word	1074200576
 1232 00c0 FFFF3FC0 		.word	-1069547521
 1233              		.cfi_endproc
 1234              	.LFE3:
 1235              		.size	CySysClkImoEnableWcoLock, .-CySysClkImoEnableWcoLock
 1236              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 1237              		.align	1
 1238              		.global	CySysClkWriteImoFreq
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 79


 1239              		.code	16
 1240              		.thumb_func
 1241              		.type	CySysClkWriteImoFreq, %function
 1242              	CySysClkWriteImoFreq:
 1243              	.LFB10:
1003:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 1244              		.loc 1 1003 0
 1245              		.cfi_startproc
 1246              		@ args = 0, pretend = 0, frame = 8
 1247              		@ frame_needed = 0, uses_anonymous_args = 0
 1248              	.LVL87:
 1249 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 1250              		.cfi_def_cfa_offset 32
 1251              		.cfi_offset 0, -32
 1252              		.cfi_offset 1, -28
 1253              		.cfi_offset 2, -24
 1254              		.cfi_offset 4, -20
 1255              		.cfi_offset 5, -16
 1256              		.cfi_offset 6, -12
 1257              		.cfi_offset 7, -8
 1258              		.cfi_offset 14, -4
1020:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 1259              		.loc 1 1020 0
 1260 0002 0500     		movs	r5, r0
 1261 0004 183D     		subs	r5, r5, #24
1003:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 1262              		.loc 1 1003 0
 1263 0006 0400     		movs	r4, r0
1020:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 1264              		.loc 1 1020 0
 1265 0008 182D     		cmp	r5, #24
 1266 000a 45D8     		bhi	.L89
 1267 000c 0126     		movs	r6, #1
 1268 000e 234B     		ldr	r3, .L99
 1269 0010 3700     		movs	r7, r6
 1270 0012 EB40     		lsrs	r3, r3, r5
 1271 0014 9F43     		bics	r7, r3
 1272 0016 3FD1     		bne	.L89
1025:Generated_Source\PSoC4/CyLib.c **** 
 1273              		.loc 1 1025 0
 1274 0018 FFF7FEFF 		bl	CyEnterCriticalSection
 1275              	.LVL88:
 1276 001c 0190     		str	r0, [sp, #4]
 1277              	.LVL89:
1028:Generated_Source\PSoC4/CyLib.c ****                 {
 1278              		.loc 1 1028 0
 1279 001e FFF7FEFF 		bl	CySysClkImoGetWcoLock
 1280              	.LVL90:
1008:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 1281              		.loc 1 1008 0
 1282 0022 0097     		str	r7, [sp]
1028:Generated_Source\PSoC4/CyLib.c ****                 {
 1283              		.loc 1 1028 0
 1284 0024 0028     		cmp	r0, #0
 1285 0026 02D0     		beq	.L91
 1286              	.LVL91:
1031:Generated_Source\PSoC4/CyLib.c ****                 }
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 80


 1287              		.loc 1 1031 0
 1288 0028 FFF7FEFF 		bl	CySysClkImoDisableWcoLock
 1289              	.LVL92:
1030:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
 1290              		.loc 1 1030 0
 1291 002c 0096     		str	r6, [sp]
 1292              	.LVL93:
 1293              	.L91:
1056:Generated_Source\PSoC4/CyLib.c **** 
 1294              		.loc 1 1056 0
 1295 002e 0727     		movs	r7, #7
 1296 0030 1B4E     		ldr	r6, .L99+4
1076:Generated_Source\PSoC4/CyLib.c **** 
 1297              		.loc 1 1076 0
 1298 0032 1C4A     		ldr	r2, .L99+8
1056:Generated_Source\PSoC4/CyLib.c **** 
 1299              		.loc 1 1056 0
 1300 0034 3368     		ldr	r3, [r6]
1082:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 1301              		.loc 1 1082 0
 1302 0036 1C49     		ldr	r1, .L99+12
1056:Generated_Source\PSoC4/CyLib.c **** 
 1303              		.loc 1 1056 0
 1304 0038 BB43     		bics	r3, r7
 1305 003a 3360     		str	r3, [r6]
1074:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 1306              		.loc 1 1074 0
 1307 003c 1B4B     		ldr	r3, .L99+16
 1308 003e E318     		adds	r3, r4, r3
 1309 0040 1B78     		ldrb	r3, [r3]
 1310 0042 DBB2     		uxtb	r3, r3
 1311              	.LVL94:
1076:Generated_Source\PSoC4/CyLib.c **** 
 1312              		.loc 1 1076 0
 1313 0044 1360     		str	r3, [r2]
1079:Generated_Source\PSoC4/CyLib.c **** 
 1314              		.loc 1 1079 0
 1315 0046 1A4A     		ldr	r2, .L99+20
 1316 0048 1368     		ldr	r3, [r2]
 1317              	.LVL95:
 1318 004a BB43     		bics	r3, r7
 1319 004c 1360     		str	r3, [r2]
 1320              	.LVL96:
1083:Generated_Source\PSoC4/CyLib.c **** 
 1321              		.loc 1 1083 0
 1322 004e 194B     		ldr	r3, .L99+24
1082:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 1323              		.loc 1 1082 0
 1324 0050 0A68     		ldr	r2, [r1]
1083:Generated_Source\PSoC4/CyLib.c **** 
 1325              		.loc 1 1083 0
 1326 0052 E318     		adds	r3, r4, r3
 1327 0054 1878     		ldrb	r0, [r3]
1082:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 1328              		.loc 1 1082 0
 1329 0056 7F23     		movs	r3, #127
 1330 0058 9A43     		bics	r2, r3
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 81


 1331 005a 0340     		ands	r3, r0
 1332 005c 1343     		orrs	r3, r2
 1333 005e 0B60     		str	r3, [r1]
1085:Generated_Source\PSoC4/CyLib.c **** 
 1334              		.loc 1 1085 0
 1335 0060 3220     		movs	r0, #50
 1336 0062 FFF7FEFF 		bl	CyDelayCycles
 1337              	.LVL97:
1087:Generated_Source\PSoC4/CyLib.c ****             {
 1338              		.loc 1 1087 0
 1339 0066 182C     		cmp	r4, #24
 1340 0068 0ED0     		beq	.L92
1090:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 1341              		.loc 1 1090 0
 1342 006a 3368     		ldr	r3, [r6]
 1343 006c 1C3C     		subs	r4, r4, #28
 1344              	.LVL98:
 1345 006e A408     		lsrs	r4, r4, #2
 1346              	.LVL99:
 1347 0070 BB43     		bics	r3, r7
 1348 0072 3C40     		ands	r4, r7
 1349 0074 1C43     		orrs	r4, r3
 1350 0076 3460     		str	r4, [r6]
1093:Generated_Source\PSoC4/CyLib.c **** 
 1351              		.loc 1 1093 0
 1352 0078 3220     		movs	r0, #50
 1353 007a FFF7FEFF 		bl	CyDelayCycles
 1354              	.LVL100:
1097:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 1355              		.loc 1 1097 0
 1356 007e 3368     		ldr	r3, [r6]
1098:Generated_Source\PSoC4/CyLib.c ****             }
 1357              		.loc 1 1098 0
 1358 0080 AD08     		lsrs	r5, r5, #2
 1359              	.LVL101:
1097:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 1360              		.loc 1 1097 0
 1361 0082 BB43     		bics	r3, r7
 1362 0084 1D43     		orrs	r5, r3
 1363 0086 3560     		str	r5, [r6]
 1364              	.L92:
1102:Generated_Source\PSoC4/CyLib.c ****                 {
 1365              		.loc 1 1102 0
 1366 0088 009B     		ldr	r3, [sp]
 1367 008a 012B     		cmp	r3, #1
 1368 008c 01D1     		bne	.L93
1104:Generated_Source\PSoC4/CyLib.c ****                 }
 1369              		.loc 1 1104 0
 1370 008e FFF7FEFF 		bl	CySysClkImoEnableWcoLock
 1371              	.LVL102:
 1372              	.L93:
1116:Generated_Source\PSoC4/CyLib.c ****         }
 1373              		.loc 1 1116 0
 1374 0092 0198     		ldr	r0, [sp, #4]
 1375 0094 FFF7FEFF 		bl	CyExitCriticalSection
 1376              	.LVL103:
 1377              	.L89:
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 82


1123:Generated_Source\PSoC4/CyLib.c **** 
 1378              		.loc 1 1123 0
 1379              		@ sp needed
 1380 0098 F7BD     		pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 1381              	.L100:
 1382 009a C046     		.align	2
 1383              	.L99:
 1384 009c 11111101 		.word	17895697
 1385 00a0 080F0340 		.word	1073942280
 1386 00a4 0C0F0340 		.word	1073942284
 1387 00a8 180F0340 		.word	1073942296
 1388 00ac CDF1FF0F 		.word	268431821
 1389 00b0 100F0340 		.word	1073942288
 1390 00b4 B4F1FF0F 		.word	268431796
 1391              		.cfi_endproc
 1392              	.LFE10:
 1393              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 1394              		.section	.text.CyDelayUs,"ax",%progbits
 1395              		.align	1
 1396              		.global	CyDelayUs
 1397              		.code	16
 1398              		.thumb_func
 1399              		.type	CyDelayUs, %function
 1400              	CyDelayUs:
 1401              	.LFB29:
3116:Generated_Source\PSoC4/CyLib.c **** 
3117:Generated_Source\PSoC4/CyLib.c **** 
3118:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3119:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
3120:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3121:Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
3122:Generated_Source\PSoC4/CyLib.c **** *
3123:Generated_Source\PSoC4/CyLib.c **** *  \param microseconds: number of microseconds to delay.
3124:Generated_Source\PSoC4/CyLib.c **** *
3125:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3126:Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
3127:Generated_Source\PSoC4/CyLib.c **** {
 1402              		.loc 1 3127 0
 1403              		.cfi_startproc
 1404              		@ args = 0, pretend = 0, frame = 0
 1405              		@ frame_needed = 0, uses_anonymous_args = 0
 1406              	.LVL104:
 1407 0000 10B5     		push	{r4, lr}
 1408              		.cfi_def_cfa_offset 8
 1409              		.cfi_offset 4, -8
 1410              		.cfi_offset 14, -4
3128:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1411              		.loc 1 3128 0
 1412 0002 034B     		ldr	r3, .L102
3129:Generated_Source\PSoC4/CyLib.c **** }
 1413              		.loc 1 3129 0
 1414              		@ sp needed
3128:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1415              		.loc 1 3128 0
 1416 0004 1B7B     		ldrb	r3, [r3, #12]
 1417 0006 5843     		muls	r0, r3
 1418              	.LVL105:
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 83


 1419 0008 FFF7FEFF 		bl	CyDelayCycles
 1420              	.LVL106:
 1421              		.loc 1 3129 0
 1422 000c 10BD     		pop	{r4, pc}
 1423              	.L103:
 1424 000e C046     		.align	2
 1425              	.L102:
 1426 0010 00000000 		.word	.LANCHOR0
 1427              		.cfi_endproc
 1428              	.LFE29:
 1429              		.size	CyDelayUs, .-CyDelayUs
 1430              		.global	__aeabi_uidiv
 1431              		.section	.text.CyDelayFreq,"ax",%progbits
 1432              		.align	1
 1433              		.global	CyDelayFreq
 1434              		.code	16
 1435              		.thumb_func
 1436              		.type	CyDelayFreq, %function
 1437              	CyDelayFreq:
 1438              	.LFB30:
3130:Generated_Source\PSoC4/CyLib.c **** 
3131:Generated_Source\PSoC4/CyLib.c **** 
3132:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3133:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
3134:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3135:Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
3136:Generated_Source\PSoC4/CyLib.c **** *
3137:Generated_Source\PSoC4/CyLib.c **** *  \param freq: Frequency of bus clock in Hertz.
3138:Generated_Source\PSoC4/CyLib.c **** *
3139:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3140:Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
3141:Generated_Source\PSoC4/CyLib.c **** {
 1439              		.loc 1 3141 0
 1440              		.cfi_startproc
 1441              		@ args = 0, pretend = 0, frame = 0
 1442              		@ frame_needed = 0, uses_anonymous_args = 0
 1443              	.LVL107:
 1444 0000 70B5     		push	{r4, r5, r6, lr}
 1445              		.cfi_def_cfa_offset 16
 1446              		.cfi_offset 4, -16
 1447              		.cfi_offset 5, -12
 1448              		.cfi_offset 6, -8
 1449              		.cfi_offset 14, -4
 1450 0002 0C4C     		ldr	r4, .L107
3142:Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 1451              		.loc 1 3142 0
 1452 0004 0028     		cmp	r0, #0
 1453 0006 01D0     		beq	.L105
3143:Generated_Source\PSoC4/CyLib.c ****     {
3144:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
 1454              		.loc 1 3144 0
 1455 0008 2061     		str	r0, [r4, #16]
 1456 000a 01E0     		b	.L106
 1457              	.L105:
3145:Generated_Source\PSoC4/CyLib.c ****     }
3146:Generated_Source\PSoC4/CyLib.c ****     else
3147:Generated_Source\PSoC4/CyLib.c ****     {
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 84


3148:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 1458              		.loc 1 3148 0
 1459 000c 0A4B     		ldr	r3, .L107+4
 1460 000e 2361     		str	r3, [r4, #16]
 1461              	.L106:
3149:Generated_Source\PSoC4/CyLib.c ****     }
3150:Generated_Source\PSoC4/CyLib.c **** 
3151:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 1462              		.loc 1 3151 0
 1463 0010 2569     		ldr	r5, [r4, #16]
 1464 0012 0A4B     		ldr	r3, .L107+8
 1465 0014 0A49     		ldr	r1, .L107+12
 1466 0016 E818     		adds	r0, r5, r3
 1467              	.LVL108:
 1468 0018 FFF7FEFF 		bl	__aeabi_uidiv
 1469              	.LVL109:
3152:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1470              		.loc 1 3152 0
 1471 001c FA21     		movs	r1, #250
 1472 001e 094B     		ldr	r3, .L107+16
3151:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1473              		.loc 1 3151 0
 1474 0020 2073     		strb	r0, [r4, #12]
 1475              		.loc 1 3152 0
 1476 0022 8900     		lsls	r1, r1, #2
 1477 0024 E818     		adds	r0, r5, r3
 1478 0026 FFF7FEFF 		bl	__aeabi_uidiv
 1479              	.LVL110:
 1480 002a A060     		str	r0, [r4, #8]
3153:Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 1481              		.loc 1 3153 0
 1482 002c C003     		lsls	r0, r0, #15
 1483 002e 6060     		str	r0, [r4, #4]
3154:Generated_Source\PSoC4/CyLib.c **** }
 1484              		.loc 1 3154 0
 1485              		@ sp needed
 1486 0030 70BD     		pop	{r4, r5, r6, pc}
 1487              	.L108:
 1488 0032 C046     		.align	2
 1489              	.L107:
 1490 0034 00000000 		.word	.LANCHOR0
 1491 0038 00366E01 		.word	24000000
 1492 003c 3F420F00 		.word	999999
 1493 0040 40420F00 		.word	1000000
 1494 0044 E7030000 		.word	999
 1495              		.cfi_endproc
 1496              	.LFE30:
 1497              		.size	CyDelayFreq, .-CyDelayFreq
 1498              		.section	.text.CySysTickInit,"ax",%progbits
 1499              		.align	1
 1500              		.global	CySysTickInit
 1501              		.code	16
 1502              		.thumb_func
 1503              		.type	CySysTickInit, %function
 1504              	CySysTickInit:
 1505              	.LFB32:
3155:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 85


3156:Generated_Source\PSoC4/CyLib.c **** 
3157:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3158:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTick_Start
3159:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3160:Generated_Source\PSoC4/CyLib.c **** *
3161:Generated_Source\PSoC4/CyLib.c **** *  Starts the system timer (SysTick): configures SysTick to generate interrupt
3162:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms and enables the interrupt.
3163:Generated_Source\PSoC4/CyLib.c **** *
3164:Generated_Source\PSoC4/CyLib.c **** *  There are components (LIN, CapSense Gesture) that relies on the default
3165:Generated_Source\PSoC4/CyLib.c **** *  interval (1 ms). And that changing the interval will negatively impact
3166:Generated_Source\PSoC4/CyLib.c **** *  their functionality.
3167:Generated_Source\PSoC4/CyLib.c **** *
3168:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3169:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
3170:Generated_Source\PSoC4/CyLib.c **** *
3171:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3172:Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
3173:Generated_Source\PSoC4/CyLib.c **** {
3174:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
3175:Generated_Source\PSoC4/CyLib.c ****     {
3176:Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
3177:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
3178:Generated_Source\PSoC4/CyLib.c ****     }
3179:Generated_Source\PSoC4/CyLib.c **** 
3180:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
3181:Generated_Source\PSoC4/CyLib.c **** }
3182:Generated_Source\PSoC4/CyLib.c **** 
3183:Generated_Source\PSoC4/CyLib.c **** 
3184:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3185:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
3186:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3187:Generated_Source\PSoC4/CyLib.c **** *
3188:Generated_Source\PSoC4/CyLib.c **** *  Initializes the callback addresses with pointers to NULL, associates the
3189:Generated_Source\PSoC4/CyLib.c **** *  SysTick system vector with the function that is responsible for calling
3190:Generated_Source\PSoC4/CyLib.c **** *  registered callback functions, configures SysTick timer to generate interrupt
3191:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms.
3192:Generated_Source\PSoC4/CyLib.c **** *
3193:Generated_Source\PSoC4/CyLib.c **** *  The 1 ms interrupt interval is configured based on the frequency determined
3194:Generated_Source\PSoC4/CyLib.c **** *  by PSoC Creator at build time. If System clock frequency is changed in
3195:Generated_Source\PSoC4/CyLib.c **** *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
3196:Generated_Source\PSoC4/CyLib.c **** *
3197:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3198:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
3199:Generated_Source\PSoC4/CyLib.c **** *
3200:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3201:Generated_Source\PSoC4/CyLib.c **** void CySysTickInit(void)
3202:Generated_Source\PSoC4/CyLib.c **** {
 1506              		.loc 1 3202 0
 1507              		.cfi_startproc
 1508              		@ args = 0, pretend = 0, frame = 0
 1509              		@ frame_needed = 0, uses_anonymous_args = 0
 1510              	.LVL111:
 1511 0000 10B5     		push	{r4, lr}
 1512              		.cfi_def_cfa_offset 8
 1513              		.cfi_offset 4, -8
 1514              		.cfi_offset 14, -4
3203:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 86


3204:Generated_Source\PSoC4/CyLib.c **** 
3205:Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
3206:Generated_Source\PSoC4/CyLib.c ****     {
3207:Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
 1515              		.loc 1 3207 0
 1516 0002 0024     		movs	r4, #0
 1517              	.LBB24:
 1518              	.LBB25:
 1519              	.LBB26:
3208:Generated_Source\PSoC4/CyLib.c ****     }
3209:Generated_Source\PSoC4/CyLib.c **** 
3210:Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
3211:Generated_Source\PSoC4/CyLib.c **** 
3212:Generated_Source\PSoC4/CyLib.c ****     #if(CY_SYSTICK_LFCLK_SOURCE)
3213:Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
3214:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
3215:Generated_Source\PSoC4/CyLib.c **** 
3216:Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
3217:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
3218:Generated_Source\PSoC4/CyLib.c **** }
3219:Generated_Source\PSoC4/CyLib.c **** 
3220:Generated_Source\PSoC4/CyLib.c **** 
3221:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3222:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
3223:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3224:Generated_Source\PSoC4/CyLib.c **** *
3225:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
3226:Generated_Source\PSoC4/CyLib.c **** *
3227:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3228:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
3229:Generated_Source\PSoC4/CyLib.c **** *
3230:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3231:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
3232:Generated_Source\PSoC4/CyLib.c **** {
3233:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
3234:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
3235:Generated_Source\PSoC4/CyLib.c **** }
3236:Generated_Source\PSoC4/CyLib.c **** 
3237:Generated_Source\PSoC4/CyLib.c **** 
3238:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3239:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
3240:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3241:Generated_Source\PSoC4/CyLib.c **** *
3242:Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
3243:Generated_Source\PSoC4/CyLib.c **** *
3244:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3245:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
3246:Generated_Source\PSoC4/CyLib.c **** *
3247:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3248:Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
3249:Generated_Source\PSoC4/CyLib.c **** {
3250:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
3251:Generated_Source\PSoC4/CyLib.c **** }
3252:Generated_Source\PSoC4/CyLib.c **** 
3253:Generated_Source\PSoC4/CyLib.c **** 
3254:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3255:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 87


3256:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3257:Generated_Source\PSoC4/CyLib.c **** *
3258:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
3259:Generated_Source\PSoC4/CyLib.c **** *
3260:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3261:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
3262:Generated_Source\PSoC4/CyLib.c **** *
3263:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3264:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
3265:Generated_Source\PSoC4/CyLib.c **** {
3266:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
3267:Generated_Source\PSoC4/CyLib.c **** }
3268:Generated_Source\PSoC4/CyLib.c **** 
3269:Generated_Source\PSoC4/CyLib.c **** 
3270:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3271:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
3272:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3273:Generated_Source\PSoC4/CyLib.c **** *
3274:Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
3275:Generated_Source\PSoC4/CyLib.c **** *
3276:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3277:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
3278:Generated_Source\PSoC4/CyLib.c **** *
3279:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3280:Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
3281:Generated_Source\PSoC4/CyLib.c **** {
3282:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
3283:Generated_Source\PSoC4/CyLib.c **** }
3284:Generated_Source\PSoC4/CyLib.c **** 
3285:Generated_Source\PSoC4/CyLib.c **** 
3286:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3287:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
3288:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3289:Generated_Source\PSoC4/CyLib.c **** *
3290:Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
3291:Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
3292:Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
3293:Generated_Source\PSoC4/CyLib.c **** *
3294:Generated_Source\PSoC4/CyLib.c **** *  \param value: Valid range [0x0-0x00FFFFFF]. Counter reset value
3295:Generated_Source\PSoC4/CyLib.c **** *
3296:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3297:Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
3298:Generated_Source\PSoC4/CyLib.c **** {
3299:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
3300:Generated_Source\PSoC4/CyLib.c **** }
3301:Generated_Source\PSoC4/CyLib.c **** 
3302:Generated_Source\PSoC4/CyLib.c **** 
3303:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3304:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
3305:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3306:Generated_Source\PSoC4/CyLib.c **** *
3307:Generated_Source\PSoC4/CyLib.c **** *  Gets value the counter is set to on startup and after it reaches zero.
3308:Generated_Source\PSoC4/CyLib.c **** *
3309:Generated_Source\PSoC4/CyLib.c **** * \return
3310:Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
3311:Generated_Source\PSoC4/CyLib.c **** *
3312:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 88


3313:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
3314:Generated_Source\PSoC4/CyLib.c **** {
3315:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
3316:Generated_Source\PSoC4/CyLib.c **** }
3317:Generated_Source\PSoC4/CyLib.c **** 
3318:Generated_Source\PSoC4/CyLib.c **** 
3319:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3320:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
3321:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3322:Generated_Source\PSoC4/CyLib.c **** *
3323:Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
3324:Generated_Source\PSoC4/CyLib.c **** *
3325:Generated_Source\PSoC4/CyLib.c **** * \return
3326:Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
3327:Generated_Source\PSoC4/CyLib.c **** *
3328:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3329:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
3330:Generated_Source\PSoC4/CyLib.c **** {
3331:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
3332:Generated_Source\PSoC4/CyLib.c **** }
3333:Generated_Source\PSoC4/CyLib.c **** 
3334:Generated_Source\PSoC4/CyLib.c **** 
3335:Generated_Source\PSoC4/CyLib.c **** #if(CY_SYSTICK_LFCLK_SOURCE)
3336:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3337:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
3338:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3339:Generated_Source\PSoC4/CyLib.c ****     *
3340:Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
3341:Generated_Source\PSoC4/CyLib.c ****     *
3342:Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
3343:Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
3344:Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
3345:Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly longer and vice versa.
3346:Generated_Source\PSoC4/CyLib.c ****     *
3347:Generated_Source\PSoC4/CyLib.c ****     *  The changing of SysTick clock source and\or its frequency will change
3348:Generated_Source\PSoC4/CyLib.c ****     *  the interrupt interval and that CySysTickSetReload() should be
3349:Generated_Source\PSoC4/CyLib.c ****     *  called to compensate this change.
3350:Generated_Source\PSoC4/CyLib.c ****     *
3351:Generated_Source\PSoC4/CyLib.c ****     *  The function is not available on PSoC 4000, PSoC 4100, and PSoC 42000
3352:Generated_Source\PSoC4/CyLib.c ****     *  devices. The SysTick timer clocked by the System clock on these devices.
3353:Generated_Source\PSoC4/CyLib.c ****     *
3354:Generated_Source\PSoC4/CyLib.c ****     *  \param clockSource Clock source for SysTick counter
3355:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
3356:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by the CPU clock.
3357:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
3358:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
3359:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
3360:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3361:Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
3362:Generated_Source\PSoC4/CyLib.c ****     {
3363:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
3364:Generated_Source\PSoC4/CyLib.c ****         {
3365:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
 1520              		.loc 1 3365 0
 1521 0004 0421     		movs	r1, #4
 1522              	.LBE26:
 1523              	.LBE25:
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 89


 1524              	.LBE24:
3207:Generated_Source\PSoC4/CyLib.c ****     }
 1525              		.loc 1 3207 0
 1526 0006 0C4B     		ldr	r3, .L110
 1527              	.LBB31:
 1528              	.LBB32:
2834:Generated_Source\PSoC4/CyLib.c **** 
 1529              		.loc 1 2834 0
 1530 0008 0C4A     		ldr	r2, .L110+4
 1531              	.LBE32:
 1532              	.LBE31:
3207:Generated_Source\PSoC4/CyLib.c ****     }
 1533              		.loc 1 3207 0
 1534 000a 1C60     		str	r4, [r3]
 1535              	.LVL112:
 1536 000c 1C61     		str	r4, [r3, #16]
 1537 000e 5C60     		str	r4, [r3, #4]
 1538              	.LVL113:
 1539 0010 9C60     		str	r4, [r3, #8]
 1540              	.LVL114:
 1541 0012 DC60     		str	r4, [r3, #12]
 1542              	.LVL115:
 1543              	.LBB35:
 1544              	.LBB33:
2834:Generated_Source\PSoC4/CyLib.c **** 
 1545              		.loc 1 2834 0
 1546 0014 0A4B     		ldr	r3, .L110+8
 1547              	.LVL116:
 1548              	.LBE33:
 1549              	.LBE35:
3218:Generated_Source\PSoC4/CyLib.c **** 
 1550              		.loc 1 3218 0
 1551              		@ sp needed
 1552              	.LBB36:
 1553              	.LBB34:
2834:Generated_Source\PSoC4/CyLib.c **** 
 1554              		.loc 1 2834 0
 1555 0016 1A60     		str	r2, [r3]
 1556              	.LVL117:
 1557              	.LBE34:
 1558              	.LBE36:
 1559              	.LBB37:
 1560              	.LBB29:
 1561              	.LBB27:
 1562              		.loc 1 3365 0
 1563 0018 0A4A     		ldr	r2, .L110+12
 1564 001a 1368     		ldr	r3, [r2]
 1565 001c 0B43     		orrs	r3, r1
 1566              	.LBE27:
 1567              	.LBE29:
 1568              	.LBE37:
3216:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1569              		.loc 1 3216 0
 1570 001e FA21     		movs	r1, #250
 1571              	.LBB38:
 1572              	.LBB30:
 1573              	.LBB28:
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 90


 1574              		.loc 1 3365 0
 1575 0020 1360     		str	r3, [r2]
 1576              	.LVL118:
 1577              	.LBE28:
 1578              	.LBE30:
 1579              	.LBE38:
3216:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1580              		.loc 1 3216 0
 1581 0022 094B     		ldr	r3, .L110+16
 1582 0024 8900     		lsls	r1, r1, #2
 1583 0026 1869     		ldr	r0, [r3, #16]
 1584 0028 FFF7FEFF 		bl	__aeabi_uidiv
 1585              	.LVL119:
 1586              	.LBB39:
 1587              	.LBB40:
3299:Generated_Source\PSoC4/CyLib.c **** }
 1588              		.loc 1 3299 0
 1589 002c 074B     		ldr	r3, .L110+20
 1590 002e 1860     		str	r0, [r3]
 1591              	.LVL120:
 1592              	.LBE40:
 1593              	.LBE39:
 1594              	.LBB41:
 1595              	.LBB42:
3366:Generated_Source\PSoC4/CyLib.c ****         }
3367:Generated_Source\PSoC4/CyLib.c ****         else
3368:Generated_Source\PSoC4/CyLib.c ****         {
3369:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
3370:Generated_Source\PSoC4/CyLib.c ****         }
3371:Generated_Source\PSoC4/CyLib.c ****     }
3372:Generated_Source\PSoC4/CyLib.c **** 
3373:Generated_Source\PSoC4/CyLib.c **** 
3374:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3375:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickGetClockSource
3376:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3377:Generated_Source\PSoC4/CyLib.c ****     *
3378:Generated_Source\PSoC4/CyLib.c ****     *  Returns the current clock source of the SysTick counter.
3379:Generated_Source\PSoC4/CyLib.c ****     *
3380:Generated_Source\PSoC4/CyLib.c ****     *  \return
3381:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
3382:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
3383:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
3384:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
3385:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3386:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysTickGetClockSource(void)
3387:Generated_Source\PSoC4/CyLib.c ****     {
3388:Generated_Source\PSoC4/CyLib.c ****         return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_CLK_SOURCE_SHIFT) & CY_SYS_SYST_CSR_CLK_SRC
3389:Generated_Source\PSoC4/CyLib.c ****     }
3390:Generated_Source\PSoC4/CyLib.c **** 
3391:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
3392:Generated_Source\PSoC4/CyLib.c **** 
3393:Generated_Source\PSoC4/CyLib.c **** 
3394:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3395:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
3396:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3397:Generated_Source\PSoC4/CyLib.c **** *
3398:Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 91


3399:Generated_Source\PSoC4/CyLib.c **** *  The flag cleared on read.
3400:Generated_Source\PSoC4/CyLib.c **** *
3401:Generated_Source\PSoC4/CyLib.c **** * \return
3402:Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
3403:Generated_Source\PSoC4/CyLib.c **** *
3404:Generated_Source\PSoC4/CyLib.c **** *
3405:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3406:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
3407:Generated_Source\PSoC4/CyLib.c **** *
3408:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3409:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
3410:Generated_Source\PSoC4/CyLib.c **** {
3411:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
3412:Generated_Source\PSoC4/CyLib.c **** }
3413:Generated_Source\PSoC4/CyLib.c **** 
3414:Generated_Source\PSoC4/CyLib.c **** 
3415:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3416:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
3417:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3418:Generated_Source\PSoC4/CyLib.c **** *
3419:Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
3420:Generated_Source\PSoC4/CyLib.c **** *
3421:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3422:Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
3423:Generated_Source\PSoC4/CyLib.c **** {
3424:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 1596              		.loc 1 3424 0
 1597 0030 074B     		ldr	r3, .L110+24
 1598 0032 1C60     		str	r4, [r3]
 1599              	.LBE42:
 1600              	.LBE41:
3218:Generated_Source\PSoC4/CyLib.c **** 
 1601              		.loc 1 3218 0
 1602 0034 10BD     		pop	{r4, pc}
 1603              	.L111:
 1604 0036 C046     		.align	2
 1605              	.L110:
 1606 0038 00000000 		.word	.LANCHOR1
 1607 003c 00000000 		.word	CySysTickServiceCallbacks
 1608 0040 3C000020 		.word	536870972
 1609 0044 10E000E0 		.word	-536813552
 1610 0048 00000000 		.word	.LANCHOR0
 1611 004c 14E000E0 		.word	-536813548
 1612 0050 18E000E0 		.word	-536813544
 1613              		.cfi_endproc
 1614              	.LFE32:
 1615              		.size	CySysTickInit, .-CySysTickInit
 1616              		.section	.text.CySysTickStop,"ax",%progbits
 1617              		.align	1
 1618              		.global	CySysTickStop
 1619              		.code	16
 1620              		.thumb_func
 1621              		.type	CySysTickStop, %function
 1622              	CySysTickStop:
 1623              	.LFB34:
3249:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 1624              		.loc 1 3249 0
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 92


 1625              		.cfi_startproc
 1626              		@ args = 0, pretend = 0, frame = 0
 1627              		@ frame_needed = 0, uses_anonymous_args = 0
 1628              		@ link register save eliminated.
3250:Generated_Source\PSoC4/CyLib.c **** }
 1629              		.loc 1 3250 0
 1630 0000 0121     		movs	r1, #1
 1631 0002 024A     		ldr	r2, .L113
3251:Generated_Source\PSoC4/CyLib.c **** 
 1632              		.loc 1 3251 0
 1633              		@ sp needed
3250:Generated_Source\PSoC4/CyLib.c **** }
 1634              		.loc 1 3250 0
 1635 0004 1368     		ldr	r3, [r2]
 1636 0006 8B43     		bics	r3, r1
 1637 0008 1360     		str	r3, [r2]
3251:Generated_Source\PSoC4/CyLib.c **** 
 1638              		.loc 1 3251 0
 1639 000a 7047     		bx	lr
 1640              	.L114:
 1641              		.align	2
 1642              	.L113:
 1643 000c 10E000E0 		.word	-536813552
 1644              		.cfi_endproc
 1645              	.LFE34:
 1646              		.size	CySysTickStop, .-CySysTickStop
 1647              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 1648              		.align	1
 1649              		.global	CySysTickEnableInterrupt
 1650              		.code	16
 1651              		.thumb_func
 1652              		.type	CySysTickEnableInterrupt, %function
 1653              	CySysTickEnableInterrupt:
 1654              	.LFB35:
3265:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 1655              		.loc 1 3265 0
 1656              		.cfi_startproc
 1657              		@ args = 0, pretend = 0, frame = 0
 1658              		@ frame_needed = 0, uses_anonymous_args = 0
 1659              		@ link register save eliminated.
3266:Generated_Source\PSoC4/CyLib.c **** }
 1660              		.loc 1 3266 0
 1661 0000 0221     		movs	r1, #2
 1662 0002 024A     		ldr	r2, .L116
3267:Generated_Source\PSoC4/CyLib.c **** 
 1663              		.loc 1 3267 0
 1664              		@ sp needed
3266:Generated_Source\PSoC4/CyLib.c **** }
 1665              		.loc 1 3266 0
 1666 0004 1368     		ldr	r3, [r2]
 1667 0006 0B43     		orrs	r3, r1
 1668 0008 1360     		str	r3, [r2]
3267:Generated_Source\PSoC4/CyLib.c **** 
 1669              		.loc 1 3267 0
 1670 000a 7047     		bx	lr
 1671              	.L117:
 1672              		.align	2
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 93


 1673              	.L116:
 1674 000c 10E000E0 		.word	-536813552
 1675              		.cfi_endproc
 1676              	.LFE35:
 1677              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 1678              		.section	.text.CySysTickEnable,"ax",%progbits
 1679              		.align	1
 1680              		.global	CySysTickEnable
 1681              		.code	16
 1682              		.thumb_func
 1683              		.type	CySysTickEnable, %function
 1684              	CySysTickEnable:
 1685              	.LFB33:
3232:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 1686              		.loc 1 3232 0
 1687              		.cfi_startproc
 1688              		@ args = 0, pretend = 0, frame = 0
 1689              		@ frame_needed = 0, uses_anonymous_args = 0
 1690 0000 10B5     		push	{r4, lr}
 1691              		.cfi_def_cfa_offset 8
 1692              		.cfi_offset 4, -8
 1693              		.cfi_offset 14, -4
3233:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 1694              		.loc 1 3233 0
 1695 0002 FFF7FEFF 		bl	CySysTickEnableInterrupt
 1696              	.LVL121:
3234:Generated_Source\PSoC4/CyLib.c **** }
 1697              		.loc 1 3234 0
 1698 0006 0121     		movs	r1, #1
 1699 0008 024A     		ldr	r2, .L119
3235:Generated_Source\PSoC4/CyLib.c **** 
 1700              		.loc 1 3235 0
 1701              		@ sp needed
3234:Generated_Source\PSoC4/CyLib.c **** }
 1702              		.loc 1 3234 0
 1703 000a 1368     		ldr	r3, [r2]
 1704 000c 0B43     		orrs	r3, r1
 1705 000e 1360     		str	r3, [r2]
3235:Generated_Source\PSoC4/CyLib.c **** 
 1706              		.loc 1 3235 0
 1707 0010 10BD     		pop	{r4, pc}
 1708              	.L120:
 1709 0012 C046     		.align	2
 1710              	.L119:
 1711 0014 10E000E0 		.word	-536813552
 1712              		.cfi_endproc
 1713              	.LFE33:
 1714              		.size	CySysTickEnable, .-CySysTickEnable
 1715              		.section	.text.CySysTickStart,"ax",%progbits
 1716              		.align	1
 1717              		.global	CySysTickStart
 1718              		.code	16
 1719              		.thumb_func
 1720              		.type	CySysTickStart, %function
 1721              	CySysTickStart:
 1722              	.LFB31:
3173:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 94


 1723              		.loc 1 3173 0
 1724              		.cfi_startproc
 1725              		@ args = 0, pretend = 0, frame = 0
 1726              		@ frame_needed = 0, uses_anonymous_args = 0
 1727 0000 10B5     		push	{r4, lr}
 1728              		.cfi_def_cfa_offset 8
 1729              		.cfi_offset 4, -8
 1730              		.cfi_offset 14, -4
3174:Generated_Source\PSoC4/CyLib.c ****     {
 1731              		.loc 1 3174 0
 1732 0002 054C     		ldr	r4, .L123
 1733 0004 6369     		ldr	r3, [r4, #20]
 1734 0006 002B     		cmp	r3, #0
 1735 0008 03D1     		bne	.L122
3176:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
 1736              		.loc 1 3176 0
 1737 000a FFF7FEFF 		bl	CySysTickInit
 1738              	.LVL122:
3177:Generated_Source\PSoC4/CyLib.c ****     }
 1739              		.loc 1 3177 0
 1740 000e 0123     		movs	r3, #1
 1741 0010 6361     		str	r3, [r4, #20]
 1742              	.L122:
3180:Generated_Source\PSoC4/CyLib.c **** }
 1743              		.loc 1 3180 0
 1744 0012 FFF7FEFF 		bl	CySysTickEnable
 1745              	.LVL123:
3181:Generated_Source\PSoC4/CyLib.c **** 
 1746              		.loc 1 3181 0
 1747              		@ sp needed
 1748 0016 10BD     		pop	{r4, pc}
 1749              	.L124:
 1750              		.align	2
 1751              	.L123:
 1752 0018 00000000 		.word	.LANCHOR1
 1753              		.cfi_endproc
 1754              	.LFE31:
 1755              		.size	CySysTickStart, .-CySysTickStart
 1756              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 1757              		.align	1
 1758              		.global	CySysTickDisableInterrupt
 1759              		.code	16
 1760              		.thumb_func
 1761              		.type	CySysTickDisableInterrupt, %function
 1762              	CySysTickDisableInterrupt:
 1763              	.LFB36:
3281:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 1764              		.loc 1 3281 0
 1765              		.cfi_startproc
 1766              		@ args = 0, pretend = 0, frame = 0
 1767              		@ frame_needed = 0, uses_anonymous_args = 0
 1768              		@ link register save eliminated.
3282:Generated_Source\PSoC4/CyLib.c **** }
 1769              		.loc 1 3282 0
 1770 0000 0221     		movs	r1, #2
 1771 0002 024A     		ldr	r2, .L126
3283:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 95


 1772              		.loc 1 3283 0
 1773              		@ sp needed
3282:Generated_Source\PSoC4/CyLib.c **** }
 1774              		.loc 1 3282 0
 1775 0004 1368     		ldr	r3, [r2]
 1776 0006 8B43     		bics	r3, r1
 1777 0008 1360     		str	r3, [r2]
3283:Generated_Source\PSoC4/CyLib.c **** 
 1778              		.loc 1 3283 0
 1779 000a 7047     		bx	lr
 1780              	.L127:
 1781              		.align	2
 1782              	.L126:
 1783 000c 10E000E0 		.word	-536813552
 1784              		.cfi_endproc
 1785              	.LFE36:
 1786              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 1787              		.section	.text.CySysTickSetReload,"ax",%progbits
 1788              		.align	1
 1789              		.global	CySysTickSetReload
 1790              		.code	16
 1791              		.thumb_func
 1792              		.type	CySysTickSetReload, %function
 1793              	CySysTickSetReload:
 1794              	.LFB37:
3298:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 1795              		.loc 1 3298 0
 1796              		.cfi_startproc
 1797              		@ args = 0, pretend = 0, frame = 0
 1798              		@ frame_needed = 0, uses_anonymous_args = 0
 1799              		@ link register save eliminated.
 1800              	.LVL124:
3299:Generated_Source\PSoC4/CyLib.c **** }
 1801              		.loc 1 3299 0
 1802 0000 024B     		ldr	r3, .L129
 1803 0002 0002     		lsls	r0, r0, #8
 1804              	.LVL125:
 1805 0004 000A     		lsrs	r0, r0, #8
 1806 0006 1860     		str	r0, [r3]
3300:Generated_Source\PSoC4/CyLib.c **** 
 1807              		.loc 1 3300 0
 1808              		@ sp needed
 1809 0008 7047     		bx	lr
 1810              	.L130:
 1811 000a C046     		.align	2
 1812              	.L129:
 1813 000c 14E000E0 		.word	-536813548
 1814              		.cfi_endproc
 1815              	.LFE37:
 1816              		.size	CySysTickSetReload, .-CySysTickSetReload
 1817              		.section	.text.CySysTickGetReload,"ax",%progbits
 1818              		.align	1
 1819              		.global	CySysTickGetReload
 1820              		.code	16
 1821              		.thumb_func
 1822              		.type	CySysTickGetReload, %function
 1823              	CySysTickGetReload:
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 96


 1824              	.LFB38:
3314:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 1825              		.loc 1 3314 0
 1826              		.cfi_startproc
 1827              		@ args = 0, pretend = 0, frame = 0
 1828              		@ frame_needed = 0, uses_anonymous_args = 0
 1829              		@ link register save eliminated.
3315:Generated_Source\PSoC4/CyLib.c **** }
 1830              		.loc 1 3315 0
 1831 0000 024B     		ldr	r3, .L132
3316:Generated_Source\PSoC4/CyLib.c **** 
 1832              		.loc 1 3316 0
 1833              		@ sp needed
3315:Generated_Source\PSoC4/CyLib.c **** }
 1834              		.loc 1 3315 0
 1835 0002 1868     		ldr	r0, [r3]
 1836 0004 0002     		lsls	r0, r0, #8
 1837 0006 000A     		lsrs	r0, r0, #8
3316:Generated_Source\PSoC4/CyLib.c **** 
 1838              		.loc 1 3316 0
 1839 0008 7047     		bx	lr
 1840              	.L133:
 1841 000a C046     		.align	2
 1842              	.L132:
 1843 000c 14E000E0 		.word	-536813548
 1844              		.cfi_endproc
 1845              	.LFE38:
 1846              		.size	CySysTickGetReload, .-CySysTickGetReload
 1847              		.section	.text.CySysTickGetValue,"ax",%progbits
 1848              		.align	1
 1849              		.global	CySysTickGetValue
 1850              		.code	16
 1851              		.thumb_func
 1852              		.type	CySysTickGetValue, %function
 1853              	CySysTickGetValue:
 1854              	.LFB39:
3330:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 1855              		.loc 1 3330 0
 1856              		.cfi_startproc
 1857              		@ args = 0, pretend = 0, frame = 0
 1858              		@ frame_needed = 0, uses_anonymous_args = 0
 1859              		@ link register save eliminated.
3331:Generated_Source\PSoC4/CyLib.c **** }
 1860              		.loc 1 3331 0
 1861 0000 024B     		ldr	r3, .L135
3332:Generated_Source\PSoC4/CyLib.c **** 
 1862              		.loc 1 3332 0
 1863              		@ sp needed
3331:Generated_Source\PSoC4/CyLib.c **** }
 1864              		.loc 1 3331 0
 1865 0002 1868     		ldr	r0, [r3]
 1866 0004 0002     		lsls	r0, r0, #8
 1867 0006 000A     		lsrs	r0, r0, #8
3332:Generated_Source\PSoC4/CyLib.c **** 
 1868              		.loc 1 3332 0
 1869 0008 7047     		bx	lr
 1870              	.L136:
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 97


 1871 000a C046     		.align	2
 1872              	.L135:
 1873 000c 18E000E0 		.word	-536813544
 1874              		.cfi_endproc
 1875              	.LFE39:
 1876              		.size	CySysTickGetValue, .-CySysTickGetValue
 1877              		.section	.text.CySysTickSetClockSource,"ax",%progbits
 1878              		.align	1
 1879              		.global	CySysTickSetClockSource
 1880              		.code	16
 1881              		.thumb_func
 1882              		.type	CySysTickSetClockSource, %function
 1883              	CySysTickSetClockSource:
 1884              	.LFB40:
3362:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
 1885              		.loc 1 3362 0
 1886              		.cfi_startproc
 1887              		@ args = 0, pretend = 0, frame = 0
 1888              		@ frame_needed = 0, uses_anonymous_args = 0
 1889              		@ link register save eliminated.
 1890              	.LVL126:
 1891 0000 044B     		ldr	r3, .L141
 1892 0002 0421     		movs	r1, #4
 1893              	.LBB45:
 1894              	.LBB46:
3365:Generated_Source\PSoC4/CyLib.c ****         }
 1895              		.loc 1 3365 0
 1896 0004 1A68     		ldr	r2, [r3]
 1897              	.LBE46:
 1898              	.LBE45:
3363:Generated_Source\PSoC4/CyLib.c ****         {
 1899              		.loc 1 3363 0
 1900 0006 0128     		cmp	r0, #1
 1901 0008 01D1     		bne	.L138
 1902              	.LVL127:
 1903              	.LBB48:
 1904              	.LBB47:
3365:Generated_Source\PSoC4/CyLib.c ****         }
 1905              		.loc 1 3365 0
 1906 000a 0A43     		orrs	r2, r1
 1907 000c 00E0     		b	.L140
 1908              	.LVL128:
 1909              	.L138:
 1910              	.LBE47:
 1911              	.LBE48:
3369:Generated_Source\PSoC4/CyLib.c ****         }
 1912              		.loc 1 3369 0
 1913 000e 8A43     		bics	r2, r1
 1914              	.L140:
 1915 0010 1A60     		str	r2, [r3]
3371:Generated_Source\PSoC4/CyLib.c **** 
 1916              		.loc 1 3371 0
 1917              		@ sp needed
 1918 0012 7047     		bx	lr
 1919              	.L142:
 1920              		.align	2
 1921              	.L141:
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 98


 1922 0014 10E000E0 		.word	-536813552
 1923              		.cfi_endproc
 1924              	.LFE40:
 1925              		.size	CySysTickSetClockSource, .-CySysTickSetClockSource
 1926              		.section	.text.CySysTickGetClockSource,"ax",%progbits
 1927              		.align	1
 1928              		.global	CySysTickGetClockSource
 1929              		.code	16
 1930              		.thumb_func
 1931              		.type	CySysTickGetClockSource, %function
 1932              	CySysTickGetClockSource:
 1933              	.LFB41:
3387:Generated_Source\PSoC4/CyLib.c ****         return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_CLK_SOURCE_SHIFT) & CY_SYS_SYST_CSR_CLK_SRC
 1934              		.loc 1 3387 0
 1935              		.cfi_startproc
 1936              		@ args = 0, pretend = 0, frame = 0
 1937              		@ frame_needed = 0, uses_anonymous_args = 0
 1938              		@ link register save eliminated.
3388:Generated_Source\PSoC4/CyLib.c ****     }
 1939              		.loc 1 3388 0
 1940 0000 024B     		ldr	r3, .L144
3389:Generated_Source\PSoC4/CyLib.c **** 
 1941              		.loc 1 3389 0
 1942              		@ sp needed
3388:Generated_Source\PSoC4/CyLib.c ****     }
 1943              		.loc 1 3388 0
 1944 0002 1868     		ldr	r0, [r3]
 1945 0004 4007     		lsls	r0, r0, #29
 1946 0006 C00F     		lsrs	r0, r0, #31
3389:Generated_Source\PSoC4/CyLib.c **** 
 1947              		.loc 1 3389 0
 1948 0008 7047     		bx	lr
 1949              	.L145:
 1950 000a C046     		.align	2
 1951              	.L144:
 1952 000c 10E000E0 		.word	-536813552
 1953              		.cfi_endproc
 1954              	.LFE41:
 1955              		.size	CySysTickGetClockSource, .-CySysTickGetClockSource
 1956              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 1957              		.align	1
 1958              		.global	CySysTickGetCountFlag
 1959              		.code	16
 1960              		.thumb_func
 1961              		.type	CySysTickGetCountFlag, %function
 1962              	CySysTickGetCountFlag:
 1963              	.LFB42:
3410:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 1964              		.loc 1 3410 0
 1965              		.cfi_startproc
 1966              		@ args = 0, pretend = 0, frame = 0
 1967              		@ frame_needed = 0, uses_anonymous_args = 0
 1968              		@ link register save eliminated.
3411:Generated_Source\PSoC4/CyLib.c **** }
 1969              		.loc 1 3411 0
 1970 0000 024B     		ldr	r3, .L147
3412:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 99


 1971              		.loc 1 3412 0
 1972              		@ sp needed
3411:Generated_Source\PSoC4/CyLib.c **** }
 1973              		.loc 1 3411 0
 1974 0002 1868     		ldr	r0, [r3]
 1975 0004 C003     		lsls	r0, r0, #15
 1976 0006 C00F     		lsrs	r0, r0, #31
3412:Generated_Source\PSoC4/CyLib.c **** 
 1977              		.loc 1 3412 0
 1978 0008 7047     		bx	lr
 1979              	.L148:
 1980 000a C046     		.align	2
 1981              	.L147:
 1982 000c 10E000E0 		.word	-536813552
 1983              		.cfi_endproc
 1984              	.LFE42:
 1985              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 1986              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 1987              		.align	1
 1988              		.code	16
 1989              		.thumb_func
 1990              		.type	CySysTickServiceCallbacks, %function
 1991              	CySysTickServiceCallbacks:
 1992              	.LFB46:
3425:Generated_Source\PSoC4/CyLib.c **** }
3426:Generated_Source\PSoC4/CyLib.c **** 
3427:Generated_Source\PSoC4/CyLib.c **** 
3428:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3429:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
3430:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3431:Generated_Source\PSoC4/CyLib.c **** *
3432:Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
3433:Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
3434:Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
3435:Generated_Source\PSoC4/CyLib.c **** *
3436:Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
3437:Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
3438:Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
3439:Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
3440:Generated_Source\PSoC4/CyLib.c **** *  functions.
3441:Generated_Source\PSoC4/CyLib.c **** *
3442:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the callback function addresses to be set. The valid
3443:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
3444:Generated_Source\PSoC4/CyLib.c **** *
3445:Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
3446:Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
3447:Generated_Source\PSoC4/CyLib.c **** *                                specified number.
3448:Generated_Source\PSoC4/CyLib.c **** *
3449:Generated_Source\PSoC4/CyLib.c **** * \return
3450:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
3451:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
3452:Generated_Source\PSoC4/CyLib.c **** *
3453:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3454:Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
3455:Generated_Source\PSoC4/CyLib.c **** *
3456:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3457:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 100


3458:Generated_Source\PSoC4/CyLib.c **** {
3459:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
3460:Generated_Source\PSoC4/CyLib.c **** 
3461:Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
3462:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
3463:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
3464:Generated_Source\PSoC4/CyLib.c **** }
3465:Generated_Source\PSoC4/CyLib.c **** 
3466:Generated_Source\PSoC4/CyLib.c **** 
3467:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3468:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
3469:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3470:Generated_Source\PSoC4/CyLib.c **** *
3471:Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
3472:Generated_Source\PSoC4/CyLib.c **** *
3473:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of callback function address to get. The valid
3474:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
3475:Generated_Source\PSoC4/CyLib.c **** *
3476:Generated_Source\PSoC4/CyLib.c **** * \return
3477:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
3478:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
3479:Generated_Source\PSoC4/CyLib.c **** *
3480:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3481:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
3482:Generated_Source\PSoC4/CyLib.c **** {
3483:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
3484:Generated_Source\PSoC4/CyLib.c **** }
3485:Generated_Source\PSoC4/CyLib.c **** 
3486:Generated_Source\PSoC4/CyLib.c **** 
3487:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3488:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
3489:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3490:Generated_Source\PSoC4/CyLib.c **** *
3491:Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
3492:Generated_Source\PSoC4/CyLib.c **** *
3493:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3494:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
3495:Generated_Source\PSoC4/CyLib.c **** {
 1993              		.loc 1 3495 0
 1994              		.cfi_startproc
 1995              		@ args = 0, pretend = 0, frame = 0
 1996              		@ frame_needed = 0, uses_anonymous_args = 0
 1997 0000 10B5     		push	{r4, lr}
 1998              		.cfi_def_cfa_offset 8
 1999              		.cfi_offset 4, -8
 2000              		.cfi_offset 14, -4
3496:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
3497:Generated_Source\PSoC4/CyLib.c **** 
3498:Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
3499:Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
 2001              		.loc 1 3499 0
 2002 0002 FFF7FEFF 		bl	CySysTickGetCountFlag
 2003              	.LVL129:
 2004 0006 0128     		cmp	r0, #1
 2005 0008 08D1     		bne	.L149
 2006 000a 0024     		movs	r4, #0
 2007              	.L152:
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 101


 2008              	.LBB51:
3500:Generated_Source\PSoC4/CyLib.c ****     {
3501:Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
3502:Generated_Source\PSoC4/CyLib.c ****         {
3503:Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 2009              		.loc 1 3503 0
 2010 000c 044B     		ldr	r3, .L158
 2011 000e E358     		ldr	r3, [r4, r3]
 2012 0010 002B     		cmp	r3, #0
 2013 0012 00D0     		beq	.L151
3504:Generated_Source\PSoC4/CyLib.c ****             {
3505:Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 2014              		.loc 1 3505 0
 2015 0014 9847     		blx	r3
 2016              	.LVL130:
 2017              	.L151:
 2018 0016 0434     		adds	r4, r4, #4
3501:Generated_Source\PSoC4/CyLib.c ****         {
 2019              		.loc 1 3501 0
 2020 0018 142C     		cmp	r4, #20
 2021 001a F7D1     		bne	.L152
 2022              	.L149:
 2023              	.LBE51:
3506:Generated_Source\PSoC4/CyLib.c ****             }
3507:Generated_Source\PSoC4/CyLib.c ****         }
3508:Generated_Source\PSoC4/CyLib.c ****     }
3509:Generated_Source\PSoC4/CyLib.c **** }
 2024              		.loc 1 3509 0
 2025              		@ sp needed
 2026 001c 10BD     		pop	{r4, pc}
 2027              	.L159:
 2028 001e C046     		.align	2
 2029              	.L158:
 2030 0020 00000000 		.word	.LANCHOR1
 2031              		.cfi_endproc
 2032              	.LFE46:
 2033              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
 2034              		.section	.text.CySysTickClear,"ax",%progbits
 2035              		.align	1
 2036              		.global	CySysTickClear
 2037              		.code	16
 2038              		.thumb_func
 2039              		.type	CySysTickClear, %function
 2040              	CySysTickClear:
 2041              	.LFB43:
3423:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 2042              		.loc 1 3423 0
 2043              		.cfi_startproc
 2044              		@ args = 0, pretend = 0, frame = 0
 2045              		@ frame_needed = 0, uses_anonymous_args = 0
 2046              		@ link register save eliminated.
3424:Generated_Source\PSoC4/CyLib.c **** }
 2047              		.loc 1 3424 0
 2048 0000 0022     		movs	r2, #0
 2049 0002 014B     		ldr	r3, .L161
3425:Generated_Source\PSoC4/CyLib.c **** 
 2050              		.loc 1 3425 0
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 102


 2051              		@ sp needed
3424:Generated_Source\PSoC4/CyLib.c **** }
 2052              		.loc 1 3424 0
 2053 0004 1A60     		str	r2, [r3]
3425:Generated_Source\PSoC4/CyLib.c **** 
 2054              		.loc 1 3425 0
 2055 0006 7047     		bx	lr
 2056              	.L162:
 2057              		.align	2
 2058              	.L161:
 2059 0008 18E000E0 		.word	-536813544
 2060              		.cfi_endproc
 2061              	.LFE43:
 2062              		.size	CySysTickClear, .-CySysTickClear
 2063              		.section	.text.CySysTickSetCallback,"ax",%progbits
 2064              		.align	1
 2065              		.global	CySysTickSetCallback
 2066              		.code	16
 2067              		.thumb_func
 2068              		.type	CySysTickSetCallback, %function
 2069              	CySysTickSetCallback:
 2070              	.LFB44:
3458:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
 2071              		.loc 1 3458 0
 2072              		.cfi_startproc
 2073              		@ args = 0, pretend = 0, frame = 0
 2074              		@ frame_needed = 0, uses_anonymous_args = 0
 2075              		@ link register save eliminated.
 2076              	.LVL131:
3461:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 2077              		.loc 1 3461 0
 2078 0000 024A     		ldr	r2, .L164
 2079 0002 8300     		lsls	r3, r0, #2
 2080 0004 9858     		ldr	r0, [r3, r2]
 2081              	.LVL132:
3464:Generated_Source\PSoC4/CyLib.c **** 
 2082              		.loc 1 3464 0
 2083              		@ sp needed
3462:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 2084              		.loc 1 3462 0
 2085 0006 9950     		str	r1, [r3, r2]
3464:Generated_Source\PSoC4/CyLib.c **** 
 2086              		.loc 1 3464 0
 2087 0008 7047     		bx	lr
 2088              	.L165:
 2089 000a C046     		.align	2
 2090              	.L164:
 2091 000c 00000000 		.word	.LANCHOR1
 2092              		.cfi_endproc
 2093              	.LFE44:
 2094              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 2095              		.section	.text.CySysTickGetCallback,"ax",%progbits
 2096              		.align	1
 2097              		.global	CySysTickGetCallback
 2098              		.code	16
 2099              		.thumb_func
 2100              		.type	CySysTickGetCallback, %function
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 103


 2101              	CySysTickGetCallback:
 2102              	.LFB45:
3482:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 2103              		.loc 1 3482 0
 2104              		.cfi_startproc
 2105              		@ args = 0, pretend = 0, frame = 0
 2106              		@ frame_needed = 0, uses_anonymous_args = 0
 2107              		@ link register save eliminated.
 2108              	.LVL133:
3483:Generated_Source\PSoC4/CyLib.c **** }
 2109              		.loc 1 3483 0
 2110 0000 014B     		ldr	r3, .L167
 2111 0002 8000     		lsls	r0, r0, #2
 2112              	.LVL134:
 2113 0004 C058     		ldr	r0, [r0, r3]
3484:Generated_Source\PSoC4/CyLib.c **** 
 2114              		.loc 1 3484 0
 2115              		@ sp needed
 2116 0006 7047     		bx	lr
 2117              	.L168:
 2118              		.align	2
 2119              	.L167:
 2120 0008 00000000 		.word	.LANCHOR1
 2121              		.cfi_endproc
 2122              	.LFE45:
 2123              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 2124              		.section	.text.CyGetUniqueId,"ax",%progbits
 2125              		.align	1
 2126              		.global	CyGetUniqueId
 2127              		.code	16
 2128              		.thumb_func
 2129              		.type	CyGetUniqueId, %function
 2130              	CyGetUniqueId:
 2131              	.LFB47:
3510:Generated_Source\PSoC4/CyLib.c **** 
3511:Generated_Source\PSoC4/CyLib.c **** 
3512:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3513:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
3514:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3515:Generated_Source\PSoC4/CyLib.c **** *
3516:Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
3517:Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
3518:Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
3519:Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
3520:Generated_Source\PSoC4/CyLib.c **** *
3521:Generated_Source\PSoC4/CyLib.c **** *  \param uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
3522:Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
3523:Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
3524:Generated_Source\PSoC4/CyLib.c **** *
3525:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3526:Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
3527:Generated_Source\PSoC4/CyLib.c **** {
 2132              		.loc 1 3527 0
 2133              		.cfi_startproc
 2134              		@ args = 0, pretend = 0, frame = 0
 2135              		@ frame_needed = 0, uses_anonymous_args = 0
 2136              		@ link register save eliminated.
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 104


 2137              	.LVL135:
3528:Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
3529:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 2138              		.loc 1 3529 0
 2139 0000 144B     		ldr	r3, .L170
3530:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
3531:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
3532:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
3533:Generated_Source\PSoC4/CyLib.c **** 
3534:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
3535:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
3536:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
3537:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
3538:Generated_Source\PSoC4/CyLib.c **** #else
3539:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
3540:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
3541:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
3542:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
3543:Generated_Source\PSoC4/CyLib.c **** 
3544:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
3545:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
3546:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
3547:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
3548:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
3549:Generated_Source\PSoC4/CyLib.c **** }
 2140              		.loc 1 3549 0
 2141              		@ sp needed
3529:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2142              		.loc 1 3529 0
 2143 0002 1A78     		ldrb	r2, [r3]
3530:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2144              		.loc 1 3530 0
 2145 0004 144B     		ldr	r3, .L170+4
3529:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2146              		.loc 1 3529 0
 2147 0006 D1B2     		uxtb	r1, r2
 2148 0008 0160     		str	r1, [r0]
3530:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2149              		.loc 1 3530 0
 2150 000a 1B78     		ldrb	r3, [r3]
 2151 000c 1B02     		lsls	r3, r3, #8
 2152 000e 0B43     		orrs	r3, r1
 2153 0010 1A00     		movs	r2, r3
 2154 0012 0360     		str	r3, [r0]
3531:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 2155              		.loc 1 3531 0
 2156 0014 114B     		ldr	r3, .L170+8
 2157 0016 1B78     		ldrb	r3, [r3]
 2158 0018 1B04     		lsls	r3, r3, #16
 2159 001a 1343     		orrs	r3, r2
3532:Generated_Source\PSoC4/CyLib.c **** 
 2160              		.loc 1 3532 0
 2161 001c 104A     		ldr	r2, .L170+12
3531:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 2162              		.loc 1 3531 0
 2163 001e 0360     		str	r3, [r0]
3532:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 105


 2164              		.loc 1 3532 0
 2165 0020 1278     		ldrb	r2, [r2]
 2166 0022 1206     		lsls	r2, r2, #24
 2167 0024 1343     		orrs	r3, r2
 2168 0026 0360     		str	r3, [r0]
3534:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 2169              		.loc 1 3534 0
 2170 0028 0E4B     		ldr	r3, .L170+16
 2171 002a 1A78     		ldrb	r2, [r3]
3535:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2172              		.loc 1 3535 0
 2173 002c 0E4B     		ldr	r3, .L170+20
3534:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 2174              		.loc 1 3534 0
 2175 002e D1B2     		uxtb	r1, r2
 2176 0030 4160     		str	r1, [r0, #4]
3535:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2177              		.loc 1 3535 0
 2178 0032 1B78     		ldrb	r3, [r3]
 2179 0034 1B02     		lsls	r3, r3, #8
 2180 0036 0B43     		orrs	r3, r1
 2181 0038 1A00     		movs	r2, r3
 2182 003a 4360     		str	r3, [r0, #4]
3536:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2183              		.loc 1 3536 0
 2184 003c 0B4B     		ldr	r3, .L170+24
 2185 003e 1B78     		ldrb	r3, [r3]
 2186 0040 1B04     		lsls	r3, r3, #16
 2187 0042 1343     		orrs	r3, r2
3537:Generated_Source\PSoC4/CyLib.c **** #else
 2188              		.loc 1 3537 0
 2189 0044 0A4A     		ldr	r2, .L170+28
3536:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2190              		.loc 1 3536 0
 2191 0046 4360     		str	r3, [r0, #4]
3537:Generated_Source\PSoC4/CyLib.c **** #else
 2192              		.loc 1 3537 0
 2193 0048 1278     		ldrb	r2, [r2]
 2194 004a 1206     		lsls	r2, r2, #24
 2195 004c 1343     		orrs	r3, r2
 2196 004e 4360     		str	r3, [r0, #4]
 2197              		.loc 1 3549 0
 2198 0050 7047     		bx	lr
 2199              	.L171:
 2200 0052 C046     		.align	2
 2201              	.L170:
 2202 0054 78F1FF0F 		.word	268431736
 2203 0058 79F1FF0F 		.word	268431737
 2204 005c 7AF1FF0F 		.word	268431738
 2205 0060 7BF1FF0F 		.word	268431739
 2206 0064 7CF1FF0F 		.word	268431740
 2207 0068 7DF1FF0F 		.word	268431741
 2208 006c 7EF1FF0F 		.word	268431742
 2209 0070 7FF1FF0F 		.word	268431743
 2210              		.cfi_endproc
 2211              	.LFE47:
 2212              		.size	CyGetUniqueId, .-CyGetUniqueId
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 106


 2213              		.global	CySysClkPumpConfig
 2214              		.global	CySysTickInitVar
 2215              		.global	cydelay32kMs
 2216              		.global	cydelayFreqMhz
 2217              		.global	cydelayFreqKhz
 2218              		.global	cydelayFreqHz
 2219              		.data
 2220              		.align	2
 2221              		.set	.LANCHOR0,. + 0
 2222              		.type	CySysClkPumpConfig, %object
 2223              		.size	CySysClkPumpConfig, 4
 2224              	CySysClkPumpConfig:
 2225 0000 01000000 		.word	1
 2226              		.type	cydelay32kMs, %object
 2227              		.size	cydelay32kMs, 4
 2228              	cydelay32kMs:
 2229 0004 0000E02E 		.word	786432000
 2230              		.type	cydelayFreqKhz, %object
 2231              		.size	cydelayFreqKhz, 4
 2232              	cydelayFreqKhz:
 2233 0008 C05D0000 		.word	24000
 2234              		.type	cydelayFreqMhz, %object
 2235              		.size	cydelayFreqMhz, 1
 2236              	cydelayFreqMhz:
 2237 000c 18       		.byte	24
 2238 000d 000000   		.space	3
 2239              		.type	cydelayFreqHz, %object
 2240              		.size	cydelayFreqHz, 4
 2241              	cydelayFreqHz:
 2242 0010 00366E01 		.word	24000000
 2243              		.bss
 2244              		.align	2
 2245              		.set	.LANCHOR1,. + 0
 2246              		.type	CySysTickCallbacks, %object
 2247              		.size	CySysTickCallbacks, 20
 2248              	CySysTickCallbacks:
 2249 0000 00000000 		.space	20
 2249      00000000 
 2249      00000000 
 2249      00000000 
 2249      00000000 
 2250              		.type	CySysTickInitVar, %object
 2251              		.size	CySysTickInitVar, 4
 2252              	CySysTickInitVar:
 2253 0014 00000000 		.space	4
 2254              		.text
 2255              	.Letext0:
 2256              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 2257              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 2258              		.file 4 "Generated_Source\\PSoC4\\CyFlash.h"
 2259              		.file 5 "Generated_Source\\PSoC4\\CyLFClk.h"
 2260              		.section	.debug_info,"",%progbits
 2261              	.Ldebug_info0:
 2262 0000 5E0C0000 		.4byte	0xc5e
 2263 0004 0400     		.2byte	0x4
 2264 0006 00000000 		.4byte	.Ldebug_abbrev0
 2265 000a 04       		.byte	0x4
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 107


 2266 000b 01       		.uleb128 0x1
 2267 000c 6F010000 		.4byte	.LASF106
 2268 0010 0C       		.byte	0xc
 2269 0011 C3060000 		.4byte	.LASF107
 2270 0015 AF020000 		.4byte	.LASF108
 2271 0019 58000000 		.4byte	.Ldebug_ranges0+0x58
 2272 001d 00000000 		.4byte	0
 2273 0021 00000000 		.4byte	.Ldebug_line0
 2274 0025 02       		.uleb128 0x2
 2275 0026 01       		.byte	0x1
 2276 0027 06       		.byte	0x6
 2277 0028 F4000000 		.4byte	.LASF0
 2278 002c 02       		.uleb128 0x2
 2279 002d 01       		.byte	0x1
 2280 002e 08       		.byte	0x8
 2281 002f 36050000 		.4byte	.LASF1
 2282 0033 02       		.uleb128 0x2
 2283 0034 02       		.byte	0x2
 2284 0035 05       		.byte	0x5
 2285 0036 4B050000 		.4byte	.LASF2
 2286 003a 02       		.uleb128 0x2
 2287 003b 02       		.byte	0x2
 2288 003c 07       		.byte	0x7
 2289 003d A8030000 		.4byte	.LASF3
 2290 0041 02       		.uleb128 0x2
 2291 0042 04       		.byte	0x4
 2292 0043 05       		.byte	0x5
 2293 0044 59010000 		.4byte	.LASF4
 2294 0048 02       		.uleb128 0x2
 2295 0049 04       		.byte	0x4
 2296 004a 07       		.byte	0x7
 2297 004b 4B030000 		.4byte	.LASF5
 2298 004f 02       		.uleb128 0x2
 2299 0050 08       		.byte	0x8
 2300 0051 05       		.byte	0x5
 2301 0052 E6000000 		.4byte	.LASF6
 2302 0056 02       		.uleb128 0x2
 2303 0057 08       		.byte	0x8
 2304 0058 07       		.byte	0x7
 2305 0059 67000000 		.4byte	.LASF7
 2306 005d 03       		.uleb128 0x3
 2307 005e 04       		.byte	0x4
 2308 005f 05       		.byte	0x5
 2309 0060 696E7400 		.ascii	"int\000"
 2310 0064 02       		.uleb128 0x2
 2311 0065 04       		.byte	0x4
 2312 0066 07       		.byte	0x7
 2313 0067 2F030000 		.4byte	.LASF8
 2314 006b 04       		.uleb128 0x4
 2315 006c 2B020000 		.4byte	.LASF9
 2316 0070 02       		.byte	0x2
 2317 0071 FB01     		.2byte	0x1fb
 2318 0073 2C000000 		.4byte	0x2c
 2319 0077 04       		.uleb128 0x4
 2320 0078 0F000000 		.4byte	.LASF10
 2321 007c 02       		.byte	0x2
 2322 007d FC01     		.2byte	0x1fc
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 108


 2323 007f 3A000000 		.4byte	0x3a
 2324 0083 04       		.uleb128 0x4
 2325 0084 54020000 		.4byte	.LASF11
 2326 0088 02       		.byte	0x2
 2327 0089 FD01     		.2byte	0x1fd
 2328 008b 48000000 		.4byte	0x48
 2329 008f 02       		.uleb128 0x2
 2330 0090 04       		.byte	0x4
 2331 0091 04       		.byte	0x4
 2332 0092 D2040000 		.4byte	.LASF12
 2333 0096 02       		.uleb128 0x2
 2334 0097 08       		.byte	0x8
 2335 0098 04       		.byte	0x4
 2336 0099 47020000 		.4byte	.LASF13
 2337 009d 02       		.uleb128 0x2
 2338 009e 01       		.byte	0x1
 2339 009f 08       		.byte	0x8
 2340 00a0 A1050000 		.4byte	.LASF14
 2341 00a4 04       		.uleb128 0x4
 2342 00a5 2A050000 		.4byte	.LASF15
 2343 00a9 02       		.byte	0x2
 2344 00aa A502     		.2byte	0x2a5
 2345 00ac B0000000 		.4byte	0xb0
 2346 00b0 05       		.uleb128 0x5
 2347 00b1 6B000000 		.4byte	0x6b
 2348 00b5 04       		.uleb128 0x4
 2349 00b6 3A040000 		.4byte	.LASF16
 2350 00ba 02       		.byte	0x2
 2351 00bb A702     		.2byte	0x2a7
 2352 00bd C1000000 		.4byte	0xc1
 2353 00c1 05       		.uleb128 0x5
 2354 00c2 83000000 		.4byte	0x83
 2355 00c6 04       		.uleb128 0x4
 2356 00c7 A6050000 		.4byte	.LASF17
 2357 00cb 02       		.byte	0x2
 2358 00cc B702     		.2byte	0x2b7
 2359 00ce D2000000 		.4byte	0xd2
 2360 00d2 06       		.uleb128 0x6
 2361 00d3 04       		.byte	0x4
 2362 00d4 D8000000 		.4byte	0xd8
 2363 00d8 07       		.uleb128 0x7
 2364 00d9 02       		.uleb128 0x2
 2365 00da 08       		.byte	0x8
 2366 00db 04       		.byte	0x4
 2367 00dc 77040000 		.4byte	.LASF18
 2368 00e0 02       		.uleb128 0x2
 2369 00e1 04       		.byte	0x4
 2370 00e2 07       		.byte	0x7
 2371 00e3 5C040000 		.4byte	.LASF19
 2372 00e7 04       		.uleb128 0x4
 2373 00e8 EE040000 		.4byte	.LASF20
 2374 00ec 03       		.byte	0x3
 2375 00ed 0801     		.2byte	0x108
 2376 00ef D2000000 		.4byte	0xd2
 2377 00f3 08       		.uleb128 0x8
 2378 00f4 78020000 		.4byte	.LASF26
 2379 00f8 01       		.byte	0x1
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 109


 2380 00f9 AE       		.byte	0xae
 2381 00fa 01       		.byte	0x1
 2382 00fb 37010000 		.4byte	0x137
 2383 00ff 09       		.uleb128 0x9
 2384 0100 00010000 		.4byte	.LASF21
 2385 0104 01       		.byte	0x1
 2386 0105 B4       		.byte	0xb4
 2387 0106 83000000 		.4byte	0x83
 2388 010a 09       		.uleb128 0x9
 2389 010b 11010000 		.4byte	.LASF22
 2390 010f 01       		.byte	0x1
 2391 0110 B5       		.byte	0xb5
 2392 0111 6B000000 		.4byte	0x6b
 2393 0115 09       		.uleb128 0x9
 2394 0116 BB030000 		.4byte	.LASF23
 2395 011a 01       		.byte	0x1
 2396 011b B6       		.byte	0xb6
 2397 011c 83000000 		.4byte	0x83
 2398 0120 09       		.uleb128 0x9
 2399 0121 20010000 		.4byte	.LASF24
 2400 0125 01       		.byte	0x1
 2401 0126 B7       		.byte	0xb7
 2402 0127 83000000 		.4byte	0x83
 2403 012b 09       		.uleb128 0x9
 2404 012c 2F060000 		.4byte	.LASF25
 2405 0130 01       		.byte	0x1
 2406 0131 B8       		.byte	0xb8
 2407 0132 C1000000 		.4byte	0xc1
 2408 0136 00       		.byte	0
 2409 0137 0A       		.uleb128 0xa
 2410 0138 C2030000 		.4byte	.LASF27
 2411 013c 01       		.byte	0x1
 2412 013d 210D     		.2byte	0xd21
 2413 013f 01       		.byte	0x1
 2414 0140 51010000 		.4byte	0x151
 2415 0144 0B       		.uleb128 0xb
 2416 0145 FF020000 		.4byte	.LASF29
 2417 0149 01       		.byte	0x1
 2418 014a 210D     		.2byte	0xd21
 2419 014c 83000000 		.4byte	0x83
 2420 0150 00       		.byte	0
 2421 0151 0C       		.uleb128 0xc
 2422 0152 87050000 		.4byte	.LASF109
 2423 0156 01       		.byte	0x1
 2424 0157 A60D     		.2byte	0xda6
 2425 0159 01       		.byte	0x1
 2426 015a 69010000 		.4byte	0x169
 2427 015e 0D       		.uleb128 0xd
 2428 015f 6900     		.ascii	"i\000"
 2429 0161 01       		.byte	0x1
 2430 0162 A80D     		.2byte	0xda8
 2431 0164 83000000 		.4byte	0x83
 2432 0168 00       		.byte	0
 2433 0169 0E       		.uleb128 0xe
 2434 016a 3C030000 		.4byte	.LASF110
 2435 016e 01       		.byte	0x1
 2436 016f 5E0D     		.2byte	0xd5e
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 110


 2437 0171 01       		.byte	0x1
 2438 0172 0A       		.uleb128 0xa
 2439 0173 F6060000 		.4byte	.LASF28
 2440 0177 01       		.byte	0x1
 2441 0178 E10C     		.2byte	0xce1
 2442 017a 01       		.byte	0x1
 2443 017b 8C010000 		.4byte	0x18c
 2444 017f 0B       		.uleb128 0xb
 2445 0180 F9020000 		.4byte	.LASF30
 2446 0184 01       		.byte	0x1
 2447 0185 E10C     		.2byte	0xce1
 2448 0187 83000000 		.4byte	0x83
 2449 018b 00       		.byte	0
 2450 018c 0F       		.uleb128 0xf
 2451 018d 0E040000 		.4byte	.LASF111
 2452 0191 01       		.byte	0x1
 2453 0192 070B     		.2byte	0xb07
 2454 0194 C6000000 		.4byte	0xc6
 2455 0198 01       		.byte	0x1
 2456 0199 CE010000 		.4byte	0x1ce
 2457 019d 0B       		.uleb128 0xb
 2458 019e E9030000 		.4byte	.LASF31
 2459 01a2 01       		.byte	0x1
 2460 01a3 070B     		.2byte	0xb07
 2461 01a5 6B000000 		.4byte	0x6b
 2462 01a9 0B       		.uleb128 0xb
 2463 01aa 83040000 		.4byte	.LASF32
 2464 01ae 01       		.byte	0x1
 2465 01af 070B     		.2byte	0xb07
 2466 01b1 C6000000 		.4byte	0xc6
 2467 01b5 10       		.uleb128 0x10
 2468 01b6 4B000000 		.4byte	.LASF33
 2469 01ba 01       		.byte	0x1
 2470 01bb 090B     		.2byte	0xb09
 2471 01bd C6000000 		.4byte	0xc6
 2472 01c1 10       		.uleb128 0x10
 2473 01c2 00000000 		.4byte	.LASF34
 2474 01c6 01       		.byte	0x1
 2475 01c7 0A0B     		.2byte	0xb0a
 2476 01c9 CE010000 		.4byte	0x1ce
 2477 01cd 00       		.byte	0
 2478 01ce 06       		.uleb128 0x6
 2479 01cf 04       		.byte	0x4
 2480 01d0 C6000000 		.4byte	0xc6
 2481 01d4 11       		.uleb128 0x11
 2482 01d5 9A060000 		.4byte	.LASF67
 2483 01d9 01       		.byte	0x1
 2484 01da 69       		.byte	0x69
 2485 01db 00000000 		.4byte	.LFB1
 2486 01df 14000000 		.4byte	.LFE1-.LFB1
 2487 01e3 01       		.uleb128 0x1
 2488 01e4 9C       		.byte	0x9c
 2489 01e5 12       		.uleb128 0x12
 2490 01e6 20040000 		.4byte	.LASF35
 2491 01ea 01       		.byte	0x1
 2492 01eb 1B01     		.2byte	0x11b
 2493 01ed 00000000 		.4byte	.LFB4
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 111


 2494 01f1 48000000 		.4byte	.LFE4-.LFB4
 2495 01f5 01       		.uleb128 0x1
 2496 01f6 9C       		.byte	0x9c
 2497 01f7 0C020000 		.4byte	0x20c
 2498 01fb 13       		.uleb128 0x13
 2499 01fc 00010000 		.4byte	.LASF21
 2500 0200 01       		.byte	0x1
 2501 0201 2101     		.2byte	0x121
 2502 0203 83000000 		.4byte	0x83
 2503 0207 00000000 		.4byte	.LLST0
 2504 020b 00       		.byte	0
 2505 020c 14       		.uleb128 0x14
 2506 020d 5D030000 		.4byte	.LASF36
 2507 0211 01       		.byte	0x1
 2508 0212 8A       		.byte	0x8a
 2509 0213 00000000 		.4byte	.LFB2
 2510 0217 18000000 		.4byte	.LFE2-.LFB2
 2511 021b 01       		.uleb128 0x1
 2512 021c 9C       		.byte	0x9c
 2513 021d 2B020000 		.4byte	0x22b
 2514 0221 15       		.uleb128 0x15
 2515 0222 06000000 		.4byte	.LVL2
 2516 0226 E5010000 		.4byte	0x1e5
 2517 022a 00       		.byte	0
 2518 022b 16       		.uleb128 0x16
 2519 022c 3B010000 		.4byte	.LASF83
 2520 0230 01       		.byte	0x1
 2521 0231 5301     		.2byte	0x153
 2522 0233 83000000 		.4byte	0x83
 2523 0237 00000000 		.4byte	.LFB5
 2524 023b 10000000 		.4byte	.LFE5-.LFB5
 2525 023f 01       		.uleb128 0x1
 2526 0240 9C       		.byte	0x9c
 2527 0241 12       		.uleb128 0x12
 2528 0242 1F000000 		.4byte	.LASF37
 2529 0246 01       		.byte	0x1
 2530 0247 4802     		.2byte	0x248
 2531 0249 00000000 		.4byte	.LFB6
 2532 024d 20000000 		.4byte	.LFE6-.LFB6
 2533 0251 01       		.uleb128 0x1
 2534 0252 9C       		.byte	0x9c
 2535 0253 9A020000 		.4byte	0x29a
 2536 0257 17       		.uleb128 0x17
 2537 0258 73050000 		.4byte	.LASF40
 2538 025c 01       		.byte	0x1
 2539 025d 4802     		.2byte	0x248
 2540 025f 83000000 		.4byte	0x83
 2541 0263 22000000 		.4byte	.LLST1
 2542 0267 13       		.uleb128 0x13
 2543 0268 11010000 		.4byte	.LASF22
 2544 026c 01       		.byte	0x1
 2545 026d 4A02     		.2byte	0x24a
 2546 026f 6B000000 		.4byte	0x6b
 2547 0273 4E000000 		.4byte	.LLST2
 2548 0277 13       		.uleb128 0x13
 2549 0278 EF060000 		.4byte	.LASF38
 2550 027c 01       		.byte	0x1
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 112


 2551 027d 4B02     		.2byte	0x24b
 2552 027f 83000000 		.4byte	0x83
 2553 0283 61000000 		.4byte	.LLST3
 2554 0287 15       		.uleb128 0x15
 2555 0288 08000000 		.4byte	.LVL4
 2556 028c 2A0C0000 		.4byte	0xc2a
 2557 0290 15       		.uleb128 0x15
 2558 0291 1A000000 		.4byte	.LVL7
 2559 0295 350C0000 		.4byte	0xc35
 2560 0299 00       		.byte	0
 2561 029a 12       		.uleb128 0x12
 2562 029b 16020000 		.4byte	.LASF39
 2563 029f 01       		.byte	0x1
 2564 02a0 9502     		.2byte	0x295
 2565 02a2 00000000 		.4byte	.LFB7
 2566 02a6 30000000 		.4byte	.LFE7-.LFB7
 2567 02aa 01       		.uleb128 0x1
 2568 02ab 9C       		.byte	0x9c
 2569 02ac BF020000 		.4byte	0x2bf
 2570 02b0 18       		.uleb128 0x18
 2571 02b1 40020000 		.4byte	.LASF41
 2572 02b5 01       		.byte	0x1
 2573 02b6 9502     		.2byte	0x295
 2574 02b8 83000000 		.4byte	0x83
 2575 02bc 01       		.uleb128 0x1
 2576 02bd 50       		.byte	0x50
 2577 02be 00       		.byte	0
 2578 02bf 19       		.uleb128 0x19
 2579 02c0 60020000 		.4byte	.LASF46
 2580 02c4 01       		.byte	0x1
 2581 02c5 BA02     		.2byte	0x2ba
 2582 02c7 83000000 		.4byte	0x83
 2583 02cb 00000000 		.4byte	.LFB8
 2584 02cf 18000000 		.4byte	.LFE8-.LFB8
 2585 02d3 01       		.uleb128 0x1
 2586 02d4 9C       		.byte	0x9c
 2587 02d5 0C030000 		.4byte	0x30c
 2588 02d9 13       		.uleb128 0x13
 2589 02da 11010000 		.4byte	.LASF22
 2590 02de 01       		.byte	0x1
 2591 02df BC02     		.2byte	0x2bc
 2592 02e1 6B000000 		.4byte	0x6b
 2593 02e5 7F000000 		.4byte	.LLST4
 2594 02e9 13       		.uleb128 0x13
 2595 02ea 8B040000 		.4byte	.LASF42
 2596 02ee 01       		.byte	0x1
 2597 02ef BD02     		.2byte	0x2bd
 2598 02f1 83000000 		.4byte	0x83
 2599 02f5 92000000 		.4byte	.LLST5
 2600 02f9 15       		.uleb128 0x15
 2601 02fa 06000000 		.4byte	.LVL10
 2602 02fe 2A0C0000 		.4byte	0xc2a
 2603 0302 15       		.uleb128 0x15
 2604 0303 0E000000 		.4byte	.LVL12
 2605 0307 350C0000 		.4byte	0xc35
 2606 030b 00       		.byte	0
 2607 030c 12       		.uleb128 0x12
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 113


 2608 030d D9050000 		.4byte	.LASF43
 2609 0311 01       		.byte	0x1
 2610 0312 F702     		.2byte	0x2f7
 2611 0314 00000000 		.4byte	.LFB9
 2612 0318 24000000 		.4byte	.LFE9-.LFB9
 2613 031c 01       		.uleb128 0x1
 2614 031d 9C       		.byte	0x9c
 2615 031e 55030000 		.4byte	0x355
 2616 0322 17       		.uleb128 0x17
 2617 0323 92060000 		.4byte	.LASF44
 2618 0327 01       		.byte	0x1
 2619 0328 F702     		.2byte	0x2f7
 2620 032a 83000000 		.4byte	0x83
 2621 032e B4000000 		.4byte	.LLST6
 2622 0332 13       		.uleb128 0x13
 2623 0333 11010000 		.4byte	.LASF22
 2624 0337 01       		.byte	0x1
 2625 0338 F902     		.2byte	0x2f9
 2626 033a 6B000000 		.4byte	0x6b
 2627 033e E0000000 		.4byte	.LLST7
 2628 0342 15       		.uleb128 0x15
 2629 0343 08000000 		.4byte	.LVL15
 2630 0347 2A0C0000 		.4byte	0xc2a
 2631 034b 15       		.uleb128 0x15
 2632 034c 1E000000 		.4byte	.LVL16
 2633 0350 350C0000 		.4byte	0xc35
 2634 0354 00       		.byte	0
 2635 0355 12       		.uleb128 0x12
 2636 0356 C3050000 		.4byte	.LASF45
 2637 035a 01       		.byte	0x1
 2638 035b 8304     		.2byte	0x483
 2639 035d 00000000 		.4byte	.LFB11
 2640 0361 24000000 		.4byte	.LFE11-.LFB11
 2641 0365 01       		.uleb128 0x1
 2642 0366 9C       		.byte	0x9c
 2643 0367 9E030000 		.4byte	0x39e
 2644 036b 17       		.uleb128 0x17
 2645 036c 92060000 		.4byte	.LASF44
 2646 0370 01       		.byte	0x1
 2647 0371 8304     		.2byte	0x483
 2648 0373 83000000 		.4byte	0x83
 2649 0377 F3000000 		.4byte	.LLST8
 2650 037b 13       		.uleb128 0x13
 2651 037c 11010000 		.4byte	.LASF22
 2652 0380 01       		.byte	0x1
 2653 0381 8504     		.2byte	0x485
 2654 0383 6B000000 		.4byte	0x6b
 2655 0387 1F010000 		.4byte	.LLST9
 2656 038b 15       		.uleb128 0x15
 2657 038c 08000000 		.4byte	.LVL19
 2658 0390 2A0C0000 		.4byte	0xc2a
 2659 0394 15       		.uleb128 0x15
 2660 0395 1C000000 		.4byte	.LVL21
 2661 0399 350C0000 		.4byte	0xc35
 2662 039d 00       		.byte	0
 2663 039e 19       		.uleb128 0x19
 2664 039f 94030000 		.4byte	.LASF47
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 114


 2665 03a3 01       		.byte	0x1
 2666 03a4 C00A     		.2byte	0xac0
 2667 03a6 83000000 		.4byte	0x83
 2668 03aa 00000000 		.4byte	.LFB12
 2669 03ae 14000000 		.4byte	.LFE12-.LFB12
 2670 03b2 01       		.uleb128 0x1
 2671 03b3 9C       		.byte	0x9c
 2672 03b4 D9030000 		.4byte	0x3d9
 2673 03b8 17       		.uleb128 0x17
 2674 03b9 44050000 		.4byte	.LASF48
 2675 03bd 01       		.byte	0x1
 2676 03be C00A     		.2byte	0xac0
 2677 03c0 83000000 		.4byte	0x83
 2678 03c4 32010000 		.4byte	.LLST10
 2679 03c8 13       		.uleb128 0x13
 2680 03c9 4F040000 		.4byte	.LASF49
 2681 03cd 01       		.byte	0x1
 2682 03ce C20A     		.2byte	0xac2
 2683 03d0 83000000 		.4byte	0x83
 2684 03d4 50010000 		.4byte	.LLST11
 2685 03d8 00       		.byte	0
 2686 03d9 19       		.uleb128 0x19
 2687 03da 59000000 		.4byte	.LASF50
 2688 03de 01       		.byte	0x1
 2689 03df D70A     		.2byte	0xad7
 2690 03e1 83000000 		.4byte	0x83
 2691 03e5 00000000 		.4byte	.LFB13
 2692 03e9 10000000 		.4byte	.LFE13-.LFB13
 2693 03ed 01       		.uleb128 0x1
 2694 03ee 9C       		.byte	0x9c
 2695 03ef 02040000 		.4byte	0x402
 2696 03f3 1A       		.uleb128 0x1a
 2697 03f4 16000000 		.4byte	.LASF51
 2698 03f8 01       		.byte	0x1
 2699 03f9 D90A     		.2byte	0xad9
 2700 03fb 83000000 		.4byte	0x83
 2701 03ff 01       		.uleb128 0x1
 2702 0400 50       		.byte	0x50
 2703 0401 00       		.byte	0
 2704 0402 12       		.uleb128 0x12
 2705 0403 8F000000 		.4byte	.LASF52
 2706 0407 01       		.byte	0x1
 2707 0408 EE0A     		.2byte	0xaee
 2708 040a 00000000 		.4byte	.LFB14
 2709 040e 0C000000 		.4byte	.LFE14-.LFB14
 2710 0412 01       		.uleb128 0x1
 2711 0413 9C       		.byte	0x9c
 2712 0414 27040000 		.4byte	0x427
 2713 0418 18       		.uleb128 0x18
 2714 0419 5B020000 		.4byte	.LASF53
 2715 041d 01       		.byte	0x1
 2716 041e EE0A     		.2byte	0xaee
 2717 0420 83000000 		.4byte	0x83
 2718 0424 01       		.uleb128 0x1
 2719 0425 50       		.byte	0x50
 2720 0426 00       		.byte	0
 2721 0427 1B       		.uleb128 0x1b
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 115


 2722 0428 8C010000 		.4byte	0x18c
 2723 042c 00000000 		.4byte	.LFB15
 2724 0430 0E000000 		.4byte	.LFE15-.LFB15
 2725 0434 01       		.uleb128 0x1
 2726 0435 9C       		.byte	0x9c
 2727 0436 5B040000 		.4byte	0x45b
 2728 043a 1C       		.uleb128 0x1c
 2729 043b 9D010000 		.4byte	0x19d
 2730 043f 72010000 		.4byte	.LLST12
 2731 0443 1D       		.uleb128 0x1d
 2732 0444 A9010000 		.4byte	0x1a9
 2733 0448 01       		.uleb128 0x1
 2734 0449 51       		.byte	0x51
 2735 044a 1E       		.uleb128 0x1e
 2736 044b B5010000 		.4byte	0x1b5
 2737 044f 01       		.uleb128 0x1
 2738 0450 50       		.byte	0x50
 2739 0451 1F       		.uleb128 0x1f
 2740 0452 C1010000 		.4byte	0x1c1
 2741 0456 00000020 		.4byte	0x20000000
 2742 045a 00       		.byte	0
 2743 045b 19       		.uleb128 0x19
 2744 045c 61050000 		.4byte	.LASF54
 2745 0460 01       		.byte	0x1
 2746 0461 290B     		.2byte	0xb29
 2747 0463 C6000000 		.4byte	0xc6
 2748 0467 00000000 		.4byte	.LFB16
 2749 046b 0C000000 		.4byte	.LFE16-.LFB16
 2750 046f 01       		.uleb128 0x1
 2751 0470 9C       		.byte	0x9c
 2752 0471 96040000 		.4byte	0x496
 2753 0475 17       		.uleb128 0x17
 2754 0476 E9030000 		.4byte	.LASF31
 2755 047a 01       		.byte	0x1
 2756 047b 290B     		.2byte	0xb29
 2757 047d 6B000000 		.4byte	0x6b
 2758 0481 93010000 		.4byte	.LLST13
 2759 0485 20       		.uleb128 0x20
 2760 0486 00000000 		.4byte	.LASF34
 2761 048a 01       		.byte	0x1
 2762 048b 2B0B     		.2byte	0xb2b
 2763 048d CE010000 		.4byte	0x1ce
 2764 0491 00000020 		.4byte	0x20000000
 2765 0495 00       		.byte	0
 2766 0496 19       		.uleb128 0x19
 2767 0497 DA030000 		.4byte	.LASF55
 2768 049b 01       		.byte	0x1
 2769 049c 3F0B     		.2byte	0xb3f
 2770 049e C6000000 		.4byte	0xc6
 2771 04a2 00000000 		.4byte	.LFB17
 2772 04a6 10000000 		.4byte	.LFE17-.LFB17
 2773 04aa 01       		.uleb128 0x1
 2774 04ab 9C       		.byte	0x9c
 2775 04ac ED040000 		.4byte	0x4ed
 2776 04b0 17       		.uleb128 0x17
 2777 04b1 E9030000 		.4byte	.LASF31
 2778 04b5 01       		.byte	0x1
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 116


 2779 04b6 3F0B     		.2byte	0xb3f
 2780 04b8 6B000000 		.4byte	0x6b
 2781 04bc B4010000 		.4byte	.LLST14
 2782 04c0 18       		.uleb128 0x18
 2783 04c1 83040000 		.4byte	.LASF32
 2784 04c5 01       		.byte	0x1
 2785 04c6 3F0B     		.2byte	0xb3f
 2786 04c8 C6000000 		.4byte	0xc6
 2787 04cc 01       		.uleb128 0x1
 2788 04cd 51       		.byte	0x51
 2789 04ce 1A       		.uleb128 0x1a
 2790 04cf 4B000000 		.4byte	.LASF33
 2791 04d3 01       		.byte	0x1
 2792 04d4 410B     		.2byte	0xb41
 2793 04d6 C6000000 		.4byte	0xc6
 2794 04da 01       		.uleb128 0x1
 2795 04db 50       		.byte	0x50
 2796 04dc 20       		.uleb128 0x20
 2797 04dd 00000000 		.4byte	.LASF34
 2798 04e1 01       		.byte	0x1
 2799 04e2 420B     		.2byte	0xb42
 2800 04e4 CE010000 		.4byte	0x1ce
 2801 04e8 00000020 		.4byte	0x20000000
 2802 04ec 00       		.byte	0
 2803 04ed 19       		.uleb128 0x19
 2804 04ee 00050000 		.4byte	.LASF56
 2805 04f2 01       		.byte	0x1
 2806 04f3 5B0B     		.2byte	0xb5b
 2807 04f5 C6000000 		.4byte	0xc6
 2808 04f9 00000000 		.4byte	.LFB18
 2809 04fd 10000000 		.4byte	.LFE18-.LFB18
 2810 0501 01       		.uleb128 0x1
 2811 0502 9C       		.byte	0x9c
 2812 0503 28050000 		.4byte	0x528
 2813 0507 17       		.uleb128 0x17
 2814 0508 E9030000 		.4byte	.LASF31
 2815 050c 01       		.byte	0x1
 2816 050d 5B0B     		.2byte	0xb5b
 2817 050f 6B000000 		.4byte	0x6b
 2818 0513 D5010000 		.4byte	.LLST15
 2819 0517 20       		.uleb128 0x20
 2820 0518 00000000 		.4byte	.LASF34
 2821 051c 01       		.byte	0x1
 2822 051d 5D0B     		.2byte	0xb5d
 2823 051f CE010000 		.4byte	0x1ce
 2824 0523 00000020 		.4byte	0x20000000
 2825 0527 00       		.byte	0
 2826 0528 12       		.uleb128 0x12
 2827 0529 C1040000 		.4byte	.LASF57
 2828 052d 01       		.byte	0x1
 2829 052e 6E0B     		.2byte	0xb6e
 2830 0530 00000000 		.4byte	.LFB19
 2831 0534 34000000 		.4byte	.LFE19-.LFB19
 2832 0538 01       		.uleb128 0x1
 2833 0539 9C       		.byte	0x9c
 2834 053a A1050000 		.4byte	0x5a1
 2835 053e 17       		.uleb128 0x17
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 117


 2836 053f E9030000 		.4byte	.LASF31
 2837 0543 01       		.byte	0x1
 2838 0544 6E0B     		.2byte	0xb6e
 2839 0546 6B000000 		.4byte	0x6b
 2840 054a F6010000 		.4byte	.LLST16
 2841 054e 17       		.uleb128 0x17
 2842 054f F0030000 		.4byte	.LASF58
 2843 0553 01       		.byte	0x1
 2844 0554 6E0B     		.2byte	0xb6e
 2845 0556 6B000000 		.4byte	0x6b
 2846 055a 17020000 		.4byte	.LLST17
 2847 055e 13       		.uleb128 0x13
 2848 055f 11010000 		.4byte	.LASF22
 2849 0563 01       		.byte	0x1
 2850 0564 700B     		.2byte	0xb70
 2851 0566 6B000000 		.4byte	0x6b
 2852 056a 38020000 		.4byte	.LLST18
 2853 056e 13       		.uleb128 0x13
 2854 056f 4E020000 		.4byte	.LASF59
 2855 0573 01       		.byte	0x1
 2856 0574 710B     		.2byte	0xb71
 2857 0576 83000000 		.4byte	0x83
 2858 057a 4B020000 		.4byte	.LLST19
 2859 057e 13       		.uleb128 0x13
 2860 057f F9020000 		.4byte	.LASF30
 2861 0583 01       		.byte	0x1
 2862 0584 720B     		.2byte	0xb72
 2863 0586 83000000 		.4byte	0x83
 2864 058a 5E020000 		.4byte	.LLST20
 2865 058e 15       		.uleb128 0x15
 2866 058f 18000000 		.4byte	.LVL40
 2867 0593 2A0C0000 		.4byte	0xc2a
 2868 0597 15       		.uleb128 0x15
 2869 0598 2C000000 		.4byte	.LVL44
 2870 059c 350C0000 		.4byte	0xc35
 2871 05a0 00       		.byte	0
 2872 05a1 19       		.uleb128 0x19
 2873 05a2 91020000 		.4byte	.LASF60
 2874 05a6 01       		.byte	0x1
 2875 05a7 900B     		.2byte	0xb90
 2876 05a9 6B000000 		.4byte	0x6b
 2877 05ad 00000000 		.4byte	.LFB20
 2878 05b1 20000000 		.4byte	.LFE20-.LFB20
 2879 05b5 01       		.uleb128 0x1
 2880 05b6 9C       		.byte	0x9c
 2881 05b7 DC050000 		.4byte	0x5dc
 2882 05bb 17       		.uleb128 0x17
 2883 05bc E9030000 		.4byte	.LASF31
 2884 05c0 01       		.byte	0x1
 2885 05c1 900B     		.2byte	0xb90
 2886 05c3 6B000000 		.4byte	0x6b
 2887 05c7 7C020000 		.4byte	.LLST21
 2888 05cb 13       		.uleb128 0x13
 2889 05cc F0030000 		.4byte	.LASF58
 2890 05d0 01       		.byte	0x1
 2891 05d1 920B     		.2byte	0xb92
 2892 05d3 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 118


 2893 05d7 9D020000 		.4byte	.LLST22
 2894 05db 00       		.byte	0
 2895 05dc 12       		.uleb128 0x12
 2896 05dd 55050000 		.4byte	.LASF61
 2897 05e1 01       		.byte	0x1
 2898 05e2 A50B     		.2byte	0xba5
 2899 05e4 00000000 		.4byte	.LFB21
 2900 05e8 14000000 		.4byte	.LFE21-.LFB21
 2901 05ec 01       		.uleb128 0x1
 2902 05ed 9C       		.byte	0x9c
 2903 05ee 03060000 		.4byte	0x603
 2904 05f2 17       		.uleb128 0x17
 2905 05f3 E9030000 		.4byte	.LASF31
 2906 05f7 01       		.byte	0x1
 2907 05f8 A50B     		.2byte	0xba5
 2908 05fa 6B000000 		.4byte	0x6b
 2909 05fe BE020000 		.4byte	.LLST23
 2910 0602 00       		.byte	0
 2911 0603 19       		.uleb128 0x19
 2912 0604 D8000000 		.4byte	.LASF62
 2913 0608 01       		.byte	0x1
 2914 0609 B70B     		.2byte	0xbb7
 2915 060b 6B000000 		.4byte	0x6b
 2916 060f 00000000 		.4byte	.LFB22
 2917 0613 18000000 		.4byte	.LFE22-.LFB22
 2918 0617 01       		.uleb128 0x1
 2919 0618 9C       		.byte	0x9c
 2920 0619 2E060000 		.4byte	0x62e
 2921 061d 17       		.uleb128 0x17
 2922 061e E9030000 		.4byte	.LASF31
 2923 0622 01       		.byte	0x1
 2924 0623 B70B     		.2byte	0xbb7
 2925 0625 6B000000 		.4byte	0x6b
 2926 0629 DF020000 		.4byte	.LLST24
 2927 062d 00       		.byte	0
 2928 062e 12       		.uleb128 0x12
 2929 062f 62010000 		.4byte	.LASF63
 2930 0633 01       		.byte	0x1
 2931 0634 C70B     		.2byte	0xbc7
 2932 0636 00000000 		.4byte	.LFB23
 2933 063a 14000000 		.4byte	.LFE23-.LFB23
 2934 063e 01       		.uleb128 0x1
 2935 063f 9C       		.byte	0x9c
 2936 0640 55060000 		.4byte	0x655
 2937 0644 17       		.uleb128 0x17
 2938 0645 E9030000 		.4byte	.LASF31
 2939 0649 01       		.byte	0x1
 2940 064a C70B     		.2byte	0xbc7
 2941 064c 6B000000 		.4byte	0x6b
 2942 0650 00030000 		.4byte	.LLST25
 2943 0654 00       		.byte	0
 2944 0655 12       		.uleb128 0x12
 2945 0656 84030000 		.4byte	.LASF64
 2946 065a 01       		.byte	0x1
 2947 065b D50B     		.2byte	0xbd5
 2948 065d 00000000 		.4byte	.LFB24
 2949 0661 14000000 		.4byte	.LFE24-.LFB24
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 119


 2950 0665 01       		.uleb128 0x1
 2951 0666 9C       		.byte	0x9c
 2952 0667 7C060000 		.4byte	0x67c
 2953 066b 17       		.uleb128 0x17
 2954 066c E9030000 		.4byte	.LASF31
 2955 0670 01       		.byte	0x1
 2956 0671 D50B     		.2byte	0xbd5
 2957 0673 6B000000 		.4byte	0x6b
 2958 0677 21030000 		.4byte	.LLST26
 2959 067b 00       		.byte	0
 2960 067c 12       		.uleb128 0x12
 2961 067d 65040000 		.4byte	.LASF65
 2962 0681 01       		.byte	0x1
 2963 0682 E40B     		.2byte	0xbe4
 2964 0684 00000000 		.4byte	.LFB25
 2965 0688 14000000 		.4byte	.LFE25-.LFB25
 2966 068c 01       		.uleb128 0x1
 2967 068d 9C       		.byte	0x9c
 2968 068e A3060000 		.4byte	0x6a3
 2969 0692 17       		.uleb128 0x17
 2970 0693 E9030000 		.4byte	.LASF31
 2971 0697 01       		.byte	0x1
 2972 0698 E40B     		.2byte	0xbe4
 2973 069a 6B000000 		.4byte	0x6b
 2974 069e 42030000 		.4byte	.LLST27
 2975 06a2 00       		.byte	0
 2976 06a3 12       		.uleb128 0x12
 2977 06a4 2F050000 		.4byte	.LASF66
 2978 06a8 01       		.byte	0x1
 2979 06a9 F30B     		.2byte	0xbf3
 2980 06ab 00000000 		.4byte	.LFB26
 2981 06af 04000000 		.4byte	.LFE26-.LFB26
 2982 06b3 01       		.uleb128 0x1
 2983 06b4 9C       		.byte	0x9c
 2984 06b5 C8060000 		.4byte	0x6c8
 2985 06b9 18       		.uleb128 0x18
 2986 06ba 44050000 		.4byte	.LASF48
 2987 06be 01       		.byte	0x1
 2988 06bf F30B     		.2byte	0xbf3
 2989 06c1 6B000000 		.4byte	0x6b
 2990 06c5 01       		.uleb128 0x1
 2991 06c6 50       		.byte	0x50
 2992 06c7 00       		.byte	0
 2993 06c8 21       		.uleb128 0x21
 2994 06c9 AF000000 		.4byte	.LASF68
 2995 06cd 01       		.byte	0x1
 2996 06ce 0B0C     		.2byte	0xc0b
 2997 06d0 00000000 		.4byte	.LFB27
 2998 06d4 18000000 		.4byte	.LFE27-.LFB27
 2999 06d8 01       		.uleb128 0x1
 3000 06d9 9C       		.byte	0x9c
 3001 06da 12       		.uleb128 0x12
 3002 06db 3B060000 		.4byte	.LASF69
 3003 06df 01       		.byte	0x1
 3004 06e0 1F0C     		.2byte	0xc1f
 3005 06e2 00000000 		.4byte	.LFB28
 3006 06e6 2C000000 		.4byte	.LFE28-.LFB28
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 120


 3007 06ea 01       		.uleb128 0x1
 3008 06eb 9C       		.byte	0x9c
 3009 06ec 13070000 		.4byte	0x713
 3010 06f0 17       		.uleb128 0x17
 3011 06f1 0F050000 		.4byte	.LASF70
 3012 06f5 01       		.byte	0x1
 3013 06f6 1F0C     		.2byte	0xc1f
 3014 06f8 83000000 		.4byte	0x83
 3015 06fc 63030000 		.4byte	.LLST28
 3016 0700 15       		.uleb128 0x15
 3017 0701 14000000 		.4byte	.LVL64
 3018 0705 400C0000 		.4byte	0xc40
 3019 0709 15       		.uleb128 0x15
 3020 070a 22000000 		.4byte	.LVL66
 3021 070e 400C0000 		.4byte	0xc40
 3022 0712 00       		.byte	0
 3023 0713 1B       		.uleb128 0x1b
 3024 0714 F3000000 		.4byte	0xf3
 3025 0718 00000000 		.4byte	.LFB3
 3026 071c C4000000 		.4byte	.LFE3-.LFB3
 3027 0720 01       		.uleb128 0x1
 3028 0721 9C       		.byte	0x9c
 3029 0722 D9070000 		.4byte	0x7d9
 3030 0726 22       		.uleb128 0x22
 3031 0727 FF000000 		.4byte	0xff
 3032 072b 22       		.uleb128 0x22
 3033 072c 0A010000 		.4byte	0x10a
 3034 0730 22       		.uleb128 0x22
 3035 0731 15010000 		.4byte	0x115
 3036 0735 23       		.uleb128 0x23
 3037 0736 20010000 		.4byte	0x120
 3038 073a 00       		.byte	0
 3039 073b 22       		.uleb128 0x22
 3040 073c 2B010000 		.4byte	0x12b
 3041 0740 24       		.uleb128 0x24
 3042 0741 0C000000 		.4byte	.LBB13
 3043 0745 8E000000 		.4byte	.LBE13-.LBB13
 3044 0749 CF070000 		.4byte	0x7cf
 3045 074d 25       		.uleb128 0x25
 3046 074e FF000000 		.4byte	0xff
 3047 0752 81030000 		.4byte	.LLST29
 3048 0756 25       		.uleb128 0x25
 3049 0757 0A010000 		.4byte	0x10a
 3050 075b BB030000 		.4byte	.LLST30
 3051 075f 25       		.uleb128 0x25
 3052 0760 15010000 		.4byte	0x115
 3053 0764 CF030000 		.4byte	.LLST31
 3054 0768 25       		.uleb128 0x25
 3055 0769 20010000 		.4byte	0x120
 3056 076d 18040000 		.4byte	.LLST32
 3057 0771 1E       		.uleb128 0x1e
 3058 0772 2B010000 		.4byte	0x12b
 3059 0776 02       		.uleb128 0x2
 3060 0777 91       		.byte	0x91
 3061 0778 64       		.sleb128 -28
 3062 0779 15       		.uleb128 0x15
 3063 077a 10000000 		.4byte	.LVL70
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 121


 3064 077e 2A0C0000 		.4byte	0xc2a
 3065 0782 26       		.uleb128 0x26
 3066 0783 5A000000 		.4byte	.LVL81
 3067 0787 4B0C0000 		.4byte	0xc4b
 3068 078b 96070000 		.4byte	0x796
 3069 078f 27       		.uleb128 0x27
 3070 0790 01       		.uleb128 0x1
 3071 0791 50       		.byte	0x50
 3072 0792 02       		.uleb128 0x2
 3073 0793 08       		.byte	0x8
 3074 0794 30       		.byte	0x30
 3075 0795 00       		.byte	0
 3076 0796 26       		.uleb128 0x26
 3077 0797 76000000 		.4byte	.LVL84
 3078 079b DA060000 		.4byte	0x6da
 3079 079f A9070000 		.4byte	0x7a9
 3080 07a3 27       		.uleb128 0x27
 3081 07a4 01       		.uleb128 0x1
 3082 07a5 50       		.byte	0x50
 3083 07a6 01       		.uleb128 0x1
 3084 07a7 31       		.byte	0x31
 3085 07a8 00       		.byte	0
 3086 07a9 26       		.uleb128 0x26
 3087 07aa 86000000 		.4byte	.LVL85
 3088 07ae DA060000 		.4byte	0x6da
 3089 07b2 BC070000 		.4byte	0x7bc
 3090 07b6 27       		.uleb128 0x27
 3091 07b7 01       		.uleb128 0x1
 3092 07b8 50       		.byte	0x50
 3093 07b9 01       		.uleb128 0x1
 3094 07ba 31       		.byte	0x31
 3095 07bb 00       		.byte	0
 3096 07bc 28       		.uleb128 0x28
 3097 07bd 9A000000 		.4byte	.LVL86
 3098 07c1 350C0000 		.4byte	0xc35
 3099 07c5 27       		.uleb128 0x27
 3100 07c6 01       		.uleb128 0x1
 3101 07c7 50       		.byte	0x50
 3102 07c8 04       		.uleb128 0x4
 3103 07c9 91       		.byte	0x91
 3104 07ca 5C       		.sleb128 -36
 3105 07cb 94       		.byte	0x94
 3106 07cc 01       		.byte	0x1
 3107 07cd 00       		.byte	0
 3108 07ce 00       		.byte	0
 3109 07cf 15       		.uleb128 0x15
 3110 07d0 08000000 		.4byte	.LVL69
 3111 07d4 560C0000 		.4byte	0xc56
 3112 07d8 00       		.byte	0
 3113 07d9 12       		.uleb128 0x12
 3114 07da F9030000 		.4byte	.LASF71
 3115 07de 01       		.byte	0x1
 3116 07df EA03     		.2byte	0x3ea
 3117 07e1 00000000 		.4byte	.LFB10
 3118 07e5 B8000000 		.4byte	.LFE10-.LFB10
 3119 07e9 01       		.uleb128 0x1
 3120 07ea 9C       		.byte	0x9c
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 122


 3121 07eb 8E080000 		.4byte	0x88e
 3122 07ef 17       		.uleb128 0x17
 3123 07f0 00010000 		.4byte	.LASF21
 3124 07f4 01       		.byte	0x1
 3125 07f5 EA03     		.2byte	0x3ea
 3126 07f7 83000000 		.4byte	0x83
 3127 07fb 43040000 		.4byte	.LLST33
 3128 07ff 13       		.uleb128 0x13
 3129 0800 11010000 		.4byte	.LASF22
 3130 0804 01       		.byte	0x1
 3131 0805 EC03     		.2byte	0x3ec
 3132 0807 6B000000 		.4byte	0x6b
 3133 080b 89040000 		.4byte	.LLST34
 3134 080f 13       		.uleb128 0x13
 3135 0810 18060000 		.4byte	.LASF72
 3136 0814 01       		.byte	0x1
 3137 0815 ED03     		.2byte	0x3ed
 3138 0817 6B000000 		.4byte	0x6b
 3139 081b 9D040000 		.4byte	.LLST35
 3140 081f 13       		.uleb128 0x13
 3141 0820 51010000 		.4byte	.LASF73
 3142 0824 01       		.byte	0x1
 3143 0825 F003     		.2byte	0x3f0
 3144 0827 83000000 		.4byte	0x83
 3145 082b C1040000 		.4byte	.LLST36
 3146 082f 15       		.uleb128 0x15
 3147 0830 1C000000 		.4byte	.LVL88
 3148 0834 2A0C0000 		.4byte	0xc2a
 3149 0838 15       		.uleb128 0x15
 3150 0839 22000000 		.4byte	.LVL90
 3151 083d 2B020000 		.4byte	0x22b
 3152 0841 15       		.uleb128 0x15
 3153 0842 2C000000 		.4byte	.LVL92
 3154 0846 E5010000 		.4byte	0x1e5
 3155 084a 26       		.uleb128 0x26
 3156 084b 66000000 		.4byte	.LVL97
 3157 084f 400C0000 		.4byte	0xc40
 3158 0853 5E080000 		.4byte	0x85e
 3159 0857 27       		.uleb128 0x27
 3160 0858 01       		.uleb128 0x1
 3161 0859 50       		.byte	0x50
 3162 085a 02       		.uleb128 0x2
 3163 085b 08       		.byte	0x8
 3164 085c 32       		.byte	0x32
 3165 085d 00       		.byte	0
 3166 085e 26       		.uleb128 0x26
 3167 085f 7E000000 		.4byte	.LVL100
 3168 0863 400C0000 		.4byte	0xc40
 3169 0867 72080000 		.4byte	0x872
 3170 086b 27       		.uleb128 0x27
 3171 086c 01       		.uleb128 0x1
 3172 086d 50       		.byte	0x50
 3173 086e 02       		.uleb128 0x2
 3174 086f 08       		.byte	0x8
 3175 0870 32       		.byte	0x32
 3176 0871 00       		.byte	0
 3177 0872 15       		.uleb128 0x15
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 123


 3178 0873 92000000 		.4byte	.LVL102
 3179 0877 F3000000 		.4byte	0xf3
 3180 087b 28       		.uleb128 0x28
 3181 087c 98000000 		.4byte	.LVL103
 3182 0880 350C0000 		.4byte	0xc35
 3183 0884 27       		.uleb128 0x27
 3184 0885 01       		.uleb128 0x1
 3185 0886 50       		.byte	0x50
 3186 0887 04       		.uleb128 0x4
 3187 0888 91       		.byte	0x91
 3188 0889 64       		.sleb128 -28
 3189 088a 94       		.byte	0x94
 3190 088b 01       		.byte	0x1
 3191 088c 00       		.byte	0
 3192 088d 00       		.byte	0
 3193 088e 12       		.uleb128 0x12
 3194 088f 7D050000 		.4byte	.LASF74
 3195 0893 01       		.byte	0x1
 3196 0894 360C     		.2byte	0xc36
 3197 0896 00000000 		.4byte	.LFB29
 3198 089a 14000000 		.4byte	.LFE29-.LFB29
 3199 089e 01       		.uleb128 0x1
 3200 089f 9C       		.byte	0x9c
 3201 08a0 BE080000 		.4byte	0x8be
 3202 08a4 17       		.uleb128 0x17
 3203 08a5 E2060000 		.4byte	.LASF75
 3204 08a9 01       		.byte	0x1
 3205 08aa 360C     		.2byte	0xc36
 3206 08ac 77000000 		.4byte	0x77
 3207 08b0 ED040000 		.4byte	.LLST37
 3208 08b4 15       		.uleb128 0x15
 3209 08b5 0C000000 		.4byte	.LVL106
 3210 08b9 400C0000 		.4byte	0xc40
 3211 08bd 00       		.byte	0
 3212 08be 29       		.uleb128 0x29
 3213 08bf 05010000 		.4byte	.LASF76
 3214 08c3 01       		.byte	0x1
 3215 08c4 440C     		.2byte	0xc44
 3216 08c6 00000000 		.4byte	.LFB30
 3217 08ca 48000000 		.4byte	.LFE30-.LFB30
 3218 08ce 01       		.uleb128 0x1
 3219 08cf 9C       		.byte	0x9c
 3220 08d0 E5080000 		.4byte	0x8e5
 3221 08d4 17       		.uleb128 0x17
 3222 08d5 00010000 		.4byte	.LASF21
 3223 08d9 01       		.byte	0x1
 3224 08da 440C     		.2byte	0xc44
 3225 08dc 83000000 		.4byte	0x83
 3226 08e0 0E050000 		.4byte	.LLST38
 3227 08e4 00       		.byte	0
 3228 08e5 29       		.uleb128 0x29
 3229 08e6 EB020000 		.4byte	.LASF77
 3230 08ea 01       		.byte	0x1
 3231 08eb 810C     		.2byte	0xc81
 3232 08ed 00000000 		.4byte	.LFB32
 3233 08f1 54000000 		.4byte	.LFE32-.LFB32
 3234 08f5 01       		.uleb128 0x1
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 124


 3235 08f6 9C       		.byte	0x9c
 3236 08f7 A4090000 		.4byte	0x9a4
 3237 08fb 2A       		.uleb128 0x2a
 3238 08fc 6900     		.ascii	"i\000"
 3239 08fe 01       		.byte	0x1
 3240 08ff 830C     		.2byte	0xc83
 3241 0901 83000000 		.4byte	0x83
 3242 0905 2F050000 		.4byte	.LLST39
 3243 0909 2B       		.uleb128 0x2b
 3244 090a 37010000 		.4byte	0x137
 3245 090e 04000000 		.4byte	.LBB24
 3246 0912 00000000 		.4byte	.Ldebug_ranges0+0
 3247 0916 01       		.byte	0x1
 3248 0917 8D0C     		.2byte	0xc8d
 3249 0919 36090000 		.4byte	0x936
 3250 091d 1C       		.uleb128 0x1c
 3251 091e 44010000 		.4byte	0x144
 3252 0922 73050000 		.4byte	.LLST40
 3253 0926 2C       		.uleb128 0x2c
 3254 0927 00000000 		.4byte	.Ldebug_ranges0+0
 3255 092b 1C       		.uleb128 0x1c
 3256 092c 44010000 		.4byte	0x144
 3257 0930 73050000 		.4byte	.LLST40
 3258 0934 00       		.byte	0
 3259 0935 00       		.byte	0
 3260 0936 2B       		.uleb128 0x2b
 3261 0937 8C010000 		.4byte	0x18c
 3262 093b 08000000 		.4byte	.LBB31
 3263 093f 20000000 		.4byte	.Ldebug_ranges0+0x20
 3264 0943 01       		.byte	0x1
 3265 0944 8A0C     		.2byte	0xc8a
 3266 0946 75090000 		.4byte	0x975
 3267 094a 1C       		.uleb128 0x1c
 3268 094b A9010000 		.4byte	0x1a9
 3269 094f 87050000 		.4byte	.LLST42
 3270 0953 1C       		.uleb128 0x1c
 3271 0954 9D010000 		.4byte	0x19d
 3272 0958 9F050000 		.4byte	.LLST43
 3273 095c 2C       		.uleb128 0x2c
 3274 095d 20000000 		.4byte	.Ldebug_ranges0+0x20
 3275 0961 25       		.uleb128 0x25
 3276 0962 B5010000 		.4byte	0x1b5
 3277 0966 B3050000 		.4byte	.LLST44
 3278 096a 1F       		.uleb128 0x1f
 3279 096b C1010000 		.4byte	0x1c1
 3280 096f 00000020 		.4byte	0x20000000
 3281 0973 00       		.byte	0
 3282 0974 00       		.byte	0
 3283 0975 2D       		.uleb128 0x2d
 3284 0976 72010000 		.4byte	0x172
 3285 097a 2C000000 		.4byte	.LBB39
 3286 097e 04000000 		.4byte	.LBE39-.LBB39
 3287 0982 01       		.byte	0x1
 3288 0983 900C     		.2byte	0xc90
 3289 0985 93090000 		.4byte	0x993
 3290 0989 1C       		.uleb128 0x1c
 3291 098a 7F010000 		.4byte	0x17f
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 125


 3292 098e D6050000 		.4byte	.LLST45
 3293 0992 00       		.byte	0
 3294 0993 2E       		.uleb128 0x2e
 3295 0994 69010000 		.4byte	0x169
 3296 0998 30000000 		.4byte	.LBB41
 3297 099c 04000000 		.4byte	.LBE41-.LBB41
 3298 09a0 01       		.byte	0x1
 3299 09a1 910C     		.2byte	0xc91
 3300 09a3 00       		.byte	0
 3301 09a4 21       		.uleb128 0x21
 3302 09a5 84060000 		.4byte	.LASF78
 3303 09a9 01       		.byte	0x1
 3304 09aa B00C     		.2byte	0xcb0
 3305 09ac 00000000 		.4byte	.LFB34
 3306 09b0 10000000 		.4byte	.LFE34-.LFB34
 3307 09b4 01       		.uleb128 0x1
 3308 09b5 9C       		.byte	0x9c
 3309 09b6 21       		.uleb128 0x21
 3310 09b7 BF000000 		.4byte	.LASF79
 3311 09bb 01       		.byte	0x1
 3312 09bc C00C     		.2byte	0xcc0
 3313 09be 00000000 		.4byte	.LFB35
 3314 09c2 10000000 		.4byte	.LFE35-.LFB35
 3315 09c6 01       		.uleb128 0x1
 3316 09c7 9C       		.byte	0x9c
 3317 09c8 12       		.uleb128 0x12
 3318 09c9 B3050000 		.4byte	.LASF80
 3319 09cd 01       		.byte	0x1
 3320 09ce 9F0C     		.2byte	0xc9f
 3321 09d0 00000000 		.4byte	.LFB33
 3322 09d4 18000000 		.4byte	.LFE33-.LFB33
 3323 09d8 01       		.uleb128 0x1
 3324 09d9 9C       		.byte	0x9c
 3325 09da E8090000 		.4byte	0x9e8
 3326 09de 15       		.uleb128 0x15
 3327 09df 06000000 		.4byte	.LVL121
 3328 09e3 B6090000 		.4byte	0x9b6
 3329 09e7 00       		.byte	0
 3330 09e8 12       		.uleb128 0x12
 3331 09e9 40040000 		.4byte	.LASF81
 3332 09ed 01       		.byte	0x1
 3333 09ee 640C     		.2byte	0xc64
 3334 09f0 00000000 		.4byte	.LFB31
 3335 09f4 1C000000 		.4byte	.LFE31-.LFB31
 3336 09f8 01       		.uleb128 0x1
 3337 09f9 9C       		.byte	0x9c
 3338 09fa 110A0000 		.4byte	0xa11
 3339 09fe 15       		.uleb128 0x15
 3340 09ff 0E000000 		.4byte	.LVL122
 3341 0a03 E5080000 		.4byte	0x8e5
 3342 0a07 15       		.uleb128 0x15
 3343 0a08 16000000 		.4byte	.LVL123
 3344 0a0c C8090000 		.4byte	0x9c8
 3345 0a10 00       		.byte	0
 3346 0a11 21       		.uleb128 0x21
 3347 0a12 5B060000 		.4byte	.LASF82
 3348 0a16 01       		.byte	0x1
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 126


 3349 0a17 D00C     		.2byte	0xcd0
 3350 0a19 00000000 		.4byte	.LFB36
 3351 0a1d 10000000 		.4byte	.LFE36-.LFB36
 3352 0a21 01       		.uleb128 0x1
 3353 0a22 9C       		.byte	0x9c
 3354 0a23 1B       		.uleb128 0x1b
 3355 0a24 72010000 		.4byte	0x172
 3356 0a28 00000000 		.4byte	.LFB37
 3357 0a2c 10000000 		.4byte	.LFE37-.LFB37
 3358 0a30 01       		.uleb128 0x1
 3359 0a31 9C       		.byte	0x9c
 3360 0a32 400A0000 		.4byte	0xa40
 3361 0a36 1C       		.uleb128 0x1c
 3362 0a37 7F010000 		.4byte	0x17f
 3363 0a3b E9050000 		.4byte	.LLST46
 3364 0a3f 00       		.byte	0
 3365 0a40 16       		.uleb128 0x16
 3366 0a41 28010000 		.4byte	.LASF84
 3367 0a45 01       		.byte	0x1
 3368 0a46 F10C     		.2byte	0xcf1
 3369 0a48 83000000 		.4byte	0x83
 3370 0a4c 00000000 		.4byte	.LFB38
 3371 0a50 10000000 		.4byte	.LFE38-.LFB38
 3372 0a54 01       		.uleb128 0x1
 3373 0a55 9C       		.byte	0x9c
 3374 0a56 16       		.uleb128 0x16
 3375 0a57 A1040000 		.4byte	.LASF85
 3376 0a5b 01       		.byte	0x1
 3377 0a5c 010D     		.2byte	0xd01
 3378 0a5e 83000000 		.4byte	0x83
 3379 0a62 00000000 		.4byte	.LFB39
 3380 0a66 10000000 		.4byte	.LFE39-.LFB39
 3381 0a6a 01       		.uleb128 0x1
 3382 0a6b 9C       		.byte	0x9c
 3383 0a6c 1B       		.uleb128 0x1b
 3384 0a6d 37010000 		.4byte	0x137
 3385 0a71 00000000 		.4byte	.LFB40
 3386 0a75 18000000 		.4byte	.LFE40-.LFB40
 3387 0a79 01       		.uleb128 0x1
 3388 0a7a 9C       		.byte	0x9c
 3389 0a7b 960A0000 		.4byte	0xa96
 3390 0a7f 1D       		.uleb128 0x1d
 3391 0a80 44010000 		.4byte	0x144
 3392 0a84 01       		.uleb128 0x1
 3393 0a85 50       		.byte	0x50
 3394 0a86 2C       		.uleb128 0x2c
 3395 0a87 40000000 		.4byte	.Ldebug_ranges0+0x40
 3396 0a8b 1C       		.uleb128 0x1c
 3397 0a8c 44010000 		.4byte	0x144
 3398 0a90 0A060000 		.4byte	.LLST47
 3399 0a94 00       		.byte	0
 3400 0a95 00       		.byte	0
 3401 0a96 16       		.uleb128 0x16
 3402 0a97 43060000 		.4byte	.LASF86
 3403 0a9b 01       		.byte	0x1
 3404 0a9c 3A0D     		.2byte	0xd3a
 3405 0a9e 83000000 		.4byte	0x83
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 127


 3406 0aa2 00000000 		.4byte	.LFB41
 3407 0aa6 10000000 		.4byte	.LFE41-.LFB41
 3408 0aaa 01       		.uleb128 0x1
 3409 0aab 9C       		.byte	0x9c
 3410 0aac 16       		.uleb128 0x16
 3411 0aad 19030000 		.4byte	.LASF87
 3412 0ab1 01       		.byte	0x1
 3413 0ab2 510D     		.2byte	0xd51
 3414 0ab4 83000000 		.4byte	0x83
 3415 0ab8 00000000 		.4byte	.LFB42
 3416 0abc 10000000 		.4byte	.LFE42-.LFB42
 3417 0ac0 01       		.uleb128 0x1
 3418 0ac1 9C       		.byte	0x9c
 3419 0ac2 2F       		.uleb128 0x2f
 3420 0ac3 51010000 		.4byte	0x151
 3421 0ac7 00000000 		.4byte	.LFB46
 3422 0acb 24000000 		.4byte	.LFE46-.LFB46
 3423 0acf 01       		.uleb128 0x1
 3424 0ad0 9C       		.byte	0x9c
 3425 0ad1 F70A0000 		.4byte	0xaf7
 3426 0ad5 22       		.uleb128 0x22
 3427 0ad6 5E010000 		.4byte	0x15e
 3428 0ada 24       		.uleb128 0x24
 3429 0adb 0C000000 		.4byte	.LBB51
 3430 0adf 10000000 		.4byte	.LBE51-.LBB51
 3431 0ae3 ED0A0000 		.4byte	0xaed
 3432 0ae7 22       		.uleb128 0x22
 3433 0ae8 5E010000 		.4byte	0x15e
 3434 0aec 00       		.byte	0
 3435 0aed 15       		.uleb128 0x15
 3436 0aee 06000000 		.4byte	.LVL129
 3437 0af2 AC0A0000 		.4byte	0xaac
 3438 0af6 00       		.byte	0
 3439 0af7 30       		.uleb128 0x30
 3440 0af8 69010000 		.4byte	0x169
 3441 0afc 00000000 		.4byte	.LFB43
 3442 0b00 0C000000 		.4byte	.LFE43-.LFB43
 3443 0b04 01       		.uleb128 0x1
 3444 0b05 9C       		.byte	0x9c
 3445 0b06 19       		.uleb128 0x19
 3446 0b07 F0050000 		.4byte	.LASF88
 3447 0b0b 01       		.byte	0x1
 3448 0b0c 810D     		.2byte	0xd81
 3449 0b0e E7000000 		.4byte	0xe7
 3450 0b12 00000000 		.4byte	.LFB44
 3451 0b16 10000000 		.4byte	.LFE44-.LFB44
 3452 0b1a 01       		.uleb128 0x1
 3453 0b1b 9C       		.byte	0x9c
 3454 0b1c 4D0B0000 		.4byte	0xb4d
 3455 0b20 17       		.uleb128 0x17
 3456 0b21 E9030000 		.4byte	.LASF31
 3457 0b25 01       		.byte	0x1
 3458 0b26 810D     		.2byte	0xd81
 3459 0b28 83000000 		.4byte	0x83
 3460 0b2c 1E060000 		.4byte	.LLST48
 3461 0b30 18       		.uleb128 0x18
 3462 0b31 98040000 		.4byte	.LASF89
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 128


 3463 0b35 01       		.byte	0x1
 3464 0b36 810D     		.2byte	0xd81
 3465 0b38 E7000000 		.4byte	0xe7
 3466 0b3c 01       		.uleb128 0x1
 3467 0b3d 51       		.byte	0x51
 3468 0b3e 1A       		.uleb128 0x1a
 3469 0b3f 52000000 		.4byte	.LASF90
 3470 0b43 01       		.byte	0x1
 3471 0b44 830D     		.2byte	0xd83
 3472 0b46 E7000000 		.4byte	0xe7
 3473 0b4a 01       		.uleb128 0x1
 3474 0b4b 50       		.byte	0x50
 3475 0b4c 00       		.byte	0
 3476 0b4d 19       		.uleb128 0x19
 3477 0b4e 01020000 		.4byte	.LASF91
 3478 0b52 01       		.byte	0x1
 3479 0b53 990D     		.2byte	0xd99
 3480 0b55 E7000000 		.4byte	0xe7
 3481 0b59 00000000 		.4byte	.LFB45
 3482 0b5d 0C000000 		.4byte	.LFE45-.LFB45
 3483 0b61 01       		.uleb128 0x1
 3484 0b62 9C       		.byte	0x9c
 3485 0b63 780B0000 		.4byte	0xb78
 3486 0b67 17       		.uleb128 0x17
 3487 0b68 E9030000 		.4byte	.LASF31
 3488 0b6c 01       		.byte	0x1
 3489 0b6d 990D     		.2byte	0xd99
 3490 0b6f 83000000 		.4byte	0x83
 3491 0b73 3F060000 		.4byte	.LLST49
 3492 0b77 00       		.byte	0
 3493 0b78 12       		.uleb128 0x12
 3494 0b79 0B030000 		.4byte	.LASF92
 3495 0b7d 01       		.byte	0x1
 3496 0b7e C60D     		.2byte	0xdc6
 3497 0b80 00000000 		.4byte	.LFB47
 3498 0b84 74000000 		.4byte	.LFE47-.LFB47
 3499 0b88 01       		.uleb128 0x1
 3500 0b89 9C       		.byte	0x9c
 3501 0b8a 9D0B0000 		.4byte	0xb9d
 3502 0b8e 18       		.uleb128 0x18
 3503 0b8f 26060000 		.4byte	.LASF93
 3504 0b93 01       		.byte	0x1
 3505 0b94 C60D     		.2byte	0xdc6
 3506 0b96 9D0B0000 		.4byte	0xb9d
 3507 0b9a 01       		.uleb128 0x1
 3508 0b9b 50       		.byte	0x50
 3509 0b9c 00       		.byte	0
 3510 0b9d 06       		.uleb128 0x6
 3511 0b9e 04       		.byte	0x4
 3512 0b9f 83000000 		.4byte	0x83
 3513 0ba3 31       		.uleb128 0x31
 3514 0ba4 E7000000 		.4byte	0xe7
 3515 0ba8 B30B0000 		.4byte	0xbb3
 3516 0bac 32       		.uleb128 0x32
 3517 0bad E0000000 		.4byte	0xe0
 3518 0bb1 04       		.byte	0x4
 3519 0bb2 00       		.byte	0
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 129


 3520 0bb3 33       		.uleb128 0x33
 3521 0bb4 05060000 		.4byte	.LASF94
 3522 0bb8 01       		.byte	0x1
 3523 0bb9 22       		.byte	0x22
 3524 0bba A30B0000 		.4byte	0xba3
 3525 0bbe 05       		.uleb128 0x5
 3526 0bbf 03       		.byte	0x3
 3527 0bc0 00000000 		.4byte	CySysTickCallbacks
 3528 0bc4 34       		.uleb128 0x34
 3529 0bc5 B3040000 		.4byte	.LASF95
 3530 0bc9 01       		.byte	0x1
 3531 0bca 1B       		.byte	0x1b
 3532 0bcb 83000000 		.4byte	0x83
 3533 0bcf 05       		.uleb128 0x5
 3534 0bd0 03       		.byte	0x3
 3535 0bd1 00000000 		.4byte	cydelayFreqHz
 3536 0bd5 34       		.uleb128 0x34
 3537 0bd6 31020000 		.4byte	.LASF96
 3538 0bda 01       		.byte	0x1
 3539 0bdb 1C       		.byte	0x1c
 3540 0bdc 83000000 		.4byte	0x83
 3541 0be0 05       		.uleb128 0x5
 3542 0be1 03       		.byte	0x3
 3543 0be2 00000000 		.4byte	cydelayFreqKhz
 3544 0be6 34       		.uleb128 0x34
 3545 0be7 75060000 		.4byte	.LASF97
 3546 0beb 01       		.byte	0x1
 3547 0bec 1D       		.byte	0x1d
 3548 0bed 6B000000 		.4byte	0x6b
 3549 0bf1 05       		.uleb128 0x5
 3550 0bf2 03       		.byte	0x3
 3551 0bf3 00000000 		.4byte	cydelayFreqMhz
 3552 0bf7 34       		.uleb128 0x34
 3553 0bf8 A2020000 		.4byte	.LASF98
 3554 0bfc 01       		.byte	0x1
 3555 0bfd 1E       		.byte	0x1e
 3556 0bfe 83000000 		.4byte	0x83
 3557 0c02 05       		.uleb128 0x5
 3558 0c03 03       		.byte	0x3
 3559 0c04 00000000 		.4byte	cydelay32kMs
 3560 0c08 34       		.uleb128 0x34
 3561 0c09 7E000000 		.4byte	.LASF99
 3562 0c0d 01       		.byte	0x1
 3563 0c0e 36       		.byte	0x36
 3564 0c0f 83000000 		.4byte	0x83
 3565 0c13 05       		.uleb128 0x5
 3566 0c14 03       		.byte	0x3
 3567 0c15 00000000 		.4byte	CySysTickInitVar
 3568 0c19 34       		.uleb128 0x34
 3569 0c1a 38000000 		.4byte	.LASF100
 3570 0c1e 01       		.byte	0x1
 3571 0c1f 58       		.byte	0x58
 3572 0c20 83000000 		.4byte	0x83
 3573 0c24 05       		.uleb128 0x5
 3574 0c25 03       		.byte	0x3
 3575 0c26 00000000 		.4byte	CySysClkPumpConfig
 3576 0c2a 35       		.uleb128 0x35
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 130


 3577 0c2b 6D030000 		.4byte	.LASF101
 3578 0c2f 6D030000 		.4byte	.LASF101
 3579 0c33 03       		.byte	0x3
 3580 0c34 F8       		.byte	0xf8
 3581 0c35 35       		.uleb128 0x35
 3582 0c36 D8040000 		.4byte	.LASF102
 3583 0c3a D8040000 		.4byte	.LASF102
 3584 0c3e 03       		.byte	0x3
 3585 0c3f F9       		.byte	0xf9
 3586 0c40 35       		.uleb128 0x35
 3587 0c41 1C050000 		.4byte	.LASF103
 3588 0c45 1C050000 		.4byte	.LASF103
 3589 0c49 03       		.byte	0x3
 3590 0c4a EF       		.byte	0xef
 3591 0c4b 35       		.uleb128 0x35
 3592 0c4c AB060000 		.4byte	.LASF104
 3593 0c50 AB060000 		.4byte	.LASF104
 3594 0c54 04       		.byte	0x4
 3595 0c55 52       		.byte	0x52
 3596 0c56 35       		.uleb128 0x35
 3597 0c57 9C000000 		.4byte	.LASF105
 3598 0c5b 9C000000 		.4byte	.LASF105
 3599 0c5f 05       		.byte	0x5
 3600 0c60 54       		.byte	0x54
 3601 0c61 00       		.byte	0
 3602              		.section	.debug_abbrev,"",%progbits
 3603              	.Ldebug_abbrev0:
 3604 0000 01       		.uleb128 0x1
 3605 0001 11       		.uleb128 0x11
 3606 0002 01       		.byte	0x1
 3607 0003 25       		.uleb128 0x25
 3608 0004 0E       		.uleb128 0xe
 3609 0005 13       		.uleb128 0x13
 3610 0006 0B       		.uleb128 0xb
 3611 0007 03       		.uleb128 0x3
 3612 0008 0E       		.uleb128 0xe
 3613 0009 1B       		.uleb128 0x1b
 3614 000a 0E       		.uleb128 0xe
 3615 000b 55       		.uleb128 0x55
 3616 000c 17       		.uleb128 0x17
 3617 000d 11       		.uleb128 0x11
 3618 000e 01       		.uleb128 0x1
 3619 000f 10       		.uleb128 0x10
 3620 0010 17       		.uleb128 0x17
 3621 0011 00       		.byte	0
 3622 0012 00       		.byte	0
 3623 0013 02       		.uleb128 0x2
 3624 0014 24       		.uleb128 0x24
 3625 0015 00       		.byte	0
 3626 0016 0B       		.uleb128 0xb
 3627 0017 0B       		.uleb128 0xb
 3628 0018 3E       		.uleb128 0x3e
 3629 0019 0B       		.uleb128 0xb
 3630 001a 03       		.uleb128 0x3
 3631 001b 0E       		.uleb128 0xe
 3632 001c 00       		.byte	0
 3633 001d 00       		.byte	0
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 131


 3634 001e 03       		.uleb128 0x3
 3635 001f 24       		.uleb128 0x24
 3636 0020 00       		.byte	0
 3637 0021 0B       		.uleb128 0xb
 3638 0022 0B       		.uleb128 0xb
 3639 0023 3E       		.uleb128 0x3e
 3640 0024 0B       		.uleb128 0xb
 3641 0025 03       		.uleb128 0x3
 3642 0026 08       		.uleb128 0x8
 3643 0027 00       		.byte	0
 3644 0028 00       		.byte	0
 3645 0029 04       		.uleb128 0x4
 3646 002a 16       		.uleb128 0x16
 3647 002b 00       		.byte	0
 3648 002c 03       		.uleb128 0x3
 3649 002d 0E       		.uleb128 0xe
 3650 002e 3A       		.uleb128 0x3a
 3651 002f 0B       		.uleb128 0xb
 3652 0030 3B       		.uleb128 0x3b
 3653 0031 05       		.uleb128 0x5
 3654 0032 49       		.uleb128 0x49
 3655 0033 13       		.uleb128 0x13
 3656 0034 00       		.byte	0
 3657 0035 00       		.byte	0
 3658 0036 05       		.uleb128 0x5
 3659 0037 35       		.uleb128 0x35
 3660 0038 00       		.byte	0
 3661 0039 49       		.uleb128 0x49
 3662 003a 13       		.uleb128 0x13
 3663 003b 00       		.byte	0
 3664 003c 00       		.byte	0
 3665 003d 06       		.uleb128 0x6
 3666 003e 0F       		.uleb128 0xf
 3667 003f 00       		.byte	0
 3668 0040 0B       		.uleb128 0xb
 3669 0041 0B       		.uleb128 0xb
 3670 0042 49       		.uleb128 0x49
 3671 0043 13       		.uleb128 0x13
 3672 0044 00       		.byte	0
 3673 0045 00       		.byte	0
 3674 0046 07       		.uleb128 0x7
 3675 0047 15       		.uleb128 0x15
 3676 0048 00       		.byte	0
 3677 0049 27       		.uleb128 0x27
 3678 004a 19       		.uleb128 0x19
 3679 004b 00       		.byte	0
 3680 004c 00       		.byte	0
 3681 004d 08       		.uleb128 0x8
 3682 004e 2E       		.uleb128 0x2e
 3683 004f 01       		.byte	0x1
 3684 0050 3F       		.uleb128 0x3f
 3685 0051 19       		.uleb128 0x19
 3686 0052 03       		.uleb128 0x3
 3687 0053 0E       		.uleb128 0xe
 3688 0054 3A       		.uleb128 0x3a
 3689 0055 0B       		.uleb128 0xb
 3690 0056 3B       		.uleb128 0x3b
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 132


 3691 0057 0B       		.uleb128 0xb
 3692 0058 27       		.uleb128 0x27
 3693 0059 19       		.uleb128 0x19
 3694 005a 20       		.uleb128 0x20
 3695 005b 0B       		.uleb128 0xb
 3696 005c 01       		.uleb128 0x1
 3697 005d 13       		.uleb128 0x13
 3698 005e 00       		.byte	0
 3699 005f 00       		.byte	0
 3700 0060 09       		.uleb128 0x9
 3701 0061 34       		.uleb128 0x34
 3702 0062 00       		.byte	0
 3703 0063 03       		.uleb128 0x3
 3704 0064 0E       		.uleb128 0xe
 3705 0065 3A       		.uleb128 0x3a
 3706 0066 0B       		.uleb128 0xb
 3707 0067 3B       		.uleb128 0x3b
 3708 0068 0B       		.uleb128 0xb
 3709 0069 49       		.uleb128 0x49
 3710 006a 13       		.uleb128 0x13
 3711 006b 00       		.byte	0
 3712 006c 00       		.byte	0
 3713 006d 0A       		.uleb128 0xa
 3714 006e 2E       		.uleb128 0x2e
 3715 006f 01       		.byte	0x1
 3716 0070 3F       		.uleb128 0x3f
 3717 0071 19       		.uleb128 0x19
 3718 0072 03       		.uleb128 0x3
 3719 0073 0E       		.uleb128 0xe
 3720 0074 3A       		.uleb128 0x3a
 3721 0075 0B       		.uleb128 0xb
 3722 0076 3B       		.uleb128 0x3b
 3723 0077 05       		.uleb128 0x5
 3724 0078 27       		.uleb128 0x27
 3725 0079 19       		.uleb128 0x19
 3726 007a 20       		.uleb128 0x20
 3727 007b 0B       		.uleb128 0xb
 3728 007c 01       		.uleb128 0x1
 3729 007d 13       		.uleb128 0x13
 3730 007e 00       		.byte	0
 3731 007f 00       		.byte	0
 3732 0080 0B       		.uleb128 0xb
 3733 0081 05       		.uleb128 0x5
 3734 0082 00       		.byte	0
 3735 0083 03       		.uleb128 0x3
 3736 0084 0E       		.uleb128 0xe
 3737 0085 3A       		.uleb128 0x3a
 3738 0086 0B       		.uleb128 0xb
 3739 0087 3B       		.uleb128 0x3b
 3740 0088 05       		.uleb128 0x5
 3741 0089 49       		.uleb128 0x49
 3742 008a 13       		.uleb128 0x13
 3743 008b 00       		.byte	0
 3744 008c 00       		.byte	0
 3745 008d 0C       		.uleb128 0xc
 3746 008e 2E       		.uleb128 0x2e
 3747 008f 01       		.byte	0x1
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 133


 3748 0090 03       		.uleb128 0x3
 3749 0091 0E       		.uleb128 0xe
 3750 0092 3A       		.uleb128 0x3a
 3751 0093 0B       		.uleb128 0xb
 3752 0094 3B       		.uleb128 0x3b
 3753 0095 05       		.uleb128 0x5
 3754 0096 27       		.uleb128 0x27
 3755 0097 19       		.uleb128 0x19
 3756 0098 20       		.uleb128 0x20
 3757 0099 0B       		.uleb128 0xb
 3758 009a 01       		.uleb128 0x1
 3759 009b 13       		.uleb128 0x13
 3760 009c 00       		.byte	0
 3761 009d 00       		.byte	0
 3762 009e 0D       		.uleb128 0xd
 3763 009f 34       		.uleb128 0x34
 3764 00a0 00       		.byte	0
 3765 00a1 03       		.uleb128 0x3
 3766 00a2 08       		.uleb128 0x8
 3767 00a3 3A       		.uleb128 0x3a
 3768 00a4 0B       		.uleb128 0xb
 3769 00a5 3B       		.uleb128 0x3b
 3770 00a6 05       		.uleb128 0x5
 3771 00a7 49       		.uleb128 0x49
 3772 00a8 13       		.uleb128 0x13
 3773 00a9 00       		.byte	0
 3774 00aa 00       		.byte	0
 3775 00ab 0E       		.uleb128 0xe
 3776 00ac 2E       		.uleb128 0x2e
 3777 00ad 00       		.byte	0
 3778 00ae 3F       		.uleb128 0x3f
 3779 00af 19       		.uleb128 0x19
 3780 00b0 03       		.uleb128 0x3
 3781 00b1 0E       		.uleb128 0xe
 3782 00b2 3A       		.uleb128 0x3a
 3783 00b3 0B       		.uleb128 0xb
 3784 00b4 3B       		.uleb128 0x3b
 3785 00b5 05       		.uleb128 0x5
 3786 00b6 27       		.uleb128 0x27
 3787 00b7 19       		.uleb128 0x19
 3788 00b8 20       		.uleb128 0x20
 3789 00b9 0B       		.uleb128 0xb
 3790 00ba 00       		.byte	0
 3791 00bb 00       		.byte	0
 3792 00bc 0F       		.uleb128 0xf
 3793 00bd 2E       		.uleb128 0x2e
 3794 00be 01       		.byte	0x1
 3795 00bf 3F       		.uleb128 0x3f
 3796 00c0 19       		.uleb128 0x19
 3797 00c1 03       		.uleb128 0x3
 3798 00c2 0E       		.uleb128 0xe
 3799 00c3 3A       		.uleb128 0x3a
 3800 00c4 0B       		.uleb128 0xb
 3801 00c5 3B       		.uleb128 0x3b
 3802 00c6 05       		.uleb128 0x5
 3803 00c7 27       		.uleb128 0x27
 3804 00c8 19       		.uleb128 0x19
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 134


 3805 00c9 49       		.uleb128 0x49
 3806 00ca 13       		.uleb128 0x13
 3807 00cb 20       		.uleb128 0x20
 3808 00cc 0B       		.uleb128 0xb
 3809 00cd 01       		.uleb128 0x1
 3810 00ce 13       		.uleb128 0x13
 3811 00cf 00       		.byte	0
 3812 00d0 00       		.byte	0
 3813 00d1 10       		.uleb128 0x10
 3814 00d2 34       		.uleb128 0x34
 3815 00d3 00       		.byte	0
 3816 00d4 03       		.uleb128 0x3
 3817 00d5 0E       		.uleb128 0xe
 3818 00d6 3A       		.uleb128 0x3a
 3819 00d7 0B       		.uleb128 0xb
 3820 00d8 3B       		.uleb128 0x3b
 3821 00d9 05       		.uleb128 0x5
 3822 00da 49       		.uleb128 0x49
 3823 00db 13       		.uleb128 0x13
 3824 00dc 00       		.byte	0
 3825 00dd 00       		.byte	0
 3826 00de 11       		.uleb128 0x11
 3827 00df 2E       		.uleb128 0x2e
 3828 00e0 00       		.byte	0
 3829 00e1 3F       		.uleb128 0x3f
 3830 00e2 19       		.uleb128 0x19
 3831 00e3 03       		.uleb128 0x3
 3832 00e4 0E       		.uleb128 0xe
 3833 00e5 3A       		.uleb128 0x3a
 3834 00e6 0B       		.uleb128 0xb
 3835 00e7 3B       		.uleb128 0x3b
 3836 00e8 0B       		.uleb128 0xb
 3837 00e9 27       		.uleb128 0x27
 3838 00ea 19       		.uleb128 0x19
 3839 00eb 11       		.uleb128 0x11
 3840 00ec 01       		.uleb128 0x1
 3841 00ed 12       		.uleb128 0x12
 3842 00ee 06       		.uleb128 0x6
 3843 00ef 40       		.uleb128 0x40
 3844 00f0 18       		.uleb128 0x18
 3845 00f1 9742     		.uleb128 0x2117
 3846 00f3 19       		.uleb128 0x19
 3847 00f4 00       		.byte	0
 3848 00f5 00       		.byte	0
 3849 00f6 12       		.uleb128 0x12
 3850 00f7 2E       		.uleb128 0x2e
 3851 00f8 01       		.byte	0x1
 3852 00f9 3F       		.uleb128 0x3f
 3853 00fa 19       		.uleb128 0x19
 3854 00fb 03       		.uleb128 0x3
 3855 00fc 0E       		.uleb128 0xe
 3856 00fd 3A       		.uleb128 0x3a
 3857 00fe 0B       		.uleb128 0xb
 3858 00ff 3B       		.uleb128 0x3b
 3859 0100 05       		.uleb128 0x5
 3860 0101 27       		.uleb128 0x27
 3861 0102 19       		.uleb128 0x19
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 135


 3862 0103 11       		.uleb128 0x11
 3863 0104 01       		.uleb128 0x1
 3864 0105 12       		.uleb128 0x12
 3865 0106 06       		.uleb128 0x6
 3866 0107 40       		.uleb128 0x40
 3867 0108 18       		.uleb128 0x18
 3868 0109 9742     		.uleb128 0x2117
 3869 010b 19       		.uleb128 0x19
 3870 010c 01       		.uleb128 0x1
 3871 010d 13       		.uleb128 0x13
 3872 010e 00       		.byte	0
 3873 010f 00       		.byte	0
 3874 0110 13       		.uleb128 0x13
 3875 0111 34       		.uleb128 0x34
 3876 0112 00       		.byte	0
 3877 0113 03       		.uleb128 0x3
 3878 0114 0E       		.uleb128 0xe
 3879 0115 3A       		.uleb128 0x3a
 3880 0116 0B       		.uleb128 0xb
 3881 0117 3B       		.uleb128 0x3b
 3882 0118 05       		.uleb128 0x5
 3883 0119 49       		.uleb128 0x49
 3884 011a 13       		.uleb128 0x13
 3885 011b 02       		.uleb128 0x2
 3886 011c 17       		.uleb128 0x17
 3887 011d 00       		.byte	0
 3888 011e 00       		.byte	0
 3889 011f 14       		.uleb128 0x14
 3890 0120 2E       		.uleb128 0x2e
 3891 0121 01       		.byte	0x1
 3892 0122 3F       		.uleb128 0x3f
 3893 0123 19       		.uleb128 0x19
 3894 0124 03       		.uleb128 0x3
 3895 0125 0E       		.uleb128 0xe
 3896 0126 3A       		.uleb128 0x3a
 3897 0127 0B       		.uleb128 0xb
 3898 0128 3B       		.uleb128 0x3b
 3899 0129 0B       		.uleb128 0xb
 3900 012a 27       		.uleb128 0x27
 3901 012b 19       		.uleb128 0x19
 3902 012c 11       		.uleb128 0x11
 3903 012d 01       		.uleb128 0x1
 3904 012e 12       		.uleb128 0x12
 3905 012f 06       		.uleb128 0x6
 3906 0130 40       		.uleb128 0x40
 3907 0131 18       		.uleb128 0x18
 3908 0132 9742     		.uleb128 0x2117
 3909 0134 19       		.uleb128 0x19
 3910 0135 01       		.uleb128 0x1
 3911 0136 13       		.uleb128 0x13
 3912 0137 00       		.byte	0
 3913 0138 00       		.byte	0
 3914 0139 15       		.uleb128 0x15
 3915 013a 898201   		.uleb128 0x4109
 3916 013d 00       		.byte	0
 3917 013e 11       		.uleb128 0x11
 3918 013f 01       		.uleb128 0x1
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 136


 3919 0140 31       		.uleb128 0x31
 3920 0141 13       		.uleb128 0x13
 3921 0142 00       		.byte	0
 3922 0143 00       		.byte	0
 3923 0144 16       		.uleb128 0x16
 3924 0145 2E       		.uleb128 0x2e
 3925 0146 00       		.byte	0
 3926 0147 3F       		.uleb128 0x3f
 3927 0148 19       		.uleb128 0x19
 3928 0149 03       		.uleb128 0x3
 3929 014a 0E       		.uleb128 0xe
 3930 014b 3A       		.uleb128 0x3a
 3931 014c 0B       		.uleb128 0xb
 3932 014d 3B       		.uleb128 0x3b
 3933 014e 05       		.uleb128 0x5
 3934 014f 27       		.uleb128 0x27
 3935 0150 19       		.uleb128 0x19
 3936 0151 49       		.uleb128 0x49
 3937 0152 13       		.uleb128 0x13
 3938 0153 11       		.uleb128 0x11
 3939 0154 01       		.uleb128 0x1
 3940 0155 12       		.uleb128 0x12
 3941 0156 06       		.uleb128 0x6
 3942 0157 40       		.uleb128 0x40
 3943 0158 18       		.uleb128 0x18
 3944 0159 9742     		.uleb128 0x2117
 3945 015b 19       		.uleb128 0x19
 3946 015c 00       		.byte	0
 3947 015d 00       		.byte	0
 3948 015e 17       		.uleb128 0x17
 3949 015f 05       		.uleb128 0x5
 3950 0160 00       		.byte	0
 3951 0161 03       		.uleb128 0x3
 3952 0162 0E       		.uleb128 0xe
 3953 0163 3A       		.uleb128 0x3a
 3954 0164 0B       		.uleb128 0xb
 3955 0165 3B       		.uleb128 0x3b
 3956 0166 05       		.uleb128 0x5
 3957 0167 49       		.uleb128 0x49
 3958 0168 13       		.uleb128 0x13
 3959 0169 02       		.uleb128 0x2
 3960 016a 17       		.uleb128 0x17
 3961 016b 00       		.byte	0
 3962 016c 00       		.byte	0
 3963 016d 18       		.uleb128 0x18
 3964 016e 05       		.uleb128 0x5
 3965 016f 00       		.byte	0
 3966 0170 03       		.uleb128 0x3
 3967 0171 0E       		.uleb128 0xe
 3968 0172 3A       		.uleb128 0x3a
 3969 0173 0B       		.uleb128 0xb
 3970 0174 3B       		.uleb128 0x3b
 3971 0175 05       		.uleb128 0x5
 3972 0176 49       		.uleb128 0x49
 3973 0177 13       		.uleb128 0x13
 3974 0178 02       		.uleb128 0x2
 3975 0179 18       		.uleb128 0x18
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 137


 3976 017a 00       		.byte	0
 3977 017b 00       		.byte	0
 3978 017c 19       		.uleb128 0x19
 3979 017d 2E       		.uleb128 0x2e
 3980 017e 01       		.byte	0x1
 3981 017f 3F       		.uleb128 0x3f
 3982 0180 19       		.uleb128 0x19
 3983 0181 03       		.uleb128 0x3
 3984 0182 0E       		.uleb128 0xe
 3985 0183 3A       		.uleb128 0x3a
 3986 0184 0B       		.uleb128 0xb
 3987 0185 3B       		.uleb128 0x3b
 3988 0186 05       		.uleb128 0x5
 3989 0187 27       		.uleb128 0x27
 3990 0188 19       		.uleb128 0x19
 3991 0189 49       		.uleb128 0x49
 3992 018a 13       		.uleb128 0x13
 3993 018b 11       		.uleb128 0x11
 3994 018c 01       		.uleb128 0x1
 3995 018d 12       		.uleb128 0x12
 3996 018e 06       		.uleb128 0x6
 3997 018f 40       		.uleb128 0x40
 3998 0190 18       		.uleb128 0x18
 3999 0191 9742     		.uleb128 0x2117
 4000 0193 19       		.uleb128 0x19
 4001 0194 01       		.uleb128 0x1
 4002 0195 13       		.uleb128 0x13
 4003 0196 00       		.byte	0
 4004 0197 00       		.byte	0
 4005 0198 1A       		.uleb128 0x1a
 4006 0199 34       		.uleb128 0x34
 4007 019a 00       		.byte	0
 4008 019b 03       		.uleb128 0x3
 4009 019c 0E       		.uleb128 0xe
 4010 019d 3A       		.uleb128 0x3a
 4011 019e 0B       		.uleb128 0xb
 4012 019f 3B       		.uleb128 0x3b
 4013 01a0 05       		.uleb128 0x5
 4014 01a1 49       		.uleb128 0x49
 4015 01a2 13       		.uleb128 0x13
 4016 01a3 02       		.uleb128 0x2
 4017 01a4 18       		.uleb128 0x18
 4018 01a5 00       		.byte	0
 4019 01a6 00       		.byte	0
 4020 01a7 1B       		.uleb128 0x1b
 4021 01a8 2E       		.uleb128 0x2e
 4022 01a9 01       		.byte	0x1
 4023 01aa 31       		.uleb128 0x31
 4024 01ab 13       		.uleb128 0x13
 4025 01ac 11       		.uleb128 0x11
 4026 01ad 01       		.uleb128 0x1
 4027 01ae 12       		.uleb128 0x12
 4028 01af 06       		.uleb128 0x6
 4029 01b0 40       		.uleb128 0x40
 4030 01b1 18       		.uleb128 0x18
 4031 01b2 9742     		.uleb128 0x2117
 4032 01b4 19       		.uleb128 0x19
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 138


 4033 01b5 01       		.uleb128 0x1
 4034 01b6 13       		.uleb128 0x13
 4035 01b7 00       		.byte	0
 4036 01b8 00       		.byte	0
 4037 01b9 1C       		.uleb128 0x1c
 4038 01ba 05       		.uleb128 0x5
 4039 01bb 00       		.byte	0
 4040 01bc 31       		.uleb128 0x31
 4041 01bd 13       		.uleb128 0x13
 4042 01be 02       		.uleb128 0x2
 4043 01bf 17       		.uleb128 0x17
 4044 01c0 00       		.byte	0
 4045 01c1 00       		.byte	0
 4046 01c2 1D       		.uleb128 0x1d
 4047 01c3 05       		.uleb128 0x5
 4048 01c4 00       		.byte	0
 4049 01c5 31       		.uleb128 0x31
 4050 01c6 13       		.uleb128 0x13
 4051 01c7 02       		.uleb128 0x2
 4052 01c8 18       		.uleb128 0x18
 4053 01c9 00       		.byte	0
 4054 01ca 00       		.byte	0
 4055 01cb 1E       		.uleb128 0x1e
 4056 01cc 34       		.uleb128 0x34
 4057 01cd 00       		.byte	0
 4058 01ce 31       		.uleb128 0x31
 4059 01cf 13       		.uleb128 0x13
 4060 01d0 02       		.uleb128 0x2
 4061 01d1 18       		.uleb128 0x18
 4062 01d2 00       		.byte	0
 4063 01d3 00       		.byte	0
 4064 01d4 1F       		.uleb128 0x1f
 4065 01d5 34       		.uleb128 0x34
 4066 01d6 00       		.byte	0
 4067 01d7 31       		.uleb128 0x31
 4068 01d8 13       		.uleb128 0x13
 4069 01d9 1C       		.uleb128 0x1c
 4070 01da 06       		.uleb128 0x6
 4071 01db 00       		.byte	0
 4072 01dc 00       		.byte	0
 4073 01dd 20       		.uleb128 0x20
 4074 01de 34       		.uleb128 0x34
 4075 01df 00       		.byte	0
 4076 01e0 03       		.uleb128 0x3
 4077 01e1 0E       		.uleb128 0xe
 4078 01e2 3A       		.uleb128 0x3a
 4079 01e3 0B       		.uleb128 0xb
 4080 01e4 3B       		.uleb128 0x3b
 4081 01e5 05       		.uleb128 0x5
 4082 01e6 49       		.uleb128 0x49
 4083 01e7 13       		.uleb128 0x13
 4084 01e8 1C       		.uleb128 0x1c
 4085 01e9 06       		.uleb128 0x6
 4086 01ea 00       		.byte	0
 4087 01eb 00       		.byte	0
 4088 01ec 21       		.uleb128 0x21
 4089 01ed 2E       		.uleb128 0x2e
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 139


 4090 01ee 00       		.byte	0
 4091 01ef 3F       		.uleb128 0x3f
 4092 01f0 19       		.uleb128 0x19
 4093 01f1 03       		.uleb128 0x3
 4094 01f2 0E       		.uleb128 0xe
 4095 01f3 3A       		.uleb128 0x3a
 4096 01f4 0B       		.uleb128 0xb
 4097 01f5 3B       		.uleb128 0x3b
 4098 01f6 05       		.uleb128 0x5
 4099 01f7 27       		.uleb128 0x27
 4100 01f8 19       		.uleb128 0x19
 4101 01f9 11       		.uleb128 0x11
 4102 01fa 01       		.uleb128 0x1
 4103 01fb 12       		.uleb128 0x12
 4104 01fc 06       		.uleb128 0x6
 4105 01fd 40       		.uleb128 0x40
 4106 01fe 18       		.uleb128 0x18
 4107 01ff 9742     		.uleb128 0x2117
 4108 0201 19       		.uleb128 0x19
 4109 0202 00       		.byte	0
 4110 0203 00       		.byte	0
 4111 0204 22       		.uleb128 0x22
 4112 0205 34       		.uleb128 0x34
 4113 0206 00       		.byte	0
 4114 0207 31       		.uleb128 0x31
 4115 0208 13       		.uleb128 0x13
 4116 0209 00       		.byte	0
 4117 020a 00       		.byte	0
 4118 020b 23       		.uleb128 0x23
 4119 020c 34       		.uleb128 0x34
 4120 020d 00       		.byte	0
 4121 020e 31       		.uleb128 0x31
 4122 020f 13       		.uleb128 0x13
 4123 0210 1C       		.uleb128 0x1c
 4124 0211 0B       		.uleb128 0xb
 4125 0212 00       		.byte	0
 4126 0213 00       		.byte	0
 4127 0214 24       		.uleb128 0x24
 4128 0215 0B       		.uleb128 0xb
 4129 0216 01       		.byte	0x1
 4130 0217 11       		.uleb128 0x11
 4131 0218 01       		.uleb128 0x1
 4132 0219 12       		.uleb128 0x12
 4133 021a 06       		.uleb128 0x6
 4134 021b 01       		.uleb128 0x1
 4135 021c 13       		.uleb128 0x13
 4136 021d 00       		.byte	0
 4137 021e 00       		.byte	0
 4138 021f 25       		.uleb128 0x25
 4139 0220 34       		.uleb128 0x34
 4140 0221 00       		.byte	0
 4141 0222 31       		.uleb128 0x31
 4142 0223 13       		.uleb128 0x13
 4143 0224 02       		.uleb128 0x2
 4144 0225 17       		.uleb128 0x17
 4145 0226 00       		.byte	0
 4146 0227 00       		.byte	0
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 140


 4147 0228 26       		.uleb128 0x26
 4148 0229 898201   		.uleb128 0x4109
 4149 022c 01       		.byte	0x1
 4150 022d 11       		.uleb128 0x11
 4151 022e 01       		.uleb128 0x1
 4152 022f 31       		.uleb128 0x31
 4153 0230 13       		.uleb128 0x13
 4154 0231 01       		.uleb128 0x1
 4155 0232 13       		.uleb128 0x13
 4156 0233 00       		.byte	0
 4157 0234 00       		.byte	0
 4158 0235 27       		.uleb128 0x27
 4159 0236 8A8201   		.uleb128 0x410a
 4160 0239 00       		.byte	0
 4161 023a 02       		.uleb128 0x2
 4162 023b 18       		.uleb128 0x18
 4163 023c 9142     		.uleb128 0x2111
 4164 023e 18       		.uleb128 0x18
 4165 023f 00       		.byte	0
 4166 0240 00       		.byte	0
 4167 0241 28       		.uleb128 0x28
 4168 0242 898201   		.uleb128 0x4109
 4169 0245 01       		.byte	0x1
 4170 0246 11       		.uleb128 0x11
 4171 0247 01       		.uleb128 0x1
 4172 0248 31       		.uleb128 0x31
 4173 0249 13       		.uleb128 0x13
 4174 024a 00       		.byte	0
 4175 024b 00       		.byte	0
 4176 024c 29       		.uleb128 0x29
 4177 024d 2E       		.uleb128 0x2e
 4178 024e 01       		.byte	0x1
 4179 024f 3F       		.uleb128 0x3f
 4180 0250 19       		.uleb128 0x19
 4181 0251 03       		.uleb128 0x3
 4182 0252 0E       		.uleb128 0xe
 4183 0253 3A       		.uleb128 0x3a
 4184 0254 0B       		.uleb128 0xb
 4185 0255 3B       		.uleb128 0x3b
 4186 0256 05       		.uleb128 0x5
 4187 0257 27       		.uleb128 0x27
 4188 0258 19       		.uleb128 0x19
 4189 0259 11       		.uleb128 0x11
 4190 025a 01       		.uleb128 0x1
 4191 025b 12       		.uleb128 0x12
 4192 025c 06       		.uleb128 0x6
 4193 025d 40       		.uleb128 0x40
 4194 025e 18       		.uleb128 0x18
 4195 025f 9642     		.uleb128 0x2116
 4196 0261 19       		.uleb128 0x19
 4197 0262 01       		.uleb128 0x1
 4198 0263 13       		.uleb128 0x13
 4199 0264 00       		.byte	0
 4200 0265 00       		.byte	0
 4201 0266 2A       		.uleb128 0x2a
 4202 0267 34       		.uleb128 0x34
 4203 0268 00       		.byte	0
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 141


 4204 0269 03       		.uleb128 0x3
 4205 026a 08       		.uleb128 0x8
 4206 026b 3A       		.uleb128 0x3a
 4207 026c 0B       		.uleb128 0xb
 4208 026d 3B       		.uleb128 0x3b
 4209 026e 05       		.uleb128 0x5
 4210 026f 49       		.uleb128 0x49
 4211 0270 13       		.uleb128 0x13
 4212 0271 02       		.uleb128 0x2
 4213 0272 17       		.uleb128 0x17
 4214 0273 00       		.byte	0
 4215 0274 00       		.byte	0
 4216 0275 2B       		.uleb128 0x2b
 4217 0276 1D       		.uleb128 0x1d
 4218 0277 01       		.byte	0x1
 4219 0278 31       		.uleb128 0x31
 4220 0279 13       		.uleb128 0x13
 4221 027a 52       		.uleb128 0x52
 4222 027b 01       		.uleb128 0x1
 4223 027c 55       		.uleb128 0x55
 4224 027d 17       		.uleb128 0x17
 4225 027e 58       		.uleb128 0x58
 4226 027f 0B       		.uleb128 0xb
 4227 0280 59       		.uleb128 0x59
 4228 0281 05       		.uleb128 0x5
 4229 0282 01       		.uleb128 0x1
 4230 0283 13       		.uleb128 0x13
 4231 0284 00       		.byte	0
 4232 0285 00       		.byte	0
 4233 0286 2C       		.uleb128 0x2c
 4234 0287 0B       		.uleb128 0xb
 4235 0288 01       		.byte	0x1
 4236 0289 55       		.uleb128 0x55
 4237 028a 17       		.uleb128 0x17
 4238 028b 00       		.byte	0
 4239 028c 00       		.byte	0
 4240 028d 2D       		.uleb128 0x2d
 4241 028e 1D       		.uleb128 0x1d
 4242 028f 01       		.byte	0x1
 4243 0290 31       		.uleb128 0x31
 4244 0291 13       		.uleb128 0x13
 4245 0292 11       		.uleb128 0x11
 4246 0293 01       		.uleb128 0x1
 4247 0294 12       		.uleb128 0x12
 4248 0295 06       		.uleb128 0x6
 4249 0296 58       		.uleb128 0x58
 4250 0297 0B       		.uleb128 0xb
 4251 0298 59       		.uleb128 0x59
 4252 0299 05       		.uleb128 0x5
 4253 029a 01       		.uleb128 0x1
 4254 029b 13       		.uleb128 0x13
 4255 029c 00       		.byte	0
 4256 029d 00       		.byte	0
 4257 029e 2E       		.uleb128 0x2e
 4258 029f 1D       		.uleb128 0x1d
 4259 02a0 00       		.byte	0
 4260 02a1 31       		.uleb128 0x31
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 142


 4261 02a2 13       		.uleb128 0x13
 4262 02a3 11       		.uleb128 0x11
 4263 02a4 01       		.uleb128 0x1
 4264 02a5 12       		.uleb128 0x12
 4265 02a6 06       		.uleb128 0x6
 4266 02a7 58       		.uleb128 0x58
 4267 02a8 0B       		.uleb128 0xb
 4268 02a9 59       		.uleb128 0x59
 4269 02aa 05       		.uleb128 0x5
 4270 02ab 00       		.byte	0
 4271 02ac 00       		.byte	0
 4272 02ad 2F       		.uleb128 0x2f
 4273 02ae 2E       		.uleb128 0x2e
 4274 02af 01       		.byte	0x1
 4275 02b0 31       		.uleb128 0x31
 4276 02b1 13       		.uleb128 0x13
 4277 02b2 11       		.uleb128 0x11
 4278 02b3 01       		.uleb128 0x1
 4279 02b4 12       		.uleb128 0x12
 4280 02b5 06       		.uleb128 0x6
 4281 02b6 40       		.uleb128 0x40
 4282 02b7 18       		.uleb128 0x18
 4283 02b8 9642     		.uleb128 0x2116
 4284 02ba 19       		.uleb128 0x19
 4285 02bb 01       		.uleb128 0x1
 4286 02bc 13       		.uleb128 0x13
 4287 02bd 00       		.byte	0
 4288 02be 00       		.byte	0
 4289 02bf 30       		.uleb128 0x30
 4290 02c0 2E       		.uleb128 0x2e
 4291 02c1 00       		.byte	0
 4292 02c2 31       		.uleb128 0x31
 4293 02c3 13       		.uleb128 0x13
 4294 02c4 11       		.uleb128 0x11
 4295 02c5 01       		.uleb128 0x1
 4296 02c6 12       		.uleb128 0x12
 4297 02c7 06       		.uleb128 0x6
 4298 02c8 40       		.uleb128 0x40
 4299 02c9 18       		.uleb128 0x18
 4300 02ca 9742     		.uleb128 0x2117
 4301 02cc 19       		.uleb128 0x19
 4302 02cd 00       		.byte	0
 4303 02ce 00       		.byte	0
 4304 02cf 31       		.uleb128 0x31
 4305 02d0 01       		.uleb128 0x1
 4306 02d1 01       		.byte	0x1
 4307 02d2 49       		.uleb128 0x49
 4308 02d3 13       		.uleb128 0x13
 4309 02d4 01       		.uleb128 0x1
 4310 02d5 13       		.uleb128 0x13
 4311 02d6 00       		.byte	0
 4312 02d7 00       		.byte	0
 4313 02d8 32       		.uleb128 0x32
 4314 02d9 21       		.uleb128 0x21
 4315 02da 00       		.byte	0
 4316 02db 49       		.uleb128 0x49
 4317 02dc 13       		.uleb128 0x13
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 143


 4318 02dd 2F       		.uleb128 0x2f
 4319 02de 0B       		.uleb128 0xb
 4320 02df 00       		.byte	0
 4321 02e0 00       		.byte	0
 4322 02e1 33       		.uleb128 0x33
 4323 02e2 34       		.uleb128 0x34
 4324 02e3 00       		.byte	0
 4325 02e4 03       		.uleb128 0x3
 4326 02e5 0E       		.uleb128 0xe
 4327 02e6 3A       		.uleb128 0x3a
 4328 02e7 0B       		.uleb128 0xb
 4329 02e8 3B       		.uleb128 0x3b
 4330 02e9 0B       		.uleb128 0xb
 4331 02ea 49       		.uleb128 0x49
 4332 02eb 13       		.uleb128 0x13
 4333 02ec 02       		.uleb128 0x2
 4334 02ed 18       		.uleb128 0x18
 4335 02ee 00       		.byte	0
 4336 02ef 00       		.byte	0
 4337 02f0 34       		.uleb128 0x34
 4338 02f1 34       		.uleb128 0x34
 4339 02f2 00       		.byte	0
 4340 02f3 03       		.uleb128 0x3
 4341 02f4 0E       		.uleb128 0xe
 4342 02f5 3A       		.uleb128 0x3a
 4343 02f6 0B       		.uleb128 0xb
 4344 02f7 3B       		.uleb128 0x3b
 4345 02f8 0B       		.uleb128 0xb
 4346 02f9 49       		.uleb128 0x49
 4347 02fa 13       		.uleb128 0x13
 4348 02fb 3F       		.uleb128 0x3f
 4349 02fc 19       		.uleb128 0x19
 4350 02fd 02       		.uleb128 0x2
 4351 02fe 18       		.uleb128 0x18
 4352 02ff 00       		.byte	0
 4353 0300 00       		.byte	0
 4354 0301 35       		.uleb128 0x35
 4355 0302 2E       		.uleb128 0x2e
 4356 0303 00       		.byte	0
 4357 0304 3F       		.uleb128 0x3f
 4358 0305 19       		.uleb128 0x19
 4359 0306 3C       		.uleb128 0x3c
 4360 0307 19       		.uleb128 0x19
 4361 0308 6E       		.uleb128 0x6e
 4362 0309 0E       		.uleb128 0xe
 4363 030a 03       		.uleb128 0x3
 4364 030b 0E       		.uleb128 0xe
 4365 030c 3A       		.uleb128 0x3a
 4366 030d 0B       		.uleb128 0xb
 4367 030e 3B       		.uleb128 0x3b
 4368 030f 0B       		.uleb128 0xb
 4369 0310 00       		.byte	0
 4370 0311 00       		.byte	0
 4371 0312 00       		.byte	0
 4372              		.section	.debug_loc,"",%progbits
 4373              	.Ldebug_loc0:
 4374              	.LLST0:
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 144


 4375 0000 0C000000 		.4byte	.LVL0
 4376 0004 12000000 		.4byte	.LVL1
 4377 0008 1000     		.2byte	0x10
 4378 000a 73       		.byte	0x73
 4379 000b 00       		.sleb128 0
 4380 000c 32       		.byte	0x32
 4381 000d 24       		.byte	0x24
 4382 000e 4C       		.byte	0x4c
 4383 000f 1A       		.byte	0x1a
 4384 0010 23       		.byte	0x23
 4385 0011 18       		.uleb128 0x18
 4386 0012 71       		.byte	0x71
 4387 0013 00       		.sleb128 0
 4388 0014 32       		.byte	0x32
 4389 0015 25       		.byte	0x25
 4390 0016 33       		.byte	0x33
 4391 0017 1A       		.byte	0x1a
 4392 0018 25       		.byte	0x25
 4393 0019 9F       		.byte	0x9f
 4394 001a 00000000 		.4byte	0
 4395 001e 00000000 		.4byte	0
 4396              	.LLST1:
 4397 0022 00000000 		.4byte	.LVL3
 4398 0026 07000000 		.4byte	.LVL4-1
 4399 002a 0100     		.2byte	0x1
 4400 002c 50       		.byte	0x50
 4401 002d 07000000 		.4byte	.LVL4-1
 4402 0031 1A000000 		.4byte	.LVL8
 4403 0035 0100     		.2byte	0x1
 4404 0037 54       		.byte	0x54
 4405 0038 1A000000 		.4byte	.LVL8
 4406 003c 20000000 		.4byte	.LFE6
 4407 0040 0400     		.2byte	0x4
 4408 0042 F3       		.byte	0xf3
 4409 0043 01       		.uleb128 0x1
 4410 0044 50       		.byte	0x50
 4411 0045 9F       		.byte	0x9f
 4412 0046 00000000 		.4byte	0
 4413 004a 00000000 		.4byte	0
 4414              	.LLST2:
 4415 004e 08000000 		.4byte	.LVL4
 4416 0052 19000000 		.4byte	.LVL7-1
 4417 0056 0100     		.2byte	0x1
 4418 0058 50       		.byte	0x50
 4419 0059 00000000 		.4byte	0
 4420 005d 00000000 		.4byte	0
 4421              	.LLST3:
 4422 0061 10000000 		.4byte	.LVL5
 4423 0065 14000000 		.4byte	.LVL6
 4424 0069 0100     		.2byte	0x1
 4425 006b 52       		.byte	0x52
 4426 006c 14000000 		.4byte	.LVL6
 4427 0070 19000000 		.4byte	.LVL7-1
 4428 0074 0100     		.2byte	0x1
 4429 0076 53       		.byte	0x53
 4430 0077 00000000 		.4byte	0
 4431 007b 00000000 		.4byte	0
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 145


 4432              	.LLST4:
 4433 007f 06000000 		.4byte	.LVL10
 4434 0083 0D000000 		.4byte	.LVL12-1
 4435 0087 0100     		.2byte	0x1
 4436 0089 50       		.byte	0x50
 4437 008a 00000000 		.4byte	0
 4438 008e 00000000 		.4byte	0
 4439              	.LLST5:
 4440 0092 0A000000 		.4byte	.LVL11
 4441 0096 12000000 		.4byte	.LVL13
 4442 009a 0500     		.2byte	0x5
 4443 009c 74       		.byte	0x74
 4444 009d 00       		.sleb128 0
 4445 009e 33       		.byte	0x33
 4446 009f 1A       		.byte	0x1a
 4447 00a0 9F       		.byte	0x9f
 4448 00a1 12000000 		.4byte	.LVL13
 4449 00a5 18000000 		.4byte	.LFE8
 4450 00a9 0100     		.2byte	0x1
 4451 00ab 50       		.byte	0x50
 4452 00ac 00000000 		.4byte	0
 4453 00b0 00000000 		.4byte	0
 4454              	.LLST6:
 4455 00b4 00000000 		.4byte	.LVL14
 4456 00b8 07000000 		.4byte	.LVL15-1
 4457 00bc 0100     		.2byte	0x1
 4458 00be 50       		.byte	0x50
 4459 00bf 07000000 		.4byte	.LVL15-1
 4460 00c3 1E000000 		.4byte	.LVL17
 4461 00c7 0100     		.2byte	0x1
 4462 00c9 54       		.byte	0x54
 4463 00ca 1E000000 		.4byte	.LVL17
 4464 00ce 24000000 		.4byte	.LFE9
 4465 00d2 0400     		.2byte	0x4
 4466 00d4 F3       		.byte	0xf3
 4467 00d5 01       		.uleb128 0x1
 4468 00d6 50       		.byte	0x50
 4469 00d7 9F       		.byte	0x9f
 4470 00d8 00000000 		.4byte	0
 4471 00dc 00000000 		.4byte	0
 4472              	.LLST7:
 4473 00e0 08000000 		.4byte	.LVL15
 4474 00e4 1D000000 		.4byte	.LVL16-1
 4475 00e8 0100     		.2byte	0x1
 4476 00ea 50       		.byte	0x50
 4477 00eb 00000000 		.4byte	0
 4478 00ef 00000000 		.4byte	0
 4479              	.LLST8:
 4480 00f3 00000000 		.4byte	.LVL18
 4481 00f7 07000000 		.4byte	.LVL19-1
 4482 00fb 0100     		.2byte	0x1
 4483 00fd 50       		.byte	0x50
 4484 00fe 07000000 		.4byte	.LVL19-1
 4485 0102 0C000000 		.4byte	.LVL20
 4486 0106 0100     		.2byte	0x1
 4487 0108 54       		.byte	0x54
 4488 0109 0C000000 		.4byte	.LVL20
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 146


 4489 010d 24000000 		.4byte	.LFE11
 4490 0111 0400     		.2byte	0x4
 4491 0113 F3       		.byte	0xf3
 4492 0114 01       		.uleb128 0x1
 4493 0115 50       		.byte	0x50
 4494 0116 9F       		.byte	0x9f
 4495 0117 00000000 		.4byte	0
 4496 011b 00000000 		.4byte	0
 4497              	.LLST9:
 4498 011f 08000000 		.4byte	.LVL19
 4499 0123 1B000000 		.4byte	.LVL21-1
 4500 0127 0100     		.2byte	0x1
 4501 0129 50       		.byte	0x50
 4502 012a 00000000 		.4byte	0
 4503 012e 00000000 		.4byte	0
 4504              	.LLST10:
 4505 0132 00000000 		.4byte	.LVL22
 4506 0136 08000000 		.4byte	.LVL23
 4507 013a 0100     		.2byte	0x1
 4508 013c 50       		.byte	0x50
 4509 013d 08000000 		.4byte	.LVL23
 4510 0141 14000000 		.4byte	.LFE12
 4511 0145 0100     		.2byte	0x1
 4512 0147 52       		.byte	0x52
 4513 0148 00000000 		.4byte	0
 4514 014c 00000000 		.4byte	0
 4515              	.LLST11:
 4516 0150 0A000000 		.4byte	.LVL24
 4517 0154 0C000000 		.4byte	.LVL25
 4518 0158 0500     		.2byte	0x5
 4519 015a 70       		.byte	0x70
 4520 015b 00       		.sleb128 0
 4521 015c 49       		.byte	0x49
 4522 015d 1A       		.byte	0x1a
 4523 015e 9F       		.byte	0x9f
 4524 015f 0C000000 		.4byte	.LVL25
 4525 0163 14000000 		.4byte	.LFE12
 4526 0167 0100     		.2byte	0x1
 4527 0169 50       		.byte	0x50
 4528 016a 00000000 		.4byte	0
 4529 016e 00000000 		.4byte	0
 4530              	.LLST12:
 4531 0172 00000000 		.4byte	.LVL28
 4532 0176 04000000 		.4byte	.LVL29
 4533 017a 0100     		.2byte	0x1
 4534 017c 50       		.byte	0x50
 4535 017d 04000000 		.4byte	.LVL29
 4536 0181 0E000000 		.4byte	.LFE15
 4537 0185 0400     		.2byte	0x4
 4538 0187 F3       		.byte	0xf3
 4539 0188 01       		.uleb128 0x1
 4540 0189 50       		.byte	0x50
 4541 018a 9F       		.byte	0x9f
 4542 018b 00000000 		.4byte	0
 4543 018f 00000000 		.4byte	0
 4544              	.LLST13:
 4545 0193 00000000 		.4byte	.LVL31
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 147


 4546 0197 04000000 		.4byte	.LVL32
 4547 019b 0100     		.2byte	0x1
 4548 019d 50       		.byte	0x50
 4549 019e 04000000 		.4byte	.LVL32
 4550 01a2 0C000000 		.4byte	.LFE16
 4551 01a6 0400     		.2byte	0x4
 4552 01a8 F3       		.byte	0xf3
 4553 01a9 01       		.uleb128 0x1
 4554 01aa 50       		.byte	0x50
 4555 01ab 9F       		.byte	0x9f
 4556 01ac 00000000 		.4byte	0
 4557 01b0 00000000 		.4byte	0
 4558              	.LLST14:
 4559 01b4 00000000 		.4byte	.LVL33
 4560 01b8 04000000 		.4byte	.LVL34
 4561 01bc 0100     		.2byte	0x1
 4562 01be 50       		.byte	0x50
 4563 01bf 04000000 		.4byte	.LVL34
 4564 01c3 10000000 		.4byte	.LFE17
 4565 01c7 0400     		.2byte	0x4
 4566 01c9 F3       		.byte	0xf3
 4567 01ca 01       		.uleb128 0x1
 4568 01cb 50       		.byte	0x50
 4569 01cc 9F       		.byte	0x9f
 4570 01cd 00000000 		.4byte	0
 4571 01d1 00000000 		.4byte	0
 4572              	.LLST15:
 4573 01d5 00000000 		.4byte	.LVL36
 4574 01d9 04000000 		.4byte	.LVL37
 4575 01dd 0100     		.2byte	0x1
 4576 01df 50       		.byte	0x50
 4577 01e0 04000000 		.4byte	.LVL37
 4578 01e4 10000000 		.4byte	.LFE18
 4579 01e8 0400     		.2byte	0x4
 4580 01ea F3       		.byte	0xf3
 4581 01eb 01       		.uleb128 0x1
 4582 01ec 50       		.byte	0x50
 4583 01ed 9F       		.byte	0x9f
 4584 01ee 00000000 		.4byte	0
 4585 01f2 00000000 		.4byte	0
 4586              	.LLST16:
 4587 01f6 00000000 		.4byte	.LVL38
 4588 01fa 17000000 		.4byte	.LVL40-1
 4589 01fe 0100     		.2byte	0x1
 4590 0200 50       		.byte	0x50
 4591 0201 17000000 		.4byte	.LVL40-1
 4592 0205 34000000 		.4byte	.LFE19
 4593 0209 0400     		.2byte	0x4
 4594 020b F3       		.byte	0xf3
 4595 020c 01       		.uleb128 0x1
 4596 020d 50       		.byte	0x50
 4597 020e 9F       		.byte	0x9f
 4598 020f 00000000 		.4byte	0
 4599 0213 00000000 		.4byte	0
 4600              	.LLST17:
 4601 0217 00000000 		.4byte	.LVL38
 4602 021b 17000000 		.4byte	.LVL40-1
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 148


 4603 021f 0100     		.2byte	0x1
 4604 0221 51       		.byte	0x51
 4605 0222 17000000 		.4byte	.LVL40-1
 4606 0226 34000000 		.4byte	.LFE19
 4607 022a 0400     		.2byte	0x4
 4608 022c F3       		.byte	0xf3
 4609 022d 01       		.uleb128 0x1
 4610 022e 51       		.byte	0x51
 4611 022f 9F       		.byte	0x9f
 4612 0230 00000000 		.4byte	0
 4613 0234 00000000 		.4byte	0
 4614              	.LLST18:
 4615 0238 18000000 		.4byte	.LVL40
 4616 023c 2B000000 		.4byte	.LVL44-1
 4617 0240 0100     		.2byte	0x1
 4618 0242 50       		.byte	0x50
 4619 0243 00000000 		.4byte	0
 4620 0247 00000000 		.4byte	0
 4621              	.LLST19:
 4622 024b 10000000 		.4byte	.LVL39
 4623 024f 2C000000 		.4byte	.LVL45
 4624 0253 0100     		.2byte	0x1
 4625 0255 55       		.byte	0x55
 4626 0256 00000000 		.4byte	0
 4627 025a 00000000 		.4byte	0
 4628              	.LLST20:
 4629 025e 22000000 		.4byte	.LVL41
 4630 0262 26000000 		.4byte	.LVL43
 4631 0266 0100     		.2byte	0x1
 4632 0268 53       		.byte	0x53
 4633 0269 26000000 		.4byte	.LVL43
 4634 026d 2C000000 		.4byte	.LVL46
 4635 0271 0100     		.2byte	0x1
 4636 0273 57       		.byte	0x57
 4637 0274 00000000 		.4byte	0
 4638 0278 00000000 		.4byte	0
 4639              	.LLST21:
 4640 027c 00000000 		.4byte	.LVL47
 4641 0280 18000000 		.4byte	.LVL50
 4642 0284 0100     		.2byte	0x1
 4643 0286 50       		.byte	0x50
 4644 0287 18000000 		.4byte	.LVL50
 4645 028b 20000000 		.4byte	.LFE20
 4646 028f 0400     		.2byte	0x4
 4647 0291 F3       		.byte	0xf3
 4648 0292 01       		.uleb128 0x1
 4649 0293 50       		.byte	0x50
 4650 0294 9F       		.byte	0x9f
 4651 0295 00000000 		.4byte	0
 4652 0299 00000000 		.4byte	0
 4653              	.LLST22:
 4654 029d 0A000000 		.4byte	.LVL48
 4655 02a1 16000000 		.4byte	.LVL49
 4656 02a5 0F00     		.2byte	0xf
 4657 02a7 71       		.byte	0x71
 4658 02a8 00       		.sleb128 0
 4659 02a9 70       		.byte	0x70
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 149


 4660 02aa 00       		.sleb128 0
 4661 02ab 33       		.byte	0x33
 4662 02ac 1A       		.byte	0x1a
 4663 02ad 08       		.byte	0x8
 4664 02ae FF       		.byte	0xff
 4665 02af 1A       		.byte	0x1a
 4666 02b0 33       		.byte	0x33
 4667 02b1 24       		.byte	0x24
 4668 02b2 23       		.byte	0x23
 4669 02b3 06       		.uleb128 0x6
 4670 02b4 25       		.byte	0x25
 4671 02b5 9F       		.byte	0x9f
 4672 02b6 00000000 		.4byte	0
 4673 02ba 00000000 		.4byte	0
 4674              	.LLST23:
 4675 02be 00000000 		.4byte	.LVL51
 4676 02c2 04000000 		.4byte	.LVL52
 4677 02c6 0100     		.2byte	0x1
 4678 02c8 50       		.byte	0x50
 4679 02c9 04000000 		.4byte	.LVL52
 4680 02cd 14000000 		.4byte	.LFE21
 4681 02d1 0400     		.2byte	0x4
 4682 02d3 F3       		.byte	0xf3
 4683 02d4 01       		.uleb128 0x1
 4684 02d5 50       		.byte	0x50
 4685 02d6 9F       		.byte	0x9f
 4686 02d7 00000000 		.4byte	0
 4687 02db 00000000 		.4byte	0
 4688              	.LLST24:
 4689 02df 00000000 		.4byte	.LVL53
 4690 02e3 06000000 		.4byte	.LVL54
 4691 02e7 0100     		.2byte	0x1
 4692 02e9 50       		.byte	0x50
 4693 02ea 06000000 		.4byte	.LVL54
 4694 02ee 18000000 		.4byte	.LFE22
 4695 02f2 0400     		.2byte	0x4
 4696 02f4 F3       		.byte	0xf3
 4697 02f5 01       		.uleb128 0x1
 4698 02f6 50       		.byte	0x50
 4699 02f7 9F       		.byte	0x9f
 4700 02f8 00000000 		.4byte	0
 4701 02fc 00000000 		.4byte	0
 4702              	.LLST25:
 4703 0300 00000000 		.4byte	.LVL55
 4704 0304 04000000 		.4byte	.LVL56
 4705 0308 0100     		.2byte	0x1
 4706 030a 50       		.byte	0x50
 4707 030b 04000000 		.4byte	.LVL56
 4708 030f 14000000 		.4byte	.LFE23
 4709 0313 0400     		.2byte	0x4
 4710 0315 F3       		.byte	0xf3
 4711 0316 01       		.uleb128 0x1
 4712 0317 50       		.byte	0x50
 4713 0318 9F       		.byte	0x9f
 4714 0319 00000000 		.4byte	0
 4715 031d 00000000 		.4byte	0
 4716              	.LLST26:
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 150


 4717 0321 00000000 		.4byte	.LVL57
 4718 0325 04000000 		.4byte	.LVL58
 4719 0329 0100     		.2byte	0x1
 4720 032b 50       		.byte	0x50
 4721 032c 04000000 		.4byte	.LVL58
 4722 0330 14000000 		.4byte	.LFE24
 4723 0334 0400     		.2byte	0x4
 4724 0336 F3       		.byte	0xf3
 4725 0337 01       		.uleb128 0x1
 4726 0338 50       		.byte	0x50
 4727 0339 9F       		.byte	0x9f
 4728 033a 00000000 		.4byte	0
 4729 033e 00000000 		.4byte	0
 4730              	.LLST27:
 4731 0342 00000000 		.4byte	.LVL59
 4732 0346 04000000 		.4byte	.LVL60
 4733 034a 0100     		.2byte	0x1
 4734 034c 50       		.byte	0x50
 4735 034d 04000000 		.4byte	.LVL60
 4736 0351 14000000 		.4byte	.LFE25
 4737 0355 0400     		.2byte	0x4
 4738 0357 F3       		.byte	0xf3
 4739 0358 01       		.uleb128 0x1
 4740 0359 50       		.byte	0x50
 4741 035a 9F       		.byte	0x9f
 4742 035b 00000000 		.4byte	0
 4743 035f 00000000 		.4byte	0
 4744              	.LLST28:
 4745 0363 00000000 		.4byte	.LVL62
 4746 0367 08000000 		.4byte	.LVL63
 4747 036b 0100     		.2byte	0x1
 4748 036d 50       		.byte	0x50
 4749 036e 08000000 		.4byte	.LVL63
 4750 0372 22000000 		.4byte	.LVL67
 4751 0376 0100     		.2byte	0x1
 4752 0378 54       		.byte	0x54
 4753 0379 00000000 		.4byte	0
 4754 037d 00000000 		.4byte	0
 4755              	.LLST29:
 4756 0381 1C000000 		.4byte	.LVL72
 4757 0385 28000000 		.4byte	.LVL74
 4758 0389 1000     		.2byte	0x10
 4759 038b 73       		.byte	0x73
 4760 038c 00       		.sleb128 0
 4761 038d 32       		.byte	0x32
 4762 038e 24       		.byte	0x24
 4763 038f 4C       		.byte	0x4c
 4764 0390 1A       		.byte	0x1a
 4765 0391 23       		.byte	0x23
 4766 0392 18       		.uleb128 0x18
 4767 0393 70       		.byte	0x70
 4768 0394 00       		.sleb128 0
 4769 0395 32       		.byte	0x32
 4770 0396 25       		.byte	0x25
 4771 0397 33       		.byte	0x33
 4772 0398 1A       		.byte	0x1a
 4773 0399 25       		.byte	0x25
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 151


 4774 039a 9F       		.byte	0x9f
 4775 039b 28000000 		.4byte	.LVL74
 4776 039f 34000000 		.4byte	.LVL77
 4777 03a3 0E00     		.2byte	0xe
 4778 03a5 73       		.byte	0x73
 4779 03a6 00       		.sleb128 0
 4780 03a7 4C       		.byte	0x4c
 4781 03a8 1A       		.byte	0x1a
 4782 03a9 23       		.byte	0x23
 4783 03aa 18       		.uleb128 0x18
 4784 03ab 70       		.byte	0x70
 4785 03ac 00       		.sleb128 0
 4786 03ad 32       		.byte	0x32
 4787 03ae 25       		.byte	0x25
 4788 03af 33       		.byte	0x33
 4789 03b0 1A       		.byte	0x1a
 4790 03b1 25       		.byte	0x25
 4791 03b2 9F       		.byte	0x9f
 4792 03b3 00000000 		.4byte	0
 4793 03b7 00000000 		.4byte	0
 4794              	.LLST30:
 4795 03bb 18000000 		.4byte	.LVL71
 4796 03bf 9A000000 		.4byte	.LVL86
 4797 03c3 0200     		.2byte	0x2
 4798 03c5 91       		.byte	0x91
 4799 03c6 5C       		.sleb128 -36
 4800 03c7 00000000 		.4byte	0
 4801 03cb 00000000 		.4byte	0
 4802              	.LLST31:
 4803 03cf 24000000 		.4byte	.LVL73
 4804 03d3 2A000000 		.4byte	.LVL75
 4805 03d7 0A00     		.2byte	0xa
 4806 03d9 71       		.byte	0x71
 4807 03da 00       		.sleb128 0
 4808 03db 11       		.byte	0x11
 4809 03dc 80F08380 		.sleb128 -1073678336
 4809      7C
 4810 03e1 1A       		.byte	0x1a
 4811 03e2 9F       		.byte	0x9f
 4812 03e3 2A000000 		.4byte	.LVL75
 4813 03e7 30000000 		.4byte	.LVL76
 4814 03eb 0100     		.2byte	0x1
 4815 03ed 51       		.byte	0x51
 4816 03ee 4E000000 		.4byte	.LVL78
 4817 03f2 52000000 		.4byte	.LVL79
 4818 03f6 0100     		.2byte	0x1
 4819 03f8 53       		.byte	0x53
 4820 03f9 52000000 		.4byte	.LVL79
 4821 03fd 56000000 		.4byte	.LVL80
 4822 0401 0200     		.2byte	0x2
 4823 0403 75       		.byte	0x75
 4824 0404 00       		.sleb128 0
 4825 0405 6E000000 		.4byte	.LVL82
 4826 0409 9A000000 		.4byte	.LVL86
 4827 040d 0100     		.2byte	0x1
 4828 040f 57       		.byte	0x57
 4829 0410 00000000 		.4byte	0
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 152


 4830 0414 00000000 		.4byte	0
 4831              	.LLST32:
 4832 0418 6E000000 		.4byte	.LVL82
 4833 041c 72000000 		.4byte	.LVL83
 4834 0420 0100     		.2byte	0x1
 4835 0422 54       		.byte	0x54
 4836 0423 72000000 		.4byte	.LVL83
 4837 0427 76000000 		.4byte	.LVL84
 4838 042b 0300     		.2byte	0x3
 4839 042d 74       		.byte	0x74
 4840 042e 70       		.sleb128 -16
 4841 042f 9F       		.byte	0x9f
 4842 0430 76000000 		.4byte	.LVL84
 4843 0434 9A000000 		.4byte	.LVL86
 4844 0438 0100     		.2byte	0x1
 4845 043a 54       		.byte	0x54
 4846 043b 00000000 		.4byte	0
 4847 043f 00000000 		.4byte	0
 4848              	.LLST33:
 4849 0443 00000000 		.4byte	.LVL87
 4850 0447 1B000000 		.4byte	.LVL88-1
 4851 044b 0100     		.2byte	0x1
 4852 044d 50       		.byte	0x50
 4853 044e 1B000000 		.4byte	.LVL88-1
 4854 0452 6E000000 		.4byte	.LVL98
 4855 0456 0100     		.2byte	0x1
 4856 0458 54       		.byte	0x54
 4857 0459 6E000000 		.4byte	.LVL98
 4858 045d 70000000 		.4byte	.LVL99
 4859 0461 0300     		.2byte	0x3
 4860 0463 74       		.byte	0x74
 4861 0464 1C       		.sleb128 28
 4862 0465 9F       		.byte	0x9f
 4863 0466 70000000 		.4byte	.LVL99
 4864 046a 82000000 		.4byte	.LVL101
 4865 046e 0300     		.2byte	0x3
 4866 0470 75       		.byte	0x75
 4867 0471 18       		.sleb128 24
 4868 0472 9F       		.byte	0x9f
 4869 0473 82000000 		.4byte	.LVL101
 4870 0477 B8000000 		.4byte	.LFE10
 4871 047b 0400     		.2byte	0x4
 4872 047d F3       		.byte	0xf3
 4873 047e 01       		.uleb128 0x1
 4874 047f 50       		.byte	0x50
 4875 0480 9F       		.byte	0x9f
 4876 0481 00000000 		.4byte	0
 4877 0485 00000000 		.4byte	0
 4878              	.LLST34:
 4879 0489 1E000000 		.4byte	.LVL89
 4880 048d 98000000 		.4byte	.LVL103
 4881 0491 0200     		.2byte	0x2
 4882 0493 91       		.byte	0x91
 4883 0494 64       		.sleb128 -28
 4884 0495 00000000 		.4byte	0
 4885 0499 00000000 		.4byte	0
 4886              	.LLST35:
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 153


 4887 049d 44000000 		.4byte	.LVL94
 4888 04a1 4A000000 		.4byte	.LVL95
 4889 04a5 0100     		.2byte	0x1
 4890 04a7 53       		.byte	0x53
 4891 04a8 4A000000 		.4byte	.LVL95
 4892 04ac 4E000000 		.4byte	.LVL96
 4893 04b0 0700     		.2byte	0x7
 4894 04b2 0C       		.byte	0xc
 4895 04b3 0C0F0340 		.4byte	0x40030f0c
 4896 04b7 06       		.byte	0x6
 4897 04b8 9F       		.byte	0x9f
 4898 04b9 00000000 		.4byte	0
 4899 04bd 00000000 		.4byte	0
 4900              	.LLST36:
 4901 04c1 00000000 		.4byte	.LVL87
 4902 04c5 28000000 		.4byte	.LVL91
 4903 04c9 0200     		.2byte	0x2
 4904 04cb 30       		.byte	0x30
 4905 04cc 9F       		.byte	0x9f
 4906 04cd 28000000 		.4byte	.LVL91
 4907 04d1 2E000000 		.4byte	.LVL93
 4908 04d5 0200     		.2byte	0x2
 4909 04d7 31       		.byte	0x31
 4910 04d8 9F       		.byte	0x9f
 4911 04d9 2E000000 		.4byte	.LVL93
 4912 04dd 98000000 		.4byte	.LVL103
 4913 04e1 0200     		.2byte	0x2
 4914 04e3 7D       		.byte	0x7d
 4915 04e4 00       		.sleb128 0
 4916 04e5 00000000 		.4byte	0
 4917 04e9 00000000 		.4byte	0
 4918              	.LLST37:
 4919 04ed 00000000 		.4byte	.LVL104
 4920 04f1 08000000 		.4byte	.LVL105
 4921 04f5 0100     		.2byte	0x1
 4922 04f7 50       		.byte	0x50
 4923 04f8 08000000 		.4byte	.LVL105
 4924 04fc 14000000 		.4byte	.LFE29
 4925 0500 0400     		.2byte	0x4
 4926 0502 F3       		.byte	0xf3
 4927 0503 01       		.uleb128 0x1
 4928 0504 50       		.byte	0x50
 4929 0505 9F       		.byte	0x9f
 4930 0506 00000000 		.4byte	0
 4931 050a 00000000 		.4byte	0
 4932              	.LLST38:
 4933 050e 00000000 		.4byte	.LVL107
 4934 0512 18000000 		.4byte	.LVL108
 4935 0516 0100     		.2byte	0x1
 4936 0518 50       		.byte	0x50
 4937 0519 18000000 		.4byte	.LVL108
 4938 051d 48000000 		.4byte	.LFE30
 4939 0521 0400     		.2byte	0x4
 4940 0523 F3       		.byte	0xf3
 4941 0524 01       		.uleb128 0x1
 4942 0525 50       		.byte	0x50
 4943 0526 9F       		.byte	0x9f
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 154


 4944 0527 00000000 		.4byte	0
 4945 052b 00000000 		.4byte	0
 4946              	.LLST39:
 4947 052f 00000000 		.4byte	.LVL111
 4948 0533 0C000000 		.4byte	.LVL112
 4949 0537 0200     		.2byte	0x2
 4950 0539 30       		.byte	0x30
 4951 053a 9F       		.byte	0x9f
 4952 053b 0C000000 		.4byte	.LVL112
 4953 053f 10000000 		.4byte	.LVL113
 4954 0543 0200     		.2byte	0x2
 4955 0545 31       		.byte	0x31
 4956 0546 9F       		.byte	0x9f
 4957 0547 10000000 		.4byte	.LVL113
 4958 054b 12000000 		.4byte	.LVL114
 4959 054f 0200     		.2byte	0x2
 4960 0551 32       		.byte	0x32
 4961 0552 9F       		.byte	0x9f
 4962 0553 12000000 		.4byte	.LVL114
 4963 0557 14000000 		.4byte	.LVL115
 4964 055b 0200     		.2byte	0x2
 4965 055d 33       		.byte	0x33
 4966 055e 9F       		.byte	0x9f
 4967 055f 14000000 		.4byte	.LVL115
 4968 0563 54000000 		.4byte	.LFE32
 4969 0567 0200     		.2byte	0x2
 4970 0569 35       		.byte	0x35
 4971 056a 9F       		.byte	0x9f
 4972 056b 00000000 		.4byte	0
 4973 056f 00000000 		.4byte	0
 4974              	.LLST40:
 4975 0573 18000000 		.4byte	.LVL117
 4976 0577 22000000 		.4byte	.LVL118
 4977 057b 0200     		.2byte	0x2
 4978 057d 31       		.byte	0x31
 4979 057e 9F       		.byte	0x9f
 4980 057f 00000000 		.4byte	0
 4981 0583 00000000 		.4byte	0
 4982              	.LLST42:
 4983 0587 14000000 		.4byte	.LVL115
 4984 058b 18000000 		.4byte	.LVL117
 4985 058f 0600     		.2byte	0x6
 4986 0591 03       		.byte	0x3
 4987 0592 00000000 		.4byte	CySysTickServiceCallbacks
 4988 0596 9F       		.byte	0x9f
 4989 0597 00000000 		.4byte	0
 4990 059b 00000000 		.4byte	0
 4991              	.LLST43:
 4992 059f 14000000 		.4byte	.LVL115
 4993 05a3 18000000 		.4byte	.LVL117
 4994 05a7 0200     		.2byte	0x2
 4995 05a9 3F       		.byte	0x3f
 4996 05aa 9F       		.byte	0x9f
 4997 05ab 00000000 		.4byte	0
 4998 05af 00000000 		.4byte	0
 4999              	.LLST44:
 5000 05b3 14000000 		.4byte	.LVL115
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 155


 5001 05b7 16000000 		.4byte	.LVL116
 5002 05bb 0500     		.2byte	0x5
 5003 05bd 0C       		.byte	0xc
 5004 05be 3C000020 		.4byte	0x2000003c
 5005 05c2 16000000 		.4byte	.LVL116
 5006 05c6 18000000 		.4byte	.LVL117
 5007 05ca 0200     		.2byte	0x2
 5008 05cc 73       		.byte	0x73
 5009 05cd 00       		.sleb128 0
 5010 05ce 00000000 		.4byte	0
 5011 05d2 00000000 		.4byte	0
 5012              	.LLST45:
 5013 05d6 2C000000 		.4byte	.LVL119
 5014 05da 30000000 		.4byte	.LVL120
 5015 05de 0100     		.2byte	0x1
 5016 05e0 50       		.byte	0x50
 5017 05e1 00000000 		.4byte	0
 5018 05e5 00000000 		.4byte	0
 5019              	.LLST46:
 5020 05e9 00000000 		.4byte	.LVL124
 5021 05ed 04000000 		.4byte	.LVL125
 5022 05f1 0100     		.2byte	0x1
 5023 05f3 50       		.byte	0x50
 5024 05f4 04000000 		.4byte	.LVL125
 5025 05f8 10000000 		.4byte	.LFE37
 5026 05fc 0400     		.2byte	0x4
 5027 05fe F3       		.byte	0xf3
 5028 05ff 01       		.uleb128 0x1
 5029 0600 50       		.byte	0x50
 5030 0601 9F       		.byte	0x9f
 5031 0602 00000000 		.4byte	0
 5032 0606 00000000 		.4byte	0
 5033              	.LLST47:
 5034 060a 0A000000 		.4byte	.LVL127
 5035 060e 0E000000 		.4byte	.LVL128
 5036 0612 0200     		.2byte	0x2
 5037 0614 31       		.byte	0x31
 5038 0615 9F       		.byte	0x9f
 5039 0616 00000000 		.4byte	0
 5040 061a 00000000 		.4byte	0
 5041              	.LLST48:
 5042 061e 00000000 		.4byte	.LVL131
 5043 0622 06000000 		.4byte	.LVL132
 5044 0626 0100     		.2byte	0x1
 5045 0628 50       		.byte	0x50
 5046 0629 06000000 		.4byte	.LVL132
 5047 062d 10000000 		.4byte	.LFE44
 5048 0631 0400     		.2byte	0x4
 5049 0633 F3       		.byte	0xf3
 5050 0634 01       		.uleb128 0x1
 5051 0635 50       		.byte	0x50
 5052 0636 9F       		.byte	0x9f
 5053 0637 00000000 		.4byte	0
 5054 063b 00000000 		.4byte	0
 5055              	.LLST49:
 5056 063f 00000000 		.4byte	.LVL133
 5057 0643 04000000 		.4byte	.LVL134
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 156


 5058 0647 0100     		.2byte	0x1
 5059 0649 50       		.byte	0x50
 5060 064a 04000000 		.4byte	.LVL134
 5061 064e 0C000000 		.4byte	.LFE45
 5062 0652 0400     		.2byte	0x4
 5063 0654 F3       		.byte	0xf3
 5064 0655 01       		.uleb128 0x1
 5065 0656 50       		.byte	0x50
 5066 0657 9F       		.byte	0x9f
 5067 0658 00000000 		.4byte	0
 5068 065c 00000000 		.4byte	0
 5069              		.section	.debug_aranges,"",%progbits
 5070 0000 8C010000 		.4byte	0x18c
 5071 0004 0200     		.2byte	0x2
 5072 0006 00000000 		.4byte	.Ldebug_info0
 5073 000a 04       		.byte	0x4
 5074 000b 00       		.byte	0
 5075 000c 0000     		.2byte	0
 5076 000e 0000     		.2byte	0
 5077 0010 00000000 		.4byte	.LFB1
 5078 0014 14000000 		.4byte	.LFE1-.LFB1
 5079 0018 00000000 		.4byte	.LFB4
 5080 001c 48000000 		.4byte	.LFE4-.LFB4
 5081 0020 00000000 		.4byte	.LFB2
 5082 0024 18000000 		.4byte	.LFE2-.LFB2
 5083 0028 00000000 		.4byte	.LFB5
 5084 002c 10000000 		.4byte	.LFE5-.LFB5
 5085 0030 00000000 		.4byte	.LFB6
 5086 0034 20000000 		.4byte	.LFE6-.LFB6
 5087 0038 00000000 		.4byte	.LFB7
 5088 003c 30000000 		.4byte	.LFE7-.LFB7
 5089 0040 00000000 		.4byte	.LFB8
 5090 0044 18000000 		.4byte	.LFE8-.LFB8
 5091 0048 00000000 		.4byte	.LFB9
 5092 004c 24000000 		.4byte	.LFE9-.LFB9
 5093 0050 00000000 		.4byte	.LFB11
 5094 0054 24000000 		.4byte	.LFE11-.LFB11
 5095 0058 00000000 		.4byte	.LFB12
 5096 005c 14000000 		.4byte	.LFE12-.LFB12
 5097 0060 00000000 		.4byte	.LFB13
 5098 0064 10000000 		.4byte	.LFE13-.LFB13
 5099 0068 00000000 		.4byte	.LFB14
 5100 006c 0C000000 		.4byte	.LFE14-.LFB14
 5101 0070 00000000 		.4byte	.LFB15
 5102 0074 0E000000 		.4byte	.LFE15-.LFB15
 5103 0078 00000000 		.4byte	.LFB16
 5104 007c 0C000000 		.4byte	.LFE16-.LFB16
 5105 0080 00000000 		.4byte	.LFB17
 5106 0084 10000000 		.4byte	.LFE17-.LFB17
 5107 0088 00000000 		.4byte	.LFB18
 5108 008c 10000000 		.4byte	.LFE18-.LFB18
 5109 0090 00000000 		.4byte	.LFB19
 5110 0094 34000000 		.4byte	.LFE19-.LFB19
 5111 0098 00000000 		.4byte	.LFB20
 5112 009c 20000000 		.4byte	.LFE20-.LFB20
 5113 00a0 00000000 		.4byte	.LFB21
 5114 00a4 14000000 		.4byte	.LFE21-.LFB21
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 157


 5115 00a8 00000000 		.4byte	.LFB22
 5116 00ac 18000000 		.4byte	.LFE22-.LFB22
 5117 00b0 00000000 		.4byte	.LFB23
 5118 00b4 14000000 		.4byte	.LFE23-.LFB23
 5119 00b8 00000000 		.4byte	.LFB24
 5120 00bc 14000000 		.4byte	.LFE24-.LFB24
 5121 00c0 00000000 		.4byte	.LFB25
 5122 00c4 14000000 		.4byte	.LFE25-.LFB25
 5123 00c8 00000000 		.4byte	.LFB26
 5124 00cc 04000000 		.4byte	.LFE26-.LFB26
 5125 00d0 00000000 		.4byte	.LFB27
 5126 00d4 18000000 		.4byte	.LFE27-.LFB27
 5127 00d8 00000000 		.4byte	.LFB28
 5128 00dc 2C000000 		.4byte	.LFE28-.LFB28
 5129 00e0 00000000 		.4byte	.LFB3
 5130 00e4 C4000000 		.4byte	.LFE3-.LFB3
 5131 00e8 00000000 		.4byte	.LFB10
 5132 00ec B8000000 		.4byte	.LFE10-.LFB10
 5133 00f0 00000000 		.4byte	.LFB29
 5134 00f4 14000000 		.4byte	.LFE29-.LFB29
 5135 00f8 00000000 		.4byte	.LFB30
 5136 00fc 48000000 		.4byte	.LFE30-.LFB30
 5137 0100 00000000 		.4byte	.LFB32
 5138 0104 54000000 		.4byte	.LFE32-.LFB32
 5139 0108 00000000 		.4byte	.LFB34
 5140 010c 10000000 		.4byte	.LFE34-.LFB34
 5141 0110 00000000 		.4byte	.LFB35
 5142 0114 10000000 		.4byte	.LFE35-.LFB35
 5143 0118 00000000 		.4byte	.LFB33
 5144 011c 18000000 		.4byte	.LFE33-.LFB33
 5145 0120 00000000 		.4byte	.LFB31
 5146 0124 1C000000 		.4byte	.LFE31-.LFB31
 5147 0128 00000000 		.4byte	.LFB36
 5148 012c 10000000 		.4byte	.LFE36-.LFB36
 5149 0130 00000000 		.4byte	.LFB37
 5150 0134 10000000 		.4byte	.LFE37-.LFB37
 5151 0138 00000000 		.4byte	.LFB38
 5152 013c 10000000 		.4byte	.LFE38-.LFB38
 5153 0140 00000000 		.4byte	.LFB39
 5154 0144 10000000 		.4byte	.LFE39-.LFB39
 5155 0148 00000000 		.4byte	.LFB40
 5156 014c 18000000 		.4byte	.LFE40-.LFB40
 5157 0150 00000000 		.4byte	.LFB41
 5158 0154 10000000 		.4byte	.LFE41-.LFB41
 5159 0158 00000000 		.4byte	.LFB42
 5160 015c 10000000 		.4byte	.LFE42-.LFB42
 5161 0160 00000000 		.4byte	.LFB46
 5162 0164 24000000 		.4byte	.LFE46-.LFB46
 5163 0168 00000000 		.4byte	.LFB43
 5164 016c 0C000000 		.4byte	.LFE43-.LFB43
 5165 0170 00000000 		.4byte	.LFB44
 5166 0174 10000000 		.4byte	.LFE44-.LFB44
 5167 0178 00000000 		.4byte	.LFB45
 5168 017c 0C000000 		.4byte	.LFE45-.LFB45
 5169 0180 00000000 		.4byte	.LFB47
 5170 0184 74000000 		.4byte	.LFE47-.LFB47
 5171 0188 00000000 		.4byte	0
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 158


 5172 018c 00000000 		.4byte	0
 5173              		.section	.debug_ranges,"",%progbits
 5174              	.Ldebug_ranges0:
 5175 0000 04000000 		.4byte	.LBB24
 5176 0004 06000000 		.4byte	.LBE24
 5177 0008 18000000 		.4byte	.LBB37
 5178 000c 1E000000 		.4byte	.LBE37
 5179 0010 20000000 		.4byte	.LBB38
 5180 0014 22000000 		.4byte	.LBE38
 5181 0018 00000000 		.4byte	0
 5182 001c 00000000 		.4byte	0
 5183 0020 08000000 		.4byte	.LBB31
 5184 0024 0A000000 		.4byte	.LBE31
 5185 0028 14000000 		.4byte	.LBB35
 5186 002c 16000000 		.4byte	.LBE35
 5187 0030 16000000 		.4byte	.LBB36
 5188 0034 18000000 		.4byte	.LBE36
 5189 0038 00000000 		.4byte	0
 5190 003c 00000000 		.4byte	0
 5191 0040 04000000 		.4byte	.LBB45
 5192 0044 06000000 		.4byte	.LBE45
 5193 0048 0A000000 		.4byte	.LBB48
 5194 004c 0E000000 		.4byte	.LBE48
 5195 0050 00000000 		.4byte	0
 5196 0054 00000000 		.4byte	0
 5197 0058 00000000 		.4byte	.LFB1
 5198 005c 14000000 		.4byte	.LFE1
 5199 0060 00000000 		.4byte	.LFB4
 5200 0064 48000000 		.4byte	.LFE4
 5201 0068 00000000 		.4byte	.LFB2
 5202 006c 18000000 		.4byte	.LFE2
 5203 0070 00000000 		.4byte	.LFB5
 5204 0074 10000000 		.4byte	.LFE5
 5205 0078 00000000 		.4byte	.LFB6
 5206 007c 20000000 		.4byte	.LFE6
 5207 0080 00000000 		.4byte	.LFB7
 5208 0084 30000000 		.4byte	.LFE7
 5209 0088 00000000 		.4byte	.LFB8
 5210 008c 18000000 		.4byte	.LFE8
 5211 0090 00000000 		.4byte	.LFB9
 5212 0094 24000000 		.4byte	.LFE9
 5213 0098 00000000 		.4byte	.LFB11
 5214 009c 24000000 		.4byte	.LFE11
 5215 00a0 00000000 		.4byte	.LFB12
 5216 00a4 14000000 		.4byte	.LFE12
 5217 00a8 00000000 		.4byte	.LFB13
 5218 00ac 10000000 		.4byte	.LFE13
 5219 00b0 00000000 		.4byte	.LFB14
 5220 00b4 0C000000 		.4byte	.LFE14
 5221 00b8 00000000 		.4byte	.LFB15
 5222 00bc 0E000000 		.4byte	.LFE15
 5223 00c0 00000000 		.4byte	.LFB16
 5224 00c4 0C000000 		.4byte	.LFE16
 5225 00c8 00000000 		.4byte	.LFB17
 5226 00cc 10000000 		.4byte	.LFE17
 5227 00d0 00000000 		.4byte	.LFB18
 5228 00d4 10000000 		.4byte	.LFE18
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 159


 5229 00d8 00000000 		.4byte	.LFB19
 5230 00dc 34000000 		.4byte	.LFE19
 5231 00e0 00000000 		.4byte	.LFB20
 5232 00e4 20000000 		.4byte	.LFE20
 5233 00e8 00000000 		.4byte	.LFB21
 5234 00ec 14000000 		.4byte	.LFE21
 5235 00f0 00000000 		.4byte	.LFB22
 5236 00f4 18000000 		.4byte	.LFE22
 5237 00f8 00000000 		.4byte	.LFB23
 5238 00fc 14000000 		.4byte	.LFE23
 5239 0100 00000000 		.4byte	.LFB24
 5240 0104 14000000 		.4byte	.LFE24
 5241 0108 00000000 		.4byte	.LFB25
 5242 010c 14000000 		.4byte	.LFE25
 5243 0110 00000000 		.4byte	.LFB26
 5244 0114 04000000 		.4byte	.LFE26
 5245 0118 00000000 		.4byte	.LFB27
 5246 011c 18000000 		.4byte	.LFE27
 5247 0120 00000000 		.4byte	.LFB28
 5248 0124 2C000000 		.4byte	.LFE28
 5249 0128 00000000 		.4byte	.LFB3
 5250 012c C4000000 		.4byte	.LFE3
 5251 0130 00000000 		.4byte	.LFB10
 5252 0134 B8000000 		.4byte	.LFE10
 5253 0138 00000000 		.4byte	.LFB29
 5254 013c 14000000 		.4byte	.LFE29
 5255 0140 00000000 		.4byte	.LFB30
 5256 0144 48000000 		.4byte	.LFE30
 5257 0148 00000000 		.4byte	.LFB32
 5258 014c 54000000 		.4byte	.LFE32
 5259 0150 00000000 		.4byte	.LFB34
 5260 0154 10000000 		.4byte	.LFE34
 5261 0158 00000000 		.4byte	.LFB35
 5262 015c 10000000 		.4byte	.LFE35
 5263 0160 00000000 		.4byte	.LFB33
 5264 0164 18000000 		.4byte	.LFE33
 5265 0168 00000000 		.4byte	.LFB31
 5266 016c 1C000000 		.4byte	.LFE31
 5267 0170 00000000 		.4byte	.LFB36
 5268 0174 10000000 		.4byte	.LFE36
 5269 0178 00000000 		.4byte	.LFB37
 5270 017c 10000000 		.4byte	.LFE37
 5271 0180 00000000 		.4byte	.LFB38
 5272 0184 10000000 		.4byte	.LFE38
 5273 0188 00000000 		.4byte	.LFB39
 5274 018c 10000000 		.4byte	.LFE39
 5275 0190 00000000 		.4byte	.LFB40
 5276 0194 18000000 		.4byte	.LFE40
 5277 0198 00000000 		.4byte	.LFB41
 5278 019c 10000000 		.4byte	.LFE41
 5279 01a0 00000000 		.4byte	.LFB42
 5280 01a4 10000000 		.4byte	.LFE42
 5281 01a8 00000000 		.4byte	.LFB46
 5282 01ac 24000000 		.4byte	.LFE46
 5283 01b0 00000000 		.4byte	.LFB43
 5284 01b4 0C000000 		.4byte	.LFE43
 5285 01b8 00000000 		.4byte	.LFB44
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 160


 5286 01bc 10000000 		.4byte	.LFE44
 5287 01c0 00000000 		.4byte	.LFB45
 5288 01c4 0C000000 		.4byte	.LFE45
 5289 01c8 00000000 		.4byte	.LFB47
 5290 01cc 74000000 		.4byte	.LFE47
 5291 01d0 00000000 		.4byte	0
 5292 01d4 00000000 		.4byte	0
 5293              		.section	.debug_line,"",%progbits
 5294              	.Ldebug_line0:
 5295 0000 28050000 		.section	.debug_str,"MS",%progbits,1
 5295      02006700 
 5295      00000201 
 5295      FB0E0D00 
 5295      01010101 
 5296              	.LASF34:
 5297 0000 72616D56 		.ascii	"ramVectorTable\000"
 5297      6563746F 
 5297      72546162 
 5297      6C6500
 5298              	.LASF10:
 5299 000f 75696E74 		.ascii	"uint16\000"
 5299      313600
 5300              	.LASF51:
 5301 0016 696E7453 		.ascii	"intState\000"
 5301      74617465 
 5301      00
 5302              	.LASF37:
 5303 001f 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 5303      73436C6B 
 5303      57726974 
 5303      65486663 
 5303      6C6B4469 
 5304              	.LASF100:
 5305 0038 43795379 		.ascii	"CySysClkPumpConfig\000"
 5305      73436C6B 
 5305      50756D70 
 5305      436F6E66 
 5305      696700
 5306              	.LASF33:
 5307 004b 6F6C6449 		.ascii	"oldIsr\000"
 5307      737200
 5308              	.LASF90:
 5309 0052 72657456 		.ascii	"retVal\000"
 5309      616C00
 5310              	.LASF50:
 5311 0059 43794469 		.ascii	"CyDisableInts\000"
 5311      7361626C 
 5311      65496E74 
 5311      7300
 5312              	.LASF7:
 5313 0067 6C6F6E67 		.ascii	"long long unsigned int\000"
 5313      206C6F6E 
 5313      6720756E 
 5313      7369676E 
 5313      65642069 
 5314              	.LASF99:
 5315 007e 43795379 		.ascii	"CySysTickInitVar\000"
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 161


 5315      73546963 
 5315      6B496E69 
 5315      74566172 
 5315      00
 5316              	.LASF52:
 5317 008f 4379456E 		.ascii	"CyEnableInts\000"
 5317      61626C65 
 5317      496E7473 
 5317      00
 5318              	.LASF105:
 5319 009c 43795379 		.ascii	"CySysClkWcoEnabled\000"
 5319      73436C6B 
 5319      57636F45 
 5319      6E61626C 
 5319      656400
 5320              	.LASF68:
 5321 00af 4379536F 		.ascii	"CySoftwareReset\000"
 5321      66747761 
 5321      72655265 
 5321      73657400 
 5322              	.LASF79:
 5323 00bf 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 5323      73546963 
 5323      6B456E61 
 5323      626C6549 
 5323      6E746572 
 5324              	.LASF62:
 5325 00d8 4379496E 		.ascii	"CyIntGetState\000"
 5325      74476574 
 5325      53746174 
 5325      6500
 5326              	.LASF6:
 5327 00e6 6C6F6E67 		.ascii	"long long int\000"
 5327      206C6F6E 
 5327      6720696E 
 5327      7400
 5328              	.LASF0:
 5329 00f4 7369676E 		.ascii	"signed char\000"
 5329      65642063 
 5329      68617200 
 5330              	.LASF21:
 5331 0100 66726571 		.ascii	"freq\000"
 5331      00
 5332              	.LASF76:
 5333 0105 43794465 		.ascii	"CyDelayFreq\000"
 5333      6C617946 
 5333      72657100 
 5334              	.LASF22:
 5335 0111 696E7465 		.ascii	"interruptState\000"
 5335      72727570 
 5335      74537461 
 5335      746500
 5336              	.LASF24:
 5337 0120 6C664C69 		.ascii	"lfLimit\000"
 5337      6D697400 
 5338              	.LASF84:
 5339 0128 43795379 		.ascii	"CySysTickGetReload\000"
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 162


 5339      73546963 
 5339      6B476574 
 5339      52656C6F 
 5339      616400
 5340              	.LASF83:
 5341 013b 43795379 		.ascii	"CySysClkImoGetWcoLock\000"
 5341      73436C6B 
 5341      496D6F47 
 5341      65745763 
 5341      6F4C6F63 
 5342              	.LASF73:
 5343 0151 77636F4C 		.ascii	"wcoLock\000"
 5343      6F636B00 
 5344              	.LASF4:
 5345 0159 6C6F6E67 		.ascii	"long int\000"
 5345      20696E74 
 5345      00
 5346              	.LASF63:
 5347 0162 4379496E 		.ascii	"CyIntDisable\000"
 5347      74446973 
 5347      61626C65 
 5347      00
 5348              	.LASF106:
 5349 016f 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 5349      43313120 
 5349      352E342E 
 5349      31203230 
 5349      31363036 
 5350 01a2 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 5350      20726576 
 5350      6973696F 
 5350      6E203233 
 5350      37373135 
 5351 01d5 67202D4F 		.ascii	"g -Os -ffunction-sections -ffat-lto-objects\000"
 5351      73202D66 
 5351      66756E63 
 5351      74696F6E 
 5351      2D736563 
 5352              	.LASF91:
 5353 0201 43795379 		.ascii	"CySysTickGetCallback\000"
 5353      73546963 
 5353      6B476574 
 5353      43616C6C 
 5353      6261636B 
 5354              	.LASF39:
 5355 0216 43795379 		.ascii	"CySysEnablePumpClock\000"
 5355      73456E61 
 5355      626C6550 
 5355      756D7043 
 5355      6C6F636B 
 5356              	.LASF9:
 5357 022b 75696E74 		.ascii	"uint8\000"
 5357      3800
 5358              	.LASF96:
 5359 0231 63796465 		.ascii	"cydelayFreqKhz\000"
 5359      6C617946 
 5359      7265714B 
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 163


 5359      687A00
 5360              	.LASF41:
 5361 0240 656E6162 		.ascii	"enable\000"
 5361      6C6500
 5362              	.LASF13:
 5363 0247 646F7562 		.ascii	"double\000"
 5363      6C6500
 5364              	.LASF59:
 5365 024e 73686966 		.ascii	"shift\000"
 5365      7400
 5366              	.LASF11:
 5367 0254 75696E74 		.ascii	"uint32\000"
 5367      333200
 5368              	.LASF53:
 5369 025b 6D61736B 		.ascii	"mask\000"
 5369      00
 5370              	.LASF46:
 5371 0260 43795379 		.ascii	"CySysClkGetSysclkSource\000"
 5371      73436C6B 
 5371      47657453 
 5371      7973636C 
 5371      6B536F75 
 5372              	.LASF26:
 5373 0278 43795379 		.ascii	"CySysClkImoEnableWcoLock\000"
 5373      73436C6B 
 5373      496D6F45 
 5373      6E61626C 
 5373      6557636F 
 5374              	.LASF60:
 5375 0291 4379496E 		.ascii	"CyIntGetPriority\000"
 5375      74476574 
 5375      5072696F 
 5375      72697479 
 5375      00
 5376              	.LASF98:
 5377 02a2 63796465 		.ascii	"cydelay32kMs\000"
 5377      6C617933 
 5377      326B4D73 
 5377      00
 5378              	.LASF108:
 5379 02af 433A5C55 		.ascii	"C:\\Users\\PC\\Documents\\PSoC Creator\\yellowChip\\"
 5379      73657273 
 5379      5C50435C 
 5379      446F6375 
 5379      6D656E74 
 5380 02dd 5247425F 		.ascii	"RGB_Led.cydsn\000"
 5380      4C65642E 
 5380      63796473 
 5380      6E00
 5381              	.LASF77:
 5382 02eb 43795379 		.ascii	"CySysTickInit\000"
 5382      73546963 
 5382      6B496E69 
 5382      7400
 5383              	.LASF30:
 5384 02f9 76616C75 		.ascii	"value\000"
 5384      6500
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 164


 5385              	.LASF29:
 5386 02ff 636C6F63 		.ascii	"clockSource\000"
 5386      6B536F75 
 5386      72636500 
 5387              	.LASF92:
 5388 030b 43794765 		.ascii	"CyGetUniqueId\000"
 5388      74556E69 
 5388      71756549 
 5388      6400
 5389              	.LASF87:
 5390 0319 43795379 		.ascii	"CySysTickGetCountFlag\000"
 5390      73546963 
 5390      6B476574 
 5390      436F756E 
 5390      74466C61 
 5391              	.LASF8:
 5392 032f 756E7369 		.ascii	"unsigned int\000"
 5392      676E6564 
 5392      20696E74 
 5392      00
 5393              	.LASF110:
 5394 033c 43795379 		.ascii	"CySysTickClear\000"
 5394      73546963 
 5394      6B436C65 
 5394      617200
 5395              	.LASF5:
 5396 034b 6C6F6E67 		.ascii	"long unsigned int\000"
 5396      20756E73 
 5396      69676E65 
 5396      6420696E 
 5396      7400
 5397              	.LASF36:
 5398 035d 43795379 		.ascii	"CySysClkImoStop\000"
 5398      73436C6B 
 5398      496D6F53 
 5398      746F7000 
 5399              	.LASF101:
 5400 036d 4379456E 		.ascii	"CyEnterCriticalSection\000"
 5400      74657243 
 5400      72697469 
 5400      63616C53 
 5400      65637469 
 5401              	.LASF64:
 5402 0384 4379496E 		.ascii	"CyIntSetPending\000"
 5402      74536574 
 5402      50656E64 
 5402      696E6700 
 5403              	.LASF47:
 5404 0394 43795379 		.ascii	"CySysGetResetReason\000"
 5404      73476574 
 5404      52657365 
 5404      74526561 
 5404      736F6E00 
 5405              	.LASF3:
 5406 03a8 73686F72 		.ascii	"short unsigned int\000"
 5406      7420756E 
 5406      7369676E 
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 165


 5406      65642069 
 5406      6E7400
 5407              	.LASF23:
 5408 03bb 72656754 		.ascii	"regTmp\000"
 5408      6D7000
 5409              	.LASF27:
 5410 03c2 43795379 		.ascii	"CySysTickSetClockSource\000"
 5410      73546963 
 5410      6B536574 
 5410      436C6F63 
 5410      6B536F75 
 5411              	.LASF55:
 5412 03da 4379496E 		.ascii	"CyIntSetVector\000"
 5412      74536574 
 5412      56656374 
 5412      6F7200
 5413              	.LASF31:
 5414 03e9 6E756D62 		.ascii	"number\000"
 5414      657200
 5415              	.LASF58:
 5416 03f0 7072696F 		.ascii	"priority\000"
 5416      72697479 
 5416      00
 5417              	.LASF71:
 5418 03f9 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 5418      73436C6B 
 5418      57726974 
 5418      65496D6F 
 5418      46726571 
 5419              	.LASF111:
 5420 040e 4379496E 		.ascii	"CyIntSetSysVector\000"
 5420      74536574 
 5420      53797356 
 5420      6563746F 
 5420      7200
 5421              	.LASF35:
 5422 0420 43795379 		.ascii	"CySysClkImoDisableWcoLock\000"
 5422      73436C6B 
 5422      496D6F44 
 5422      69736162 
 5422      6C655763 
 5423              	.LASF16:
 5424 043a 72656733 		.ascii	"reg32\000"
 5424      3200
 5425              	.LASF81:
 5426 0440 43795379 		.ascii	"CySysTickStart\000"
 5426      73546963 
 5426      6B537461 
 5426      727400
 5427              	.LASF49:
 5428 044f 72657475 		.ascii	"returnStatus\000"
 5428      726E5374 
 5428      61747573 
 5428      00
 5429              	.LASF19:
 5430 045c 73697A65 		.ascii	"sizetype\000"
 5430      74797065 
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 166


 5430      00
 5431              	.LASF65:
 5432 0465 4379496E 		.ascii	"CyIntClearPending\000"
 5432      74436C65 
 5432      61725065 
 5432      6E64696E 
 5432      6700
 5433              	.LASF18:
 5434 0477 6C6F6E67 		.ascii	"long double\000"
 5434      20646F75 
 5434      626C6500 
 5435              	.LASF32:
 5436 0483 61646472 		.ascii	"address\000"
 5436      65737300 
 5437              	.LASF42:
 5438 048b 73797363 		.ascii	"sysclkSource\000"
 5438      6C6B536F 
 5438      75726365 
 5438      00
 5439              	.LASF89:
 5440 0498 66756E63 		.ascii	"function\000"
 5440      74696F6E 
 5440      00
 5441              	.LASF85:
 5442 04a1 43795379 		.ascii	"CySysTickGetValue\000"
 5442      73546963 
 5442      6B476574 
 5442      56616C75 
 5442      6500
 5443              	.LASF95:
 5444 04b3 63796465 		.ascii	"cydelayFreqHz\000"
 5444      6C617946 
 5444      72657148 
 5444      7A00
 5445              	.LASF57:
 5446 04c1 4379496E 		.ascii	"CyIntSetPriority\000"
 5446      74536574 
 5446      5072696F 
 5446      72697479 
 5446      00
 5447              	.LASF12:
 5448 04d2 666C6F61 		.ascii	"float\000"
 5448      7400
 5449              	.LASF102:
 5450 04d8 43794578 		.ascii	"CyExitCriticalSection\000"
 5450      69744372 
 5450      69746963 
 5450      616C5365 
 5450      6374696F 
 5451              	.LASF20:
 5452 04ee 63795379 		.ascii	"cySysTickCallback\000"
 5452      73546963 
 5452      6B43616C 
 5452      6C626163 
 5452      6B00
 5453              	.LASF56:
 5454 0500 4379496E 		.ascii	"CyIntGetVector\000"
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 167


 5454      74476574 
 5454      56656374 
 5454      6F7200
 5455              	.LASF70:
 5456 050f 6D696C6C 		.ascii	"milliseconds\000"
 5456      69736563 
 5456      6F6E6473 
 5456      00
 5457              	.LASF103:
 5458 051c 43794465 		.ascii	"CyDelayCycles\000"
 5458      6C617943 
 5458      79636C65 
 5458      7300
 5459              	.LASF15:
 5460 052a 72656738 		.ascii	"reg8\000"
 5460      00
 5461              	.LASF66:
 5462 052f 43794861 		.ascii	"CyHalt\000"
 5462      6C7400
 5463              	.LASF1:
 5464 0536 756E7369 		.ascii	"unsigned char\000"
 5464      676E6564 
 5464      20636861 
 5464      7200
 5465              	.LASF48:
 5466 0544 72656173 		.ascii	"reason\000"
 5466      6F6E00
 5467              	.LASF2:
 5468 054b 73686F72 		.ascii	"short int\000"
 5468      7420696E 
 5468      7400
 5469              	.LASF61:
 5470 0555 4379496E 		.ascii	"CyIntEnable\000"
 5470      74456E61 
 5470      626C6500 
 5471              	.LASF54:
 5472 0561 4379496E 		.ascii	"CyIntGetSysVector\000"
 5472      74476574 
 5472      53797356 
 5472      6563746F 
 5472      7200
 5473              	.LASF40:
 5474 0573 636C6B53 		.ascii	"clkSelect\000"
 5474      656C6563 
 5474      7400
 5475              	.LASF74:
 5476 057d 43794465 		.ascii	"CyDelayUs\000"
 5476      6C617955 
 5476      7300
 5477              	.LASF109:
 5478 0587 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 5478      73546963 
 5478      6B536572 
 5478      76696365 
 5478      43616C6C 
 5479              	.LASF14:
 5480 05a1 63686172 		.ascii	"char\000"
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 168


 5480      00
 5481              	.LASF17:
 5482 05a6 63796973 		.ascii	"cyisraddress\000"
 5482      72616464 
 5482      72657373 
 5482      00
 5483              	.LASF80:
 5484 05b3 43795379 		.ascii	"CySysTickEnable\000"
 5484      73546963 
 5484      6B456E61 
 5484      626C6500 
 5485              	.LASF45:
 5486 05c3 43795379 		.ascii	"CySysClkWriteHfclkDiv\000"
 5486      73436C6B 
 5486      57726974 
 5486      65486663 
 5486      6C6B4469 
 5487              	.LASF43:
 5488 05d9 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 5488      73436C6B 
 5488      57726974 
 5488      65537973 
 5488      636C6B44 
 5489              	.LASF88:
 5490 05f0 43795379 		.ascii	"CySysTickSetCallback\000"
 5490      73546963 
 5490      6B536574 
 5490      43616C6C 
 5490      6261636B 
 5491              	.LASF94:
 5492 0605 43795379 		.ascii	"CySysTickCallbacks\000"
 5492      73546963 
 5492      6B43616C 
 5492      6C626163 
 5492      6B7300
 5493              	.LASF72:
 5494 0618 696D6F54 		.ascii	"imoTrim1Value\000"
 5494      72696D31 
 5494      56616C75 
 5494      6500
 5495              	.LASF93:
 5496 0626 756E6971 		.ascii	"uniqueId\000"
 5496      75654964 
 5496      00
 5497              	.LASF25:
 5498 062f 666C6173 		.ascii	"flashCtlReg\000"
 5498      6843746C 
 5498      52656700 
 5499              	.LASF69:
 5500 063b 43794465 		.ascii	"CyDelay\000"
 5500      6C617900 
 5501              	.LASF86:
 5502 0643 43795379 		.ascii	"CySysTickGetClockSource\000"
 5502      73546963 
 5502      6B476574 
 5502      436C6F63 
 5502      6B536F75 
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc5xtmqf.s 			page 169


 5503              	.LASF82:
 5504 065b 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 5504      73546963 
 5504      6B446973 
 5504      61626C65 
 5504      496E7465 
 5505              	.LASF97:
 5506 0675 63796465 		.ascii	"cydelayFreqMhz\000"
 5506      6C617946 
 5506      7265714D 
 5506      687A00
 5507              	.LASF78:
 5508 0684 43795379 		.ascii	"CySysTickStop\000"
 5508      73546963 
 5508      6B53746F 
 5508      7000
 5509              	.LASF44:
 5510 0692 64697669 		.ascii	"divider\000"
 5510      64657200 
 5511              	.LASF67:
 5512 069a 43795379 		.ascii	"CySysClkImoStart\000"
 5512      73436C6B 
 5512      496D6F53 
 5512      74617274 
 5512      00
 5513              	.LASF104:
 5514 06ab 43795379 		.ascii	"CySysFlashSetWaitCycles\000"
 5514      73466C61 
 5514      73685365 
 5514      74576169 
 5514      74437963 
 5515              	.LASF107:
 5516 06c3 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLib.c\000"
 5516      72617465 
 5516      645F536F 
 5516      75726365 
 5516      5C50536F 
 5517              	.LASF75:
 5518 06e2 6D696372 		.ascii	"microseconds\000"
 5518      6F736563 
 5518      6F6E6473 
 5518      00
 5519              	.LASF38:
 5520 06ef 746D7052 		.ascii	"tmpReg\000"
 5520      656700
 5521              	.LASF28:
 5522 06f6 43795379 		.ascii	"CySysTickSetReload\000"
 5522      73546963 
 5522      6B536574 
 5522      52656C6F 
 5522      616400
 5523              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
