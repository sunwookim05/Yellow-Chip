ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm0uBki.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"mUART_UART.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.mUART_UartInit,"ax",%progbits
  20              		.align	2
  21              		.global	mUART_UartInit
  22              		.code	16
  23              		.thumb_func
  24              		.type	mUART_UartInit, %function
  25              	mUART_UartInit:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC4\\mUART_UART.c"
   1:Generated_Source\PSoC4/mUART_UART.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/mUART_UART.c **** * \file mUART_UART.c
   3:Generated_Source\PSoC4/mUART_UART.c **** * \version 4.0
   4:Generated_Source\PSoC4/mUART_UART.c **** *
   5:Generated_Source\PSoC4/mUART_UART.c **** * \brief
   6:Generated_Source\PSoC4/mUART_UART.c **** *  This file provides the source code to the API for the SCB Component in
   7:Generated_Source\PSoC4/mUART_UART.c **** *  UART mode.
   8:Generated_Source\PSoC4/mUART_UART.c **** *
   9:Generated_Source\PSoC4/mUART_UART.c **** * Note:
  10:Generated_Source\PSoC4/mUART_UART.c **** *
  11:Generated_Source\PSoC4/mUART_UART.c **** *******************************************************************************
  12:Generated_Source\PSoC4/mUART_UART.c **** * \copyright
  13:Generated_Source\PSoC4/mUART_UART.c **** * Copyright 2013-2017, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/mUART_UART.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/mUART_UART.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/mUART_UART.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/mUART_UART.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/mUART_UART.c **** 
  19:Generated_Source\PSoC4/mUART_UART.c **** #include "mUART_PVT.h"
  20:Generated_Source\PSoC4/mUART_UART.c **** #include "mUART_SPI_UART_PVT.h"
  21:Generated_Source\PSoC4/mUART_UART.c **** #include "cyapicallbacks.h"
  22:Generated_Source\PSoC4/mUART_UART.c **** 
  23:Generated_Source\PSoC4/mUART_UART.c **** #if (mUART_UART_WAKE_ENABLE_CONST && mUART_UART_RX_WAKEUP_IRQ)
  24:Generated_Source\PSoC4/mUART_UART.c ****     /**
  25:Generated_Source\PSoC4/mUART_UART.c ****     * \addtogroup group_globals
  26:Generated_Source\PSoC4/mUART_UART.c ****     * \{
  27:Generated_Source\PSoC4/mUART_UART.c ****     */
  28:Generated_Source\PSoC4/mUART_UART.c ****     /** This global variable determines whether to enable Skip Start
  29:Generated_Source\PSoC4/mUART_UART.c ****     * functionality when mUART_Sleep() function is called:
  30:Generated_Source\PSoC4/mUART_UART.c ****     * 0 – disable, other values – enable. Default value is 1.
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm0uBki.s 			page 2


  31:Generated_Source\PSoC4/mUART_UART.c ****     * It is only available when Enable wakeup from Deep Sleep Mode is enabled.
  32:Generated_Source\PSoC4/mUART_UART.c ****     */
  33:Generated_Source\PSoC4/mUART_UART.c ****     uint8 mUART_skipStart = 1u;
  34:Generated_Source\PSoC4/mUART_UART.c ****     /** \} globals */
  35:Generated_Source\PSoC4/mUART_UART.c **** #endif /* (mUART_UART_WAKE_ENABLE_CONST && mUART_UART_RX_WAKEUP_IRQ) */
  36:Generated_Source\PSoC4/mUART_UART.c **** 
  37:Generated_Source\PSoC4/mUART_UART.c **** #if(mUART_SCB_MODE_UNCONFIG_CONST_CFG)
  38:Generated_Source\PSoC4/mUART_UART.c **** 
  39:Generated_Source\PSoC4/mUART_UART.c ****     /***************************************
  40:Generated_Source\PSoC4/mUART_UART.c ****     *  Configuration Structure Initialization
  41:Generated_Source\PSoC4/mUART_UART.c ****     ***************************************/
  42:Generated_Source\PSoC4/mUART_UART.c **** 
  43:Generated_Source\PSoC4/mUART_UART.c ****     const mUART_UART_INIT_STRUCT mUART_configUart =
  44:Generated_Source\PSoC4/mUART_UART.c ****     {
  45:Generated_Source\PSoC4/mUART_UART.c ****         mUART_UART_SUB_MODE,
  46:Generated_Source\PSoC4/mUART_UART.c ****         mUART_UART_DIRECTION,
  47:Generated_Source\PSoC4/mUART_UART.c ****         mUART_UART_DATA_BITS_NUM,
  48:Generated_Source\PSoC4/mUART_UART.c ****         mUART_UART_PARITY_TYPE,
  49:Generated_Source\PSoC4/mUART_UART.c ****         mUART_UART_STOP_BITS_NUM,
  50:Generated_Source\PSoC4/mUART_UART.c ****         mUART_UART_OVS_FACTOR,
  51:Generated_Source\PSoC4/mUART_UART.c ****         mUART_UART_IRDA_LOW_POWER,
  52:Generated_Source\PSoC4/mUART_UART.c ****         mUART_UART_MEDIAN_FILTER_ENABLE,
  53:Generated_Source\PSoC4/mUART_UART.c ****         mUART_UART_RETRY_ON_NACK,
  54:Generated_Source\PSoC4/mUART_UART.c ****         mUART_UART_IRDA_POLARITY,
  55:Generated_Source\PSoC4/mUART_UART.c ****         mUART_UART_DROP_ON_PARITY_ERR,
  56:Generated_Source\PSoC4/mUART_UART.c ****         mUART_UART_DROP_ON_FRAME_ERR,
  57:Generated_Source\PSoC4/mUART_UART.c ****         mUART_UART_WAKE_ENABLE,
  58:Generated_Source\PSoC4/mUART_UART.c ****         0u,
  59:Generated_Source\PSoC4/mUART_UART.c ****         NULL,
  60:Generated_Source\PSoC4/mUART_UART.c ****         0u,
  61:Generated_Source\PSoC4/mUART_UART.c ****         NULL,
  62:Generated_Source\PSoC4/mUART_UART.c ****         mUART_UART_MP_MODE_ENABLE,
  63:Generated_Source\PSoC4/mUART_UART.c ****         mUART_UART_MP_ACCEPT_ADDRESS,
  64:Generated_Source\PSoC4/mUART_UART.c ****         mUART_UART_MP_RX_ADDRESS,
  65:Generated_Source\PSoC4/mUART_UART.c ****         mUART_UART_MP_RX_ADDRESS_MASK,
  66:Generated_Source\PSoC4/mUART_UART.c ****         (uint32) mUART_SCB_IRQ_INTERNAL,
  67:Generated_Source\PSoC4/mUART_UART.c ****         mUART_UART_INTR_RX_MASK,
  68:Generated_Source\PSoC4/mUART_UART.c ****         mUART_UART_RX_TRIGGER_LEVEL,
  69:Generated_Source\PSoC4/mUART_UART.c ****         mUART_UART_INTR_TX_MASK,
  70:Generated_Source\PSoC4/mUART_UART.c ****         mUART_UART_TX_TRIGGER_LEVEL,
  71:Generated_Source\PSoC4/mUART_UART.c ****         (uint8) mUART_UART_BYTE_MODE_ENABLE,
  72:Generated_Source\PSoC4/mUART_UART.c ****         (uint8) mUART_UART_CTS_ENABLE,
  73:Generated_Source\PSoC4/mUART_UART.c ****         (uint8) mUART_UART_CTS_POLARITY,
  74:Generated_Source\PSoC4/mUART_UART.c ****         (uint8) mUART_UART_RTS_POLARITY,
  75:Generated_Source\PSoC4/mUART_UART.c ****         (uint8) mUART_UART_RTS_FIFO_LEVEL,
  76:Generated_Source\PSoC4/mUART_UART.c ****         (uint8) mUART_UART_RX_BREAK_WIDTH
  77:Generated_Source\PSoC4/mUART_UART.c ****     };
  78:Generated_Source\PSoC4/mUART_UART.c **** 
  79:Generated_Source\PSoC4/mUART_UART.c **** 
  80:Generated_Source\PSoC4/mUART_UART.c ****     /*******************************************************************************
  81:Generated_Source\PSoC4/mUART_UART.c ****     * Function Name: mUART_UartInit
  82:Generated_Source\PSoC4/mUART_UART.c ****     ****************************************************************************//**
  83:Generated_Source\PSoC4/mUART_UART.c ****     *
  84:Generated_Source\PSoC4/mUART_UART.c ****     *  Configures the mUART for UART operation.
  85:Generated_Source\PSoC4/mUART_UART.c ****     *
  86:Generated_Source\PSoC4/mUART_UART.c ****     *  This function is intended specifically to be used when the mUART
  87:Generated_Source\PSoC4/mUART_UART.c ****     *  configuration is set to “Unconfigured mUART” in the customizer.
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm0uBki.s 			page 3


  88:Generated_Source\PSoC4/mUART_UART.c ****     *  After initializing the mUART in UART mode using this function,
  89:Generated_Source\PSoC4/mUART_UART.c ****     *  the component can be enabled using the mUART_Start() or
  90:Generated_Source\PSoC4/mUART_UART.c ****     * mUART_Enable() function.
  91:Generated_Source\PSoC4/mUART_UART.c ****     *  This function uses a pointer to a structure that provides the configuration
  92:Generated_Source\PSoC4/mUART_UART.c ****     *  settings. This structure contains the same information that would otherwise
  93:Generated_Source\PSoC4/mUART_UART.c ****     *  be provided by the customizer settings.
  94:Generated_Source\PSoC4/mUART_UART.c ****     *
  95:Generated_Source\PSoC4/mUART_UART.c ****     *  \param config: pointer to a structure that contains the following list of
  96:Generated_Source\PSoC4/mUART_UART.c ****     *   fields. These fields match the selections available in the customizer.
  97:Generated_Source\PSoC4/mUART_UART.c ****     *   Refer to the customizer for further description of the settings.
  98:Generated_Source\PSoC4/mUART_UART.c ****     *
  99:Generated_Source\PSoC4/mUART_UART.c ****     *******************************************************************************/
 100:Generated_Source\PSoC4/mUART_UART.c ****     void mUART_UartInit(const mUART_UART_INIT_STRUCT *config)
 101:Generated_Source\PSoC4/mUART_UART.c ****     {
 102:Generated_Source\PSoC4/mUART_UART.c ****         uint32 pinsConfig;
 103:Generated_Source\PSoC4/mUART_UART.c **** 
 104:Generated_Source\PSoC4/mUART_UART.c ****         if (NULL == config)
 105:Generated_Source\PSoC4/mUART_UART.c ****         {
 106:Generated_Source\PSoC4/mUART_UART.c ****             CYASSERT(0u != 0u); /* Halt execution due to bad function parameter */
 107:Generated_Source\PSoC4/mUART_UART.c ****         }
 108:Generated_Source\PSoC4/mUART_UART.c ****         else
 109:Generated_Source\PSoC4/mUART_UART.c ****         {
 110:Generated_Source\PSoC4/mUART_UART.c ****             /* Get direction to configure UART pins: TX, RX or TX+RX */
 111:Generated_Source\PSoC4/mUART_UART.c ****             pinsConfig  = config->direction;
 112:Generated_Source\PSoC4/mUART_UART.c **** 
 113:Generated_Source\PSoC4/mUART_UART.c ****         #if !(mUART_CY_SCBIP_V0 || mUART_CY_SCBIP_V1)
 114:Generated_Source\PSoC4/mUART_UART.c ****             /* Add RTS and CTS pins to configure */
 115:Generated_Source\PSoC4/mUART_UART.c ****             pinsConfig |= (0u != config->rtsRxFifoLevel) ? (mUART_UART_RTS_PIN_ENABLE) : (0u);
 116:Generated_Source\PSoC4/mUART_UART.c ****             pinsConfig |= (0u != config->enableCts)      ? (mUART_UART_CTS_PIN_ENABLE) : (0u);
 117:Generated_Source\PSoC4/mUART_UART.c ****         #endif /* !(mUART_CY_SCBIP_V0 || mUART_CY_SCBIP_V1) */
 118:Generated_Source\PSoC4/mUART_UART.c **** 
 119:Generated_Source\PSoC4/mUART_UART.c ****             /* Configure pins */
 120:Generated_Source\PSoC4/mUART_UART.c ****             mUART_SetPins(mUART_SCB_MODE_UART, config->mode, pinsConfig);
 121:Generated_Source\PSoC4/mUART_UART.c **** 
 122:Generated_Source\PSoC4/mUART_UART.c ****             /* Store internal configuration */
 123:Generated_Source\PSoC4/mUART_UART.c ****             mUART_scbMode       = (uint8) mUART_SCB_MODE_UART;
 124:Generated_Source\PSoC4/mUART_UART.c ****             mUART_scbEnableWake = (uint8) config->enableWake;
 125:Generated_Source\PSoC4/mUART_UART.c ****             mUART_scbEnableIntr = (uint8) config->enableInterrupt;
 126:Generated_Source\PSoC4/mUART_UART.c **** 
 127:Generated_Source\PSoC4/mUART_UART.c ****             /* Set RX direction internal variables */
 128:Generated_Source\PSoC4/mUART_UART.c ****             mUART_rxBuffer      =         config->rxBuffer;
 129:Generated_Source\PSoC4/mUART_UART.c ****             mUART_rxDataBits    = (uint8) config->dataBits;
 130:Generated_Source\PSoC4/mUART_UART.c ****             mUART_rxBufferSize  =         config->rxBufferSize;
 131:Generated_Source\PSoC4/mUART_UART.c **** 
 132:Generated_Source\PSoC4/mUART_UART.c ****             /* Set TX direction internal variables */
 133:Generated_Source\PSoC4/mUART_UART.c ****             mUART_txBuffer      =         config->txBuffer;
 134:Generated_Source\PSoC4/mUART_UART.c ****             mUART_txDataBits    = (uint8) config->dataBits;
 135:Generated_Source\PSoC4/mUART_UART.c ****             mUART_txBufferSize  =         config->txBufferSize;
 136:Generated_Source\PSoC4/mUART_UART.c **** 
 137:Generated_Source\PSoC4/mUART_UART.c ****             /* Configure UART interface */
 138:Generated_Source\PSoC4/mUART_UART.c ****             if(mUART_UART_MODE_IRDA == config->mode)
 139:Generated_Source\PSoC4/mUART_UART.c ****             {
 140:Generated_Source\PSoC4/mUART_UART.c ****                 /* OVS settings: IrDA */
 141:Generated_Source\PSoC4/mUART_UART.c ****                 mUART_CTRL_REG  = ((0u != config->enableIrdaLowPower) ?
 142:Generated_Source\PSoC4/mUART_UART.c ****                                                 (mUART_UART_GET_CTRL_OVS_IRDA_LP(config->oversample
 143:Generated_Source\PSoC4/mUART_UART.c ****                                                 (mUART_CTRL_OVS_IRDA_OVS16));
 144:Generated_Source\PSoC4/mUART_UART.c ****             }
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm0uBki.s 			page 4


 145:Generated_Source\PSoC4/mUART_UART.c ****             else
 146:Generated_Source\PSoC4/mUART_UART.c ****             {
 147:Generated_Source\PSoC4/mUART_UART.c ****                 /* OVS settings: UART and SmartCard */
 148:Generated_Source\PSoC4/mUART_UART.c ****                 mUART_CTRL_REG  = mUART_GET_CTRL_OVS(config->oversample);
 149:Generated_Source\PSoC4/mUART_UART.c ****             }
 150:Generated_Source\PSoC4/mUART_UART.c **** 
 151:Generated_Source\PSoC4/mUART_UART.c ****             mUART_CTRL_REG     |= mUART_GET_CTRL_BYTE_MODE  (config->enableByteMode)      |
 152:Generated_Source\PSoC4/mUART_UART.c ****                                              mUART_GET_CTRL_ADDR_ACCEPT(config->multiprocAcceptAddr
 153:Generated_Source\PSoC4/mUART_UART.c ****                                              mUART_CTRL_UART;
 154:Generated_Source\PSoC4/mUART_UART.c **** 
 155:Generated_Source\PSoC4/mUART_UART.c ****             /* Configure sub-mode: UART, SmartCard or IrDA */
 156:Generated_Source\PSoC4/mUART_UART.c ****             mUART_UART_CTRL_REG = mUART_GET_UART_CTRL_MODE(config->mode);
 157:Generated_Source\PSoC4/mUART_UART.c **** 
 158:Generated_Source\PSoC4/mUART_UART.c ****             /* Configure RX direction */
 159:Generated_Source\PSoC4/mUART_UART.c ****             mUART_UART_RX_CTRL_REG = mUART_GET_UART_RX_CTRL_MODE(config->stopBits)              |
 160:Generated_Source\PSoC4/mUART_UART.c ****                                         mUART_GET_UART_RX_CTRL_POLARITY(config->enableInvertedRx)  
 161:Generated_Source\PSoC4/mUART_UART.c ****                                         mUART_GET_UART_RX_CTRL_MP_MODE(config->enableMultiproc)    
 162:Generated_Source\PSoC4/mUART_UART.c ****                                         mUART_GET_UART_RX_CTRL_DROP_ON_PARITY_ERR(config->dropOnPar
 163:Generated_Source\PSoC4/mUART_UART.c ****                                         mUART_GET_UART_RX_CTRL_DROP_ON_FRAME_ERR(config->dropOnFram
 164:Generated_Source\PSoC4/mUART_UART.c ****                                         mUART_GET_UART_RX_CTRL_BREAK_WIDTH(config->breakWidth);
 165:Generated_Source\PSoC4/mUART_UART.c **** 
 166:Generated_Source\PSoC4/mUART_UART.c ****             if(mUART_UART_PARITY_NONE != config->parity)
 167:Generated_Source\PSoC4/mUART_UART.c ****             {
 168:Generated_Source\PSoC4/mUART_UART.c ****                mUART_UART_RX_CTRL_REG |= mUART_GET_UART_RX_CTRL_PARITY(config->parity) |
 169:Generated_Source\PSoC4/mUART_UART.c ****                                                     mUART_UART_RX_CTRL_PARITY_ENABLED;
 170:Generated_Source\PSoC4/mUART_UART.c ****             }
 171:Generated_Source\PSoC4/mUART_UART.c **** 
 172:Generated_Source\PSoC4/mUART_UART.c ****             mUART_RX_CTRL_REG      = mUART_GET_RX_CTRL_DATA_WIDTH(config->dataBits)       |
 173:Generated_Source\PSoC4/mUART_UART.c ****                                                 mUART_GET_RX_CTRL_MEDIAN(config->enableMedianFilter
 174:Generated_Source\PSoC4/mUART_UART.c ****                                                 mUART_GET_UART_RX_CTRL_ENABLED(config->direction);
 175:Generated_Source\PSoC4/mUART_UART.c **** 
 176:Generated_Source\PSoC4/mUART_UART.c ****             mUART_RX_FIFO_CTRL_REG = mUART_GET_RX_FIFO_CTRL_TRIGGER_LEVEL(config->rxTriggerLevel);
 177:Generated_Source\PSoC4/mUART_UART.c **** 
 178:Generated_Source\PSoC4/mUART_UART.c ****             /* Configure MP address */
 179:Generated_Source\PSoC4/mUART_UART.c ****             mUART_RX_MATCH_REG     = mUART_GET_RX_MATCH_ADDR(config->multiprocAddr) |
 180:Generated_Source\PSoC4/mUART_UART.c ****                                                 mUART_GET_RX_MATCH_MASK(config->multiprocAddrMask);
 181:Generated_Source\PSoC4/mUART_UART.c **** 
 182:Generated_Source\PSoC4/mUART_UART.c ****             /* Configure RX direction */
 183:Generated_Source\PSoC4/mUART_UART.c ****             mUART_UART_TX_CTRL_REG = mUART_GET_UART_TX_CTRL_MODE(config->stopBits) |
 184:Generated_Source\PSoC4/mUART_UART.c ****                                                 mUART_GET_UART_TX_CTRL_RETRY_NACK(config->enableRet
 185:Generated_Source\PSoC4/mUART_UART.c **** 
 186:Generated_Source\PSoC4/mUART_UART.c ****             if(mUART_UART_PARITY_NONE != config->parity)
 187:Generated_Source\PSoC4/mUART_UART.c ****             {
 188:Generated_Source\PSoC4/mUART_UART.c ****                mUART_UART_TX_CTRL_REG |= mUART_GET_UART_TX_CTRL_PARITY(config->parity) |
 189:Generated_Source\PSoC4/mUART_UART.c ****                                                     mUART_UART_TX_CTRL_PARITY_ENABLED;
 190:Generated_Source\PSoC4/mUART_UART.c ****             }
 191:Generated_Source\PSoC4/mUART_UART.c **** 
 192:Generated_Source\PSoC4/mUART_UART.c ****             mUART_TX_CTRL_REG      = mUART_GET_TX_CTRL_DATA_WIDTH(config->dataBits)    |
 193:Generated_Source\PSoC4/mUART_UART.c ****                                                 mUART_GET_UART_TX_CTRL_ENABLED(config->direction);
 194:Generated_Source\PSoC4/mUART_UART.c **** 
 195:Generated_Source\PSoC4/mUART_UART.c ****             mUART_TX_FIFO_CTRL_REG = mUART_GET_TX_FIFO_CTRL_TRIGGER_LEVEL(config->txTriggerLevel);
 196:Generated_Source\PSoC4/mUART_UART.c **** 
 197:Generated_Source\PSoC4/mUART_UART.c ****         #if !(mUART_CY_SCBIP_V0 || mUART_CY_SCBIP_V1)
 198:Generated_Source\PSoC4/mUART_UART.c ****             mUART_UART_FLOW_CTRL_REG = mUART_GET_UART_FLOW_CTRL_CTS_ENABLE(config->enableCts) | \
 199:Generated_Source\PSoC4/mUART_UART.c ****                                             mUART_GET_UART_FLOW_CTRL_CTS_POLARITY (config->ctsPolar
 200:Generated_Source\PSoC4/mUART_UART.c ****                                             mUART_GET_UART_FLOW_CTRL_RTS_POLARITY (config->rtsPolar
 201:Generated_Source\PSoC4/mUART_UART.c ****                                             mUART_GET_UART_FLOW_CTRL_TRIGGER_LEVEL(config->rtsRxFif
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm0uBki.s 			page 5


 202:Generated_Source\PSoC4/mUART_UART.c ****         #endif /* !(mUART_CY_SCBIP_V0 || mUART_CY_SCBIP_V1) */
 203:Generated_Source\PSoC4/mUART_UART.c **** 
 204:Generated_Source\PSoC4/mUART_UART.c ****             /* Configure interrupt with UART handler but do not enable it */
 205:Generated_Source\PSoC4/mUART_UART.c ****             CyIntDisable    (mUART_ISR_NUMBER);
 206:Generated_Source\PSoC4/mUART_UART.c ****             CyIntSetPriority(mUART_ISR_NUMBER, mUART_ISR_PRIORITY);
 207:Generated_Source\PSoC4/mUART_UART.c ****             (void) CyIntSetVector(mUART_ISR_NUMBER, &mUART_SPI_UART_ISR);
 208:Generated_Source\PSoC4/mUART_UART.c **** 
 209:Generated_Source\PSoC4/mUART_UART.c ****             /* Configure WAKE interrupt */
 210:Generated_Source\PSoC4/mUART_UART.c ****         #if(mUART_UART_RX_WAKEUP_IRQ)
 211:Generated_Source\PSoC4/mUART_UART.c ****             CyIntDisable    (mUART_RX_WAKE_ISR_NUMBER);
 212:Generated_Source\PSoC4/mUART_UART.c ****             CyIntSetPriority(mUART_RX_WAKE_ISR_NUMBER, mUART_RX_WAKE_ISR_PRIORITY);
 213:Generated_Source\PSoC4/mUART_UART.c ****             (void) CyIntSetVector(mUART_RX_WAKE_ISR_NUMBER, &mUART_UART_WAKEUP_ISR);
 214:Generated_Source\PSoC4/mUART_UART.c ****         #endif /* (mUART_UART_RX_WAKEUP_IRQ) */
 215:Generated_Source\PSoC4/mUART_UART.c **** 
 216:Generated_Source\PSoC4/mUART_UART.c ****             /* Configure interrupt sources */
 217:Generated_Source\PSoC4/mUART_UART.c ****             mUART_INTR_I2C_EC_MASK_REG = mUART_NO_INTR_SOURCES;
 218:Generated_Source\PSoC4/mUART_UART.c ****             mUART_INTR_SPI_EC_MASK_REG = mUART_NO_INTR_SOURCES;
 219:Generated_Source\PSoC4/mUART_UART.c ****             mUART_INTR_SLAVE_MASK_REG  = mUART_NO_INTR_SOURCES;
 220:Generated_Source\PSoC4/mUART_UART.c ****             mUART_INTR_MASTER_MASK_REG = mUART_NO_INTR_SOURCES;
 221:Generated_Source\PSoC4/mUART_UART.c ****             mUART_INTR_RX_MASK_REG     = config->rxInterruptMask;
 222:Generated_Source\PSoC4/mUART_UART.c ****             mUART_INTR_TX_MASK_REG     = config->txInterruptMask;
 223:Generated_Source\PSoC4/mUART_UART.c **** 
 224:Generated_Source\PSoC4/mUART_UART.c ****             /* Configure TX interrupt sources to restore. */
 225:Generated_Source\PSoC4/mUART_UART.c ****             mUART_IntrTxMask = LO16(mUART_INTR_TX_MASK_REG);
 226:Generated_Source\PSoC4/mUART_UART.c **** 
 227:Generated_Source\PSoC4/mUART_UART.c ****             /* Clear RX buffer indexes */
 228:Generated_Source\PSoC4/mUART_UART.c ****             mUART_rxBufferHead     = 0u;
 229:Generated_Source\PSoC4/mUART_UART.c ****             mUART_rxBufferTail     = 0u;
 230:Generated_Source\PSoC4/mUART_UART.c ****             mUART_rxBufferOverflow = 0u;
 231:Generated_Source\PSoC4/mUART_UART.c **** 
 232:Generated_Source\PSoC4/mUART_UART.c ****             /* Clear TX buffer indexes */
 233:Generated_Source\PSoC4/mUART_UART.c ****             mUART_txBufferHead = 0u;
 234:Generated_Source\PSoC4/mUART_UART.c ****             mUART_txBufferTail = 0u;
 235:Generated_Source\PSoC4/mUART_UART.c ****         }
 236:Generated_Source\PSoC4/mUART_UART.c ****     }
 237:Generated_Source\PSoC4/mUART_UART.c **** 
 238:Generated_Source\PSoC4/mUART_UART.c **** #else
 239:Generated_Source\PSoC4/mUART_UART.c **** 
 240:Generated_Source\PSoC4/mUART_UART.c ****     /*******************************************************************************
 241:Generated_Source\PSoC4/mUART_UART.c ****     * Function Name: mUART_UartInit
 242:Generated_Source\PSoC4/mUART_UART.c ****     ****************************************************************************//**
 243:Generated_Source\PSoC4/mUART_UART.c ****     *
 244:Generated_Source\PSoC4/mUART_UART.c ****     *  Configures the SCB for the UART operation.
 245:Generated_Source\PSoC4/mUART_UART.c ****     *
 246:Generated_Source\PSoC4/mUART_UART.c ****     *******************************************************************************/
 247:Generated_Source\PSoC4/mUART_UART.c ****     void mUART_UartInit(void)
 248:Generated_Source\PSoC4/mUART_UART.c ****     {
  28              		.loc 1 248 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 70B5     		push	{r4, r5, r6, lr}
  33              		.cfi_def_cfa_offset 16
  34              		.cfi_offset 4, -16
  35              		.cfi_offset 5, -12
  36              		.cfi_offset 6, -8
  37              		.cfi_offset 14, -4
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm0uBki.s 			page 6


 249:Generated_Source\PSoC4/mUART_UART.c ****         /* Configure UART interface */
 250:Generated_Source\PSoC4/mUART_UART.c ****         mUART_CTRL_REG = mUART_UART_DEFAULT_CTRL;
  38              		.loc 1 250 0
  39 0002 204A     		ldr	r2, .L2
  40 0004 204B     		ldr	r3, .L2+4
  41 0006 1A60     		str	r2, [r3]
 251:Generated_Source\PSoC4/mUART_UART.c **** 
 252:Generated_Source\PSoC4/mUART_UART.c ****         /* Configure sub-mode: UART, SmartCard or IrDA */
 253:Generated_Source\PSoC4/mUART_UART.c ****         mUART_UART_CTRL_REG = mUART_UART_DEFAULT_UART_CTRL;
  42              		.loc 1 253 0
  43 0008 0024     		movs	r4, #0
  44 000a 204B     		ldr	r3, .L2+8
  45 000c 1C60     		str	r4, [r3]
 254:Generated_Source\PSoC4/mUART_UART.c **** 
 255:Generated_Source\PSoC4/mUART_UART.c ****         /* Configure RX direction */
 256:Generated_Source\PSoC4/mUART_UART.c ****         mUART_UART_RX_CTRL_REG = mUART_UART_DEFAULT_UART_RX_CTRL;
  46              		.loc 1 256 0
  47 000e 204A     		ldr	r2, .L2+12
  48 0010 204B     		ldr	r3, .L2+16
  49 0012 1A60     		str	r2, [r3]
 257:Generated_Source\PSoC4/mUART_UART.c ****         mUART_RX_CTRL_REG      = mUART_UART_DEFAULT_RX_CTRL;
  50              		.loc 1 257 0
  51 0014 204B     		ldr	r3, .L2+20
  52 0016 214A     		ldr	r2, .L2+24
  53 0018 1360     		str	r3, [r2]
 258:Generated_Source\PSoC4/mUART_UART.c ****         mUART_RX_FIFO_CTRL_REG = mUART_UART_DEFAULT_RX_FIFO_CTRL;
  54              		.loc 1 258 0
  55 001a 0721     		movs	r1, #7
  56 001c 204A     		ldr	r2, .L2+28
  57 001e 1160     		str	r1, [r2]
 259:Generated_Source\PSoC4/mUART_UART.c ****         mUART_RX_MATCH_REG     = mUART_UART_DEFAULT_RX_MATCH_REG;
  58              		.loc 1 259 0
  59 0020 204A     		ldr	r2, .L2+32
  60 0022 1460     		str	r4, [r2]
 260:Generated_Source\PSoC4/mUART_UART.c **** 
 261:Generated_Source\PSoC4/mUART_UART.c ****         /* Configure TX direction */
 262:Generated_Source\PSoC4/mUART_UART.c ****         mUART_UART_TX_CTRL_REG = mUART_UART_DEFAULT_UART_TX_CTRL;
  61              		.loc 1 262 0
  62 0024 0639     		subs	r1, r1, #6
  63 0026 204A     		ldr	r2, .L2+36
  64 0028 1160     		str	r1, [r2]
 263:Generated_Source\PSoC4/mUART_UART.c ****         mUART_TX_CTRL_REG      = mUART_UART_DEFAULT_TX_CTRL;
  65              		.loc 1 263 0
  66 002a 204A     		ldr	r2, .L2+40
  67 002c 1360     		str	r3, [r2]
 264:Generated_Source\PSoC4/mUART_UART.c ****         mUART_TX_FIFO_CTRL_REG = mUART_UART_DEFAULT_TX_FIFO_CTRL;
  68              		.loc 1 264 0
  69 002e 204B     		ldr	r3, .L2+44
  70 0030 1C60     		str	r4, [r3]
 265:Generated_Source\PSoC4/mUART_UART.c **** 
 266:Generated_Source\PSoC4/mUART_UART.c ****     #if !(mUART_CY_SCBIP_V0 || mUART_CY_SCBIP_V1)
 267:Generated_Source\PSoC4/mUART_UART.c ****         mUART_UART_FLOW_CTRL_REG = mUART_UART_DEFAULT_FLOW_CTRL;
  71              		.loc 1 267 0
  72 0032 0425     		movs	r5, #4
  73 0034 1F4B     		ldr	r3, .L2+48
  74 0036 1D60     		str	r5, [r3]
 268:Generated_Source\PSoC4/mUART_UART.c ****     #endif /* !(mUART_CY_SCBIP_V0 || mUART_CY_SCBIP_V1) */
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm0uBki.s 			page 7


 269:Generated_Source\PSoC4/mUART_UART.c **** 
 270:Generated_Source\PSoC4/mUART_UART.c ****         /* Configure interrupt with UART handler but do not enable it */
 271:Generated_Source\PSoC4/mUART_UART.c ****     #if(mUART_SCB_IRQ_INTERNAL)
 272:Generated_Source\PSoC4/mUART_UART.c ****         CyIntDisable    (mUART_ISR_NUMBER);
  75              		.loc 1 272 0
  76 0038 0720     		movs	r0, #7
  77 003a FFF7FEFF 		bl	CyIntDisable
  78              	.LVL0:
 273:Generated_Source\PSoC4/mUART_UART.c ****         CyIntSetPriority(mUART_ISR_NUMBER, mUART_ISR_PRIORITY);
  79              		.loc 1 273 0
  80 003e 0321     		movs	r1, #3
  81 0040 0720     		movs	r0, #7
  82 0042 FFF7FEFF 		bl	CyIntSetPriority
  83              	.LVL1:
 274:Generated_Source\PSoC4/mUART_UART.c ****         (void) CyIntSetVector(mUART_ISR_NUMBER, &mUART_SPI_UART_ISR);
  84              		.loc 1 274 0
  85 0046 1C49     		ldr	r1, .L2+52
  86 0048 0720     		movs	r0, #7
  87 004a FFF7FEFF 		bl	CyIntSetVector
  88              	.LVL2:
 275:Generated_Source\PSoC4/mUART_UART.c ****     #endif /* (mUART_SCB_IRQ_INTERNAL) */
 276:Generated_Source\PSoC4/mUART_UART.c **** 
 277:Generated_Source\PSoC4/mUART_UART.c ****         /* Configure WAKE interrupt */
 278:Generated_Source\PSoC4/mUART_UART.c ****     #if(mUART_UART_RX_WAKEUP_IRQ)
 279:Generated_Source\PSoC4/mUART_UART.c ****         CyIntDisable    (mUART_RX_WAKE_ISR_NUMBER);
 280:Generated_Source\PSoC4/mUART_UART.c ****         CyIntSetPriority(mUART_RX_WAKE_ISR_NUMBER, mUART_RX_WAKE_ISR_PRIORITY);
 281:Generated_Source\PSoC4/mUART_UART.c ****         (void) CyIntSetVector(mUART_RX_WAKE_ISR_NUMBER, &mUART_UART_WAKEUP_ISR);
 282:Generated_Source\PSoC4/mUART_UART.c ****     #endif /* (mUART_UART_RX_WAKEUP_IRQ) */
 283:Generated_Source\PSoC4/mUART_UART.c **** 
 284:Generated_Source\PSoC4/mUART_UART.c ****         /* Configure interrupt sources */
 285:Generated_Source\PSoC4/mUART_UART.c ****         mUART_INTR_I2C_EC_MASK_REG = mUART_UART_DEFAULT_INTR_I2C_EC_MASK;
  89              		.loc 1 285 0
  90 004e 1B4B     		ldr	r3, .L2+56
  91 0050 1C60     		str	r4, [r3]
 286:Generated_Source\PSoC4/mUART_UART.c ****         mUART_INTR_SPI_EC_MASK_REG = mUART_UART_DEFAULT_INTR_SPI_EC_MASK;
  92              		.loc 1 286 0
  93 0052 1B4B     		ldr	r3, .L2+60
  94 0054 1C60     		str	r4, [r3]
 287:Generated_Source\PSoC4/mUART_UART.c ****         mUART_INTR_SLAVE_MASK_REG  = mUART_UART_DEFAULT_INTR_SLAVE_MASK;
  95              		.loc 1 287 0
  96 0056 1B4B     		ldr	r3, .L2+64
  97 0058 1C60     		str	r4, [r3]
 288:Generated_Source\PSoC4/mUART_UART.c ****         mUART_INTR_MASTER_MASK_REG = mUART_UART_DEFAULT_INTR_MASTER_MASK;
  98              		.loc 1 288 0
  99 005a 1B4B     		ldr	r3, .L2+68
 100 005c 1C60     		str	r4, [r3]
 289:Generated_Source\PSoC4/mUART_UART.c ****         mUART_INTR_RX_MASK_REG     = mUART_UART_DEFAULT_INTR_RX_MASK;
 101              		.loc 1 289 0
 102 005e 1B4B     		ldr	r3, .L2+72
 103 0060 1D60     		str	r5, [r3]
 290:Generated_Source\PSoC4/mUART_UART.c ****         mUART_INTR_TX_MASK_REG     = mUART_UART_DEFAULT_INTR_TX_MASK;
 104              		.loc 1 290 0
 105 0062 1B4B     		ldr	r3, .L2+76
 106 0064 1C60     		str	r4, [r3]
 291:Generated_Source\PSoC4/mUART_UART.c **** 
 292:Generated_Source\PSoC4/mUART_UART.c ****         /* Configure TX interrupt sources to restore. */
 293:Generated_Source\PSoC4/mUART_UART.c ****         mUART_IntrTxMask = LO16(mUART_INTR_TX_MASK_REG);
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm0uBki.s 			page 8


 107              		.loc 1 293 0
 108 0066 1A68     		ldr	r2, [r3]
 109 0068 1A4B     		ldr	r3, .L2+80
 110 006a 1A80     		strh	r2, [r3]
 294:Generated_Source\PSoC4/mUART_UART.c **** 
 295:Generated_Source\PSoC4/mUART_UART.c ****     #if(mUART_INTERNAL_RX_SW_BUFFER_CONST)
 296:Generated_Source\PSoC4/mUART_UART.c ****         mUART_rxBufferHead     = 0u;
 111              		.loc 1 296 0
 112 006c 1A4B     		ldr	r3, .L2+84
 113 006e 1C60     		str	r4, [r3]
 297:Generated_Source\PSoC4/mUART_UART.c ****         mUART_rxBufferTail     = 0u;
 114              		.loc 1 297 0
 115 0070 1A4B     		ldr	r3, .L2+88
 116 0072 1C60     		str	r4, [r3]
 298:Generated_Source\PSoC4/mUART_UART.c ****         mUART_rxBufferOverflow = 0u;
 117              		.loc 1 298 0
 118 0074 1A4B     		ldr	r3, .L2+92
 119 0076 1C70     		strb	r4, [r3]
 299:Generated_Source\PSoC4/mUART_UART.c ****     #endif /* (mUART_INTERNAL_RX_SW_BUFFER_CONST) */
 300:Generated_Source\PSoC4/mUART_UART.c **** 
 301:Generated_Source\PSoC4/mUART_UART.c ****     #if(mUART_INTERNAL_TX_SW_BUFFER_CONST)
 302:Generated_Source\PSoC4/mUART_UART.c ****         mUART_txBufferHead = 0u;
 120              		.loc 1 302 0
 121 0078 1A4B     		ldr	r3, .L2+96
 122 007a 1C60     		str	r4, [r3]
 303:Generated_Source\PSoC4/mUART_UART.c ****         mUART_txBufferTail = 0u;
 123              		.loc 1 303 0
 124 007c 1A4B     		ldr	r3, .L2+100
 125 007e 1C60     		str	r4, [r3]
 304:Generated_Source\PSoC4/mUART_UART.c ****     #endif /* (mUART_INTERNAL_TX_SW_BUFFER_CONST) */
 305:Generated_Source\PSoC4/mUART_UART.c ****     }
 126              		.loc 1 305 0
 127              		@ sp needed
 128 0080 70BD     		pop	{r4, r5, r6, pc}
 129              	.L3:
 130 0082 C046     		.align	2
 131              	.L2:
 132 0084 0B000002 		.word	33554443
 133 0088 00000840 		.word	1074266112
 134 008c 40000840 		.word	1074266176
 135 0090 01000A00 		.word	655361
 136 0094 48000840 		.word	1074266184
 137 0098 07000080 		.word	-2147483641
 138 009c 00030840 		.word	1074266880
 139 00a0 04030840 		.word	1074266884
 140 00a4 10030840 		.word	1074266896
 141 00a8 44000840 		.word	1074266180
 142 00ac 00020840 		.word	1074266624
 143 00b0 04020840 		.word	1074266628
 144 00b4 50000840 		.word	1074266192
 145 00b8 00000000 		.word	mUART_SPI_UART_ISR
 146 00bc 880E0840 		.word	1074269832
 147 00c0 C80E0840 		.word	1074269896
 148 00c4 480F0840 		.word	1074270024
 149 00c8 080F0840 		.word	1074269960
 150 00cc C80F0840 		.word	1074270152
 151 00d0 880F0840 		.word	1074270088
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm0uBki.s 			page 9


 152 00d4 00000000 		.word	mUART_IntrTxMask
 153 00d8 00000000 		.word	mUART_rxBufferHead
 154 00dc 00000000 		.word	mUART_rxBufferTail
 155 00e0 00000000 		.word	mUART_rxBufferOverflow
 156 00e4 00000000 		.word	mUART_txBufferHead
 157 00e8 00000000 		.word	mUART_txBufferTail
 158              		.cfi_endproc
 159              	.LFE1:
 160              		.size	mUART_UartInit, .-mUART_UartInit
 161              		.section	.text.mUART_UartPostEnable,"ax",%progbits
 162              		.align	2
 163              		.global	mUART_UartPostEnable
 164              		.code	16
 165              		.thumb_func
 166              		.type	mUART_UartPostEnable, %function
 167              	mUART_UartPostEnable:
 168              	.LFB2:
 306:Generated_Source\PSoC4/mUART_UART.c **** #endif /* (mUART_SCB_MODE_UNCONFIG_CONST_CFG) */
 307:Generated_Source\PSoC4/mUART_UART.c **** 
 308:Generated_Source\PSoC4/mUART_UART.c **** 
 309:Generated_Source\PSoC4/mUART_UART.c **** /*******************************************************************************
 310:Generated_Source\PSoC4/mUART_UART.c **** * Function Name: mUART_UartPostEnable
 311:Generated_Source\PSoC4/mUART_UART.c **** ****************************************************************************//**
 312:Generated_Source\PSoC4/mUART_UART.c **** *
 313:Generated_Source\PSoC4/mUART_UART.c **** *  Restores HSIOM settings for the UART output pins (TX and/or RTS) to be
 314:Generated_Source\PSoC4/mUART_UART.c **** *  controlled by the SCB UART.
 315:Generated_Source\PSoC4/mUART_UART.c **** *
 316:Generated_Source\PSoC4/mUART_UART.c **** *******************************************************************************/
 317:Generated_Source\PSoC4/mUART_UART.c **** void mUART_UartPostEnable(void)
 318:Generated_Source\PSoC4/mUART_UART.c **** {
 169              		.loc 1 318 0
 170              		.cfi_startproc
 171              		@ args = 0, pretend = 0, frame = 0
 172              		@ frame_needed = 0, uses_anonymous_args = 0
 173              		@ link register save eliminated.
 319:Generated_Source\PSoC4/mUART_UART.c **** #if (mUART_SCB_MODE_UNCONFIG_CONST_CFG)
 320:Generated_Source\PSoC4/mUART_UART.c ****     #if (mUART_TX_SDA_MISO_PIN)
 321:Generated_Source\PSoC4/mUART_UART.c ****         if (mUART_CHECK_TX_SDA_MISO_PIN_USED)
 322:Generated_Source\PSoC4/mUART_UART.c ****         {
 323:Generated_Source\PSoC4/mUART_UART.c ****             /* Set SCB UART to drive the output pin */
 324:Generated_Source\PSoC4/mUART_UART.c ****             mUART_SET_HSIOM_SEL(mUART_TX_SDA_MISO_HSIOM_REG, mUART_TX_SDA_MISO_HSIOM_MASK,
 325:Generated_Source\PSoC4/mUART_UART.c ****                                            mUART_TX_SDA_MISO_HSIOM_POS, mUART_TX_SDA_MISO_HSIOM_SEL
 326:Generated_Source\PSoC4/mUART_UART.c ****         }
 327:Generated_Source\PSoC4/mUART_UART.c ****     #endif /* (mUART_TX_SDA_MISO_PIN_PIN) */
 328:Generated_Source\PSoC4/mUART_UART.c **** 
 329:Generated_Source\PSoC4/mUART_UART.c ****     #if !(mUART_CY_SCBIP_V0 || mUART_CY_SCBIP_V1)
 330:Generated_Source\PSoC4/mUART_UART.c ****         #if (mUART_RTS_SS0_PIN)
 331:Generated_Source\PSoC4/mUART_UART.c ****             if (mUART_CHECK_RTS_SS0_PIN_USED)
 332:Generated_Source\PSoC4/mUART_UART.c ****             {
 333:Generated_Source\PSoC4/mUART_UART.c ****                 /* Set SCB UART to drive the output pin */
 334:Generated_Source\PSoC4/mUART_UART.c ****                 mUART_SET_HSIOM_SEL(mUART_RTS_SS0_HSIOM_REG, mUART_RTS_SS0_HSIOM_MASK,
 335:Generated_Source\PSoC4/mUART_UART.c ****                                                mUART_RTS_SS0_HSIOM_POS, mUART_RTS_SS0_HSIOM_SEL_UAR
 336:Generated_Source\PSoC4/mUART_UART.c ****             }
 337:Generated_Source\PSoC4/mUART_UART.c ****         #endif /* (mUART_RTS_SS0_PIN) */
 338:Generated_Source\PSoC4/mUART_UART.c ****     #endif /* !(mUART_CY_SCBIP_V0 || mUART_CY_SCBIP_V1) */
 339:Generated_Source\PSoC4/mUART_UART.c **** 
 340:Generated_Source\PSoC4/mUART_UART.c **** #else
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm0uBki.s 			page 10


 341:Generated_Source\PSoC4/mUART_UART.c ****     #if (mUART_UART_TX_PIN)
 342:Generated_Source\PSoC4/mUART_UART.c ****          /* Set SCB UART to drive the output pin */
 343:Generated_Source\PSoC4/mUART_UART.c ****         mUART_SET_HSIOM_SEL(mUART_TX_HSIOM_REG, mUART_TX_HSIOM_MASK,
 174              		.loc 1 343 0
 175 0000 0549     		ldr	r1, .L5
 176 0002 0B68     		ldr	r3, [r1]
 177 0004 F022     		movs	r2, #240
 178 0006 9343     		bics	r3, r2
 179 0008 603A     		subs	r2, r2, #96
 180 000a 1343     		orrs	r3, r2
 181 000c 0B60     		str	r3, [r1]
 344:Generated_Source\PSoC4/mUART_UART.c ****                                        mUART_TX_HSIOM_POS, mUART_TX_HSIOM_SEL_UART);
 345:Generated_Source\PSoC4/mUART_UART.c ****     #endif /* (mUART_UART_TX_PIN) */
 346:Generated_Source\PSoC4/mUART_UART.c **** 
 347:Generated_Source\PSoC4/mUART_UART.c ****     #if (mUART_UART_RTS_PIN)
 348:Generated_Source\PSoC4/mUART_UART.c ****         /* Set SCB UART to drive the output pin */
 349:Generated_Source\PSoC4/mUART_UART.c ****         mUART_SET_HSIOM_SEL(mUART_RTS_HSIOM_REG, mUART_RTS_HSIOM_MASK,
 350:Generated_Source\PSoC4/mUART_UART.c ****                                        mUART_RTS_HSIOM_POS, mUART_RTS_HSIOM_SEL_UART);
 351:Generated_Source\PSoC4/mUART_UART.c ****     #endif /* (mUART_UART_RTS_PIN) */
 352:Generated_Source\PSoC4/mUART_UART.c **** #endif /* (mUART_SCB_MODE_UNCONFIG_CONST_CFG) */
 353:Generated_Source\PSoC4/mUART_UART.c **** 
 354:Generated_Source\PSoC4/mUART_UART.c ****     /* Restore TX interrupt sources. */
 355:Generated_Source\PSoC4/mUART_UART.c ****     mUART_SetTxInterruptMode(mUART_IntrTxMask);
 182              		.loc 1 355 0
 183 000e 034B     		ldr	r3, .L5+4
 184 0010 1A88     		ldrh	r2, [r3]
 185 0012 034B     		ldr	r3, .L5+8
 186 0014 1A60     		str	r2, [r3]
 356:Generated_Source\PSoC4/mUART_UART.c **** }
 187              		.loc 1 356 0
 188              		@ sp needed
 189 0016 7047     		bx	lr
 190              	.L6:
 191              		.align	2
 192              	.L5:
 193 0018 00040240 		.word	1073873920
 194 001c 00000000 		.word	mUART_IntrTxMask
 195 0020 880F0840 		.word	1074270088
 196              		.cfi_endproc
 197              	.LFE2:
 198              		.size	mUART_UartPostEnable, .-mUART_UartPostEnable
 199              		.section	.text.mUART_UartStop,"ax",%progbits
 200              		.align	2
 201              		.global	mUART_UartStop
 202              		.code	16
 203              		.thumb_func
 204              		.type	mUART_UartStop, %function
 205              	mUART_UartStop:
 206              	.LFB3:
 357:Generated_Source\PSoC4/mUART_UART.c **** 
 358:Generated_Source\PSoC4/mUART_UART.c **** 
 359:Generated_Source\PSoC4/mUART_UART.c **** /*******************************************************************************
 360:Generated_Source\PSoC4/mUART_UART.c **** * Function Name: mUART_UartStop
 361:Generated_Source\PSoC4/mUART_UART.c **** ****************************************************************************//**
 362:Generated_Source\PSoC4/mUART_UART.c **** *
 363:Generated_Source\PSoC4/mUART_UART.c **** *  Changes the HSIOM settings for the UART output pins (TX and/or RTS) to keep
 364:Generated_Source\PSoC4/mUART_UART.c **** *  them inactive after the block is disabled. The output pins are controlled by
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm0uBki.s 			page 11


 365:Generated_Source\PSoC4/mUART_UART.c **** *  the GPIO data register. Also, the function disables the skip start feature
 366:Generated_Source\PSoC4/mUART_UART.c **** *  to not cause it to trigger after the component is enabled.
 367:Generated_Source\PSoC4/mUART_UART.c **** *
 368:Generated_Source\PSoC4/mUART_UART.c **** *******************************************************************************/
 369:Generated_Source\PSoC4/mUART_UART.c **** void mUART_UartStop(void)
 370:Generated_Source\PSoC4/mUART_UART.c **** {
 207              		.loc 1 370 0
 208              		.cfi_startproc
 209              		@ args = 0, pretend = 0, frame = 0
 210              		@ frame_needed = 0, uses_anonymous_args = 0
 211              		@ link register save eliminated.
 371:Generated_Source\PSoC4/mUART_UART.c **** #if(mUART_SCB_MODE_UNCONFIG_CONST_CFG)
 372:Generated_Source\PSoC4/mUART_UART.c ****     #if (mUART_TX_SDA_MISO_PIN)
 373:Generated_Source\PSoC4/mUART_UART.c ****         if (mUART_CHECK_TX_SDA_MISO_PIN_USED)
 374:Generated_Source\PSoC4/mUART_UART.c ****         {
 375:Generated_Source\PSoC4/mUART_UART.c ****             /* Set GPIO to drive output pin */
 376:Generated_Source\PSoC4/mUART_UART.c ****             mUART_SET_HSIOM_SEL(mUART_TX_SDA_MISO_HSIOM_REG, mUART_TX_SDA_MISO_HSIOM_MASK,
 377:Generated_Source\PSoC4/mUART_UART.c ****                                            mUART_TX_SDA_MISO_HSIOM_POS, mUART_TX_SDA_MISO_HSIOM_SEL
 378:Generated_Source\PSoC4/mUART_UART.c ****         }
 379:Generated_Source\PSoC4/mUART_UART.c ****     #endif /* (mUART_TX_SDA_MISO_PIN_PIN) */
 380:Generated_Source\PSoC4/mUART_UART.c **** 
 381:Generated_Source\PSoC4/mUART_UART.c ****     #if !(mUART_CY_SCBIP_V0 || mUART_CY_SCBIP_V1)
 382:Generated_Source\PSoC4/mUART_UART.c ****         #if (mUART_RTS_SS0_PIN)
 383:Generated_Source\PSoC4/mUART_UART.c ****             if (mUART_CHECK_RTS_SS0_PIN_USED)
 384:Generated_Source\PSoC4/mUART_UART.c ****             {
 385:Generated_Source\PSoC4/mUART_UART.c ****                 /* Set output pin state after block is disabled */
 386:Generated_Source\PSoC4/mUART_UART.c ****                 mUART_uart_rts_spi_ss0_Write(mUART_GET_UART_RTS_INACTIVE);
 387:Generated_Source\PSoC4/mUART_UART.c **** 
 388:Generated_Source\PSoC4/mUART_UART.c ****                 /* Set GPIO to drive output pin */
 389:Generated_Source\PSoC4/mUART_UART.c ****                 mUART_SET_HSIOM_SEL(mUART_RTS_SS0_HSIOM_REG, mUART_RTS_SS0_HSIOM_MASK,
 390:Generated_Source\PSoC4/mUART_UART.c ****                                                mUART_RTS_SS0_HSIOM_POS, mUART_RTS_SS0_HSIOM_SEL_GPI
 391:Generated_Source\PSoC4/mUART_UART.c ****             }
 392:Generated_Source\PSoC4/mUART_UART.c ****         #endif /* (mUART_RTS_SS0_PIN) */
 393:Generated_Source\PSoC4/mUART_UART.c ****     #endif /* !(mUART_CY_SCBIP_V0 || mUART_CY_SCBIP_V1) */
 394:Generated_Source\PSoC4/mUART_UART.c **** 
 395:Generated_Source\PSoC4/mUART_UART.c **** #else
 396:Generated_Source\PSoC4/mUART_UART.c ****     #if (mUART_UART_TX_PIN)
 397:Generated_Source\PSoC4/mUART_UART.c ****         /* Set GPIO to drive output pin */
 398:Generated_Source\PSoC4/mUART_UART.c ****         mUART_SET_HSIOM_SEL(mUART_TX_HSIOM_REG, mUART_TX_HSIOM_MASK,
 212              		.loc 1 398 0
 213 0000 064A     		ldr	r2, .L8
 214 0002 1368     		ldr	r3, [r2]
 215 0004 F021     		movs	r1, #240
 216 0006 8B43     		bics	r3, r1
 217 0008 1360     		str	r3, [r2]
 399:Generated_Source\PSoC4/mUART_UART.c ****                                        mUART_TX_HSIOM_POS, mUART_TX_HSIOM_SEL_GPIO);
 400:Generated_Source\PSoC4/mUART_UART.c ****     #endif /* (mUART_UART_TX_PIN) */
 401:Generated_Source\PSoC4/mUART_UART.c **** 
 402:Generated_Source\PSoC4/mUART_UART.c ****     #if (mUART_UART_RTS_PIN)
 403:Generated_Source\PSoC4/mUART_UART.c ****         /* Set output pin state after block is disabled */
 404:Generated_Source\PSoC4/mUART_UART.c ****         mUART_rts_Write(mUART_GET_UART_RTS_INACTIVE);
 405:Generated_Source\PSoC4/mUART_UART.c **** 
 406:Generated_Source\PSoC4/mUART_UART.c ****         /* Set GPIO to drive output pin */
 407:Generated_Source\PSoC4/mUART_UART.c ****         mUART_SET_HSIOM_SEL(mUART_RTS_HSIOM_REG, mUART_RTS_HSIOM_MASK,
 408:Generated_Source\PSoC4/mUART_UART.c ****                                        mUART_RTS_HSIOM_POS, mUART_RTS_HSIOM_SEL_GPIO);
 409:Generated_Source\PSoC4/mUART_UART.c ****     #endif /* (mUART_UART_RTS_PIN) */
 410:Generated_Source\PSoC4/mUART_UART.c **** 
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm0uBki.s 			page 12


 411:Generated_Source\PSoC4/mUART_UART.c **** #endif /* (mUART_SCB_MODE_UNCONFIG_CONST_CFG) */
 412:Generated_Source\PSoC4/mUART_UART.c **** 
 413:Generated_Source\PSoC4/mUART_UART.c **** #if (mUART_UART_WAKE_ENABLE_CONST)
 414:Generated_Source\PSoC4/mUART_UART.c ****     /* Disable skip start feature used for wakeup */
 415:Generated_Source\PSoC4/mUART_UART.c ****     mUART_UART_RX_CTRL_REG &= (uint32) ~mUART_UART_RX_CTRL_SKIP_START;
 416:Generated_Source\PSoC4/mUART_UART.c **** #endif /* (mUART_UART_WAKE_ENABLE_CONST) */
 417:Generated_Source\PSoC4/mUART_UART.c **** 
 418:Generated_Source\PSoC4/mUART_UART.c ****     /* Store TX interrupt sources (exclude level triggered). */
 419:Generated_Source\PSoC4/mUART_UART.c ****     mUART_IntrTxMask = LO16(mUART_GetTxInterruptMode() & mUART_INTR_UART_TX_RESTORE);
 218              		.loc 1 419 0
 219 000a 054B     		ldr	r3, .L8+4
 220 000c 1A68     		ldr	r2, [r3]
 221 000e E423     		movs	r3, #228
 222 0010 DB00     		lsls	r3, r3, #3
 223 0012 1340     		ands	r3, r2
 224 0014 034A     		ldr	r2, .L8+8
 225 0016 1380     		strh	r3, [r2]
 420:Generated_Source\PSoC4/mUART_UART.c **** }
 226              		.loc 1 420 0
 227              		@ sp needed
 228 0018 7047     		bx	lr
 229              	.L9:
 230 001a C046     		.align	2
 231              	.L8:
 232 001c 00040240 		.word	1073873920
 233 0020 880F0840 		.word	1074270088
 234 0024 00000000 		.word	mUART_IntrTxMask
 235              		.cfi_endproc
 236              	.LFE3:
 237              		.size	mUART_UartStop, .-mUART_UartStop
 238              		.section	.text.mUART_UartSetRxAddress,"ax",%progbits
 239              		.align	2
 240              		.global	mUART_UartSetRxAddress
 241              		.code	16
 242              		.thumb_func
 243              		.type	mUART_UartSetRxAddress, %function
 244              	mUART_UartSetRxAddress:
 245              	.LFB4:
 421:Generated_Source\PSoC4/mUART_UART.c **** 
 422:Generated_Source\PSoC4/mUART_UART.c **** 
 423:Generated_Source\PSoC4/mUART_UART.c **** /*******************************************************************************
 424:Generated_Source\PSoC4/mUART_UART.c **** * Function Name: mUART_UartSetRxAddress
 425:Generated_Source\PSoC4/mUART_UART.c **** ****************************************************************************//**
 426:Generated_Source\PSoC4/mUART_UART.c **** *
 427:Generated_Source\PSoC4/mUART_UART.c **** *  Sets the hardware detectable receiver address for the UART in the
 428:Generated_Source\PSoC4/mUART_UART.c **** *  Multiprocessor mode.
 429:Generated_Source\PSoC4/mUART_UART.c **** *
 430:Generated_Source\PSoC4/mUART_UART.c **** *  \param address: Address for hardware address detection.
 431:Generated_Source\PSoC4/mUART_UART.c **** *
 432:Generated_Source\PSoC4/mUART_UART.c **** *******************************************************************************/
 433:Generated_Source\PSoC4/mUART_UART.c **** void mUART_UartSetRxAddress(uint32 address)
 434:Generated_Source\PSoC4/mUART_UART.c **** {
 246              		.loc 1 434 0
 247              		.cfi_startproc
 248              		@ args = 0, pretend = 0, frame = 0
 249              		@ frame_needed = 0, uses_anonymous_args = 0
 250              		@ link register save eliminated.
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm0uBki.s 			page 13


 251              	.LVL3:
 435:Generated_Source\PSoC4/mUART_UART.c ****      uint32 matchReg;
 436:Generated_Source\PSoC4/mUART_UART.c **** 
 437:Generated_Source\PSoC4/mUART_UART.c ****     matchReg = mUART_RX_MATCH_REG;
 252              		.loc 1 437 0
 253 0000 034A     		ldr	r2, .L11
 254 0002 1368     		ldr	r3, [r2]
 255              	.LVL4:
 438:Generated_Source\PSoC4/mUART_UART.c **** 
 439:Generated_Source\PSoC4/mUART_UART.c ****     matchReg &= ((uint32) ~mUART_RX_MATCH_ADDR_MASK); /* Clear address bits */
 256              		.loc 1 439 0
 257 0004 FF21     		movs	r1, #255
 258 0006 8B43     		bics	r3, r1
 259              	.LVL5:
 440:Generated_Source\PSoC4/mUART_UART.c ****     matchReg |= ((uint32)  (address & mUART_RX_MATCH_ADDR_MASK)); /* Set address  */
 260              		.loc 1 440 0
 261 0008 0840     		ands	r0, r1
 262              	.LVL6:
 263 000a 1843     		orrs	r0, r3
 264              	.LVL7:
 441:Generated_Source\PSoC4/mUART_UART.c **** 
 442:Generated_Source\PSoC4/mUART_UART.c ****     mUART_RX_MATCH_REG = matchReg;
 265              		.loc 1 442 0
 266 000c 1060     		str	r0, [r2]
 443:Generated_Source\PSoC4/mUART_UART.c **** }
 267              		.loc 1 443 0
 268              		@ sp needed
 269 000e 7047     		bx	lr
 270              	.L12:
 271              		.align	2
 272              	.L11:
 273 0010 10030840 		.word	1074266896
 274              		.cfi_endproc
 275              	.LFE4:
 276              		.size	mUART_UartSetRxAddress, .-mUART_UartSetRxAddress
 277              		.section	.text.mUART_UartSetRxAddressMask,"ax",%progbits
 278              		.align	2
 279              		.global	mUART_UartSetRxAddressMask
 280              		.code	16
 281              		.thumb_func
 282              		.type	mUART_UartSetRxAddressMask, %function
 283              	mUART_UartSetRxAddressMask:
 284              	.LFB5:
 444:Generated_Source\PSoC4/mUART_UART.c **** 
 445:Generated_Source\PSoC4/mUART_UART.c **** 
 446:Generated_Source\PSoC4/mUART_UART.c **** /*******************************************************************************
 447:Generated_Source\PSoC4/mUART_UART.c **** * Function Name: mUART_UartSetRxAddressMask
 448:Generated_Source\PSoC4/mUART_UART.c **** ****************************************************************************//**
 449:Generated_Source\PSoC4/mUART_UART.c **** *
 450:Generated_Source\PSoC4/mUART_UART.c **** *  Sets the hardware address mask for the UART in the Multiprocessor mode.
 451:Generated_Source\PSoC4/mUART_UART.c **** *
 452:Generated_Source\PSoC4/mUART_UART.c **** *  \param addressMask: Address mask.
 453:Generated_Source\PSoC4/mUART_UART.c **** *   - Bit value 0 – excludes bit from address comparison.
 454:Generated_Source\PSoC4/mUART_UART.c **** *   - Bit value 1 – the bit needs to match with the corresponding bit
 455:Generated_Source\PSoC4/mUART_UART.c **** *     of the address.
 456:Generated_Source\PSoC4/mUART_UART.c **** *
 457:Generated_Source\PSoC4/mUART_UART.c **** *******************************************************************************/
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm0uBki.s 			page 14


 458:Generated_Source\PSoC4/mUART_UART.c **** void mUART_UartSetRxAddressMask(uint32 addressMask)
 459:Generated_Source\PSoC4/mUART_UART.c **** {
 285              		.loc 1 459 0
 286              		.cfi_startproc
 287              		@ args = 0, pretend = 0, frame = 0
 288              		@ frame_needed = 0, uses_anonymous_args = 0
 289              		@ link register save eliminated.
 290              	.LVL8:
 460:Generated_Source\PSoC4/mUART_UART.c ****     uint32 matchReg;
 461:Generated_Source\PSoC4/mUART_UART.c **** 
 462:Generated_Source\PSoC4/mUART_UART.c ****     matchReg = mUART_RX_MATCH_REG;
 291              		.loc 1 462 0
 292 0000 034A     		ldr	r2, .L14
 293 0002 1168     		ldr	r1, [r2]
 294              	.LVL9:
 463:Generated_Source\PSoC4/mUART_UART.c **** 
 464:Generated_Source\PSoC4/mUART_UART.c ****     matchReg &= ((uint32) ~mUART_RX_MATCH_MASK_MASK); /* Clear address mask bits */
 295              		.loc 1 464 0
 296 0004 034B     		ldr	r3, .L14+4
 297 0006 0B40     		ands	r3, r1
 298              	.LVL10:
 465:Generated_Source\PSoC4/mUART_UART.c ****     matchReg |= ((uint32) (addressMask << mUART_RX_MATCH_MASK_POS));
 299              		.loc 1 465 0
 300 0008 0004     		lsls	r0, r0, #16
 301              	.LVL11:
 302 000a 1843     		orrs	r0, r3
 303              	.LVL12:
 466:Generated_Source\PSoC4/mUART_UART.c **** 
 467:Generated_Source\PSoC4/mUART_UART.c ****     mUART_RX_MATCH_REG = matchReg;
 304              		.loc 1 467 0
 305 000c 1060     		str	r0, [r2]
 468:Generated_Source\PSoC4/mUART_UART.c **** }
 306              		.loc 1 468 0
 307              		@ sp needed
 308 000e 7047     		bx	lr
 309              	.L15:
 310              		.align	2
 311              	.L14:
 312 0010 10030840 		.word	1074266896
 313 0014 FFFF00FF 		.word	-16711681
 314              		.cfi_endproc
 315              	.LFE5:
 316              		.size	mUART_UartSetRxAddressMask, .-mUART_UartSetRxAddressMask
 317              		.section	.text.mUART_UartGetChar,"ax",%progbits
 318              		.align	2
 319              		.global	mUART_UartGetChar
 320              		.code	16
 321              		.thumb_func
 322              		.type	mUART_UartGetChar, %function
 323              	mUART_UartGetChar:
 324              	.LFB6:
 469:Generated_Source\PSoC4/mUART_UART.c **** 
 470:Generated_Source\PSoC4/mUART_UART.c **** 
 471:Generated_Source\PSoC4/mUART_UART.c **** #if(mUART_UART_RX_DIRECTION)
 472:Generated_Source\PSoC4/mUART_UART.c ****     /*******************************************************************************
 473:Generated_Source\PSoC4/mUART_UART.c ****     * Function Name: mUART_UartGetChar
 474:Generated_Source\PSoC4/mUART_UART.c ****     ****************************************************************************//**
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm0uBki.s 			page 15


 475:Generated_Source\PSoC4/mUART_UART.c ****     *
 476:Generated_Source\PSoC4/mUART_UART.c ****     *  Retrieves next data element from receive buffer.
 477:Generated_Source\PSoC4/mUART_UART.c ****     *  This function is designed for ASCII characters and returns a char where
 478:Generated_Source\PSoC4/mUART_UART.c ****     *  1 to 255 are valid characters and 0 indicates an error occurred or no data
 479:Generated_Source\PSoC4/mUART_UART.c ****     *  is present.
 480:Generated_Source\PSoC4/mUART_UART.c ****     *  - RX software buffer is disabled: Returns data element retrieved from RX
 481:Generated_Source\PSoC4/mUART_UART.c ****     *    FIFO.
 482:Generated_Source\PSoC4/mUART_UART.c ****     *  - RX software buffer is enabled: Returns data element from the software
 483:Generated_Source\PSoC4/mUART_UART.c ****     *    receive buffer.
 484:Generated_Source\PSoC4/mUART_UART.c ****     *
 485:Generated_Source\PSoC4/mUART_UART.c ****     *  \return
 486:Generated_Source\PSoC4/mUART_UART.c ****     *   Next data element from the receive buffer. ASCII character values from
 487:Generated_Source\PSoC4/mUART_UART.c ****     *   1 to 255 are valid. A returned zero signifies an error condition or no
 488:Generated_Source\PSoC4/mUART_UART.c ****     *   data available.
 489:Generated_Source\PSoC4/mUART_UART.c ****     *
 490:Generated_Source\PSoC4/mUART_UART.c ****     *  \sideeffect
 491:Generated_Source\PSoC4/mUART_UART.c ****     *   The errors bits may not correspond with reading characters due to
 492:Generated_Source\PSoC4/mUART_UART.c ****     *   RX FIFO and software buffer usage.
 493:Generated_Source\PSoC4/mUART_UART.c ****     *   RX software buffer is enabled: The internal software buffer overflow
 494:Generated_Source\PSoC4/mUART_UART.c ****     *   is not treated as an error condition.
 495:Generated_Source\PSoC4/mUART_UART.c ****     *   Check mUART_rxBufferOverflow to capture that error condition.
 496:Generated_Source\PSoC4/mUART_UART.c ****     *
 497:Generated_Source\PSoC4/mUART_UART.c ****     *******************************************************************************/
 498:Generated_Source\PSoC4/mUART_UART.c ****     uint32 mUART_UartGetChar(void)
 499:Generated_Source\PSoC4/mUART_UART.c ****     {
 325              		.loc 1 499 0
 326              		.cfi_startproc
 327              		@ args = 0, pretend = 0, frame = 0
 328              		@ frame_needed = 0, uses_anonymous_args = 0
 329 0000 10B5     		push	{r4, lr}
 330              		.cfi_def_cfa_offset 8
 331              		.cfi_offset 4, -8
 332              		.cfi_offset 14, -4
 333              	.LVL13:
 500:Generated_Source\PSoC4/mUART_UART.c ****         uint32 rxData = 0u;
 501:Generated_Source\PSoC4/mUART_UART.c **** 
 502:Generated_Source\PSoC4/mUART_UART.c ****         /* Reads data only if there is data to read */
 503:Generated_Source\PSoC4/mUART_UART.c ****         if (0u != mUART_SpiUartGetRxBufferSize())
 334              		.loc 1 503 0
 335 0002 FFF7FEFF 		bl	mUART_SpiUartGetRxBufferSize
 336              	.LVL14:
 337 0006 0028     		cmp	r0, #0
 338 0008 02D0     		beq	.L19
 504:Generated_Source\PSoC4/mUART_UART.c ****         {
 505:Generated_Source\PSoC4/mUART_UART.c ****             rxData = mUART_SpiUartReadRxData();
 339              		.loc 1 505 0
 340 000a FFF7FEFF 		bl	mUART_SpiUartReadRxData
 341              	.LVL15:
 342 000e 00E0     		b	.L17
 343              	.LVL16:
 344              	.L19:
 500:Generated_Source\PSoC4/mUART_UART.c ****         uint32 rxData = 0u;
 345              		.loc 1 500 0
 346 0010 0020     		movs	r0, #0
 347              	.LVL17:
 348              	.L17:
 506:Generated_Source\PSoC4/mUART_UART.c ****         }
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm0uBki.s 			page 16


 507:Generated_Source\PSoC4/mUART_UART.c **** 
 508:Generated_Source\PSoC4/mUART_UART.c ****         if (mUART_CHECK_INTR_RX(mUART_INTR_RX_ERR))
 349              		.loc 1 508 0
 350 0012 054B     		ldr	r3, .L20
 351 0014 1A68     		ldr	r2, [r3]
 352 0016 D823     		movs	r3, #216
 353 0018 9B00     		lsls	r3, r3, #2
 354 001a 1A42     		tst	r2, r3
 355 001c 03D0     		beq	.L18
 356              	.LVL18:
 509:Generated_Source\PSoC4/mUART_UART.c ****         {
 510:Generated_Source\PSoC4/mUART_UART.c ****             rxData = 0u; /* Error occurred: returns zero */
 511:Generated_Source\PSoC4/mUART_UART.c ****             mUART_ClearRxInterruptSource(mUART_INTR_RX_ERR);
 357              		.loc 1 511 0
 358 001e 1A00     		movs	r2, r3
 359 0020 014B     		ldr	r3, .L20
 360 0022 1A60     		str	r2, [r3]
 510:Generated_Source\PSoC4/mUART_UART.c ****             mUART_ClearRxInterruptSource(mUART_INTR_RX_ERR);
 361              		.loc 1 510 0
 362 0024 0020     		movs	r0, #0
 363              	.LVL19:
 364              	.L18:
 512:Generated_Source\PSoC4/mUART_UART.c ****         }
 513:Generated_Source\PSoC4/mUART_UART.c **** 
 514:Generated_Source\PSoC4/mUART_UART.c ****         return (rxData);
 515:Generated_Source\PSoC4/mUART_UART.c ****     }
 365              		.loc 1 515 0
 366              		@ sp needed
 367 0026 10BD     		pop	{r4, pc}
 368              	.L21:
 369              		.align	2
 370              	.L20:
 371 0028 C00F0840 		.word	1074270144
 372              		.cfi_endproc
 373              	.LFE6:
 374              		.size	mUART_UartGetChar, .-mUART_UartGetChar
 375              		.section	.text.mUART_UartGetByte,"ax",%progbits
 376              		.align	2
 377              		.global	mUART_UartGetByte
 378              		.code	16
 379              		.thumb_func
 380              		.type	mUART_UartGetByte, %function
 381              	mUART_UartGetByte:
 382              	.LFB7:
 516:Generated_Source\PSoC4/mUART_UART.c **** 
 517:Generated_Source\PSoC4/mUART_UART.c **** 
 518:Generated_Source\PSoC4/mUART_UART.c ****     /*******************************************************************************
 519:Generated_Source\PSoC4/mUART_UART.c ****     * Function Name: mUART_UartGetByte
 520:Generated_Source\PSoC4/mUART_UART.c ****     ****************************************************************************//**
 521:Generated_Source\PSoC4/mUART_UART.c ****     *
 522:Generated_Source\PSoC4/mUART_UART.c ****     *  Retrieves the next data element from the receive buffer, returns the
 523:Generated_Source\PSoC4/mUART_UART.c ****     *  received byte and error condition.
 524:Generated_Source\PSoC4/mUART_UART.c ****     *   - The RX software buffer is disabled: returns the data element retrieved
 525:Generated_Source\PSoC4/mUART_UART.c ****     *     from the RX FIFO. Undefined data will be returned if the RX FIFO is
 526:Generated_Source\PSoC4/mUART_UART.c ****     *     empty.
 527:Generated_Source\PSoC4/mUART_UART.c ****     *   - The RX software buffer is enabled: returns data element from the
 528:Generated_Source\PSoC4/mUART_UART.c ****     *     software receive buffer.
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm0uBki.s 			page 17


 529:Generated_Source\PSoC4/mUART_UART.c ****     *
 530:Generated_Source\PSoC4/mUART_UART.c ****     *  \return
 531:Generated_Source\PSoC4/mUART_UART.c ****     *   Bits 7-0 contain the next data element from the receive buffer and
 532:Generated_Source\PSoC4/mUART_UART.c ****     *   other bits contain the error condition.
 533:Generated_Source\PSoC4/mUART_UART.c ****     *   - mUART_UART_RX_OVERFLOW - Attempt to write to a full
 534:Generated_Source\PSoC4/mUART_UART.c ****     *     receiver FIFO.
 535:Generated_Source\PSoC4/mUART_UART.c ****     *   - mUART_UART_RX_UNDERFLOW    Attempt to read from an empty
 536:Generated_Source\PSoC4/mUART_UART.c ****     *     receiver FIFO.
 537:Generated_Source\PSoC4/mUART_UART.c ****     *   - mUART_UART_RX_FRAME_ERROR - UART framing error detected.
 538:Generated_Source\PSoC4/mUART_UART.c ****     *   - mUART_UART_RX_PARITY_ERROR - UART parity error detected.
 539:Generated_Source\PSoC4/mUART_UART.c ****     *
 540:Generated_Source\PSoC4/mUART_UART.c ****     *  \sideeffect
 541:Generated_Source\PSoC4/mUART_UART.c ****     *   The errors bits may not correspond with reading characters due to
 542:Generated_Source\PSoC4/mUART_UART.c ****     *   RX FIFO and software buffer usage.
 543:Generated_Source\PSoC4/mUART_UART.c ****     *   RX software buffer is enabled: The internal software buffer overflow
 544:Generated_Source\PSoC4/mUART_UART.c ****     *   is not treated as an error condition.
 545:Generated_Source\PSoC4/mUART_UART.c ****     *   Check mUART_rxBufferOverflow to capture that error condition.
 546:Generated_Source\PSoC4/mUART_UART.c ****     *
 547:Generated_Source\PSoC4/mUART_UART.c ****     *******************************************************************************/
 548:Generated_Source\PSoC4/mUART_UART.c ****     uint32 mUART_UartGetByte(void)
 549:Generated_Source\PSoC4/mUART_UART.c ****     {
 383              		.loc 1 549 0
 384              		.cfi_startproc
 385              		@ args = 0, pretend = 0, frame = 0
 386              		@ frame_needed = 0, uses_anonymous_args = 0
 387 0000 10B5     		push	{r4, lr}
 388              		.cfi_def_cfa_offset 8
 389              		.cfi_offset 4, -8
 390              		.cfi_offset 14, -4
 550:Generated_Source\PSoC4/mUART_UART.c ****         uint32 rxData;
 551:Generated_Source\PSoC4/mUART_UART.c ****         uint32 tmpStatus;
 552:Generated_Source\PSoC4/mUART_UART.c **** 
 553:Generated_Source\PSoC4/mUART_UART.c ****         #if (mUART_CHECK_RX_SW_BUFFER)
 554:Generated_Source\PSoC4/mUART_UART.c ****         {
 555:Generated_Source\PSoC4/mUART_UART.c ****             mUART_DisableInt();
 391              		.loc 1 555 0
 392 0002 0720     		movs	r0, #7
 393 0004 FFF7FEFF 		bl	CyIntDisable
 394              	.LVL20:
 556:Generated_Source\PSoC4/mUART_UART.c ****         }
 557:Generated_Source\PSoC4/mUART_UART.c ****         #endif
 558:Generated_Source\PSoC4/mUART_UART.c **** 
 559:Generated_Source\PSoC4/mUART_UART.c ****         if (0u != mUART_SpiUartGetRxBufferSize())
 395              		.loc 1 559 0
 396 0008 FFF7FEFF 		bl	mUART_SpiUartGetRxBufferSize
 397              	.LVL21:
 398 000c 0028     		cmp	r0, #0
 399 000e 06D0     		beq	.L23
 560:Generated_Source\PSoC4/mUART_UART.c ****         {
 561:Generated_Source\PSoC4/mUART_UART.c ****             /* Enables interrupt to receive more bytes: at least one byte is in
 562:Generated_Source\PSoC4/mUART_UART.c ****             * buffer.
 563:Generated_Source\PSoC4/mUART_UART.c ****             */
 564:Generated_Source\PSoC4/mUART_UART.c ****             #if (mUART_CHECK_RX_SW_BUFFER)
 565:Generated_Source\PSoC4/mUART_UART.c ****             {
 566:Generated_Source\PSoC4/mUART_UART.c ****                 mUART_EnableInt();
 400              		.loc 1 566 0
 401 0010 0720     		movs	r0, #7
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm0uBki.s 			page 18


 402 0012 FFF7FEFF 		bl	CyIntEnable
 403              	.LVL22:
 567:Generated_Source\PSoC4/mUART_UART.c ****             }
 568:Generated_Source\PSoC4/mUART_UART.c ****             #endif
 569:Generated_Source\PSoC4/mUART_UART.c **** 
 570:Generated_Source\PSoC4/mUART_UART.c ****             /* Get received byte */
 571:Generated_Source\PSoC4/mUART_UART.c ****             rxData = mUART_SpiUartReadRxData();
 404              		.loc 1 571 0
 405 0016 FFF7FEFF 		bl	mUART_SpiUartReadRxData
 406              	.LVL23:
 407 001a 0400     		movs	r4, r0
 408              	.LVL24:
 409 001c 07E0     		b	.L24
 410              	.LVL25:
 411              	.L23:
 572:Generated_Source\PSoC4/mUART_UART.c ****         }
 573:Generated_Source\PSoC4/mUART_UART.c ****         else
 574:Generated_Source\PSoC4/mUART_UART.c ****         {
 575:Generated_Source\PSoC4/mUART_UART.c ****             /* Reads a byte directly from RX FIFO: underflow is raised in the
 576:Generated_Source\PSoC4/mUART_UART.c ****             * case of empty. Otherwise the first received byte will be read.
 577:Generated_Source\PSoC4/mUART_UART.c ****             */
 578:Generated_Source\PSoC4/mUART_UART.c ****             rxData = mUART_RX_FIFO_RD_REG;
 412              		.loc 1 578 0
 413 001e 094B     		ldr	r3, .L25
 414 0020 1C68     		ldr	r4, [r3]
 415              	.LVL26:
 579:Generated_Source\PSoC4/mUART_UART.c **** 
 580:Generated_Source\PSoC4/mUART_UART.c **** 
 581:Generated_Source\PSoC4/mUART_UART.c ****             /* Enables interrupt to receive more bytes. */
 582:Generated_Source\PSoC4/mUART_UART.c ****             #if (mUART_CHECK_RX_SW_BUFFER)
 583:Generated_Source\PSoC4/mUART_UART.c ****             {
 584:Generated_Source\PSoC4/mUART_UART.c **** 
 585:Generated_Source\PSoC4/mUART_UART.c ****                 /* The byte has been read from RX FIFO. Clear RX interrupt to
 586:Generated_Source\PSoC4/mUART_UART.c ****                 * not involve interrupt handler when RX FIFO is empty.
 587:Generated_Source\PSoC4/mUART_UART.c ****                 */
 588:Generated_Source\PSoC4/mUART_UART.c ****                 mUART_ClearRxInterruptSource(mUART_INTR_RX_NOT_EMPTY);
 416              		.loc 1 588 0
 417 0022 0422     		movs	r2, #4
 418 0024 084B     		ldr	r3, .L25+4
 419 0026 1A60     		str	r2, [r3]
 589:Generated_Source\PSoC4/mUART_UART.c **** 
 590:Generated_Source\PSoC4/mUART_UART.c ****                 mUART_EnableInt();
 420              		.loc 1 590 0
 421 0028 0720     		movs	r0, #7
 422 002a FFF7FEFF 		bl	CyIntEnable
 423              	.LVL27:
 424              	.L24:
 591:Generated_Source\PSoC4/mUART_UART.c ****             }
 592:Generated_Source\PSoC4/mUART_UART.c ****             #endif
 593:Generated_Source\PSoC4/mUART_UART.c ****         }
 594:Generated_Source\PSoC4/mUART_UART.c **** 
 595:Generated_Source\PSoC4/mUART_UART.c ****         /* Get and clear RX error mask */
 596:Generated_Source\PSoC4/mUART_UART.c ****         tmpStatus = (mUART_GetRxInterruptSource() & mUART_INTR_RX_ERR);
 425              		.loc 1 596 0
 426 002e 064B     		ldr	r3, .L25+4
 427 0030 1868     		ldr	r0, [r3]
 428              	.LVL28:
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm0uBki.s 			page 19


 597:Generated_Source\PSoC4/mUART_UART.c ****         mUART_ClearRxInterruptSource(mUART_INTR_RX_ERR);
 429              		.loc 1 597 0
 430 0032 D822     		movs	r2, #216
 431 0034 9200     		lsls	r2, r2, #2
 432 0036 1A60     		str	r2, [r3]
 598:Generated_Source\PSoC4/mUART_UART.c **** 
 599:Generated_Source\PSoC4/mUART_UART.c ****         /* Puts together data and error status:
 600:Generated_Source\PSoC4/mUART_UART.c ****         * MP mode and accept address: 9th bit is set to notify mark.
 601:Generated_Source\PSoC4/mUART_UART.c ****         */
 602:Generated_Source\PSoC4/mUART_UART.c ****         rxData |= ((uint32) (tmpStatus << 8u));
 433              		.loc 1 602 0
 434 0038 0002     		lsls	r0, r0, #8
 435              	.LVL29:
 436 003a D823     		movs	r3, #216
 437 003c 9B02     		lsls	r3, r3, #10
 438 003e 1840     		ands	r0, r3
 439 0040 2043     		orrs	r0, r4
 440              	.LVL30:
 603:Generated_Source\PSoC4/mUART_UART.c **** 
 604:Generated_Source\PSoC4/mUART_UART.c ****         return (rxData);
 605:Generated_Source\PSoC4/mUART_UART.c ****     }
 441              		.loc 1 605 0
 442              		@ sp needed
 443 0042 10BD     		pop	{r4, pc}
 444              	.L26:
 445              		.align	2
 446              	.L25:
 447 0044 40030840 		.word	1074266944
 448 0048 C00F0840 		.word	1074270144
 449              		.cfi_endproc
 450              	.LFE7:
 451              		.size	mUART_UartGetByte, .-mUART_UartGetByte
 452              		.section	.text.mUART_UartSetRtsPolarity,"ax",%progbits
 453              		.align	2
 454              		.global	mUART_UartSetRtsPolarity
 455              		.code	16
 456              		.thumb_func
 457              		.type	mUART_UartSetRtsPolarity, %function
 458              	mUART_UartSetRtsPolarity:
 459              	.LFB8:
 606:Generated_Source\PSoC4/mUART_UART.c **** 
 607:Generated_Source\PSoC4/mUART_UART.c **** 
 608:Generated_Source\PSoC4/mUART_UART.c ****     #if !(mUART_CY_SCBIP_V0 || mUART_CY_SCBIP_V1)
 609:Generated_Source\PSoC4/mUART_UART.c ****         /*******************************************************************************
 610:Generated_Source\PSoC4/mUART_UART.c ****         * Function Name: mUART_UartSetRtsPolarity
 611:Generated_Source\PSoC4/mUART_UART.c ****         ****************************************************************************//**
 612:Generated_Source\PSoC4/mUART_UART.c ****         *
 613:Generated_Source\PSoC4/mUART_UART.c ****         *  Sets active polarity of RTS output signal.
 614:Generated_Source\PSoC4/mUART_UART.c ****         *  Only available for PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4100M / PSoC 4200M /
 615:Generated_Source\PSoC4/mUART_UART.c ****         *  PSoC 4200L / PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices.
 616:Generated_Source\PSoC4/mUART_UART.c ****         *
 617:Generated_Source\PSoC4/mUART_UART.c ****         *  \param polarity: Active polarity of RTS output signal.
 618:Generated_Source\PSoC4/mUART_UART.c ****         *   - mUART_UART_RTS_ACTIVE_LOW  - RTS signal is active low.
 619:Generated_Source\PSoC4/mUART_UART.c ****         *   - mUART_UART_RTS_ACTIVE_HIGH - RTS signal is active high.
 620:Generated_Source\PSoC4/mUART_UART.c ****         *
 621:Generated_Source\PSoC4/mUART_UART.c ****         *******************************************************************************/
 622:Generated_Source\PSoC4/mUART_UART.c ****         void mUART_UartSetRtsPolarity(uint32 polarity)
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm0uBki.s 			page 20


 623:Generated_Source\PSoC4/mUART_UART.c ****         {
 460              		.loc 1 623 0
 461              		.cfi_startproc
 462              		@ args = 0, pretend = 0, frame = 0
 463              		@ frame_needed = 0, uses_anonymous_args = 0
 464              		@ link register save eliminated.
 465              	.LVL31:
 624:Generated_Source\PSoC4/mUART_UART.c ****             if(0u != polarity)
 466              		.loc 1 624 0
 467 0000 0028     		cmp	r0, #0
 468 0002 06D0     		beq	.L28
 625:Generated_Source\PSoC4/mUART_UART.c ****             {
 626:Generated_Source\PSoC4/mUART_UART.c ****                 mUART_UART_FLOW_CTRL_REG |= (uint32)  mUART_UART_FLOW_CTRL_RTS_POLARITY;
 469              		.loc 1 626 0
 470 0004 064A     		ldr	r2, .L30
 471 0006 1368     		ldr	r3, [r2]
 472 0008 8021     		movs	r1, #128
 473 000a 4902     		lsls	r1, r1, #9
 474 000c 0B43     		orrs	r3, r1
 475 000e 1360     		str	r3, [r2]
 476 0010 04E0     		b	.L27
 477              	.L28:
 627:Generated_Source\PSoC4/mUART_UART.c ****             }
 628:Generated_Source\PSoC4/mUART_UART.c ****             else
 629:Generated_Source\PSoC4/mUART_UART.c ****             {
 630:Generated_Source\PSoC4/mUART_UART.c ****                 mUART_UART_FLOW_CTRL_REG &= (uint32) ~mUART_UART_FLOW_CTRL_RTS_POLARITY;
 478              		.loc 1 630 0
 479 0012 034A     		ldr	r2, .L30
 480 0014 1168     		ldr	r1, [r2]
 481 0016 034B     		ldr	r3, .L30+4
 482 0018 0B40     		ands	r3, r1
 483 001a 1360     		str	r3, [r2]
 484              	.L27:
 631:Generated_Source\PSoC4/mUART_UART.c ****             }
 632:Generated_Source\PSoC4/mUART_UART.c ****         }
 485              		.loc 1 632 0
 486              		@ sp needed
 487 001c 7047     		bx	lr
 488              	.L31:
 489 001e C046     		.align	2
 490              	.L30:
 491 0020 50000840 		.word	1074266192
 492 0024 FFFFFEFF 		.word	-65537
 493              		.cfi_endproc
 494              	.LFE8:
 495              		.size	mUART_UartSetRtsPolarity, .-mUART_UartSetRtsPolarity
 496              		.section	.text.mUART_UartSetRtsFifoLevel,"ax",%progbits
 497              		.align	2
 498              		.global	mUART_UartSetRtsFifoLevel
 499              		.code	16
 500              		.thumb_func
 501              		.type	mUART_UartSetRtsFifoLevel, %function
 502              	mUART_UartSetRtsFifoLevel:
 503              	.LFB9:
 633:Generated_Source\PSoC4/mUART_UART.c **** 
 634:Generated_Source\PSoC4/mUART_UART.c **** 
 635:Generated_Source\PSoC4/mUART_UART.c ****         /*******************************************************************************
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm0uBki.s 			page 21


 636:Generated_Source\PSoC4/mUART_UART.c ****         * Function Name: mUART_UartSetRtsFifoLevel
 637:Generated_Source\PSoC4/mUART_UART.c ****         ****************************************************************************//**
 638:Generated_Source\PSoC4/mUART_UART.c ****         *
 639:Generated_Source\PSoC4/mUART_UART.c ****         *  Sets level in the RX FIFO for RTS signal activation.
 640:Generated_Source\PSoC4/mUART_UART.c ****         *  While the RX FIFO has fewer entries than the RX FIFO level the RTS signal
 641:Generated_Source\PSoC4/mUART_UART.c ****         *  remains active, otherwise the RTS signal becomes inactive.
 642:Generated_Source\PSoC4/mUART_UART.c ****         *  Only available for PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4100M / PSoC 4200M /
 643:Generated_Source\PSoC4/mUART_UART.c ****         *  PSoC 4200L / PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices.
 644:Generated_Source\PSoC4/mUART_UART.c ****         *
 645:Generated_Source\PSoC4/mUART_UART.c ****         *  \param level: Level in the RX FIFO for RTS signal activation.
 646:Generated_Source\PSoC4/mUART_UART.c ****         *   The range of valid level values is between 0 and RX FIFO depth - 1.
 647:Generated_Source\PSoC4/mUART_UART.c ****         *   Setting level value to 0 disables RTS signal activation.
 648:Generated_Source\PSoC4/mUART_UART.c ****         *
 649:Generated_Source\PSoC4/mUART_UART.c ****         *******************************************************************************/
 650:Generated_Source\PSoC4/mUART_UART.c ****         void mUART_UartSetRtsFifoLevel(uint32 level)
 651:Generated_Source\PSoC4/mUART_UART.c ****         {
 504              		.loc 1 651 0
 505              		.cfi_startproc
 506              		@ args = 0, pretend = 0, frame = 0
 507              		@ frame_needed = 0, uses_anonymous_args = 0
 508              		@ link register save eliminated.
 509              	.LVL32:
 652:Generated_Source\PSoC4/mUART_UART.c ****             uint32 uartFlowCtrl;
 653:Generated_Source\PSoC4/mUART_UART.c **** 
 654:Generated_Source\PSoC4/mUART_UART.c ****             uartFlowCtrl = mUART_UART_FLOW_CTRL_REG;
 510              		.loc 1 654 0
 511 0000 034A     		ldr	r2, .L33
 512 0002 1368     		ldr	r3, [r2]
 513              	.LVL33:
 655:Generated_Source\PSoC4/mUART_UART.c **** 
 656:Generated_Source\PSoC4/mUART_UART.c ****             uartFlowCtrl &= ((uint32) ~mUART_UART_FLOW_CTRL_TRIGGER_LEVEL_MASK); /* Clear level mas
 514              		.loc 1 656 0
 515 0004 0F21     		movs	r1, #15
 516 0006 8B43     		bics	r3, r1
 517              	.LVL34:
 657:Generated_Source\PSoC4/mUART_UART.c ****             uartFlowCtrl |= ((uint32) (mUART_UART_FLOW_CTRL_TRIGGER_LEVEL_MASK & level));
 518              		.loc 1 657 0
 519 0008 0840     		ands	r0, r1
 520              	.LVL35:
 521 000a 1843     		orrs	r0, r3
 522              	.LVL36:
 658:Generated_Source\PSoC4/mUART_UART.c **** 
 659:Generated_Source\PSoC4/mUART_UART.c ****             mUART_UART_FLOW_CTRL_REG = uartFlowCtrl;
 523              		.loc 1 659 0
 524 000c 1060     		str	r0, [r2]
 660:Generated_Source\PSoC4/mUART_UART.c ****         }
 525              		.loc 1 660 0
 526              		@ sp needed
 527 000e 7047     		bx	lr
 528              	.L34:
 529              		.align	2
 530              	.L33:
 531 0010 50000840 		.word	1074266192
 532              		.cfi_endproc
 533              	.LFE9:
 534              		.size	mUART_UartSetRtsFifoLevel, .-mUART_UartSetRtsFifoLevel
 535              		.section	.text.mUART_UartPutString,"ax",%progbits
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm0uBki.s 			page 22


 536              		.align	2
 537              		.global	mUART_UartPutString
 538              		.code	16
 539              		.thumb_func
 540              		.type	mUART_UartPutString, %function
 541              	mUART_UartPutString:
 542              	.LFB10:
 661:Generated_Source\PSoC4/mUART_UART.c ****     #endif /* !(mUART_CY_SCBIP_V0 || mUART_CY_SCBIP_V1) */
 662:Generated_Source\PSoC4/mUART_UART.c **** 
 663:Generated_Source\PSoC4/mUART_UART.c **** #endif /* (mUART_UART_RX_DIRECTION) */
 664:Generated_Source\PSoC4/mUART_UART.c **** 
 665:Generated_Source\PSoC4/mUART_UART.c **** 
 666:Generated_Source\PSoC4/mUART_UART.c **** #if(mUART_UART_TX_DIRECTION)
 667:Generated_Source\PSoC4/mUART_UART.c ****     /*******************************************************************************
 668:Generated_Source\PSoC4/mUART_UART.c ****     * Function Name: mUART_UartPutString
 669:Generated_Source\PSoC4/mUART_UART.c ****     ****************************************************************************//**
 670:Generated_Source\PSoC4/mUART_UART.c ****     *
 671:Generated_Source\PSoC4/mUART_UART.c ****     *  Places a NULL terminated string in the transmit buffer to be sent at the
 672:Generated_Source\PSoC4/mUART_UART.c ****     *  next available bus time.
 673:Generated_Source\PSoC4/mUART_UART.c ****     *  This function is blocking and waits until there is a space available to put
 674:Generated_Source\PSoC4/mUART_UART.c ****     *  requested data in transmit buffer.
 675:Generated_Source\PSoC4/mUART_UART.c ****     *
 676:Generated_Source\PSoC4/mUART_UART.c ****     *  \param string: pointer to the null terminated string array to be placed in the
 677:Generated_Source\PSoC4/mUART_UART.c ****     *   transmit buffer.
 678:Generated_Source\PSoC4/mUART_UART.c ****     *
 679:Generated_Source\PSoC4/mUART_UART.c ****     *******************************************************************************/
 680:Generated_Source\PSoC4/mUART_UART.c ****     void mUART_UartPutString(const char8 string[])
 681:Generated_Source\PSoC4/mUART_UART.c ****     {
 543              		.loc 1 681 0
 544              		.cfi_startproc
 545              		@ args = 0, pretend = 0, frame = 0
 546              		@ frame_needed = 0, uses_anonymous_args = 0
 547              	.LVL37:
 548 0000 70B5     		push	{r4, r5, r6, lr}
 549              		.cfi_def_cfa_offset 16
 550              		.cfi_offset 4, -16
 551              		.cfi_offset 5, -12
 552              		.cfi_offset 6, -8
 553              		.cfi_offset 14, -4
 554 0002 0500     		movs	r5, r0
 555              	.LVL38:
 682:Generated_Source\PSoC4/mUART_UART.c ****         uint32 bufIndex;
 683:Generated_Source\PSoC4/mUART_UART.c **** 
 684:Generated_Source\PSoC4/mUART_UART.c ****         bufIndex = 0u;
 556              		.loc 1 684 0
 557 0004 0024     		movs	r4, #0
 685:Generated_Source\PSoC4/mUART_UART.c **** 
 686:Generated_Source\PSoC4/mUART_UART.c ****         /* Blocks the control flow until all data has been sent */
 687:Generated_Source\PSoC4/mUART_UART.c ****         while(string[bufIndex] != ((char8) 0))
 558              		.loc 1 687 0
 559 0006 02E0     		b	.L36
 560              	.LVL39:
 561              	.L37:
 688:Generated_Source\PSoC4/mUART_UART.c ****         {
 689:Generated_Source\PSoC4/mUART_UART.c ****             mUART_UartPutChar((uint32) string[bufIndex]);
 562              		.loc 1 689 0
 563 0008 FFF7FEFF 		bl	mUART_SpiUartWriteTxData
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm0uBki.s 			page 23


 564              	.LVL40:
 690:Generated_Source\PSoC4/mUART_UART.c ****             bufIndex++;
 565              		.loc 1 690 0
 566 000c 0134     		adds	r4, r4, #1
 567              	.LVL41:
 568              	.L36:
 687:Generated_Source\PSoC4/mUART_UART.c ****         {
 569              		.loc 1 687 0
 570 000e 285D     		ldrb	r0, [r5, r4]
 571 0010 0028     		cmp	r0, #0
 572 0012 F9D1     		bne	.L37
 691:Generated_Source\PSoC4/mUART_UART.c ****         }
 692:Generated_Source\PSoC4/mUART_UART.c ****     }
 573              		.loc 1 692 0
 574              		@ sp needed
 575              	.LVL42:
 576              	.LVL43:
 577 0014 70BD     		pop	{r4, r5, r6, pc}
 578              		.cfi_endproc
 579              	.LFE10:
 580              		.size	mUART_UartPutString, .-mUART_UartPutString
 581 0016 C046     		.section	.text.mUART_UartPutCRLF,"ax",%progbits
 582              		.align	2
 583              		.global	mUART_UartPutCRLF
 584              		.code	16
 585              		.thumb_func
 586              		.type	mUART_UartPutCRLF, %function
 587              	mUART_UartPutCRLF:
 588              	.LFB11:
 693:Generated_Source\PSoC4/mUART_UART.c **** 
 694:Generated_Source\PSoC4/mUART_UART.c **** 
 695:Generated_Source\PSoC4/mUART_UART.c ****     /*******************************************************************************
 696:Generated_Source\PSoC4/mUART_UART.c ****     * Function Name: mUART_UartPutCRLF
 697:Generated_Source\PSoC4/mUART_UART.c ****     ****************************************************************************//**
 698:Generated_Source\PSoC4/mUART_UART.c ****     *
 699:Generated_Source\PSoC4/mUART_UART.c ****     *  Places byte of data followed by a carriage return (0x0D) and line feed
 700:Generated_Source\PSoC4/mUART_UART.c ****     *  (0x0A) in the transmit buffer.
 701:Generated_Source\PSoC4/mUART_UART.c ****     *  This function is blocking and waits until there is a space available to put
 702:Generated_Source\PSoC4/mUART_UART.c ****     *  all requested data in transmit buffer.
 703:Generated_Source\PSoC4/mUART_UART.c ****     *
 704:Generated_Source\PSoC4/mUART_UART.c ****     *  \param txDataByte: the data to be transmitted.
 705:Generated_Source\PSoC4/mUART_UART.c ****     *
 706:Generated_Source\PSoC4/mUART_UART.c ****     *******************************************************************************/
 707:Generated_Source\PSoC4/mUART_UART.c ****     void mUART_UartPutCRLF(uint32 txDataByte)
 708:Generated_Source\PSoC4/mUART_UART.c ****     {
 589              		.loc 1 708 0
 590              		.cfi_startproc
 591              		@ args = 0, pretend = 0, frame = 0
 592              		@ frame_needed = 0, uses_anonymous_args = 0
 593              	.LVL44:
 594 0000 10B5     		push	{r4, lr}
 595              		.cfi_def_cfa_offset 8
 596              		.cfi_offset 4, -8
 597              		.cfi_offset 14, -4
 709:Generated_Source\PSoC4/mUART_UART.c ****         mUART_UartPutChar(txDataByte);  /* Blocks control flow until all data has been sent */
 598              		.loc 1 709 0
 599 0002 FFF7FEFF 		bl	mUART_SpiUartWriteTxData
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm0uBki.s 			page 24


 600              	.LVL45:
 710:Generated_Source\PSoC4/mUART_UART.c ****         mUART_UartPutChar(0x0Du);       /* Blocks control flow until all data has been sent */
 601              		.loc 1 710 0
 602 0006 0D20     		movs	r0, #13
 603 0008 FFF7FEFF 		bl	mUART_SpiUartWriteTxData
 604              	.LVL46:
 711:Generated_Source\PSoC4/mUART_UART.c ****         mUART_UartPutChar(0x0Au);       /* Blocks control flow until all data has been sent */
 605              		.loc 1 711 0
 606 000c 0A20     		movs	r0, #10
 607 000e FFF7FEFF 		bl	mUART_SpiUartWriteTxData
 608              	.LVL47:
 712:Generated_Source\PSoC4/mUART_UART.c ****     }
 609              		.loc 1 712 0
 610              		@ sp needed
 611 0012 10BD     		pop	{r4, pc}
 612              		.cfi_endproc
 613              	.LFE11:
 614              		.size	mUART_UartPutCRLF, .-mUART_UartPutCRLF
 615              		.section	.text.mUART_UartEnableCts,"ax",%progbits
 616              		.align	2
 617              		.global	mUART_UartEnableCts
 618              		.code	16
 619              		.thumb_func
 620              		.type	mUART_UartEnableCts, %function
 621              	mUART_UartEnableCts:
 622              	.LFB12:
 713:Generated_Source\PSoC4/mUART_UART.c **** 
 714:Generated_Source\PSoC4/mUART_UART.c **** 
 715:Generated_Source\PSoC4/mUART_UART.c ****     #if !(mUART_CY_SCBIP_V0 || mUART_CY_SCBIP_V1)
 716:Generated_Source\PSoC4/mUART_UART.c ****         /*******************************************************************************
 717:Generated_Source\PSoC4/mUART_UART.c ****         * Function Name: mUARTSCB_UartEnableCts
 718:Generated_Source\PSoC4/mUART_UART.c ****         ****************************************************************************//**
 719:Generated_Source\PSoC4/mUART_UART.c ****         *
 720:Generated_Source\PSoC4/mUART_UART.c ****         *  Enables usage of CTS input signal by the UART transmitter.
 721:Generated_Source\PSoC4/mUART_UART.c ****         *  Only available for PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4100M / PSoC 4200M /
 722:Generated_Source\PSoC4/mUART_UART.c ****         *  PSoC 4200L / PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices.
 723:Generated_Source\PSoC4/mUART_UART.c ****         *
 724:Generated_Source\PSoC4/mUART_UART.c ****         *******************************************************************************/
 725:Generated_Source\PSoC4/mUART_UART.c ****         void mUART_UartEnableCts(void)
 726:Generated_Source\PSoC4/mUART_UART.c ****         {
 623              		.loc 1 726 0
 624              		.cfi_startproc
 625              		@ args = 0, pretend = 0, frame = 0
 626              		@ frame_needed = 0, uses_anonymous_args = 0
 627              		@ link register save eliminated.
 727:Generated_Source\PSoC4/mUART_UART.c ****             mUART_UART_FLOW_CTRL_REG |= (uint32)  mUART_UART_FLOW_CTRL_CTS_ENABLE;
 628              		.loc 1 727 0
 629 0000 034A     		ldr	r2, .L40
 630 0002 1368     		ldr	r3, [r2]
 631 0004 8021     		movs	r1, #128
 632 0006 8904     		lsls	r1, r1, #18
 633 0008 0B43     		orrs	r3, r1
 634 000a 1360     		str	r3, [r2]
 728:Generated_Source\PSoC4/mUART_UART.c ****         }
 635              		.loc 1 728 0
 636              		@ sp needed
 637 000c 7047     		bx	lr
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm0uBki.s 			page 25


 638              	.L41:
 639 000e C046     		.align	2
 640              	.L40:
 641 0010 50000840 		.word	1074266192
 642              		.cfi_endproc
 643              	.LFE12:
 644              		.size	mUART_UartEnableCts, .-mUART_UartEnableCts
 645              		.section	.text.mUART_UartDisableCts,"ax",%progbits
 646              		.align	2
 647              		.global	mUART_UartDisableCts
 648              		.code	16
 649              		.thumb_func
 650              		.type	mUART_UartDisableCts, %function
 651              	mUART_UartDisableCts:
 652              	.LFB13:
 729:Generated_Source\PSoC4/mUART_UART.c **** 
 730:Generated_Source\PSoC4/mUART_UART.c **** 
 731:Generated_Source\PSoC4/mUART_UART.c ****         /*******************************************************************************
 732:Generated_Source\PSoC4/mUART_UART.c ****         * Function Name: mUART_UartDisableCts
 733:Generated_Source\PSoC4/mUART_UART.c ****         ****************************************************************************//**
 734:Generated_Source\PSoC4/mUART_UART.c ****         *
 735:Generated_Source\PSoC4/mUART_UART.c ****         *  Disables usage of CTS input signal by the UART transmitter.
 736:Generated_Source\PSoC4/mUART_UART.c ****         *  Only available for PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4100M / PSoC 4200M /
 737:Generated_Source\PSoC4/mUART_UART.c ****         *  PSoC 4200L / PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices.
 738:Generated_Source\PSoC4/mUART_UART.c ****         *
 739:Generated_Source\PSoC4/mUART_UART.c ****         *******************************************************************************/
 740:Generated_Source\PSoC4/mUART_UART.c ****         void mUART_UartDisableCts(void)
 741:Generated_Source\PSoC4/mUART_UART.c ****         {
 653              		.loc 1 741 0
 654              		.cfi_startproc
 655              		@ args = 0, pretend = 0, frame = 0
 656              		@ frame_needed = 0, uses_anonymous_args = 0
 657              		@ link register save eliminated.
 742:Generated_Source\PSoC4/mUART_UART.c ****             mUART_UART_FLOW_CTRL_REG &= (uint32) ~mUART_UART_FLOW_CTRL_CTS_ENABLE;
 658              		.loc 1 742 0
 659 0000 024A     		ldr	r2, .L43
 660 0002 1168     		ldr	r1, [r2]
 661 0004 024B     		ldr	r3, .L43+4
 662 0006 0B40     		ands	r3, r1
 663 0008 1360     		str	r3, [r2]
 743:Generated_Source\PSoC4/mUART_UART.c ****         }
 664              		.loc 1 743 0
 665              		@ sp needed
 666 000a 7047     		bx	lr
 667              	.L44:
 668              		.align	2
 669              	.L43:
 670 000c 50000840 		.word	1074266192
 671 0010 FFFFFFFD 		.word	-33554433
 672              		.cfi_endproc
 673              	.LFE13:
 674              		.size	mUART_UartDisableCts, .-mUART_UartDisableCts
 675              		.section	.text.mUART_UartSetCtsPolarity,"ax",%progbits
 676              		.align	2
 677              		.global	mUART_UartSetCtsPolarity
 678              		.code	16
 679              		.thumb_func
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm0uBki.s 			page 26


 680              		.type	mUART_UartSetCtsPolarity, %function
 681              	mUART_UartSetCtsPolarity:
 682              	.LFB14:
 744:Generated_Source\PSoC4/mUART_UART.c **** 
 745:Generated_Source\PSoC4/mUART_UART.c **** 
 746:Generated_Source\PSoC4/mUART_UART.c ****         /*******************************************************************************
 747:Generated_Source\PSoC4/mUART_UART.c ****         * Function Name: mUART_UartSetCtsPolarity
 748:Generated_Source\PSoC4/mUART_UART.c ****         ****************************************************************************//**
 749:Generated_Source\PSoC4/mUART_UART.c ****         *
 750:Generated_Source\PSoC4/mUART_UART.c ****         *  Sets active polarity of CTS input signal.
 751:Generated_Source\PSoC4/mUART_UART.c ****         *  Only available for PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4100M / PSoC 4200M /
 752:Generated_Source\PSoC4/mUART_UART.c ****         *  PSoC 4200L / PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices.
 753:Generated_Source\PSoC4/mUART_UART.c ****         *
 754:Generated_Source\PSoC4/mUART_UART.c ****         * \param
 755:Generated_Source\PSoC4/mUART_UART.c ****         * polarity: Active polarity of CTS output signal.
 756:Generated_Source\PSoC4/mUART_UART.c ****         *   - mUART_UART_CTS_ACTIVE_LOW  - CTS signal is active low.
 757:Generated_Source\PSoC4/mUART_UART.c ****         *   - mUART_UART_CTS_ACTIVE_HIGH - CTS signal is active high.
 758:Generated_Source\PSoC4/mUART_UART.c ****         *
 759:Generated_Source\PSoC4/mUART_UART.c ****         *******************************************************************************/
 760:Generated_Source\PSoC4/mUART_UART.c ****         void mUART_UartSetCtsPolarity(uint32 polarity)
 761:Generated_Source\PSoC4/mUART_UART.c ****         {
 683              		.loc 1 761 0
 684              		.cfi_startproc
 685              		@ args = 0, pretend = 0, frame = 0
 686              		@ frame_needed = 0, uses_anonymous_args = 0
 687              		@ link register save eliminated.
 688              	.LVL48:
 762:Generated_Source\PSoC4/mUART_UART.c ****             if (0u != polarity)
 689              		.loc 1 762 0
 690 0000 0028     		cmp	r0, #0
 691 0002 06D0     		beq	.L46
 763:Generated_Source\PSoC4/mUART_UART.c ****             {
 764:Generated_Source\PSoC4/mUART_UART.c ****                 mUART_UART_FLOW_CTRL_REG |= (uint32)  mUART_UART_FLOW_CTRL_CTS_POLARITY;
 692              		.loc 1 764 0
 693 0004 064A     		ldr	r2, .L48
 694 0006 1368     		ldr	r3, [r2]
 695 0008 8021     		movs	r1, #128
 696 000a 4904     		lsls	r1, r1, #17
 697 000c 0B43     		orrs	r3, r1
 698 000e 1360     		str	r3, [r2]
 699 0010 04E0     		b	.L45
 700              	.L46:
 765:Generated_Source\PSoC4/mUART_UART.c ****             }
 766:Generated_Source\PSoC4/mUART_UART.c ****             else
 767:Generated_Source\PSoC4/mUART_UART.c ****             {
 768:Generated_Source\PSoC4/mUART_UART.c ****                 mUART_UART_FLOW_CTRL_REG &= (uint32) ~mUART_UART_FLOW_CTRL_CTS_POLARITY;
 701              		.loc 1 768 0
 702 0012 034A     		ldr	r2, .L48
 703 0014 1168     		ldr	r1, [r2]
 704 0016 034B     		ldr	r3, .L48+4
 705 0018 0B40     		ands	r3, r1
 706 001a 1360     		str	r3, [r2]
 707              	.L45:
 769:Generated_Source\PSoC4/mUART_UART.c ****             }
 770:Generated_Source\PSoC4/mUART_UART.c ****         }
 708              		.loc 1 770 0
 709              		@ sp needed
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm0uBki.s 			page 27


 710 001c 7047     		bx	lr
 711              	.L49:
 712 001e C046     		.align	2
 713              	.L48:
 714 0020 50000840 		.word	1074266192
 715 0024 FFFFFFFE 		.word	-16777217
 716              		.cfi_endproc
 717              	.LFE14:
 718              		.size	mUART_UartSetCtsPolarity, .-mUART_UartSetCtsPolarity
 719              		.section	.text.mUART_UartSendBreakBlocking,"ax",%progbits
 720              		.align	2
 721              		.global	mUART_UartSendBreakBlocking
 722              		.code	16
 723              		.thumb_func
 724              		.type	mUART_UartSendBreakBlocking, %function
 725              	mUART_UartSendBreakBlocking:
 726              	.LFB15:
 771:Generated_Source\PSoC4/mUART_UART.c ****     #endif /* !(mUART_CY_SCBIP_V0 || mUART_CY_SCBIP_V1) */
 772:Generated_Source\PSoC4/mUART_UART.c **** 
 773:Generated_Source\PSoC4/mUART_UART.c **** 
 774:Generated_Source\PSoC4/mUART_UART.c ****     /*******************************************************************************
 775:Generated_Source\PSoC4/mUART_UART.c ****     * Function Name: mUART_UartSendBreakBlocking
 776:Generated_Source\PSoC4/mUART_UART.c ****     ****************************************************************************//**
 777:Generated_Source\PSoC4/mUART_UART.c ****     *
 778:Generated_Source\PSoC4/mUART_UART.c ****     * Sends a break condition (logic low) of specified width on UART TX line.
 779:Generated_Source\PSoC4/mUART_UART.c ****     * Blocks until break is completed. Only call this function when UART TX FIFO
 780:Generated_Source\PSoC4/mUART_UART.c ****     * and shifter are empty.
 781:Generated_Source\PSoC4/mUART_UART.c ****     *
 782:Generated_Source\PSoC4/mUART_UART.c ****     * \param breakWidth
 783:Generated_Source\PSoC4/mUART_UART.c ****     * Width of break condition. Valid range is 4 to 16 bits.
 784:Generated_Source\PSoC4/mUART_UART.c ****     *
 785:Generated_Source\PSoC4/mUART_UART.c ****     * \note
 786:Generated_Source\PSoC4/mUART_UART.c ****     * Before sending break all UART TX interrupt sources are disabled. The state
 787:Generated_Source\PSoC4/mUART_UART.c ****     * of UART TX interrupt sources is restored before function returns.
 788:Generated_Source\PSoC4/mUART_UART.c ****     *
 789:Generated_Source\PSoC4/mUART_UART.c ****     * \sideeffect
 790:Generated_Source\PSoC4/mUART_UART.c ****     * If this function is called while there is data in the TX FIFO or shifter that
 791:Generated_Source\PSoC4/mUART_UART.c ****     * data will be shifted out in packets the size of breakWidth.
 792:Generated_Source\PSoC4/mUART_UART.c ****     *
 793:Generated_Source\PSoC4/mUART_UART.c ****     *******************************************************************************/
 794:Generated_Source\PSoC4/mUART_UART.c ****     void mUART_UartSendBreakBlocking(uint32 breakWidth)
 795:Generated_Source\PSoC4/mUART_UART.c ****     {
 727              		.loc 1 795 0
 728              		.cfi_startproc
 729              		@ args = 0, pretend = 0, frame = 0
 730              		@ frame_needed = 0, uses_anonymous_args = 0
 731              	.LVL49:
 732 0000 70B5     		push	{r4, r5, r6, lr}
 733              		.cfi_def_cfa_offset 16
 734              		.cfi_offset 4, -16
 735              		.cfi_offset 5, -12
 736              		.cfi_offset 6, -8
 737              		.cfi_offset 14, -4
 738 0002 0300     		movs	r3, r0
 796:Generated_Source\PSoC4/mUART_UART.c ****         uint32 txCtrlReg;
 797:Generated_Source\PSoC4/mUART_UART.c ****         uint32 txIntrReg;
 798:Generated_Source\PSoC4/mUART_UART.c **** 
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm0uBki.s 			page 28


 799:Generated_Source\PSoC4/mUART_UART.c ****         /* Disable all UART TX interrupt source and clear UART TX Done history */
 800:Generated_Source\PSoC4/mUART_UART.c ****         txIntrReg = mUART_GetTxInterruptMode();
 739              		.loc 1 800 0
 740 0004 0F4A     		ldr	r2, .L52
 741 0006 1568     		ldr	r5, [r2]
 742              	.LVL50:
 801:Generated_Source\PSoC4/mUART_UART.c ****         mUART_SetTxInterruptMode(0u);
 743              		.loc 1 801 0
 744 0008 0024     		movs	r4, #0
 745 000a 1460     		str	r4, [r2]
 802:Generated_Source\PSoC4/mUART_UART.c ****         mUART_ClearTxInterruptSource(mUART_INTR_TX_UART_DONE);
 746              		.loc 1 802 0
 747 000c 8021     		movs	r1, #128
 748 000e 8900     		lsls	r1, r1, #2
 749 0010 0D4A     		ldr	r2, .L52+4
 750 0012 1160     		str	r1, [r2]
 803:Generated_Source\PSoC4/mUART_UART.c **** 
 804:Generated_Source\PSoC4/mUART_UART.c ****         /* Store TX CTRL configuration */
 805:Generated_Source\PSoC4/mUART_UART.c ****         txCtrlReg = mUART_TX_CTRL_REG;
 751              		.loc 1 805 0
 752 0014 0D4A     		ldr	r2, .L52+8
 753 0016 1668     		ldr	r6, [r2]
 754              	.LVL51:
 806:Generated_Source\PSoC4/mUART_UART.c **** 
 807:Generated_Source\PSoC4/mUART_UART.c ****         /* Set break width */
 808:Generated_Source\PSoC4/mUART_UART.c ****         mUART_TX_CTRL_REG = (mUART_TX_CTRL_REG & (uint32) ~mUART_TX_CTRL_DATA_WIDTH_MASK) |
 755              		.loc 1 808 0
 756 0018 1168     		ldr	r1, [r2]
 757 001a 0F20     		movs	r0, #15
 758              	.LVL52:
 759 001c 8143     		bics	r1, r0
 809:Generated_Source\PSoC4/mUART_UART.c ****                                         mUART_GET_TX_CTRL_DATA_WIDTH(breakWidth);
 760              		.loc 1 809 0
 761 001e 013B     		subs	r3, r3, #1
 762              	.LVL53:
 763 0020 1840     		ands	r0, r3
 808:Generated_Source\PSoC4/mUART_UART.c ****                                         mUART_GET_TX_CTRL_DATA_WIDTH(breakWidth);
 764              		.loc 1 808 0
 765 0022 0843     		orrs	r0, r1
 766 0024 1060     		str	r0, [r2]
 810:Generated_Source\PSoC4/mUART_UART.c **** 
 811:Generated_Source\PSoC4/mUART_UART.c ****         /* Generate break */
 812:Generated_Source\PSoC4/mUART_UART.c ****         mUART_TX_FIFO_WR_REG = 0u;
 767              		.loc 1 812 0
 768 0026 0A4B     		ldr	r3, .L52+12
 769              	.LVL54:
 770 0028 1C60     		str	r4, [r3]
 771              	.L51:
 813:Generated_Source\PSoC4/mUART_UART.c **** 
 814:Generated_Source\PSoC4/mUART_UART.c ****         /* Wait for break completion */
 815:Generated_Source\PSoC4/mUART_UART.c ****         while (0u == (mUART_GetTxInterruptSource() & mUART_INTR_TX_UART_DONE))
 772              		.loc 1 815 0 discriminator 1
 773 002a 074B     		ldr	r3, .L52+4
 774 002c 1B68     		ldr	r3, [r3]
 775 002e 9B05     		lsls	r3, r3, #22
 776 0030 FBD5     		bpl	.L51
 816:Generated_Source\PSoC4/mUART_UART.c ****         {
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm0uBki.s 			page 29


 817:Generated_Source\PSoC4/mUART_UART.c ****         }
 818:Generated_Source\PSoC4/mUART_UART.c **** 
 819:Generated_Source\PSoC4/mUART_UART.c ****         /* Clear all UART TX interrupt sources to  */
 820:Generated_Source\PSoC4/mUART_UART.c ****         mUART_ClearTxInterruptSource(mUART_INTR_TX_ALL);
 777              		.loc 1 820 0
 778 0032 084A     		ldr	r2, .L52+16
 779 0034 044B     		ldr	r3, .L52+4
 780 0036 1A60     		str	r2, [r3]
 821:Generated_Source\PSoC4/mUART_UART.c **** 
 822:Generated_Source\PSoC4/mUART_UART.c ****         /* Restore TX interrupt sources and data width */
 823:Generated_Source\PSoC4/mUART_UART.c ****         mUART_TX_CTRL_REG = txCtrlReg;
 781              		.loc 1 823 0
 782 0038 044B     		ldr	r3, .L52+8
 783 003a 1E60     		str	r6, [r3]
 824:Generated_Source\PSoC4/mUART_UART.c ****         mUART_SetTxInterruptMode(txIntrReg);
 784              		.loc 1 824 0
 785 003c 014B     		ldr	r3, .L52
 786 003e 1D60     		str	r5, [r3]
 825:Generated_Source\PSoC4/mUART_UART.c ****     }
 787              		.loc 1 825 0
 788              		@ sp needed
 789              	.LVL55:
 790              	.LVL56:
 791 0040 70BD     		pop	{r4, r5, r6, pc}
 792              	.L53:
 793 0042 C046     		.align	2
 794              	.L52:
 795 0044 880F0840 		.word	1074270088
 796 0048 800F0840 		.word	1074270080
 797 004c 00020840 		.word	1074266624
 798 0050 40020840 		.word	1074266688
 799 0054 F3070000 		.word	2035
 800              		.cfi_endproc
 801              	.LFE15:
 802              		.size	mUART_UartSendBreakBlocking, .-mUART_UartSendBreakBlocking
 803              		.text
 804              	.Letext0:
 805              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 806              		.file 3 "Generated_Source\\PSoC4\\mUART_PVT.h"
 807              		.file 4 "Generated_Source\\PSoC4\\mUART_SPI_UART_PVT.h"
 808              		.file 5 "Generated_Source\\PSoC4/CyLib.h"
 809              		.file 6 "Generated_Source\\PSoC4\\mUART_SPI_UART.h"
 810              		.section	.debug_info,"",%progbits
 811              	.Ldebug_info0:
 812 0000 99040000 		.4byte	0x499
 813 0004 0400     		.2byte	0x4
 814 0006 00000000 		.4byte	.Ldebug_abbrev0
 815 000a 04       		.byte	0x4
 816 000b 01       		.uleb128 0x1
 817 000c F9020000 		.4byte	.LASF61
 818 0010 0C       		.byte	0xc
 819 0011 E8000000 		.4byte	.LASF62
 820 0015 D0030000 		.4byte	.LASF63
 821 0019 00000000 		.4byte	.Ldebug_ranges0+0
 822 001d 00000000 		.4byte	0
 823 0021 00000000 		.4byte	.Ldebug_line0
 824 0025 02       		.uleb128 0x2
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm0uBki.s 			page 30


 825 0026 01       		.byte	0x1
 826 0027 06       		.byte	0x6
 827 0028 59000000 		.4byte	.LASF0
 828 002c 02       		.uleb128 0x2
 829 002d 01       		.byte	0x1
 830 002e 08       		.byte	0x8
 831 002f 7E020000 		.4byte	.LASF1
 832 0033 02       		.uleb128 0x2
 833 0034 02       		.byte	0x2
 834 0035 05       		.byte	0x5
 835 0036 A1020000 		.4byte	.LASF2
 836 003a 02       		.uleb128 0x2
 837 003b 02       		.byte	0x2
 838 003c 07       		.byte	0x7
 839 003d 6A010000 		.4byte	.LASF3
 840 0041 02       		.uleb128 0x2
 841 0042 04       		.byte	0x4
 842 0043 05       		.byte	0x5
 843 0044 7A000000 		.4byte	.LASF4
 844 0048 02       		.uleb128 0x2
 845 0049 04       		.byte	0x4
 846 004a 07       		.byte	0x7
 847 004b 35010000 		.4byte	.LASF5
 848 004f 02       		.uleb128 0x2
 849 0050 08       		.byte	0x8
 850 0051 05       		.byte	0x5
 851 0052 4B000000 		.4byte	.LASF6
 852 0056 02       		.uleb128 0x2
 853 0057 08       		.byte	0x8
 854 0058 07       		.byte	0x7
 855 0059 19000000 		.4byte	.LASF7
 856 005d 03       		.uleb128 0x3
 857 005e 04       		.byte	0x4
 858 005f 05       		.byte	0x5
 859 0060 696E7400 		.ascii	"int\000"
 860 0064 02       		.uleb128 0x2
 861 0065 04       		.byte	0x4
 862 0066 07       		.byte	0x7
 863 0067 28010000 		.4byte	.LASF8
 864 006b 04       		.uleb128 0x4
 865 006c 90000000 		.4byte	.LASF9
 866 0070 02       		.byte	0x2
 867 0071 FB01     		.2byte	0x1fb
 868 0073 2C000000 		.4byte	0x2c
 869 0077 04       		.uleb128 0x4
 870 0078 00000000 		.4byte	.LASF10
 871 007c 02       		.byte	0x2
 872 007d FC01     		.2byte	0x1fc
 873 007f 3A000000 		.4byte	0x3a
 874 0083 04       		.uleb128 0x4
 875 0084 C3000000 		.4byte	.LASF11
 876 0088 02       		.byte	0x2
 877 0089 FD01     		.2byte	0x1fd
 878 008b 48000000 		.4byte	0x48
 879 008f 02       		.uleb128 0x2
 880 0090 04       		.byte	0x4
 881 0091 04       		.byte	0x4
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm0uBki.s 			page 31


 882 0092 41020000 		.4byte	.LASF12
 883 0096 02       		.uleb128 0x2
 884 0097 08       		.byte	0x8
 885 0098 04       		.byte	0x4
 886 0099 9F000000 		.4byte	.LASF13
 887 009d 04       		.uleb128 0x4
 888 009e 9C030000 		.4byte	.LASF14
 889 00a2 02       		.byte	0x2
 890 00a3 0C02     		.2byte	0x20c
 891 00a5 A9000000 		.4byte	0xa9
 892 00a9 02       		.uleb128 0x2
 893 00aa 01       		.byte	0x1
 894 00ab 08       		.byte	0x8
 895 00ac 97030000 		.4byte	.LASF15
 896 00b0 05       		.uleb128 0x5
 897 00b1 6B000000 		.4byte	0x6b
 898 00b5 04       		.uleb128 0x4
 899 00b6 F2010000 		.4byte	.LASF16
 900 00ba 02       		.byte	0x2
 901 00bb A702     		.2byte	0x2a7
 902 00bd C1000000 		.4byte	0xc1
 903 00c1 05       		.uleb128 0x5
 904 00c2 83000000 		.4byte	0x83
 905 00c6 02       		.uleb128 0x2
 906 00c7 08       		.byte	0x8
 907 00c8 04       		.byte	0x4
 908 00c9 1C020000 		.4byte	.LASF17
 909 00cd 02       		.uleb128 0x2
 910 00ce 04       		.byte	0x4
 911 00cf 07       		.byte	0x7
 912 00d0 13020000 		.4byte	.LASF18
 913 00d4 06       		.uleb128 0x6
 914 00d5 CA000000 		.4byte	.LASF21
 915 00d9 01       		.byte	0x1
 916 00da F7       		.byte	0xf7
 917 00db 00000000 		.4byte	.LFB1
 918 00df EC000000 		.4byte	.LFE1-.LFB1
 919 00e3 01       		.uleb128 0x1
 920 00e4 9C       		.byte	0x9c
 921 00e5 24010000 		.4byte	0x124
 922 00e9 07       		.uleb128 0x7
 923 00ea 3E000000 		.4byte	.LVL0
 924 00ee 4C040000 		.4byte	0x44c
 925 00f2 FC000000 		.4byte	0xfc
 926 00f6 08       		.uleb128 0x8
 927 00f7 01       		.uleb128 0x1
 928 00f8 50       		.byte	0x50
 929 00f9 01       		.uleb128 0x1
 930 00fa 37       		.byte	0x37
 931 00fb 00       		.byte	0
 932 00fc 07       		.uleb128 0x7
 933 00fd 46000000 		.4byte	.LVL1
 934 0101 57040000 		.4byte	0x457
 935 0105 14010000 		.4byte	0x114
 936 0109 08       		.uleb128 0x8
 937 010a 01       		.uleb128 0x1
 938 010b 50       		.byte	0x50
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm0uBki.s 			page 32


 939 010c 01       		.uleb128 0x1
 940 010d 37       		.byte	0x37
 941 010e 08       		.uleb128 0x8
 942 010f 01       		.uleb128 0x1
 943 0110 51       		.byte	0x51
 944 0111 01       		.uleb128 0x1
 945 0112 33       		.byte	0x33
 946 0113 00       		.byte	0
 947 0114 09       		.uleb128 0x9
 948 0115 4E000000 		.4byte	.LVL2
 949 0119 62040000 		.4byte	0x462
 950 011d 08       		.uleb128 0x8
 951 011e 01       		.uleb128 0x1
 952 011f 50       		.byte	0x50
 953 0120 01       		.uleb128 0x1
 954 0121 37       		.byte	0x37
 955 0122 00       		.byte	0
 956 0123 00       		.byte	0
 957 0124 0A       		.uleb128 0xa
 958 0125 8C020000 		.4byte	.LASF19
 959 0129 01       		.byte	0x1
 960 012a 3D01     		.2byte	0x13d
 961 012c 00000000 		.4byte	.LFB2
 962 0130 24000000 		.4byte	.LFE2-.LFB2
 963 0134 01       		.uleb128 0x1
 964 0135 9C       		.byte	0x9c
 965 0136 0A       		.uleb128 0xa
 966 0137 C1030000 		.4byte	.LASF20
 967 013b 01       		.byte	0x1
 968 013c 7101     		.2byte	0x171
 969 013e 00000000 		.4byte	.LFB3
 970 0142 28000000 		.4byte	.LFE3-.LFB3
 971 0146 01       		.uleb128 0x1
 972 0147 9C       		.byte	0x9c
 973 0148 0B       		.uleb128 0xb
 974 0149 94010000 		.4byte	.LASF22
 975 014d 01       		.byte	0x1
 976 014e B101     		.2byte	0x1b1
 977 0150 00000000 		.4byte	.LFB4
 978 0154 14000000 		.4byte	.LFE4-.LFB4
 979 0158 01       		.uleb128 0x1
 980 0159 9C       		.byte	0x9c
 981 015a 7F010000 		.4byte	0x17f
 982 015e 0C       		.uleb128 0xc
 983 015f 28020000 		.4byte	.LASF24
 984 0163 01       		.byte	0x1
 985 0164 B101     		.2byte	0x1b1
 986 0166 83000000 		.4byte	0x83
 987 016a 00000000 		.4byte	.LLST0
 988 016e 0D       		.uleb128 0xd
 989 016f 96000000 		.4byte	.LASF26
 990 0173 01       		.byte	0x1
 991 0174 B301     		.2byte	0x1b3
 992 0176 83000000 		.4byte	0x83
 993 017a 21000000 		.4byte	.LLST1
 994 017e 00       		.byte	0
 995 017f 0B       		.uleb128 0xb
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm0uBki.s 			page 33


 996 0180 F8010000 		.4byte	.LASF23
 997 0184 01       		.byte	0x1
 998 0185 CA01     		.2byte	0x1ca
 999 0187 00000000 		.4byte	.LFB5
 1000 018b 18000000 		.4byte	.LFE5-.LFB5
 1001 018f 01       		.uleb128 0x1
 1002 0190 9C       		.byte	0x9c
 1003 0191 B6010000 		.4byte	0x1b6
 1004 0195 0C       		.uleb128 0xc
 1005 0196 8B030000 		.4byte	.LASF25
 1006 019a 01       		.byte	0x1
 1007 019b CA01     		.2byte	0x1ca
 1008 019d 83000000 		.4byte	0x83
 1009 01a1 3F000000 		.4byte	.LLST2
 1010 01a5 0D       		.uleb128 0xd
 1011 01a6 96000000 		.4byte	.LASF26
 1012 01aa 01       		.byte	0x1
 1013 01ab CC01     		.2byte	0x1cc
 1014 01ad 83000000 		.4byte	0x83
 1015 01b1 60000000 		.4byte	.LLST3
 1016 01b5 00       		.byte	0
 1017 01b6 0E       		.uleb128 0xe
 1018 01b7 CD010000 		.4byte	.LASF28
 1019 01bb 01       		.byte	0x1
 1020 01bc F201     		.2byte	0x1f2
 1021 01be 83000000 		.4byte	0x83
 1022 01c2 00000000 		.4byte	.LFB6
 1023 01c6 2C000000 		.4byte	.LFE6-.LFB6
 1024 01ca 01       		.uleb128 0x1
 1025 01cb 9C       		.byte	0x9c
 1026 01cc F3010000 		.4byte	0x1f3
 1027 01d0 0D       		.uleb128 0xd
 1028 01d1 D6020000 		.4byte	.LASF27
 1029 01d5 01       		.byte	0x1
 1030 01d6 F401     		.2byte	0x1f4
 1031 01d8 83000000 		.4byte	0x83
 1032 01dc 89000000 		.4byte	.LLST4
 1033 01e0 0F       		.uleb128 0xf
 1034 01e1 06000000 		.4byte	.LVL14
 1035 01e5 6D040000 		.4byte	0x46d
 1036 01e9 0F       		.uleb128 0xf
 1037 01ea 0E000000 		.4byte	.LVL15
 1038 01ee 79040000 		.4byte	0x479
 1039 01f2 00       		.byte	0
 1040 01f3 0E       		.uleb128 0xe
 1041 01f4 42040000 		.4byte	.LASF29
 1042 01f8 01       		.byte	0x1
 1043 01f9 2402     		.2byte	0x224
 1044 01fb 83000000 		.4byte	0x83
 1045 01ff 00000000 		.4byte	.LFB7
 1046 0203 4C000000 		.4byte	.LFE7-.LFB7
 1047 0207 01       		.uleb128 0x1
 1048 0208 9C       		.byte	0x9c
 1049 0209 75020000 		.4byte	0x275
 1050 020d 0D       		.uleb128 0xd
 1051 020e D6020000 		.4byte	.LASF27
 1052 0212 01       		.byte	0x1
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm0uBki.s 			page 34


 1053 0213 2602     		.2byte	0x226
 1054 0215 83000000 		.4byte	0x83
 1055 0219 D6000000 		.4byte	.LLST5
 1056 021d 0D       		.uleb128 0xd
 1057 021e 30000000 		.4byte	.LASF30
 1058 0222 01       		.byte	0x1
 1059 0223 2702     		.2byte	0x227
 1060 0225 83000000 		.4byte	0x83
 1061 0229 FF000000 		.4byte	.LLST6
 1062 022d 07       		.uleb128 0x7
 1063 022e 08000000 		.4byte	.LVL20
 1064 0232 4C040000 		.4byte	0x44c
 1065 0236 40020000 		.4byte	0x240
 1066 023a 08       		.uleb128 0x8
 1067 023b 01       		.uleb128 0x1
 1068 023c 50       		.byte	0x50
 1069 023d 01       		.uleb128 0x1
 1070 023e 37       		.byte	0x37
 1071 023f 00       		.byte	0
 1072 0240 0F       		.uleb128 0xf
 1073 0241 0C000000 		.4byte	.LVL21
 1074 0245 6D040000 		.4byte	0x46d
 1075 0249 07       		.uleb128 0x7
 1076 024a 16000000 		.4byte	.LVL22
 1077 024e 85040000 		.4byte	0x485
 1078 0252 5C020000 		.4byte	0x25c
 1079 0256 08       		.uleb128 0x8
 1080 0257 01       		.uleb128 0x1
 1081 0258 50       		.byte	0x50
 1082 0259 01       		.uleb128 0x1
 1083 025a 37       		.byte	0x37
 1084 025b 00       		.byte	0
 1085 025c 0F       		.uleb128 0xf
 1086 025d 1A000000 		.4byte	.LVL23
 1087 0261 79040000 		.4byte	0x479
 1088 0265 09       		.uleb128 0x9
 1089 0266 2E000000 		.4byte	.LVL27
 1090 026a 85040000 		.4byte	0x485
 1091 026e 08       		.uleb128 0x8
 1092 026f 01       		.uleb128 0x1
 1093 0270 50       		.byte	0x50
 1094 0271 01       		.uleb128 0x1
 1095 0272 37       		.byte	0x37
 1096 0273 00       		.byte	0
 1097 0274 00       		.byte	0
 1098 0275 0B       		.uleb128 0xb
 1099 0276 65020000 		.4byte	.LASF31
 1100 027a 01       		.byte	0x1
 1101 027b 6E02     		.2byte	0x26e
 1102 027d 00000000 		.4byte	.LFB8
 1103 0281 28000000 		.4byte	.LFE8-.LFB8
 1104 0285 01       		.uleb128 0x1
 1105 0286 9C       		.byte	0x9c
 1106 0287 9A020000 		.4byte	0x29a
 1107 028b 10       		.uleb128 0x10
 1108 028c F0020000 		.4byte	.LASF32
 1109 0290 01       		.byte	0x1
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm0uBki.s 			page 35


 1110 0291 6E02     		.2byte	0x26e
 1111 0293 83000000 		.4byte	0x83
 1112 0297 01       		.uleb128 0x1
 1113 0298 50       		.byte	0x50
 1114 0299 00       		.byte	0
 1115 029a 0B       		.uleb128 0xb
 1116 029b 0F040000 		.4byte	.LASF33
 1117 029f 01       		.byte	0x1
 1118 02a0 8A02     		.2byte	0x28a
 1119 02a2 00000000 		.4byte	.LFB9
 1120 02a6 14000000 		.4byte	.LFE9-.LFB9
 1121 02aa 01       		.uleb128 0x1
 1122 02ab 9C       		.byte	0x9c
 1123 02ac D1020000 		.4byte	0x2d1
 1124 02b0 0C       		.uleb128 0xc
 1125 02b1 64010000 		.4byte	.LASF34
 1126 02b5 01       		.byte	0x1
 1127 02b6 8A02     		.2byte	0x28a
 1128 02b8 83000000 		.4byte	0x83
 1129 02bc 18010000 		.4byte	.LLST7
 1130 02c0 0D       		.uleb128 0xd
 1131 02c1 C9020000 		.4byte	.LASF35
 1132 02c5 01       		.byte	0x1
 1133 02c6 8C02     		.2byte	0x28c
 1134 02c8 83000000 		.4byte	0x83
 1135 02cc 39010000 		.4byte	.LLST8
 1136 02d0 00       		.byte	0
 1137 02d1 0B       		.uleb128 0xb
 1138 02d2 51020000 		.4byte	.LASF36
 1139 02d6 01       		.byte	0x1
 1140 02d7 A802     		.2byte	0x2a8
 1141 02d9 00000000 		.4byte	.LFB10
 1142 02dd 16000000 		.4byte	.LFE10-.LFB10
 1143 02e1 01       		.uleb128 0x1
 1144 02e2 9C       		.byte	0x9c
 1145 02e3 11030000 		.4byte	0x311
 1146 02e7 0C       		.uleb128 0xc
 1147 02e8 12000000 		.4byte	.LASF37
 1148 02ec 01       		.byte	0x1
 1149 02ed A802     		.2byte	0x2a8
 1150 02ef 11030000 		.4byte	0x311
 1151 02f3 57010000 		.4byte	.LLST9
 1152 02f7 0D       		.uleb128 0xd
 1153 02f8 C4010000 		.4byte	.LASF38
 1154 02fc 01       		.byte	0x1
 1155 02fd AA02     		.2byte	0x2aa
 1156 02ff 83000000 		.4byte	0x83
 1157 0303 83010000 		.4byte	.LLST10
 1158 0307 0F       		.uleb128 0xf
 1159 0308 0C000000 		.4byte	.LVL40
 1160 030c 90040000 		.4byte	0x490
 1161 0310 00       		.byte	0
 1162 0311 11       		.uleb128 0x11
 1163 0312 04       		.byte	0x4
 1164 0313 17030000 		.4byte	0x317
 1165 0317 12       		.uleb128 0x12
 1166 0318 9D000000 		.4byte	0x9d
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm0uBki.s 			page 36


 1167 031c 0B       		.uleb128 0xb
 1168 031d B7020000 		.4byte	.LASF39
 1169 0321 01       		.byte	0x1
 1170 0322 C302     		.2byte	0x2c3
 1171 0324 00000000 		.4byte	.LFB11
 1172 0328 14000000 		.4byte	.LFE11-.LFB11
 1173 032c 01       		.uleb128 0x1
 1174 032d 9C       		.byte	0x9c
 1175 032e 7A030000 		.4byte	0x37a
 1176 0332 0C       		.uleb128 0xc
 1177 0333 07000000 		.4byte	.LASF40
 1178 0337 01       		.byte	0x1
 1179 0338 C302     		.2byte	0x2c3
 1180 033a 83000000 		.4byte	0x83
 1181 033e A2010000 		.4byte	.LLST11
 1182 0342 07       		.uleb128 0x7
 1183 0343 06000000 		.4byte	.LVL45
 1184 0347 90040000 		.4byte	0x490
 1185 034b 57030000 		.4byte	0x357
 1186 034f 08       		.uleb128 0x8
 1187 0350 01       		.uleb128 0x1
 1188 0351 50       		.byte	0x50
 1189 0352 03       		.uleb128 0x3
 1190 0353 F3       		.byte	0xf3
 1191 0354 01       		.uleb128 0x1
 1192 0355 50       		.byte	0x50
 1193 0356 00       		.byte	0
 1194 0357 07       		.uleb128 0x7
 1195 0358 0C000000 		.4byte	.LVL46
 1196 035c 90040000 		.4byte	0x490
 1197 0360 6A030000 		.4byte	0x36a
 1198 0364 08       		.uleb128 0x8
 1199 0365 01       		.uleb128 0x1
 1200 0366 50       		.byte	0x50
 1201 0367 01       		.uleb128 0x1
 1202 0368 3D       		.byte	0x3d
 1203 0369 00       		.byte	0
 1204 036a 09       		.uleb128 0x9
 1205 036b 12000000 		.4byte	.LVL47
 1206 036f 90040000 		.4byte	0x490
 1207 0373 08       		.uleb128 0x8
 1208 0374 01       		.uleb128 0x1
 1209 0375 50       		.byte	0x50
 1210 0376 01       		.uleb128 0x1
 1211 0377 3A       		.byte	0x3a
 1212 0378 00       		.byte	0
 1213 0379 00       		.byte	0
 1214 037a 0A       		.uleb128 0xa
 1215 037b AD030000 		.4byte	.LASF41
 1216 037f 01       		.byte	0x1
 1217 0380 D502     		.2byte	0x2d5
 1218 0382 00000000 		.4byte	.LFB12
 1219 0386 14000000 		.4byte	.LFE12-.LFB12
 1220 038a 01       		.uleb128 0x1
 1221 038b 9C       		.byte	0x9c
 1222 038c 0A       		.uleb128 0xa
 1223 038d 65000000 		.4byte	.LASF42
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm0uBki.s 			page 37


 1224 0391 01       		.byte	0x1
 1225 0392 E402     		.2byte	0x2e4
 1226 0394 00000000 		.4byte	.LFB13
 1227 0398 14000000 		.4byte	.LFE13-.LFB13
 1228 039c 01       		.uleb128 0x1
 1229 039d 9C       		.byte	0x9c
 1230 039e 0B       		.uleb128 0xb
 1231 039f AB010000 		.4byte	.LASF43
 1232 03a3 01       		.byte	0x1
 1233 03a4 F802     		.2byte	0x2f8
 1234 03a6 00000000 		.4byte	.LFB14
 1235 03aa 28000000 		.4byte	.LFE14-.LFB14
 1236 03ae 01       		.uleb128 0x1
 1237 03af 9C       		.byte	0x9c
 1238 03b0 C3030000 		.4byte	0x3c3
 1239 03b4 10       		.uleb128 0x10
 1240 03b5 F0020000 		.4byte	.LASF32
 1241 03b9 01       		.byte	0x1
 1242 03ba F802     		.2byte	0x2f8
 1243 03bc 83000000 		.4byte	0x83
 1244 03c0 01       		.uleb128 0x1
 1245 03c1 50       		.byte	0x50
 1246 03c2 00       		.byte	0
 1247 03c3 0B       		.uleb128 0xb
 1248 03c4 0C010000 		.4byte	.LASF44
 1249 03c8 01       		.byte	0x1
 1250 03c9 1A03     		.2byte	0x31a
 1251 03cb 00000000 		.4byte	.LFB15
 1252 03cf 58000000 		.4byte	.LFE15-.LFB15
 1253 03d3 01       		.uleb128 0x1
 1254 03d4 9C       		.byte	0x9c
 1255 03d5 0A040000 		.4byte	0x40a
 1256 03d9 0C       		.uleb128 0xc
 1257 03da A2030000 		.4byte	.LASF45
 1258 03de 01       		.byte	0x1
 1259 03df 1A03     		.2byte	0x31a
 1260 03e1 83000000 		.4byte	0x83
 1261 03e5 C3010000 		.4byte	.LLST12
 1262 03e9 0D       		.uleb128 0xd
 1263 03ea 47020000 		.4byte	.LASF46
 1264 03ee 01       		.byte	0x1
 1265 03ef 1C03     		.2byte	0x31c
 1266 03f1 83000000 		.4byte	0x83
 1267 03f5 FC010000 		.4byte	.LLST13
 1268 03f9 0D       		.uleb128 0xd
 1269 03fa A6000000 		.4byte	.LASF47
 1270 03fe 01       		.byte	0x1
 1271 03ff 1D03     		.2byte	0x31d
 1272 0401 83000000 		.4byte	0x83
 1273 0405 0F020000 		.4byte	.LLST14
 1274 0409 00       		.byte	0
 1275 040a 13       		.uleb128 0x13
 1276 040b 3A000000 		.4byte	.LASF48
 1277 040f 03       		.byte	0x3
 1278 0410 5B       		.byte	0x5b
 1279 0411 77000000 		.4byte	0x77
 1280 0415 13       		.uleb128 0x13
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm0uBki.s 			page 38


 1281 0416 B0000000 		.4byte	.LASF49
 1282 041a 04       		.byte	0x4
 1283 041b 1F       		.byte	0x1f
 1284 041c C1000000 		.4byte	0xc1
 1285 0420 13       		.uleb128 0x13
 1286 0421 DD020000 		.4byte	.LASF50
 1287 0425 04       		.byte	0x4
 1288 0426 20       		.byte	0x20
 1289 0427 C1000000 		.4byte	0xc1
 1290 042b 13       		.uleb128 0x13
 1291 042c 7D010000 		.4byte	.LASF51
 1292 0430 04       		.byte	0x4
 1293 0431 2A       		.byte	0x2a
 1294 0432 B0000000 		.4byte	0xb0
 1295 0436 13       		.uleb128 0x13
 1296 0437 54040000 		.4byte	.LASF52
 1297 043b 04       		.byte	0x4
 1298 043c 2F       		.byte	0x2f
 1299 043d C1000000 		.4byte	0xc1
 1300 0441 13       		.uleb128 0x13
 1301 0442 DF010000 		.4byte	.LASF53
 1302 0446 04       		.byte	0x4
 1303 0447 30       		.byte	0x30
 1304 0448 C1000000 		.4byte	0xc1
 1305 044c 14       		.uleb128 0x14
 1306 044d 83000000 		.4byte	.LASF54
 1307 0451 83000000 		.4byte	.LASF54
 1308 0455 05       		.byte	0x5
 1309 0456 D8       		.byte	0xd8
 1310 0457 14       		.uleb128 0x14
 1311 0458 30020000 		.4byte	.LASF55
 1312 045c 30020000 		.4byte	.LASF55
 1313 0460 05       		.byte	0x5
 1314 0461 D3       		.byte	0xd3
 1315 0462 14       		.uleb128 0x14
 1316 0463 D9000000 		.4byte	.LASF56
 1317 0467 D9000000 		.4byte	.LASF56
 1318 046b 05       		.byte	0x5
 1319 046c D0       		.byte	0xd0
 1320 046d 15       		.uleb128 0x15
 1321 046e 47010000 		.4byte	.LASF57
 1322 0472 47010000 		.4byte	.LASF57
 1323 0476 06       		.byte	0x6
 1324 0477 3E03     		.2byte	0x33e
 1325 0479 15       		.uleb128 0x15
 1326 047a 67040000 		.4byte	.LASF58
 1327 047e 67040000 		.4byte	.LASF58
 1328 0482 06       		.byte	0x6
 1329 0483 3D03     		.2byte	0x33d
 1330 0485 14       		.uleb128 0x14
 1331 0486 AB020000 		.4byte	.LASF59
 1332 048a AB020000 		.4byte	.LASF59
 1333 048e 05       		.byte	0x5
 1334 048f D6       		.byte	0xd6
 1335 0490 15       		.uleb128 0x15
 1336 0491 29040000 		.4byte	.LASF60
 1337 0495 29040000 		.4byte	.LASF60
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm0uBki.s 			page 39


 1338 0499 06       		.byte	0x6
 1339 049a 4403     		.2byte	0x344
 1340 049c 00       		.byte	0
 1341              		.section	.debug_abbrev,"",%progbits
 1342              	.Ldebug_abbrev0:
 1343 0000 01       		.uleb128 0x1
 1344 0001 11       		.uleb128 0x11
 1345 0002 01       		.byte	0x1
 1346 0003 25       		.uleb128 0x25
 1347 0004 0E       		.uleb128 0xe
 1348 0005 13       		.uleb128 0x13
 1349 0006 0B       		.uleb128 0xb
 1350 0007 03       		.uleb128 0x3
 1351 0008 0E       		.uleb128 0xe
 1352 0009 1B       		.uleb128 0x1b
 1353 000a 0E       		.uleb128 0xe
 1354 000b 55       		.uleb128 0x55
 1355 000c 17       		.uleb128 0x17
 1356 000d 11       		.uleb128 0x11
 1357 000e 01       		.uleb128 0x1
 1358 000f 10       		.uleb128 0x10
 1359 0010 17       		.uleb128 0x17
 1360 0011 00       		.byte	0
 1361 0012 00       		.byte	0
 1362 0013 02       		.uleb128 0x2
 1363 0014 24       		.uleb128 0x24
 1364 0015 00       		.byte	0
 1365 0016 0B       		.uleb128 0xb
 1366 0017 0B       		.uleb128 0xb
 1367 0018 3E       		.uleb128 0x3e
 1368 0019 0B       		.uleb128 0xb
 1369 001a 03       		.uleb128 0x3
 1370 001b 0E       		.uleb128 0xe
 1371 001c 00       		.byte	0
 1372 001d 00       		.byte	0
 1373 001e 03       		.uleb128 0x3
 1374 001f 24       		.uleb128 0x24
 1375 0020 00       		.byte	0
 1376 0021 0B       		.uleb128 0xb
 1377 0022 0B       		.uleb128 0xb
 1378 0023 3E       		.uleb128 0x3e
 1379 0024 0B       		.uleb128 0xb
 1380 0025 03       		.uleb128 0x3
 1381 0026 08       		.uleb128 0x8
 1382 0027 00       		.byte	0
 1383 0028 00       		.byte	0
 1384 0029 04       		.uleb128 0x4
 1385 002a 16       		.uleb128 0x16
 1386 002b 00       		.byte	0
 1387 002c 03       		.uleb128 0x3
 1388 002d 0E       		.uleb128 0xe
 1389 002e 3A       		.uleb128 0x3a
 1390 002f 0B       		.uleb128 0xb
 1391 0030 3B       		.uleb128 0x3b
 1392 0031 05       		.uleb128 0x5
 1393 0032 49       		.uleb128 0x49
 1394 0033 13       		.uleb128 0x13
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm0uBki.s 			page 40


 1395 0034 00       		.byte	0
 1396 0035 00       		.byte	0
 1397 0036 05       		.uleb128 0x5
 1398 0037 35       		.uleb128 0x35
 1399 0038 00       		.byte	0
 1400 0039 49       		.uleb128 0x49
 1401 003a 13       		.uleb128 0x13
 1402 003b 00       		.byte	0
 1403 003c 00       		.byte	0
 1404 003d 06       		.uleb128 0x6
 1405 003e 2E       		.uleb128 0x2e
 1406 003f 01       		.byte	0x1
 1407 0040 3F       		.uleb128 0x3f
 1408 0041 19       		.uleb128 0x19
 1409 0042 03       		.uleb128 0x3
 1410 0043 0E       		.uleb128 0xe
 1411 0044 3A       		.uleb128 0x3a
 1412 0045 0B       		.uleb128 0xb
 1413 0046 3B       		.uleb128 0x3b
 1414 0047 0B       		.uleb128 0xb
 1415 0048 27       		.uleb128 0x27
 1416 0049 19       		.uleb128 0x19
 1417 004a 11       		.uleb128 0x11
 1418 004b 01       		.uleb128 0x1
 1419 004c 12       		.uleb128 0x12
 1420 004d 06       		.uleb128 0x6
 1421 004e 40       		.uleb128 0x40
 1422 004f 18       		.uleb128 0x18
 1423 0050 9742     		.uleb128 0x2117
 1424 0052 19       		.uleb128 0x19
 1425 0053 01       		.uleb128 0x1
 1426 0054 13       		.uleb128 0x13
 1427 0055 00       		.byte	0
 1428 0056 00       		.byte	0
 1429 0057 07       		.uleb128 0x7
 1430 0058 898201   		.uleb128 0x4109
 1431 005b 01       		.byte	0x1
 1432 005c 11       		.uleb128 0x11
 1433 005d 01       		.uleb128 0x1
 1434 005e 31       		.uleb128 0x31
 1435 005f 13       		.uleb128 0x13
 1436 0060 01       		.uleb128 0x1
 1437 0061 13       		.uleb128 0x13
 1438 0062 00       		.byte	0
 1439 0063 00       		.byte	0
 1440 0064 08       		.uleb128 0x8
 1441 0065 8A8201   		.uleb128 0x410a
 1442 0068 00       		.byte	0
 1443 0069 02       		.uleb128 0x2
 1444 006a 18       		.uleb128 0x18
 1445 006b 9142     		.uleb128 0x2111
 1446 006d 18       		.uleb128 0x18
 1447 006e 00       		.byte	0
 1448 006f 00       		.byte	0
 1449 0070 09       		.uleb128 0x9
 1450 0071 898201   		.uleb128 0x4109
 1451 0074 01       		.byte	0x1
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm0uBki.s 			page 41


 1452 0075 11       		.uleb128 0x11
 1453 0076 01       		.uleb128 0x1
 1454 0077 31       		.uleb128 0x31
 1455 0078 13       		.uleb128 0x13
 1456 0079 00       		.byte	0
 1457 007a 00       		.byte	0
 1458 007b 0A       		.uleb128 0xa
 1459 007c 2E       		.uleb128 0x2e
 1460 007d 00       		.byte	0
 1461 007e 3F       		.uleb128 0x3f
 1462 007f 19       		.uleb128 0x19
 1463 0080 03       		.uleb128 0x3
 1464 0081 0E       		.uleb128 0xe
 1465 0082 3A       		.uleb128 0x3a
 1466 0083 0B       		.uleb128 0xb
 1467 0084 3B       		.uleb128 0x3b
 1468 0085 05       		.uleb128 0x5
 1469 0086 27       		.uleb128 0x27
 1470 0087 19       		.uleb128 0x19
 1471 0088 11       		.uleb128 0x11
 1472 0089 01       		.uleb128 0x1
 1473 008a 12       		.uleb128 0x12
 1474 008b 06       		.uleb128 0x6
 1475 008c 40       		.uleb128 0x40
 1476 008d 18       		.uleb128 0x18
 1477 008e 9742     		.uleb128 0x2117
 1478 0090 19       		.uleb128 0x19
 1479 0091 00       		.byte	0
 1480 0092 00       		.byte	0
 1481 0093 0B       		.uleb128 0xb
 1482 0094 2E       		.uleb128 0x2e
 1483 0095 01       		.byte	0x1
 1484 0096 3F       		.uleb128 0x3f
 1485 0097 19       		.uleb128 0x19
 1486 0098 03       		.uleb128 0x3
 1487 0099 0E       		.uleb128 0xe
 1488 009a 3A       		.uleb128 0x3a
 1489 009b 0B       		.uleb128 0xb
 1490 009c 3B       		.uleb128 0x3b
 1491 009d 05       		.uleb128 0x5
 1492 009e 27       		.uleb128 0x27
 1493 009f 19       		.uleb128 0x19
 1494 00a0 11       		.uleb128 0x11
 1495 00a1 01       		.uleb128 0x1
 1496 00a2 12       		.uleb128 0x12
 1497 00a3 06       		.uleb128 0x6
 1498 00a4 40       		.uleb128 0x40
 1499 00a5 18       		.uleb128 0x18
 1500 00a6 9742     		.uleb128 0x2117
 1501 00a8 19       		.uleb128 0x19
 1502 00a9 01       		.uleb128 0x1
 1503 00aa 13       		.uleb128 0x13
 1504 00ab 00       		.byte	0
 1505 00ac 00       		.byte	0
 1506 00ad 0C       		.uleb128 0xc
 1507 00ae 05       		.uleb128 0x5
 1508 00af 00       		.byte	0
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm0uBki.s 			page 42


 1509 00b0 03       		.uleb128 0x3
 1510 00b1 0E       		.uleb128 0xe
 1511 00b2 3A       		.uleb128 0x3a
 1512 00b3 0B       		.uleb128 0xb
 1513 00b4 3B       		.uleb128 0x3b
 1514 00b5 05       		.uleb128 0x5
 1515 00b6 49       		.uleb128 0x49
 1516 00b7 13       		.uleb128 0x13
 1517 00b8 02       		.uleb128 0x2
 1518 00b9 17       		.uleb128 0x17
 1519 00ba 00       		.byte	0
 1520 00bb 00       		.byte	0
 1521 00bc 0D       		.uleb128 0xd
 1522 00bd 34       		.uleb128 0x34
 1523 00be 00       		.byte	0
 1524 00bf 03       		.uleb128 0x3
 1525 00c0 0E       		.uleb128 0xe
 1526 00c1 3A       		.uleb128 0x3a
 1527 00c2 0B       		.uleb128 0xb
 1528 00c3 3B       		.uleb128 0x3b
 1529 00c4 05       		.uleb128 0x5
 1530 00c5 49       		.uleb128 0x49
 1531 00c6 13       		.uleb128 0x13
 1532 00c7 02       		.uleb128 0x2
 1533 00c8 17       		.uleb128 0x17
 1534 00c9 00       		.byte	0
 1535 00ca 00       		.byte	0
 1536 00cb 0E       		.uleb128 0xe
 1537 00cc 2E       		.uleb128 0x2e
 1538 00cd 01       		.byte	0x1
 1539 00ce 3F       		.uleb128 0x3f
 1540 00cf 19       		.uleb128 0x19
 1541 00d0 03       		.uleb128 0x3
 1542 00d1 0E       		.uleb128 0xe
 1543 00d2 3A       		.uleb128 0x3a
 1544 00d3 0B       		.uleb128 0xb
 1545 00d4 3B       		.uleb128 0x3b
 1546 00d5 05       		.uleb128 0x5
 1547 00d6 27       		.uleb128 0x27
 1548 00d7 19       		.uleb128 0x19
 1549 00d8 49       		.uleb128 0x49
 1550 00d9 13       		.uleb128 0x13
 1551 00da 11       		.uleb128 0x11
 1552 00db 01       		.uleb128 0x1
 1553 00dc 12       		.uleb128 0x12
 1554 00dd 06       		.uleb128 0x6
 1555 00de 40       		.uleb128 0x40
 1556 00df 18       		.uleb128 0x18
 1557 00e0 9742     		.uleb128 0x2117
 1558 00e2 19       		.uleb128 0x19
 1559 00e3 01       		.uleb128 0x1
 1560 00e4 13       		.uleb128 0x13
 1561 00e5 00       		.byte	0
 1562 00e6 00       		.byte	0
 1563 00e7 0F       		.uleb128 0xf
 1564 00e8 898201   		.uleb128 0x4109
 1565 00eb 00       		.byte	0
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm0uBki.s 			page 43


 1566 00ec 11       		.uleb128 0x11
 1567 00ed 01       		.uleb128 0x1
 1568 00ee 31       		.uleb128 0x31
 1569 00ef 13       		.uleb128 0x13
 1570 00f0 00       		.byte	0
 1571 00f1 00       		.byte	0
 1572 00f2 10       		.uleb128 0x10
 1573 00f3 05       		.uleb128 0x5
 1574 00f4 00       		.byte	0
 1575 00f5 03       		.uleb128 0x3
 1576 00f6 0E       		.uleb128 0xe
 1577 00f7 3A       		.uleb128 0x3a
 1578 00f8 0B       		.uleb128 0xb
 1579 00f9 3B       		.uleb128 0x3b
 1580 00fa 05       		.uleb128 0x5
 1581 00fb 49       		.uleb128 0x49
 1582 00fc 13       		.uleb128 0x13
 1583 00fd 02       		.uleb128 0x2
 1584 00fe 18       		.uleb128 0x18
 1585 00ff 00       		.byte	0
 1586 0100 00       		.byte	0
 1587 0101 11       		.uleb128 0x11
 1588 0102 0F       		.uleb128 0xf
 1589 0103 00       		.byte	0
 1590 0104 0B       		.uleb128 0xb
 1591 0105 0B       		.uleb128 0xb
 1592 0106 49       		.uleb128 0x49
 1593 0107 13       		.uleb128 0x13
 1594 0108 00       		.byte	0
 1595 0109 00       		.byte	0
 1596 010a 12       		.uleb128 0x12
 1597 010b 26       		.uleb128 0x26
 1598 010c 00       		.byte	0
 1599 010d 49       		.uleb128 0x49
 1600 010e 13       		.uleb128 0x13
 1601 010f 00       		.byte	0
 1602 0110 00       		.byte	0
 1603 0111 13       		.uleb128 0x13
 1604 0112 34       		.uleb128 0x34
 1605 0113 00       		.byte	0
 1606 0114 03       		.uleb128 0x3
 1607 0115 0E       		.uleb128 0xe
 1608 0116 3A       		.uleb128 0x3a
 1609 0117 0B       		.uleb128 0xb
 1610 0118 3B       		.uleb128 0x3b
 1611 0119 0B       		.uleb128 0xb
 1612 011a 49       		.uleb128 0x49
 1613 011b 13       		.uleb128 0x13
 1614 011c 3F       		.uleb128 0x3f
 1615 011d 19       		.uleb128 0x19
 1616 011e 3C       		.uleb128 0x3c
 1617 011f 19       		.uleb128 0x19
 1618 0120 00       		.byte	0
 1619 0121 00       		.byte	0
 1620 0122 14       		.uleb128 0x14
 1621 0123 2E       		.uleb128 0x2e
 1622 0124 00       		.byte	0
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm0uBki.s 			page 44


 1623 0125 3F       		.uleb128 0x3f
 1624 0126 19       		.uleb128 0x19
 1625 0127 3C       		.uleb128 0x3c
 1626 0128 19       		.uleb128 0x19
 1627 0129 6E       		.uleb128 0x6e
 1628 012a 0E       		.uleb128 0xe
 1629 012b 03       		.uleb128 0x3
 1630 012c 0E       		.uleb128 0xe
 1631 012d 3A       		.uleb128 0x3a
 1632 012e 0B       		.uleb128 0xb
 1633 012f 3B       		.uleb128 0x3b
 1634 0130 0B       		.uleb128 0xb
 1635 0131 00       		.byte	0
 1636 0132 00       		.byte	0
 1637 0133 15       		.uleb128 0x15
 1638 0134 2E       		.uleb128 0x2e
 1639 0135 00       		.byte	0
 1640 0136 3F       		.uleb128 0x3f
 1641 0137 19       		.uleb128 0x19
 1642 0138 3C       		.uleb128 0x3c
 1643 0139 19       		.uleb128 0x19
 1644 013a 6E       		.uleb128 0x6e
 1645 013b 0E       		.uleb128 0xe
 1646 013c 03       		.uleb128 0x3
 1647 013d 0E       		.uleb128 0xe
 1648 013e 3A       		.uleb128 0x3a
 1649 013f 0B       		.uleb128 0xb
 1650 0140 3B       		.uleb128 0x3b
 1651 0141 05       		.uleb128 0x5
 1652 0142 00       		.byte	0
 1653 0143 00       		.byte	0
 1654 0144 00       		.byte	0
 1655              		.section	.debug_loc,"",%progbits
 1656              	.Ldebug_loc0:
 1657              	.LLST0:
 1658 0000 00000000 		.4byte	.LVL3
 1659 0004 0A000000 		.4byte	.LVL6
 1660 0008 0100     		.2byte	0x1
 1661 000a 50       		.byte	0x50
 1662 000b 0A000000 		.4byte	.LVL6
 1663 000f 14000000 		.4byte	.LFE4
 1664 0013 0400     		.2byte	0x4
 1665 0015 F3       		.byte	0xf3
 1666 0016 01       		.uleb128 0x1
 1667 0017 50       		.byte	0x50
 1668 0018 9F       		.byte	0x9f
 1669 0019 00000000 		.4byte	0
 1670 001d 00000000 		.4byte	0
 1671              	.LLST1:
 1672 0021 04000000 		.4byte	.LVL4
 1673 0025 0C000000 		.4byte	.LVL7
 1674 0029 0100     		.2byte	0x1
 1675 002b 53       		.byte	0x53
 1676 002c 0C000000 		.4byte	.LVL7
 1677 0030 14000000 		.4byte	.LFE4
 1678 0034 0100     		.2byte	0x1
 1679 0036 50       		.byte	0x50
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm0uBki.s 			page 45


 1680 0037 00000000 		.4byte	0
 1681 003b 00000000 		.4byte	0
 1682              	.LLST2:
 1683 003f 00000000 		.4byte	.LVL8
 1684 0043 0A000000 		.4byte	.LVL11
 1685 0047 0100     		.2byte	0x1
 1686 0049 50       		.byte	0x50
 1687 004a 0A000000 		.4byte	.LVL11
 1688 004e 18000000 		.4byte	.LFE5
 1689 0052 0400     		.2byte	0x4
 1690 0054 F3       		.byte	0xf3
 1691 0055 01       		.uleb128 0x1
 1692 0056 50       		.byte	0x50
 1693 0057 9F       		.byte	0x9f
 1694 0058 00000000 		.4byte	0
 1695 005c 00000000 		.4byte	0
 1696              	.LLST3:
 1697 0060 04000000 		.4byte	.LVL9
 1698 0064 08000000 		.4byte	.LVL10
 1699 0068 0100     		.2byte	0x1
 1700 006a 51       		.byte	0x51
 1701 006b 08000000 		.4byte	.LVL10
 1702 006f 0C000000 		.4byte	.LVL12
 1703 0073 0100     		.2byte	0x1
 1704 0075 53       		.byte	0x53
 1705 0076 0C000000 		.4byte	.LVL12
 1706 007a 18000000 		.4byte	.LFE5
 1707 007e 0100     		.2byte	0x1
 1708 0080 50       		.byte	0x50
 1709 0081 00000000 		.4byte	0
 1710 0085 00000000 		.4byte	0
 1711              	.LLST4:
 1712 0089 02000000 		.4byte	.LVL13
 1713 008d 0E000000 		.4byte	.LVL15
 1714 0091 0200     		.2byte	0x2
 1715 0093 30       		.byte	0x30
 1716 0094 9F       		.byte	0x9f
 1717 0095 0E000000 		.4byte	.LVL15
 1718 0099 10000000 		.4byte	.LVL16
 1719 009d 0100     		.2byte	0x1
 1720 009f 50       		.byte	0x50
 1721 00a0 10000000 		.4byte	.LVL16
 1722 00a4 12000000 		.4byte	.LVL17
 1723 00a8 0200     		.2byte	0x2
 1724 00aa 30       		.byte	0x30
 1725 00ab 9F       		.byte	0x9f
 1726 00ac 12000000 		.4byte	.LVL17
 1727 00b0 1E000000 		.4byte	.LVL18
 1728 00b4 0100     		.2byte	0x1
 1729 00b6 50       		.byte	0x50
 1730 00b7 1E000000 		.4byte	.LVL18
 1731 00bb 26000000 		.4byte	.LVL19
 1732 00bf 0200     		.2byte	0x2
 1733 00c1 30       		.byte	0x30
 1734 00c2 9F       		.byte	0x9f
 1735 00c3 26000000 		.4byte	.LVL19
 1736 00c7 2C000000 		.4byte	.LFE6
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm0uBki.s 			page 46


 1737 00cb 0100     		.2byte	0x1
 1738 00cd 50       		.byte	0x50
 1739 00ce 00000000 		.4byte	0
 1740 00d2 00000000 		.4byte	0
 1741              	.LLST5:
 1742 00d6 1C000000 		.4byte	.LVL24
 1743 00da 1E000000 		.4byte	.LVL25
 1744 00de 0100     		.2byte	0x1
 1745 00e0 50       		.byte	0x50
 1746 00e1 22000000 		.4byte	.LVL26
 1747 00e5 42000000 		.4byte	.LVL30
 1748 00e9 0100     		.2byte	0x1
 1749 00eb 54       		.byte	0x54
 1750 00ec 42000000 		.4byte	.LVL30
 1751 00f0 4C000000 		.4byte	.LFE7
 1752 00f4 0100     		.2byte	0x1
 1753 00f6 50       		.byte	0x50
 1754 00f7 00000000 		.4byte	0
 1755 00fb 00000000 		.4byte	0
 1756              	.LLST6:
 1757 00ff 32000000 		.4byte	.LVL28
 1758 0103 3A000000 		.4byte	.LVL29
 1759 0107 0700     		.2byte	0x7
 1760 0109 70       		.byte	0x70
 1761 010a 00       		.sleb128 0
 1762 010b 0A       		.byte	0xa
 1763 010c 6003     		.2byte	0x360
 1764 010e 1A       		.byte	0x1a
 1765 010f 9F       		.byte	0x9f
 1766 0110 00000000 		.4byte	0
 1767 0114 00000000 		.4byte	0
 1768              	.LLST7:
 1769 0118 00000000 		.4byte	.LVL32
 1770 011c 0A000000 		.4byte	.LVL35
 1771 0120 0100     		.2byte	0x1
 1772 0122 50       		.byte	0x50
 1773 0123 0A000000 		.4byte	.LVL35
 1774 0127 14000000 		.4byte	.LFE9
 1775 012b 0400     		.2byte	0x4
 1776 012d F3       		.byte	0xf3
 1777 012e 01       		.uleb128 0x1
 1778 012f 50       		.byte	0x50
 1779 0130 9F       		.byte	0x9f
 1780 0131 00000000 		.4byte	0
 1781 0135 00000000 		.4byte	0
 1782              	.LLST8:
 1783 0139 04000000 		.4byte	.LVL33
 1784 013d 0C000000 		.4byte	.LVL36
 1785 0141 0100     		.2byte	0x1
 1786 0143 53       		.byte	0x53
 1787 0144 0C000000 		.4byte	.LVL36
 1788 0148 14000000 		.4byte	.LFE9
 1789 014c 0100     		.2byte	0x1
 1790 014e 50       		.byte	0x50
 1791 014f 00000000 		.4byte	0
 1792 0153 00000000 		.4byte	0
 1793              	.LLST9:
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm0uBki.s 			page 47


 1794 0157 00000000 		.4byte	.LVL37
 1795 015b 08000000 		.4byte	.LVL39
 1796 015f 0100     		.2byte	0x1
 1797 0161 50       		.byte	0x50
 1798 0162 08000000 		.4byte	.LVL39
 1799 0166 14000000 		.4byte	.LVL43
 1800 016a 0100     		.2byte	0x1
 1801 016c 55       		.byte	0x55
 1802 016d 14000000 		.4byte	.LVL43
 1803 0171 16000000 		.4byte	.LFE10
 1804 0175 0400     		.2byte	0x4
 1805 0177 F3       		.byte	0xf3
 1806 0178 01       		.uleb128 0x1
 1807 0179 50       		.byte	0x50
 1808 017a 9F       		.byte	0x9f
 1809 017b 00000000 		.4byte	0
 1810 017f 00000000 		.4byte	0
 1811              	.LLST10:
 1812 0183 04000000 		.4byte	.LVL38
 1813 0187 08000000 		.4byte	.LVL39
 1814 018b 0200     		.2byte	0x2
 1815 018d 30       		.byte	0x30
 1816 018e 9F       		.byte	0x9f
 1817 018f 08000000 		.4byte	.LVL39
 1818 0193 14000000 		.4byte	.LVL42
 1819 0197 0100     		.2byte	0x1
 1820 0199 54       		.byte	0x54
 1821 019a 00000000 		.4byte	0
 1822 019e 00000000 		.4byte	0
 1823              	.LLST11:
 1824 01a2 00000000 		.4byte	.LVL44
 1825 01a6 05000000 		.4byte	.LVL45-1
 1826 01aa 0100     		.2byte	0x1
 1827 01ac 50       		.byte	0x50
 1828 01ad 05000000 		.4byte	.LVL45-1
 1829 01b1 14000000 		.4byte	.LFE11
 1830 01b5 0400     		.2byte	0x4
 1831 01b7 F3       		.byte	0xf3
 1832 01b8 01       		.uleb128 0x1
 1833 01b9 50       		.byte	0x50
 1834 01ba 9F       		.byte	0x9f
 1835 01bb 00000000 		.4byte	0
 1836 01bf 00000000 		.4byte	0
 1837              	.LLST12:
 1838 01c3 00000000 		.4byte	.LVL49
 1839 01c7 1C000000 		.4byte	.LVL52
 1840 01cb 0100     		.2byte	0x1
 1841 01cd 50       		.byte	0x50
 1842 01ce 1C000000 		.4byte	.LVL52
 1843 01d2 20000000 		.4byte	.LVL53
 1844 01d6 0100     		.2byte	0x1
 1845 01d8 53       		.byte	0x53
 1846 01d9 20000000 		.4byte	.LVL53
 1847 01dd 28000000 		.4byte	.LVL54
 1848 01e1 0300     		.2byte	0x3
 1849 01e3 73       		.byte	0x73
 1850 01e4 01       		.sleb128 1
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm0uBki.s 			page 48


 1851 01e5 9F       		.byte	0x9f
 1852 01e6 28000000 		.4byte	.LVL54
 1853 01ea 58000000 		.4byte	.LFE15
 1854 01ee 0400     		.2byte	0x4
 1855 01f0 F3       		.byte	0xf3
 1856 01f1 01       		.uleb128 0x1
 1857 01f2 50       		.byte	0x50
 1858 01f3 9F       		.byte	0x9f
 1859 01f4 00000000 		.4byte	0
 1860 01f8 00000000 		.4byte	0
 1861              	.LLST13:
 1862 01fc 18000000 		.4byte	.LVL51
 1863 0200 40000000 		.4byte	.LVL56
 1864 0204 0100     		.2byte	0x1
 1865 0206 56       		.byte	0x56
 1866 0207 00000000 		.4byte	0
 1867 020b 00000000 		.4byte	0
 1868              	.LLST14:
 1869 020f 08000000 		.4byte	.LVL50
 1870 0213 40000000 		.4byte	.LVL55
 1871 0217 0100     		.2byte	0x1
 1872 0219 55       		.byte	0x55
 1873 021a 40000000 		.4byte	.LVL55
 1874 021e 58000000 		.4byte	.LFE15
 1875 0222 0200     		.2byte	0x2
 1876 0224 73       		.byte	0x73
 1877 0225 00       		.sleb128 0
 1878 0226 00000000 		.4byte	0
 1879 022a 00000000 		.4byte	0
 1880              		.section	.debug_aranges,"",%progbits
 1881 0000 8C000000 		.4byte	0x8c
 1882 0004 0200     		.2byte	0x2
 1883 0006 00000000 		.4byte	.Ldebug_info0
 1884 000a 04       		.byte	0x4
 1885 000b 00       		.byte	0
 1886 000c 0000     		.2byte	0
 1887 000e 0000     		.2byte	0
 1888 0010 00000000 		.4byte	.LFB1
 1889 0014 EC000000 		.4byte	.LFE1-.LFB1
 1890 0018 00000000 		.4byte	.LFB2
 1891 001c 24000000 		.4byte	.LFE2-.LFB2
 1892 0020 00000000 		.4byte	.LFB3
 1893 0024 28000000 		.4byte	.LFE3-.LFB3
 1894 0028 00000000 		.4byte	.LFB4
 1895 002c 14000000 		.4byte	.LFE4-.LFB4
 1896 0030 00000000 		.4byte	.LFB5
 1897 0034 18000000 		.4byte	.LFE5-.LFB5
 1898 0038 00000000 		.4byte	.LFB6
 1899 003c 2C000000 		.4byte	.LFE6-.LFB6
 1900 0040 00000000 		.4byte	.LFB7
 1901 0044 4C000000 		.4byte	.LFE7-.LFB7
 1902 0048 00000000 		.4byte	.LFB8
 1903 004c 28000000 		.4byte	.LFE8-.LFB8
 1904 0050 00000000 		.4byte	.LFB9
 1905 0054 14000000 		.4byte	.LFE9-.LFB9
 1906 0058 00000000 		.4byte	.LFB10
 1907 005c 16000000 		.4byte	.LFE10-.LFB10
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm0uBki.s 			page 49


 1908 0060 00000000 		.4byte	.LFB11
 1909 0064 14000000 		.4byte	.LFE11-.LFB11
 1910 0068 00000000 		.4byte	.LFB12
 1911 006c 14000000 		.4byte	.LFE12-.LFB12
 1912 0070 00000000 		.4byte	.LFB13
 1913 0074 14000000 		.4byte	.LFE13-.LFB13
 1914 0078 00000000 		.4byte	.LFB14
 1915 007c 28000000 		.4byte	.LFE14-.LFB14
 1916 0080 00000000 		.4byte	.LFB15
 1917 0084 58000000 		.4byte	.LFE15-.LFB15
 1918 0088 00000000 		.4byte	0
 1919 008c 00000000 		.4byte	0
 1920              		.section	.debug_ranges,"",%progbits
 1921              	.Ldebug_ranges0:
 1922 0000 00000000 		.4byte	.LFB1
 1923 0004 EC000000 		.4byte	.LFE1
 1924 0008 00000000 		.4byte	.LFB2
 1925 000c 24000000 		.4byte	.LFE2
 1926 0010 00000000 		.4byte	.LFB3
 1927 0014 28000000 		.4byte	.LFE3
 1928 0018 00000000 		.4byte	.LFB4
 1929 001c 14000000 		.4byte	.LFE4
 1930 0020 00000000 		.4byte	.LFB5
 1931 0024 18000000 		.4byte	.LFE5
 1932 0028 00000000 		.4byte	.LFB6
 1933 002c 2C000000 		.4byte	.LFE6
 1934 0030 00000000 		.4byte	.LFB7
 1935 0034 4C000000 		.4byte	.LFE7
 1936 0038 00000000 		.4byte	.LFB8
 1937 003c 28000000 		.4byte	.LFE8
 1938 0040 00000000 		.4byte	.LFB9
 1939 0044 14000000 		.4byte	.LFE9
 1940 0048 00000000 		.4byte	.LFB10
 1941 004c 16000000 		.4byte	.LFE10
 1942 0050 00000000 		.4byte	.LFB11
 1943 0054 14000000 		.4byte	.LFE11
 1944 0058 00000000 		.4byte	.LFB12
 1945 005c 14000000 		.4byte	.LFE12
 1946 0060 00000000 		.4byte	.LFB13
 1947 0064 14000000 		.4byte	.LFE13
 1948 0068 00000000 		.4byte	.LFB14
 1949 006c 28000000 		.4byte	.LFE14
 1950 0070 00000000 		.4byte	.LFB15
 1951 0074 58000000 		.4byte	.LFE15
 1952 0078 00000000 		.4byte	0
 1953 007c 00000000 		.4byte	0
 1954              		.section	.debug_line,"",%progbits
 1955              	.Ldebug_line0:
 1956 0000 F7010000 		.section	.debug_str,"MS",%progbits,1
 1956      02008D00 
 1956      00000201 
 1956      FB0E0D00 
 1956      01010101 
 1957              	.LASF10:
 1958 0000 75696E74 		.ascii	"uint16\000"
 1958      313600
 1959              	.LASF40:
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm0uBki.s 			page 50


 1960 0007 74784461 		.ascii	"txDataByte\000"
 1960      74614279 
 1960      746500
 1961              	.LASF37:
 1962 0012 73747269 		.ascii	"string\000"
 1962      6E6700
 1963              	.LASF7:
 1964 0019 6C6F6E67 		.ascii	"long long unsigned int\000"
 1964      206C6F6E 
 1964      6720756E 
 1964      7369676E 
 1964      65642069 
 1965              	.LASF30:
 1966 0030 746D7053 		.ascii	"tmpStatus\000"
 1966      74617475 
 1966      7300
 1967              	.LASF48:
 1968 003a 6D554152 		.ascii	"mUART_IntrTxMask\000"
 1968      545F496E 
 1968      74725478 
 1968      4D61736B 
 1968      00
 1969              	.LASF6:
 1970 004b 6C6F6E67 		.ascii	"long long int\000"
 1970      206C6F6E 
 1970      6720696E 
 1970      7400
 1971              	.LASF0:
 1972 0059 7369676E 		.ascii	"signed char\000"
 1972      65642063 
 1972      68617200 
 1973              	.LASF42:
 1974 0065 6D554152 		.ascii	"mUART_UartDisableCts\000"
 1974      545F5561 
 1974      72744469 
 1974      7361626C 
 1974      65437473 
 1975              	.LASF4:
 1976 007a 6C6F6E67 		.ascii	"long int\000"
 1976      20696E74 
 1976      00
 1977              	.LASF54:
 1978 0083 4379496E 		.ascii	"CyIntDisable\000"
 1978      74446973 
 1978      61626C65 
 1978      00
 1979              	.LASF9:
 1980 0090 75696E74 		.ascii	"uint8\000"
 1980      3800
 1981              	.LASF26:
 1982 0096 6D617463 		.ascii	"matchReg\000"
 1982      68526567 
 1982      00
 1983              	.LASF13:
 1984 009f 646F7562 		.ascii	"double\000"
 1984      6C6500
 1985              	.LASF47:
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm0uBki.s 			page 51


 1986 00a6 7478496E 		.ascii	"txIntrReg\000"
 1986      74725265 
 1986      6700
 1987              	.LASF49:
 1988 00b0 6D554152 		.ascii	"mUART_rxBufferHead\000"
 1988      545F7278 
 1988      42756666 
 1988      65724865 
 1988      616400
 1989              	.LASF11:
 1990 00c3 75696E74 		.ascii	"uint32\000"
 1990      333200
 1991              	.LASF21:
 1992 00ca 6D554152 		.ascii	"mUART_UartInit\000"
 1992      545F5561 
 1992      7274496E 
 1992      697400
 1993              	.LASF56:
 1994 00d9 4379496E 		.ascii	"CyIntSetVector\000"
 1994      74536574 
 1994      56656374 
 1994      6F7200
 1995              	.LASF62:
 1996 00e8 47656E65 		.ascii	"Generated_Source\\PSoC4\\mUART_UART.c\000"
 1996      72617465 
 1996      645F536F 
 1996      75726365 
 1996      5C50536F 
 1997              	.LASF44:
 1998 010c 6D554152 		.ascii	"mUART_UartSendBreakBlocking\000"
 1998      545F5561 
 1998      72745365 
 1998      6E644272 
 1998      65616B42 
 1999              	.LASF8:
 2000 0128 756E7369 		.ascii	"unsigned int\000"
 2000      676E6564 
 2000      20696E74 
 2000      00
 2001              	.LASF5:
 2002 0135 6C6F6E67 		.ascii	"long unsigned int\000"
 2002      20756E73 
 2002      69676E65 
 2002      6420696E 
 2002      7400
 2003              	.LASF57:
 2004 0147 6D554152 		.ascii	"mUART_SpiUartGetRxBufferSize\000"
 2004      545F5370 
 2004      69556172 
 2004      74476574 
 2004      52784275 
 2005              	.LASF34:
 2006 0164 6C657665 		.ascii	"level\000"
 2006      6C00
 2007              	.LASF3:
 2008 016a 73686F72 		.ascii	"short unsigned int\000"
 2008      7420756E 
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm0uBki.s 			page 52


 2008      7369676E 
 2008      65642069 
 2008      6E7400
 2009              	.LASF51:
 2010 017d 6D554152 		.ascii	"mUART_rxBufferOverflow\000"
 2010      545F7278 
 2010      42756666 
 2010      65724F76 
 2010      6572666C 
 2011              	.LASF22:
 2012 0194 6D554152 		.ascii	"mUART_UartSetRxAddress\000"
 2012      545F5561 
 2012      72745365 
 2012      74527841 
 2012      64647265 
 2013              	.LASF43:
 2014 01ab 6D554152 		.ascii	"mUART_UartSetCtsPolarity\000"
 2014      545F5561 
 2014      72745365 
 2014      74437473 
 2014      506F6C61 
 2015              	.LASF38:
 2016 01c4 62756649 		.ascii	"bufIndex\000"
 2016      6E646578 
 2016      00
 2017              	.LASF28:
 2018 01cd 6D554152 		.ascii	"mUART_UartGetChar\000"
 2018      545F5561 
 2018      72744765 
 2018      74436861 
 2018      7200
 2019              	.LASF53:
 2020 01df 6D554152 		.ascii	"mUART_txBufferTail\000"
 2020      545F7478 
 2020      42756666 
 2020      65725461 
 2020      696C00
 2021              	.LASF16:
 2022 01f2 72656733 		.ascii	"reg32\000"
 2022      3200
 2023              	.LASF23:
 2024 01f8 6D554152 		.ascii	"mUART_UartSetRxAddressMask\000"
 2024      545F5561 
 2024      72745365 
 2024      74527841 
 2024      64647265 
 2025              	.LASF18:
 2026 0213 73697A65 		.ascii	"sizetype\000"
 2026      74797065 
 2026      00
 2027              	.LASF17:
 2028 021c 6C6F6E67 		.ascii	"long double\000"
 2028      20646F75 
 2028      626C6500 
 2029              	.LASF24:
 2030 0228 61646472 		.ascii	"address\000"
 2030      65737300 
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm0uBki.s 			page 53


 2031              	.LASF55:
 2032 0230 4379496E 		.ascii	"CyIntSetPriority\000"
 2032      74536574 
 2032      5072696F 
 2032      72697479 
 2032      00
 2033              	.LASF12:
 2034 0241 666C6F61 		.ascii	"float\000"
 2034      7400
 2035              	.LASF46:
 2036 0247 74784374 		.ascii	"txCtrlReg\000"
 2036      726C5265 
 2036      6700
 2037              	.LASF36:
 2038 0251 6D554152 		.ascii	"mUART_UartPutString\000"
 2038      545F5561 
 2038      72745075 
 2038      74537472 
 2038      696E6700 
 2039              	.LASF31:
 2040 0265 6D554152 		.ascii	"mUART_UartSetRtsPolarity\000"
 2040      545F5561 
 2040      72745365 
 2040      74527473 
 2040      506F6C61 
 2041              	.LASF1:
 2042 027e 756E7369 		.ascii	"unsigned char\000"
 2042      676E6564 
 2042      20636861 
 2042      7200
 2043              	.LASF19:
 2044 028c 6D554152 		.ascii	"mUART_UartPostEnable\000"
 2044      545F5561 
 2044      7274506F 
 2044      7374456E 
 2044      61626C65 
 2045              	.LASF2:
 2046 02a1 73686F72 		.ascii	"short int\000"
 2046      7420696E 
 2046      7400
 2047              	.LASF59:
 2048 02ab 4379496E 		.ascii	"CyIntEnable\000"
 2048      74456E61 
 2048      626C6500 
 2049              	.LASF39:
 2050 02b7 6D554152 		.ascii	"mUART_UartPutCRLF\000"
 2050      545F5561 
 2050      72745075 
 2050      7443524C 
 2050      4600
 2051              	.LASF35:
 2052 02c9 75617274 		.ascii	"uartFlowCtrl\000"
 2052      466C6F77 
 2052      4374726C 
 2052      00
 2053              	.LASF27:
 2054 02d6 72784461 		.ascii	"rxData\000"
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm0uBki.s 			page 54


 2054      746100
 2055              	.LASF50:
 2056 02dd 6D554152 		.ascii	"mUART_rxBufferTail\000"
 2056      545F7278 
 2056      42756666 
 2056      65725461 
 2056      696C00
 2057              	.LASF32:
 2058 02f0 706F6C61 		.ascii	"polarity\000"
 2058      72697479 
 2058      00
 2059              	.LASF61:
 2060 02f9 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2060      43313120 
 2060      352E342E 
 2060      31203230 
 2060      31363036 
 2061 032c 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 2061      20726576 
 2061      6973696F 
 2061      6E203233 
 2061      37373135 
 2062 035f 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 2062      67202D66 
 2062      66756E63 
 2062      74696F6E 
 2062      2D736563 
 2063              	.LASF25:
 2064 038b 61646472 		.ascii	"addressMask\000"
 2064      6573734D 
 2064      61736B00 
 2065              	.LASF15:
 2066 0397 63686172 		.ascii	"char\000"
 2066      00
 2067              	.LASF14:
 2068 039c 63686172 		.ascii	"char8\000"
 2068      3800
 2069              	.LASF45:
 2070 03a2 62726561 		.ascii	"breakWidth\000"
 2070      6B576964 
 2070      746800
 2071              	.LASF41:
 2072 03ad 6D554152 		.ascii	"mUART_UartEnableCts\000"
 2072      545F5561 
 2072      7274456E 
 2072      61626C65 
 2072      43747300 
 2073              	.LASF20:
 2074 03c1 6D554152 		.ascii	"mUART_UartStop\000"
 2074      545F5561 
 2074      72745374 
 2074      6F7000
 2075              	.LASF63:
 2076 03d0 433A5C55 		.ascii	"C:\\Users\\PC\\Documents\\PSoC Creator\\yellowChip\\"
 2076      73657273 
 2076      5C50435C 
 2076      446F6375 
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm0uBki.s 			page 55


 2076      6D656E74 
 2077 03fe 626F6F74 		.ascii	"bootloader.cydsn\000"
 2077      6C6F6164 
 2077      65722E63 
 2077      7964736E 
 2077      00
 2078              	.LASF33:
 2079 040f 6D554152 		.ascii	"mUART_UartSetRtsFifoLevel\000"
 2079      545F5561 
 2079      72745365 
 2079      74527473 
 2079      4669666F 
 2080              	.LASF60:
 2081 0429 6D554152 		.ascii	"mUART_SpiUartWriteTxData\000"
 2081      545F5370 
 2081      69556172 
 2081      74577269 
 2081      74655478 
 2082              	.LASF29:
 2083 0442 6D554152 		.ascii	"mUART_UartGetByte\000"
 2083      545F5561 
 2083      72744765 
 2083      74427974 
 2083      6500
 2084              	.LASF52:
 2085 0454 6D554152 		.ascii	"mUART_txBufferHead\000"
 2085      545F7478 
 2085      42756666 
 2085      65724865 
 2085      616400
 2086              	.LASF58:
 2087 0467 6D554152 		.ascii	"mUART_SpiUartReadRxData\000"
 2087      545F5370 
 2087      69556172 
 2087      74526561 
 2087      64527844 
 2088              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
