ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CyLFClk.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CySysClkWcoSetHighPowerMode,"ax",%progbits
  20              		.align	1
  21              		.code	16
  22              		.thumb_func
  23              		.type	CySysClkWcoSetHighPowerMode, %function
  24              	CySysClkWcoSetHighPowerMode:
  25              	.LFB0:
  26              		.file 1 "Generated_Source\\PSoC4\\CyLFClk.h"
   1:Generated_Source\PSoC4/CyLFClk.h **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLFClk.h **** * \file .h
   3:Generated_Source\PSoC4/CyLFClk.h **** * \version 1.20
   4:Generated_Source\PSoC4/CyLFClk.h **** *
   5:Generated_Source\PSoC4/CyLFClk.h **** * \brief
   6:Generated_Source\PSoC4/CyLFClk.h **** *  This file provides the source code to API for the lfclk and wdt.
   7:Generated_Source\PSoC4/CyLFClk.h **** *
   8:Generated_Source\PSoC4/CyLFClk.h **** ********************************************************************************
   9:Generated_Source\PSoC4/CyLFClk.h **** * \copyright
  10:Generated_Source\PSoC4/CyLFClk.h **** * Copyright 2008-2017, Cypress Semiconductor Corporation.  All rights reserved.
  11:Generated_Source\PSoC4/CyLFClk.h **** * You may use this file only in accordance with the license, terms, conditions,
  12:Generated_Source\PSoC4/CyLFClk.h **** * disclaimers, and limitations in the end user license agreement accompanying
  13:Generated_Source\PSoC4/CyLFClk.h **** * the software package with which this file was provided.
  14:Generated_Source\PSoC4/CyLFClk.h **** *******************************************************************************/
  15:Generated_Source\PSoC4/CyLFClk.h **** 
  16:Generated_Source\PSoC4/CyLFClk.h **** 
  17:Generated_Source\PSoC4/CyLFClk.h **** #if !defined(CY_LFCLK_CYLIB_H)
  18:Generated_Source\PSoC4/CyLFClk.h **** #define CY_LFCLK_CYLIB_H
  19:Generated_Source\PSoC4/CyLFClk.h **** 
  20:Generated_Source\PSoC4/CyLFClk.h **** #include "cytypes.h"
  21:Generated_Source\PSoC4/CyLFClk.h **** #include "cydevice_trm.h"
  22:Generated_Source\PSoC4/CyLFClk.h **** 
  23:Generated_Source\PSoC4/CyLFClk.h **** #define CY_IP_WCO_WDT_EN           (-1 == 1)
  24:Generated_Source\PSoC4/CyLFClk.h **** 
  25:Generated_Source\PSoC4/CyLFClk.h **** typedef enum
  26:Generated_Source\PSoC4/CyLFClk.h **** {
  27:Generated_Source\PSoC4/CyLFClk.h ****     CY_SYS_TIMER_WAIT = 0u,
  28:Generated_Source\PSoC4/CyLFClk.h ****     CY_SYS_TIMER_INTERRUPT = 1u
  29:Generated_Source\PSoC4/CyLFClk.h **** } cy_sys_timer_delaytype_enum;
  30:Generated_Source\PSoC4/CyLFClk.h **** 
  31:Generated_Source\PSoC4/CyLFClk.h **** 
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 2


  32:Generated_Source\PSoC4/CyLFClk.h **** /***************************************
  33:Generated_Source\PSoC4/CyLFClk.h **** *    Function Prototypes
  34:Generated_Source\PSoC4/CyLFClk.h **** ***************************************/
  35:Generated_Source\PSoC4/CyLFClk.h **** /**
  36:Generated_Source\PSoC4/CyLFClk.h **** * \addtogroup group_general
  37:Generated_Source\PSoC4/CyLFClk.h **** * @{
  38:Generated_Source\PSoC4/CyLFClk.h **** */
  39:Generated_Source\PSoC4/CyLFClk.h **** /* Clocks API */
  40:Generated_Source\PSoC4/CyLFClk.h **** void CySysClkIloStart(void);
  41:Generated_Source\PSoC4/CyLFClk.h **** void CySysClkIloStop(void);
  42:Generated_Source\PSoC4/CyLFClk.h **** /** @} general */
  43:Generated_Source\PSoC4/CyLFClk.h **** 
  44:Generated_Source\PSoC4/CyLFClk.h **** /**
  45:Generated_Source\PSoC4/CyLFClk.h **** * \addtogroup group_compensate
  46:Generated_Source\PSoC4/CyLFClk.h **** * @{
  47:Generated_Source\PSoC4/CyLFClk.h **** */
  48:Generated_Source\PSoC4/CyLFClk.h **** cystatus CySysClkIloCompensate(uint32 desiredDelay, uint32 *compensatedCycles);
  49:Generated_Source\PSoC4/CyLFClk.h **** void CySysClkIloStartMeasurement(void);
  50:Generated_Source\PSoC4/CyLFClk.h **** void CySysClkIloStopMeasurement(void);
  51:Generated_Source\PSoC4/CyLFClk.h **** /** @} compensate */
  52:Generated_Source\PSoC4/CyLFClk.h **** 
  53:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSV2 && (!CY_IP_CPUSS))
  54:Generated_Source\PSoC4/CyLFClk.h ****     /**
  55:Generated_Source\PSoC4/CyLFClk.h ****     * \addtogroup group_compensate
  56:Generated_Source\PSoC4/CyLFClk.h ****     * @{
  57:Generated_Source\PSoC4/CyLFClk.h ****     */
  58:Generated_Source\PSoC4/CyLFClk.h ****     cystatus CySysClkIloTrim(uint32 mode, int32 *iloAccuracyInPPT);
  59:Generated_Source\PSoC4/CyLFClk.h ****     cystatus CySysClkIloRestoreFactoryTrim(void);
  60:Generated_Source\PSoC4/CyLFClk.h ****     /** @} compensate */
  61:Generated_Source\PSoC4/CyLFClk.h ****     cystatus CySysClkIloUpdateTrimReg(int32* iloAccuracyInPPT);
  62:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2 && (!CY_IP_CPUSS)) */
  63:Generated_Source\PSoC4/CyLFClk.h **** 
  64:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSV2 && CY_IP_WCO)
  65:Generated_Source\PSoC4/CyLFClk.h ****     /**
  66:Generated_Source\PSoC4/CyLFClk.h ****     * \addtogroup group_general
  67:Generated_Source\PSoC4/CyLFClk.h ****     * @{
  68:Generated_Source\PSoC4/CyLFClk.h ****     */
  69:Generated_Source\PSoC4/CyLFClk.h ****     void CySysClkSetLfclkSource(uint32 source);
  70:Generated_Source\PSoC4/CyLFClk.h ****     /** @} group_general */
  71:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2 && CY_IP_WCO) */
  72:Generated_Source\PSoC4/CyLFClk.h **** 
  73:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_WCO)
  74:Generated_Source\PSoC4/CyLFClk.h ****     /**
  75:Generated_Source\PSoC4/CyLFClk.h ****     * \addtogroup group_wco
  76:Generated_Source\PSoC4/CyLFClk.h ****     * @{
  77:Generated_Source\PSoC4/CyLFClk.h ****     */
  78:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysClkWcoStart(void);
  79:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysClkWcoStop(void);
  80:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysClkWcoSetPowerMode(uint32 mode);
  81:Generated_Source\PSoC4/CyLFClk.h ****     void CySysClkWcoClockOutSelect(uint32 clockSel);
  82:Generated_Source\PSoC4/CyLFClk.h ****     /** @} wco */
  83:Generated_Source\PSoC4/CyLFClk.h **** 
  84:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysClkWcoEnabled(void);
  85:Generated_Source\PSoC4/CyLFClk.h **** 
  86:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_WCO) */
  87:Generated_Source\PSoC4/CyLFClk.h **** 
  88:Generated_Source\PSoC4/CyLFClk.h **** typedef void (*cyWdtCallback)(void);
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 3


  89:Generated_Source\PSoC4/CyLFClk.h **** 
  90:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
  91:Generated_Source\PSoC4/CyLFClk.h **** 
  92:Generated_Source\PSoC4/CyLFClk.h ****     typedef void (*cyTimerCallback)(void);
  93:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN) */
  94:Generated_Source\PSoC4/CyLFClk.h **** 
  95:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSV2)
  96:Generated_Source\PSoC4/CyLFClk.h ****     /**
  97:Generated_Source\PSoC4/CyLFClk.h ****     * \addtogroup group_wdtsrssv2
  98:Generated_Source\PSoC4/CyLFClk.h ****     * @{
  99:Generated_Source\PSoC4/CyLFClk.h ****     */
 100:Generated_Source\PSoC4/CyLFClk.h ****     /* WDT API */
 101:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtLock(void);
 102:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtUnlock(void);
 103:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtSetMode(uint32 counterNum, uint32 mode);
 104:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetMode(uint32 counterNum);
 105:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetEnabledStatus(uint32 counterNum);
 106:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtSetClearOnMatch(uint32 counterNum, uint32 enable);
 107:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetClearOnMatch(uint32 counterNum);
 108:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtEnable(uint32 counterMask);
 109:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtDisable(uint32 counterMask);
 110:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtSetCascade(uint32 cascadeMask);
 111:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetCascade(void);
 112:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtSetMatch(uint32 counterNum, uint32 match);
 113:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtSetToggleBit(uint32 bits);
 114:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetToggleBit(void);
 115:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetMatch(uint32 counterNum);
 116:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetCount(uint32 counterNum);
 117:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetInterruptSource(void);
 118:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtClearInterrupt(uint32 counterMask);
 119:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtResetCounters(uint32 countersMask);
 120:Generated_Source\PSoC4/CyLFClk.h ****     cyWdtCallback  CySysWdtSetInterruptCallback(uint32 counterNum, cyWdtCallback function);
 121:Generated_Source\PSoC4/CyLFClk.h ****     cyWdtCallback  CySysWdtGetInterruptCallback(uint32 counterNum);
 122:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerDelay(uint32 counterNum, cy_sys_timer_delaytype_enum delayType, uint32 delay);
 123:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerDelayUntilMatch(uint32 counterNum, cy_sys_timer_delaytype_enum delayType, uint
 124:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWatchdogFeed(uint32 counterNum);
 125:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtEnableCounterIsr(uint32 counterNum);
 126:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtDisableCounterIsr(uint32 counterNum);
 127:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtIsr(void);
 128:Generated_Source\PSoC4/CyLFClk.h ****     /** @} wdtsrssv2 */
 129:Generated_Source\PSoC4/CyLFClk.h **** #else
 130:Generated_Source\PSoC4/CyLFClk.h ****     /**
 131:Generated_Source\PSoC4/CyLFClk.h ****     * \addtogroup group_wdtsrsslite
 132:Generated_Source\PSoC4/CyLFClk.h ****     * @{
 133:Generated_Source\PSoC4/CyLFClk.h ****     */
 134:Generated_Source\PSoC4/CyLFClk.h ****     /* WDT API */
 135:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetEnabledStatus(void);
 136:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtEnable(void);
 137:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtDisable(void);
 138:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtSetMatch(uint32 match);
 139:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetMatch(void);
 140:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetCount(void);
 141:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtSetIgnoreBits(uint32 bitsNum);
 142:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetIgnoreBits(void);
 143:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtClearInterrupt(void);
 144:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtMaskInterrupt(void);
 145:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtUnmaskInterrupt(void);
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 4


 146:Generated_Source\PSoC4/CyLFClk.h ****     cyWdtCallback CySysWdtSetInterruptCallback(cyWdtCallback function);
 147:Generated_Source\PSoC4/CyLFClk.h ****     cyWdtCallback CySysWdtGetInterruptCallback(void);
 148:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtIsr(void);
 149:Generated_Source\PSoC4/CyLFClk.h ****     /** @} wdtsrsslite*/
 150:Generated_Source\PSoC4/CyLFClk.h **** #endif  /* (CY_IP_SRSSV2) */
 151:Generated_Source\PSoC4/CyLFClk.h **** 
 152:Generated_Source\PSoC4/CyLFClk.h **** 
 153:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
 154:Generated_Source\PSoC4/CyLFClk.h ****     /**
 155:Generated_Source\PSoC4/CyLFClk.h ****     * \addtogroup group_deepsleepwdt
 156:Generated_Source\PSoC4/CyLFClk.h ****     * @{
 157:Generated_Source\PSoC4/CyLFClk.h ****     */
 158:Generated_Source\PSoC4/CyLFClk.h ****     /* WCO WDT APIs */
 159:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysClkSetTimerSource(uint32 source);
 160:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerSetMode(uint32 counterNum, uint32 mode);
 161:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetMode(uint32 counterNum);
 162:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetEnabledStatus(uint32 counterNum);
 163:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerSetClearOnMatch(uint32 counterNum, uint32 enable);
 164:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetClearOnMatch(uint32 counterNum);
 165:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerEnable(uint32 counterMask);
 166:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerDisable(uint32 counterMask);
 167:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerSetCascade(uint32 cascadeMask);
 168:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetCascade(void);
 169:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerSetMatch(uint32 counterNum, uint32 match);
 170:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerSetToggleBit(uint32 bits);
 171:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetToggleBit(void);
 172:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetMatch(uint32 counterNum);
 173:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetCount(uint32 counterNum);
 174:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetInterruptSource(void);
 175:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerClearInterrupt(uint32 counterMask);
 176:Generated_Source\PSoC4/CyLFClk.h ****     cyTimerCallback CySysTimerSetInterruptCallback(uint32 counterNum, cyTimerCallback function);
 177:Generated_Source\PSoC4/CyLFClk.h ****     cyTimerCallback CySysTimerGetInterruptCallback(uint32 counterNum);
 178:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerDelay(uint32 counterNum, cy_sys_timer_delaytype_enum delayType, uint32 delay);
 179:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerDelayUntilMatch(uint32 counterNum, cy_sys_timer_delaytype_enum delayType, uint
 180:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerResetCounters(uint32 countersMask);
 181:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerEnableIsr(uint32 counterNum);
 182:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerDisableIsr(uint32 counterNum);
 183:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerIsr(void);
 184:Generated_Source\PSoC4/CyLFClk.h ****     /** @} deepsleepwdt */
 185:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN) */
 186:Generated_Source\PSoC4/CyLFClk.h **** 
 187:Generated_Source\PSoC4/CyLFClk.h **** 
 188:Generated_Source\PSoC4/CyLFClk.h **** /*******************************************************************************
 189:Generated_Source\PSoC4/CyLFClk.h **** * API Constants
 190:Generated_Source\PSoC4/CyLFClk.h **** *******************************************************************************/
 191:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_UINT16_MAX_VAL    (0xFFFFu)
 192:Generated_Source\PSoC4/CyLFClk.h **** 
 193:Generated_Source\PSoC4/CyLFClk.h **** 
 194:Generated_Source\PSoC4/CyLFClk.h **** /*******************************************************************************
 195:Generated_Source\PSoC4/CyLFClk.h **** * Clock API Constants
 196:Generated_Source\PSoC4/CyLFClk.h **** *******************************************************************************/
 197:Generated_Source\PSoC4/CyLFClk.h **** 
 198:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkIloStart()/CySysClkIloStop() - implementation definitions */
 199:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_ILO_CONFIG_ENABLE                    ((uint32)(( uint32 )0x01u << 31u))
 200:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_DFT_SELECT_DEFAULT_MASK              ((uint32)(( uint32 )0x0fu << 8u ))
 201:Generated_Source\PSoC4/CyLFClk.h **** 
 202:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkIloCompensate() - one ILO clock in uS multiplied on thousand */
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 5


 203:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSV2)
 204:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_PERIOD_PPH                   ((uint32) (0x0C35u))
 205:Generated_Source\PSoC4/CyLFClk.h **** #else
 206:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_PERIOD_PPH                   ((uint32) (0x09C4u))
 207:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2) */
 208:Generated_Source\PSoC4/CyLFClk.h **** 
 209:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkIloCompensate() - implementation definitions */
 210:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_ILO_CALIBR_COMPLETE_MASK             ((uint32)(( uint32 )0x01u << 31u))
 211:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_ILO_DFT_LSB_MASK                     ((uint32)(0x00000FFFu))
 212:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_TRIM_OR_COMP_STARTED                 (1u)
 213:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_TRIM_OR_COMP_FINISHED                (0u)
 214:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_COEF_PHUNDRED                        ((uint32) (0x64u))
 215:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_HALF_OF_CLOCK                        ((uint32) ((uint32) CY_SYS_CLK_ILO_PERIOD_P
 216:Generated_Source\PSoC4/CyLFClk.h **** 
 217:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkIloCompensate() - maximum value of desiredDelay argument */
 218:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSV2)
 219:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_MAX_DELAY_US                     ((uint32) (0xEE6B2800u))
 220:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_PERIOD                       ((uint32) (0x1Fu))
 221:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_FREQ_2MSB                    ((uint32) 5u)
 222:Generated_Source\PSoC4/CyLFClk.h **** #else
 223:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_MAX_DELAY_US                     ((uint32) (0x1E8480u))
 224:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_FREQ_2MSB                    ((uint32) (0x28u ))
 225:Generated_Source\PSoC4/CyLFClk.h **** 
 226:Generated_Source\PSoC4/CyLFClk.h ****     /**********************************************************************************
 227:Generated_Source\PSoC4/CyLFClk.h ****     * CySysClkIloCompensate() - value to walk over oversamling in calculations with 
 228:Generated_Source\PSoC4/CyLFClk.h ****     * srsslite. The oversample can be obtained when ilo frequency in equal 80 KHz and
 229:Generated_Source\PSoC4/CyLFClk.h ****     * desired clocks are 80 000 clocks.
 230:Generated_Source\PSoC4/CyLFClk.h ****     **********************************************************************************/
 231:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_MAX_LITE_NUMBER                     ((uint32) 53600u)
 232:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2) */
 233:Generated_Source\PSoC4/CyLFClk.h **** 
 234:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_ILO_FREQ_3LSB                       ((uint32) (0x3E8u))
 235:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_DELAY_COUNTS_LIMIT                  ((uint32) (0xD160u))
 236:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_MIN_DELAY_US                        ((uint32) (0x64u))
 237:Generated_Source\PSoC4/CyLFClk.h **** 
 238:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkSetLfclkSource() - parameter definitions */
 239:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSV2 && CY_IP_WCO)
 240:Generated_Source\PSoC4/CyLFClk.h **** 
 241:Generated_Source\PSoC4/CyLFClk.h ****     /** Internal Low Frequency (32 kHz) Oscillator (ILO) */
 242:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_LFCLK_SRC_ILO                    (0u)
 243:Generated_Source\PSoC4/CyLFClk.h **** 
 244:Generated_Source\PSoC4/CyLFClk.h ****     /** Low Frequency Watch Crystal Oscillator (WCO) */
 245:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_LFCLK_SRC_WCO                    ((uint32)(( uint32 )0x01u << 30u))
 246:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2 && CY_IP_WCO) */
 247:Generated_Source\PSoC4/CyLFClk.h **** 
 248:Generated_Source\PSoC4/CyLFClk.h **** 
 249:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_WCO)
 250:Generated_Source\PSoC4/CyLFClk.h **** 
 251:Generated_Source\PSoC4/CyLFClk.h ****     /* CySysClkSetLfclkSource() - implementation definitions */
 252:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_LFCLK_SEL_MASK                   ((uint32)(( uint32 )0x03u << 30u))
 253:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_WCO) */
 254:Generated_Source\PSoC4/CyLFClk.h **** 
 255:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkSetTimerSource() - implementation definitions */
 256:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
 257:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_TIMER_SEL_MASK                   ((uint32)(( uint32 )0x03u << 30u))
 258:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN) */
 259:Generated_Source\PSoC4/CyLFClk.h **** 
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 6


 260:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkSetTimerSource() - parameter definitions */
 261:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
 262:Generated_Source\PSoC4/CyLFClk.h **** 
 263:Generated_Source\PSoC4/CyLFClk.h ****     /** Internal Low Frequency (32 kHz) Oscillator (ILO) */
 264:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_TIMER_SRC_ILO                (0u)
 265:Generated_Source\PSoC4/CyLFClk.h **** 
 266:Generated_Source\PSoC4/CyLFClk.h ****     /** Low Frequency Watch Crystal Oscillator (WCO) */
 267:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_TIMER_SRC_WCO                ((uint32)(( uint32 )0x01u << 30u))
 268:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN) */
 269:Generated_Source\PSoC4/CyLFClk.h **** 
 270:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkWcoClockOutSelect() - parameter definitions */
 271:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_WCO)
 272:Generated_Source\PSoC4/CyLFClk.h **** 
 273:Generated_Source\PSoC4/CyLFClk.h ****     /** Selects External crystal as WCO’s clock source */
 274:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_SEL_CRYSTAL                  (1u)
 275:Generated_Source\PSoC4/CyLFClk.h **** 
 276:Generated_Source\PSoC4/CyLFClk.h ****     /** Selects External clock input on wco_in pin as WCO’s clock source */
 277:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_SEL_PIN                      (0u)
 278:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_WCO) */
 279:Generated_Source\PSoC4/CyLFClk.h **** 
 280:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkWcoClockOutSelect() - implementation definitions */
 281:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_WCO)
 282:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_SELECT_PIN_MASK              ((uint32)(( uint32 )0x01u << 2u))
 283:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_SELECT_PIN_OFFSET            ((uint32) 0x02u)
 284:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_WCO) */
 285:Generated_Source\PSoC4/CyLFClk.h **** 
 286:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkIloRestoreFactoryTrim() - implementation definitions */
 287:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSV2 && CY_IP_WCO && (!CY_IP_CPUSS))
 288:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_TRIM_DEFAULT_VALUE           ((uint8 )(0xF0u))
 289:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_TRIM_DEFAULT_MASK            ((uint32)((uint32)0x01u << 3u))
 290:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_TRIM_MASK                    ((uint32)(0x0Fu))
 291:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2 && CY_IP_WCO && (!CY_IP_CPUSS)) */
 292:Generated_Source\PSoC4/CyLFClk.h **** 
 293:Generated_Source\PSoC4/CyLFClk.h **** /* CySysIloTrim() - parameter definitions and macros*/
 294:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSV2 && CY_IP_WCO && (!CY_IP_CPUSS))
 295:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_BLOCKING                         (0u)
 296:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_NON_BLOCKING                     (1u)
 297:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_PERTHOUSAND                      ((uint32) 0x000003E8u )
 298:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ABS_MACRO(x)                     ((0 > (x)) ? (-(x)) : (x))
 299:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ERROR_RANGE                      ((uint32) 0x38u)
 300:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_TIMEOUT                          ((uint8 ) 0x05u)
 301:Generated_Source\PSoC4/CyLFClk.h **** 
 302:Generated_Source\PSoC4/CyLFClk.h ****     /* ILO error step is 7,37 % error range */
 303:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ERROR_STEP                       (( int32) 0x02E1u)
 304:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ERROR_COEF                       ((uint32) 0x0Au)
 305:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2 && CY_IP_WCO && (!CY_IP_CPUSS)) */
 306:Generated_Source\PSoC4/CyLFClk.h **** 
 307:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_WCO)
 308:Generated_Source\PSoC4/CyLFClk.h **** 
 309:Generated_Source\PSoC4/CyLFClk.h ****     /* WCO Configuration Register */
 310:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_CONFIG_LPM_EN                (( uint32 )(( uint32 )0x01u <<  0u))
 311:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_CONFIG_LPM_AUTO              (( uint32 )(( uint32 )0x01u <<  1u))
 312:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE            (( uint32 )(( uint32 )0x01u << 31u))
 313:Generated_Source\PSoC4/CyLFClk.h **** 
 314:Generated_Source\PSoC4/CyLFClk.h ****     /* WCO Status Register */
 315:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_STATUS_OUT_BLNK_A            (( uint32 )(( uint32 )0x01u <<  0u))
 316:Generated_Source\PSoC4/CyLFClk.h **** 
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 7


 317:Generated_Source\PSoC4/CyLFClk.h ****     /* WCO Trim Register */
 318:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_MASK                (( uint32 ) 0x07u)
 319:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_SHIFT               (( uint32 ) 0x00u)
 320:Generated_Source\PSoC4/CyLFClk.h **** 
 321:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_3370NA              (( uint32 ) 0x00u)
 322:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_2620NA              (( uint32 ) 0x01u)
 323:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_2250NA              (( uint32 ) 0x02u)
 324:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_1500NA              (( uint32 ) 0x03u)
 325:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_1870NA              (( uint32 ) 0x04u)
 326:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_1120NA              (( uint32 ) 0x05u)
 327:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_750NA               (( uint32 ) 0x06u)
 328:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_0NA                 (( uint32 ) 0x07u)
 329:Generated_Source\PSoC4/CyLFClk.h **** 
 330:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_GM_MASK                 (( uint32 )(( uint32 )0x03u << 4u))
 331:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_GM_SHIFT                (( uint32 ) 0x04u)
 332:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_GM_HPM                  (( uint32 ) 0x01u)
 333:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_GM_LPM                  (( uint32 ) 0x02u)
 334:Generated_Source\PSoC4/CyLFClk.h **** #endif  /* (CY_IP_WCO) */
 335:Generated_Source\PSoC4/CyLFClk.h **** 
 336:Generated_Source\PSoC4/CyLFClk.h **** 
 337:Generated_Source\PSoC4/CyLFClk.h **** /*******************************************************************************
 338:Generated_Source\PSoC4/CyLFClk.h **** * WDT API Constants
 339:Generated_Source\PSoC4/CyLFClk.h **** *******************************************************************************/
 340:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSV2)
 341:Generated_Source\PSoC4/CyLFClk.h **** 
 342:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MODE_NONE                (0u)
 343:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MODE_INT                 (1u)
 344:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MODE_RESET               (2u)
 345:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MODE_INT_RESET           (3u)
 346:Generated_Source\PSoC4/CyLFClk.h **** 
 347:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER0_MASK            ((uint32)((uint32)0x01u))           /**< Counter 0 
 348:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER1_MASK            ((uint32)((uint32)0x01u << 8u))     /**< Counter 1 
 349:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER2_MASK            ((uint32)((uint32)0x01u << 16u))    /**< Counter 2 
 350:Generated_Source\PSoC4/CyLFClk.h **** 
 351:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CASCADE_NONE             ((uint32)0x00u)             /**< Neither */
 352:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CASCADE_01               ((uint32)0x01u << 3u)       /**< Cascade 01 */
 353:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CASCADE_12               ((uint32)0x01u << 11u)      /**< Cascade 12 */
 354:Generated_Source\PSoC4/CyLFClk.h **** 
 355:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER0_INT             ((uint32)0x01u << 2u)
 356:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER1_INT             ((uint32)0x01u << 10u)
 357:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER2_INT             ((uint32)0x01u << 18u)
 358:Generated_Source\PSoC4/CyLFClk.h **** 
 359:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER0_RESET           ((uint32)0x01u << 3u)       /**< Counter 0 */
 360:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER1_RESET           ((uint32)0x01u << 11u)      /**< Counter 1 */
 361:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER2_RESET           ((uint32)0x01u << 19u)      /**< Counter 2 */
 362:Generated_Source\PSoC4/CyLFClk.h **** 
 363:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTERS_RESET           (CY_SYS_WDT_COUNTER0_RESET |\
 364:Generated_Source\PSoC4/CyLFClk.h ****                                                  CY_SYS_WDT_COUNTER1_RESET |\
 365:Generated_Source\PSoC4/CyLFClk.h ****                                                  CY_SYS_WDT_COUNTER2_RESET)
 366:Generated_Source\PSoC4/CyLFClk.h **** 
 367:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER0                 (0x00u)
 368:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER1                 (0x01u)
 369:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER2                 (0x02u)
 370:Generated_Source\PSoC4/CyLFClk.h **** 
 371:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER0_OFFSET          (0x00u)
 372:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER1_OFFSET          (0x02u)
 373:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER2_OFFSET          (0x04u)
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 8


 374:Generated_Source\PSoC4/CyLFClk.h **** 
 375:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MODE_MASK                ((uint32)(0x03u))
 376:Generated_Source\PSoC4/CyLFClk.h **** 
 377:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CONFIG_BITS2_MASK        (uint32)(0x1Fu)
 378:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CONFIG_BITS2_POS         (uint32)(24u)
 379:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_LOWER_16BITS_MASK        (uint32)(0x0000FFFFu)
 380:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_HIGHER_16BITS_MASK       (uint32)(0xFFFF0000u)
 381:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTERS_MAX             (0x03u)
 382:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CNT_SHIFT                (0x08u)
 383:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CNT_MATCH_CLR_SHIFT      (0x02u)
 384:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CNT_STTS_SHIFT           (0x01u)
 385:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CNT_MATCH_SHIFT          (0x10u)
 386:Generated_Source\PSoC4/CyLFClk.h **** 
 387:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CLK_LOCK_BITS_MASK       ((uint32)0x03u << 14u)
 388:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CLK_LOCK_BIT0            ((uint32)0x01u << 14u)
 389:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CLK_LOCK_BIT1            ((uint32)0x01u << 15u)
 390:Generated_Source\PSoC4/CyLFClk.h **** 
 391:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_WDT_NUM_OF_WDT                   (3u)
 392:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_WDT_NUM_OF_CALLBACKS             (3u)
 393:Generated_Source\PSoC4/CyLFClk.h **** 
 394:Generated_Source\PSoC4/CyLFClk.h ****     #else
 395:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_WDT_NUM_OF_WDT               (1u)
 396:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_WDT_NUM_OF_CALLBACKS         (3u)
 397:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_KEY                  ((uint32)(0xACED8865u))
 398:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_MATCH_MASK           ((uint32)(0x0000FFFFu))
 399:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_IGNORE_BITS_MASK     ((uint32)(0x000F0000u))
 400:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_IGNORE_BITS_SHIFT    ((uint32)(16u))
 401:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_LOWER_BIT_MASK       ((uint32)(0x00000001u))
 402:Generated_Source\PSoC4/CyLFClk.h **** 
 403:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_COUNTER0             (0x00u)
 404:Generated_Source\PSoC4/CyLFClk.h **** 
 405:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2) */
 406:Generated_Source\PSoC4/CyLFClk.h **** 
 407:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSV2 && CY_IP_WCO)
 408:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_1LFCLK_ILO_DELAY_US    ((uint16)( 67u))
 409:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_3LFCLK_ILO_DELAY_US    ((uint16)(201u))
 410:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_1LFCLK_WCO_DELAY_US    ((uint16)( 31u))
 411:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_3LFCLK_WCO_DELAY_US    ((uint16)( 93u))
 412:Generated_Source\PSoC4/CyLFClk.h **** 
 413:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_1LFCLK_DELAY_US      \
 414:Generated_Source\PSoC4/CyLFClk.h ****         ((CY_SYS_CLK_LFCLK_SRC_ILO == (CY_SYS_WDT_CONFIG_REG & CY_SYS_CLK_LFCLK_SEL_MASK)) ? \
 415:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_WDT_1LFCLK_ILO_DELAY_US) : \
 416:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_WDT_1LFCLK_WCO_DELAY_US))
 417:Generated_Source\PSoC4/CyLFClk.h **** 
 418:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_3LFCLK_DELAY_US      \
 419:Generated_Source\PSoC4/CyLFClk.h ****         ((CY_SYS_CLK_LFCLK_SRC_ILO == (CY_SYS_WDT_CONFIG_REG & CY_SYS_CLK_LFCLK_SEL_MASK)) ? \
 420:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_WDT_3LFCLK_ILO_DELAY_US) : \
 421:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_WDT_3LFCLK_WCO_DELAY_US))
 422:Generated_Source\PSoC4/CyLFClk.h ****     #else
 423:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_1LFCLK_DELAY_US      ((uint16)  (67u))
 424:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_3LFCLK_DELAY_US      ((uint16) (201u))
 425:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2 && CY_IP_WCO) */
 426:Generated_Source\PSoC4/CyLFClk.h **** 
 427:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
 428:Generated_Source\PSoC4/CyLFClk.h **** 
 429:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_MODE_NONE              (0u)
 430:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_MODE_INT               (1u)
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 9


 431:Generated_Source\PSoC4/CyLFClk.h **** 
 432:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER0_MASK                  ((uint32)((uint32)0x01u))           /**< Counter 0 
 433:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER1_MASK                  ((uint32)((uint32)0x01u << 8u))     /**< Counter 1 
 434:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER2_MASK                  ((uint32)((uint32)0x01u << 16u))    /**< Counter 2 
 435:Generated_Source\PSoC4/CyLFClk.h **** 
 436:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER0_RESET                 ((uint32)0x01u << 3u)       /**< Counter 0 */
 437:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER1_RESET                 ((uint32)0x01u << 11u)      /**< Counter 1 */
 438:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER2_RESET                 ((uint32)0x01u << 19u)      /**< Counter 2 */
 439:Generated_Source\PSoC4/CyLFClk.h **** 
 440:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_RESET                  (CY_SYS_TIMER0_RESET |\
 441:Generated_Source\PSoC4/CyLFClk.h ****                                                  CY_SYS_TIMER1_RESET |\
 442:Generated_Source\PSoC4/CyLFClk.h ****                                                  CY_SYS_TIMER2_RESET)
 443:Generated_Source\PSoC4/CyLFClk.h **** 
 444:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CASCADE_NONE           ((uint32)0x00u)             /**< Neither */
 445:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CASCADE_01             ((uint32)0x01u << 3u)       /**< Cascade 01 */
 446:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CASCADE_12             ((uint32)0x01u << 11u)      /**< Cascade 12 */
 447:Generated_Source\PSoC4/CyLFClk.h **** 
 448:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER0_INT                   ((uint32)0x01u << 2u)
 449:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER1_INT                   ((uint32)0x01u << 10u)
 450:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER2_INT                   ((uint32)0x01u << 18u)
 451:Generated_Source\PSoC4/CyLFClk.h **** 
 452:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER0                       (0x00u)
 453:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER1                       (0x01u)
 454:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER2                       (0x02u)
 455:Generated_Source\PSoC4/CyLFClk.h **** 
 456:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_MODE_MASK              ((uint32)(0x01u))
 457:Generated_Source\PSoC4/CyLFClk.h **** 
 458:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CONFIG_BITS2_MASK      (uint32)(0x1Fu)
 459:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CONFIG_BITS2_POS       (uint32)(24u)
 460:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_LOWER_16BITS_MASK      (uint32)(0x0000FFFFu)
 461:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_HIGHER_16BITS_MASK     (uint32)(0xFFFF0000u)
 462:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_COUNTERS_MAX           (0x03u)
 463:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CNT_SHIFT              (0x08u)
 464:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CNT_MATCH_CLR_SHIFT    (0x02u)
 465:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CNT_STTS_SHIFT         (0x01u)
 466:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CNT_MATCH_SHIFT        (0x10u)
 467:Generated_Source\PSoC4/CyLFClk.h **** 
 468:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_NUM_OF_TIMERS                (3u)
 469:Generated_Source\PSoC4/CyLFClk.h **** 
 470:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_SET_NEW_TIMER_SOURCE_ILO     ((uint16)(0x02u))
 471:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_SET_NEW_TIMER_SOURCE_WCO     ((uint16)(0x01u))
 472:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CLKEN_RESET_MASK     ((uint32)(0x03u))
 473:Generated_Source\PSoC4/CyLFClk.h **** 
 474:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_1ILO_DELAY_US          ((uint16)( 67u))
 475:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_4ILO_DELAY_US          ((uint16)(268u))
 476:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_3ILO_DELAY_US          ((uint16)(201u))
 477:Generated_Source\PSoC4/CyLFClk.h **** 
 478:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_1WCO_DELAY_US          ((uint16)( 31u))
 479:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_4WCO_DELAY_US          ((uint16)(124u))
 480:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_3WCO_DELAY_US          ((uint16)( 93u))
 481:Generated_Source\PSoC4/CyLFClk.h **** 
 482:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_1TIMER_DELAY_US      \
 483:Generated_Source\PSoC4/CyLFClk.h ****         ((CY_SYS_CLK_TIMER_SRC_ILO == (CY_SYS_WCO_WDT_CONFIG_REG & CY_SYS_CLK_TIMER_SEL_MASK)) ? \
 484:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_TIMER_1ILO_DELAY_US) : \
 485:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_TIMER_1WCO_DELAY_US))
 486:Generated_Source\PSoC4/CyLFClk.h **** 
 487:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_4TIMER_DELAY_US      \
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 10


 488:Generated_Source\PSoC4/CyLFClk.h ****         ((CY_SYS_CLK_TIMER_SRC_ILO == (CY_SYS_WCO_WDT_CONFIG_REG & CY_SYS_CLK_TIMER_SEL_MASK)) ? \
 489:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_TIMER_4WCO_DELAY_US) : \
 490:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_TIMER_4ILO_DELAY_US))
 491:Generated_Source\PSoC4/CyLFClk.h **** 
 492:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_3TIMER_DELAY_US      \
 493:Generated_Source\PSoC4/CyLFClk.h ****         ((CY_SYS_CLK_TIMER_SRC_ILO == (CY_SYS_WCO_WDT_CONFIG_REG & CY_SYS_CLK_TIMER_SEL_MASK)) ? \
 494:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_TIMER_3ILO_DELAY_US) : \
 495:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_TIMER_3WCO_DELAY_US))
 496:Generated_Source\PSoC4/CyLFClk.h **** 
 497:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_SET_CURRENT_TIMER_SOURCE_BIT      \
 498:Generated_Source\PSoC4/CyLFClk.h ****         ((CY_SYS_CLK_TIMER_SRC_ILO == (CY_SYS_WCO_WDT_CONFIG_REG & CY_SYS_CLK_TIMER_SEL_MASK)) ? \
 499:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_SET_NEW_TIMER_SOURCE_ILO) : \
 500:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_SET_NEW_TIMER_SOURCE_WCO))
 501:Generated_Source\PSoC4/CyLFClk.h **** 
 502:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN) */
 503:Generated_Source\PSoC4/CyLFClk.h **** 
 504:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkWcoSetPowerMode() */
 505:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_WCO_HPM                              (0x0u)     /**< WCO High power mode */
 506:Generated_Source\PSoC4/CyLFClk.h **** 
 507:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_BLESS)
 508:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_LPM                          (0x1u)     /**< WCO Low power mode */
 509:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_BLESS) */
 510:Generated_Source\PSoC4/CyLFClk.h **** 
 511:Generated_Source\PSoC4/CyLFClk.h **** 
 512:Generated_Source\PSoC4/CyLFClk.h **** /*******************************************************************************
 513:Generated_Source\PSoC4/CyLFClk.h **** *       Trim Registers Constants 
 514:Generated_Source\PSoC4/CyLFClk.h **** ********************************************************************************/
 515:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_SYS_CLK_DEVIDER                  ((uint32)0x0Au)
 516:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_SEL_ILO_DFT_SOURCE               ((uint32)0x00000100u)
 517:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_FOURBITS_MAX                     (( int32)0x0f)
 518:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_HALF_OF_STEP                     (( int32)((uint32) CY_SYS_CLK_ERROR_STEP >> 1u)
 519:Generated_Source\PSoC4/CyLFClk.h **** 
 520:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSV2)
 521:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_DESIRED_FREQ_HZ          (32000u)
 522:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_DFT_SELSIZE                  ((uint32) 0x3F)
 523:Generated_Source\PSoC4/CyLFClk.h **** #else
 524:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_DESIRED_FREQ_HZ          (40000u)
 525:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_DFT_SELSIZE                  ((uint32) 0x0F)
 526:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2) */
 527:Generated_Source\PSoC4/CyLFClk.h **** 
 528:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_TST_DDFT_CTRL_REG_DEFAULT_MASK    ((uint32)((CY_SYS_CLK_DFT_SELSIZE << 8u) | (CY_SYS
 529:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_TST_DDFT_SELECT_CLK1              ((uint32) ((uint32) CYDEV_DFT_SELECT_CLK1 << 8u))
 530:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1       ((uint32) (CY_SYS_TST_DDFT_SELECT_CLK1 | CYDEV_DFT
 531:Generated_Source\PSoC4/CyLFClk.h **** 
 532:Generated_Source\PSoC4/CyLFClk.h **** 
 533:Generated_Source\PSoC4/CyLFClk.h **** /*******************************************************************************
 534:Generated_Source\PSoC4/CyLFClk.h **** *       Trim Registers 
 535:Generated_Source\PSoC4/CyLFClk.h **** ********************************************************************************/
 536:Generated_Source\PSoC4/CyLFClk.h **** /* DFT TST Control Register*/
 537:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_TST_DDFT_CTRL_REG                         (*(reg32*) CYREG_TST_DDFT_CTRL)
 538:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CNT_CTRL_PTR                              ( (reg32*) CYREG_TST_DDFT_CTRL)
 539:Generated_Source\PSoC4/CyLFClk.h **** 
 540:Generated_Source\PSoC4/CyLFClk.h **** /* DFT TST Counter 1 Register*/
 541:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CNT_REG1_REG                              (*(reg32*) CYREG_TST_TRIM_CNTR1)
 542:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CNT_REG1_PTR                              ( (reg32*) CYREG_TST_TRIM_CNTR1)
 543:Generated_Source\PSoC4/CyLFClk.h **** 
 544:Generated_Source\PSoC4/CyLFClk.h **** /* DFT TST Counter 2 Register*/
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 11


 545:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CNT_REG2_REG                              (*(reg32*) CYREG_TST_TRIM_CNTR2)
 546:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CNT_REG2_PTR                              ( (reg32*) CYREG_TST_TRIM_CNTR2)
 547:Generated_Source\PSoC4/CyLFClk.h **** 
 548:Generated_Source\PSoC4/CyLFClk.h **** /* DFT Muxes Configuration Register*/
 549:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_DFT_REG                               (*(reg32*) CYREG_CLK_DFT_SELECT)
 550:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_DFT_PTR                               ( (reg32*) CYREG_CLK_DFT_SELECT)
 551:Generated_Source\PSoC4/CyLFClk.h **** 
 552:Generated_Source\PSoC4/CyLFClk.h **** /* ILO Configuration Register*/
 553:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_ILO_CONFIG_REG                        (*(reg32 *) CYREG_CLK_ILO_CONFIG)
 554:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_ILO_CONFIG_PTR                        ( (reg32 *) CYREG_CLK_ILO_CONFIG)
 555:Generated_Source\PSoC4/CyLFClk.h **** 
 556:Generated_Source\PSoC4/CyLFClk.h **** /* ILO Trim Register*/
 557:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSV2 && CY_IP_WCO)
 558:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_TRIM_REG                      (*(reg32 *) CYREG_CLK_ILO_TRIM)
 559:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_TRIM_PTR                      ( (reg32 *) CYREG_CLK_ILO_TRIM)
 560:Generated_Source\PSoC4/CyLFClk.h **** #endif  /* (CY_IP_SRSSV2) && CY_IP_WCO*/
 561:Generated_Source\PSoC4/CyLFClk.h **** 
 562:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_WCO)
 563:Generated_Source\PSoC4/CyLFClk.h ****     #if (CY_IP_BLESS)
 564:Generated_Source\PSoC4/CyLFClk.h **** 
 565:Generated_Source\PSoC4/CyLFClk.h ****         /* WCO Status Register */
 566:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_STATUS_REG               (*(reg32 *) CYREG_BLE_BLESS_WCO_STATUS)
 567:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_STATUS_PTR               ( (reg32 *) CYREG_BLE_BLESS_WCO_STATUS)
 568:Generated_Source\PSoC4/CyLFClk.h **** 
 569:Generated_Source\PSoC4/CyLFClk.h ****         /* WCO Configuration Register */
 570:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_CONFIG_REG               (*(reg32 *) CYREG_BLE_BLESS_WCO_CONFIG)
 571:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_CONFIG_PTR               ( (reg32 *) CYREG_BLE_BLESS_WCO_CONFIG)
 572:Generated_Source\PSoC4/CyLFClk.h **** 
 573:Generated_Source\PSoC4/CyLFClk.h ****         /* WCO Trim Register */
 574:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_TRIM_REG                 (*(reg32 *) CYREG_BLE_BLESS_WCO_TRIM)
 575:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_TRIM_PTR                 ( (reg32 *) CYREG_BLE_BLESS_WCO_TRIM)
 576:Generated_Source\PSoC4/CyLFClk.h ****     #else
 577:Generated_Source\PSoC4/CyLFClk.h **** 
 578:Generated_Source\PSoC4/CyLFClk.h ****         /* WCO Status Register */
 579:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_STATUS_REG               (*(reg32 *) CYREG_WCO_STATUS)
 580:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_STATUS_PTR               ( (reg32 *) CYREG_WCO_STATUS)
 581:Generated_Source\PSoC4/CyLFClk.h **** 
 582:Generated_Source\PSoC4/CyLFClk.h ****         /* WCO Configuration Register */
 583:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_CONFIG_REG               (*(reg32 *) CYREG_WCO_CONFIG)
 584:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_CONFIG_PTR               ( (reg32 *) CYREG_WCO_CONFIG)
 585:Generated_Source\PSoC4/CyLFClk.h **** 
 586:Generated_Source\PSoC4/CyLFClk.h ****         /* WCO Trim Register */
 587:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_TRIM_REG                 (*(reg32 *) CYREG_WCO_TRIM)
 588:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_TRIM_PTR                 ( (reg32 *) CYREG_WCO_TRIM)
 589:Generated_Source\PSoC4/CyLFClk.h ****     #endif /* (CY_IP_BLESS) */
 590:Generated_Source\PSoC4/CyLFClk.h **** #endif  /* (CY_IP_WCO) */
 591:Generated_Source\PSoC4/CyLFClk.h **** 
 592:Generated_Source\PSoC4/CyLFClk.h **** 
 593:Generated_Source\PSoC4/CyLFClk.h **** /*******************************************************************************
 594:Generated_Source\PSoC4/CyLFClk.h **** * WDT API Registers
 595:Generated_Source\PSoC4/CyLFClk.h **** *******************************************************************************/
 596:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSV2)
 597:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CTRLOW_REG               (*(reg32 *) CYREG_WDT_CTRLOW)
 598:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CTRLOW_PTR               ( (reg32 *) CYREG_WDT_CTRLOW)
 599:Generated_Source\PSoC4/CyLFClk.h **** 
 600:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CTRHIGH_REG              (*(reg32 *) CYREG_WDT_CTRHIGH)
 601:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CTRHIGH_PTR              ( (reg32 *) CYREG_WDT_CTRHIGH)
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 12


 602:Generated_Source\PSoC4/CyLFClk.h **** 
 603:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MATCH_REG                (*(reg32 *) CYREG_WDT_MATCH)
 604:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MATCH_PTR                ( (reg32 *) CYREG_WDT_MATCH)
 605:Generated_Source\PSoC4/CyLFClk.h **** 
 606:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CONFIG_REG               (*(reg32 *) CYREG_WDT_CONFIG)
 607:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CONFIG_PTR               ( (reg32 *) CYREG_WDT_CONFIG)
 608:Generated_Source\PSoC4/CyLFClk.h **** 
 609:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CONTROL_REG              (*(reg32 *) CYREG_WDT_CONTROL)
 610:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CONTROL_PTR              ( (reg32 *) CYREG_WDT_CONTROL)
 611:Generated_Source\PSoC4/CyLFClk.h **** #else
 612:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_DISABLE_KEY_REG          (*(reg32 *) CYREG_WDT_DISABLE_KEY)
 613:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_DISABLE_KEY_PTR          ( (reg32 *) CYREG_WDT_DISABLE_KEY)
 614:Generated_Source\PSoC4/CyLFClk.h **** 
 615:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MATCH_REG                (*(reg32 *) CYREG_WDT_MATCH)
 616:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MATCH_PTR                ( (reg32 *) CYREG_WDT_MATCH)
 617:Generated_Source\PSoC4/CyLFClk.h **** 
 618:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER_REG              (*(reg32 *) CYREG_WDT_COUNTER)
 619:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER_PTR              ( (reg32 *) CYREG_WDT_COUNTER)
 620:Generated_Source\PSoC4/CyLFClk.h **** 
 621:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_SRSS_INTR_REG                (*(reg32 *) CYREG_SRSS_INTR)
 622:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_SRSS_INTR_PTR                ( (reg32 *) CYREG_SRSS_INTR)
 623:Generated_Source\PSoC4/CyLFClk.h **** 
 624:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_SRSS_INTR_MASK_REG           (*(reg32 *) CYREG_SRSS_INTR_MASK)
 625:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_SRSS_INTR_MASK_PTR           ( (reg32 *) CYREG_SRSS_INTR_MASK)
 626:Generated_Source\PSoC4/CyLFClk.h **** #endif  /* (CY_IP_SRSSV2) */
 627:Generated_Source\PSoC4/CyLFClk.h **** 
 628:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
 629:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CTRLOW_REG           (*(reg32 *) CYREG_WCO_WDT_CTRLOW)
 630:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CTRLOW_PTR           ( (reg32 *) CYREG_WCO_WDT_CTRLOW)
 631:Generated_Source\PSoC4/CyLFClk.h **** 
 632:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CTRHIGH_REG          (*(reg32 *) CYREG_WCO_WDT_CTRHIGH)
 633:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CTRHIGH_PTR          ( (reg32 *) CYREG_WCO_WDT_CTRHIGH)
 634:Generated_Source\PSoC4/CyLFClk.h **** 
 635:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_MATCH_REG            (*(reg32 *) CYREG_WCO_WDT_MATCH)
 636:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_MATCH_PTR            ( (reg32 *) CYREG_WCO_WDT_MATCH)
 637:Generated_Source\PSoC4/CyLFClk.h **** 
 638:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CONFIG_REG           (*(reg32 *) CYREG_WCO_WDT_CONFIG)
 639:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CONFIG_PTR           ( (reg32 *) CYREG_WCO_WDT_CONFIG)
 640:Generated_Source\PSoC4/CyLFClk.h **** 
 641:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CONTROL_REG          (*(reg32 *) CYREG_WCO_WDT_CONTROL)
 642:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CONTROL_PTR          ( (reg32 *) CYREG_WCO_WDT_CONTROL)
 643:Generated_Source\PSoC4/CyLFClk.h **** 
 644:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CLKEN_REG            (*(reg32 *) CYREG_WCO_WDT_CLKEN)
 645:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CLKEN_PTR            ( (reg32 *) CYREG_WCO_WDT_CLKEN)
 646:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN) */
 647:Generated_Source\PSoC4/CyLFClk.h **** 
 648:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_WCO)
 649:Generated_Source\PSoC4/CyLFClk.h **** 
 650:Generated_Source\PSoC4/CyLFClk.h ****     /*******************************************************************************
 651:Generated_Source\PSoC4/CyLFClk.h ****     * Function Name: CySysClkWcoSetHighPowerMode
 652:Generated_Source\PSoC4/CyLFClk.h ****     ********************************************************************************
 653:Generated_Source\PSoC4/CyLFClk.h ****     *
 654:Generated_Source\PSoC4/CyLFClk.h ****     * Summary:
 655:Generated_Source\PSoC4/CyLFClk.h ****     *  Sets the high power mode for the 32 KHz WCO.
 656:Generated_Source\PSoC4/CyLFClk.h ****     *
 657:Generated_Source\PSoC4/CyLFClk.h ****     *******************************************************************************/
 658:Generated_Source\PSoC4/CyLFClk.h ****     static CY_INLINE void CySysClkWcoSetHighPowerMode(void)
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 13


 659:Generated_Source\PSoC4/CyLFClk.h ****     {
  27              		.loc 1 659 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 660:Generated_Source\PSoC4/CyLFClk.h ****         /* Switch off low power mode for WCO */
 661:Generated_Source\PSoC4/CyLFClk.h ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_LPM_EN;
  32              		.loc 1 661 0
  33 0000 0120     		movs	r0, #1
  34 0002 0A4A     		ldr	r2, .L2
 662:Generated_Source\PSoC4/CyLFClk.h **** 
 663:Generated_Source\PSoC4/CyLFClk.h ****         /* Switch off auto low power mode in WCO */
 664:Generated_Source\PSoC4/CyLFClk.h ****         CY_SYS_CLK_WCO_CONFIG_REG &= ((uint32)~CY_SYS_CLK_WCO_CONFIG_LPM_AUTO);
 665:Generated_Source\PSoC4/CyLFClk.h **** 
 666:Generated_Source\PSoC4/CyLFClk.h ****         /* Restore WCO trim register HPM settings */
 667:Generated_Source\PSoC4/CyLFClk.h ****         CY_SYS_CLK_WCO_TRIM_REG = (CY_SYS_CLK_WCO_TRIM_REG & (uint32)(~CY_SYS_CLK_WCO_TRIM_GM_MASK)
 668:Generated_Source\PSoC4/CyLFClk.h ****                     | (uint32)(CY_SYS_CLK_WCO_TRIM_GM_HPM << CY_SYS_CLK_WCO_TRIM_GM_SHIFT);
 669:Generated_Source\PSoC4/CyLFClk.h ****         CY_SYS_CLK_WCO_TRIM_REG = (CY_SYS_CLK_WCO_TRIM_REG & (uint32)(~CY_SYS_CLK_WCO_TRIM_XGM_MASK
 670:Generated_Source\PSoC4/CyLFClk.h ****                     | (uint32)(CY_SYS_CLK_WCO_TRIM_XGM_2620NA << CY_SYS_CLK_WCO_TRIM_XGM_SHIFT);
 671:Generated_Source\PSoC4/CyLFClk.h ****     }
  35              		.loc 1 671 0
  36              		@ sp needed
 661:Generated_Source\PSoC4/CyLFClk.h **** 
  37              		.loc 1 661 0
  38 0004 1368     		ldr	r3, [r2]
  39 0006 8343     		bics	r3, r0
  40 0008 1360     		str	r3, [r2]
 664:Generated_Source\PSoC4/CyLFClk.h **** 
  41              		.loc 1 664 0
  42 000a 0223     		movs	r3, #2
  43 000c 1168     		ldr	r1, [r2]
  44 000e 9943     		bics	r1, r3
  45 0010 1160     		str	r1, [r2]
 667:Generated_Source\PSoC4/CyLFClk.h ****                     | (uint32)(CY_SYS_CLK_WCO_TRIM_GM_HPM << CY_SYS_CLK_WCO_TRIM_GM_SHIFT);
  46              		.loc 1 667 0
  47 0012 0749     		ldr	r1, .L2+4
 668:Generated_Source\PSoC4/CyLFClk.h ****         CY_SYS_CLK_WCO_TRIM_REG = (CY_SYS_CLK_WCO_TRIM_REG & (uint32)(~CY_SYS_CLK_WCO_TRIM_XGM_MASK
  48              		.loc 1 668 0
  49 0014 2E33     		adds	r3, r3, #46
 667:Generated_Source\PSoC4/CyLFClk.h ****                     | (uint32)(CY_SYS_CLK_WCO_TRIM_GM_HPM << CY_SYS_CLK_WCO_TRIM_GM_SHIFT);
  50              		.loc 1 667 0
  51 0016 0A68     		ldr	r2, [r1]
 668:Generated_Source\PSoC4/CyLFClk.h ****         CY_SYS_CLK_WCO_TRIM_REG = (CY_SYS_CLK_WCO_TRIM_REG & (uint32)(~CY_SYS_CLK_WCO_TRIM_XGM_MASK
  52              		.loc 1 668 0
  53 0018 9A43     		bics	r2, r3
  54 001a 203B     		subs	r3, r3, #32
  55 001c 1A43     		orrs	r2, r3
 667:Generated_Source\PSoC4/CyLFClk.h ****                     | (uint32)(CY_SYS_CLK_WCO_TRIM_GM_HPM << CY_SYS_CLK_WCO_TRIM_GM_SHIFT);
  56              		.loc 1 667 0
  57 001e 0A60     		str	r2, [r1]
 670:Generated_Source\PSoC4/CyLFClk.h ****     }
  58              		.loc 1 670 0
  59 0020 0722     		movs	r2, #7
 669:Generated_Source\PSoC4/CyLFClk.h ****                     | (uint32)(CY_SYS_CLK_WCO_TRIM_XGM_2620NA << CY_SYS_CLK_WCO_TRIM_XGM_SHIFT);
  60              		.loc 1 669 0
  61 0022 0B68     		ldr	r3, [r1]
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 14


 670:Generated_Source\PSoC4/CyLFClk.h ****     }
  62              		.loc 1 670 0
  63 0024 9343     		bics	r3, r2
  64 0026 0343     		orrs	r3, r0
 669:Generated_Source\PSoC4/CyLFClk.h ****                     | (uint32)(CY_SYS_CLK_WCO_TRIM_XGM_2620NA << CY_SYS_CLK_WCO_TRIM_XGM_SHIFT);
  65              		.loc 1 669 0
  66 0028 0B60     		str	r3, [r1]
  67              		.loc 1 671 0
  68 002a 7047     		bx	lr
  69              	.L3:
  70              		.align	2
  71              	.L2:
  72 002c 00000740 		.word	1074200576
  73 0030 000F0740 		.word	1074204416
  74              		.cfi_endproc
  75              	.LFE0:
  76              		.size	CySysClkWcoSetHighPowerMode, .-CySysClkWcoSetHighPowerMode
  77              		.section	.text.CySysClkIloStart,"ax",%progbits
  78              		.align	1
  79              		.global	CySysClkIloStart
  80              		.code	16
  81              		.thumb_func
  82              		.type	CySysClkIloStart, %function
  83              	CySysClkIloStart:
  84              	.LFB1:
  85              		.file 2 "Generated_Source\\PSoC4\\CyLFClk.c"
   1:Generated_Source\PSoC4/CyLFClk.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLFClk.c **** * \file .c
   3:Generated_Source\PSoC4/CyLFClk.c **** * \version 1.20
   4:Generated_Source\PSoC4/CyLFClk.c **** *
   5:Generated_Source\PSoC4/CyLFClk.c **** * \brief
   6:Generated_Source\PSoC4/CyLFClk.c **** *  This file provides the source code for configuring watchdog timers WDTs, 
   7:Generated_Source\PSoC4/CyLFClk.c **** *  low frequency clocks (LFCLK) and the Real-time Clock (RTC) component in
   8:Generated_Source\PSoC4/CyLFClk.c **** *  PSoC Creator for the PSoC 4 families.
   9:Generated_Source\PSoC4/CyLFClk.c **** *
  10:Generated_Source\PSoC4/CyLFClk.c **** ********************************************************************************
  11:Generated_Source\PSoC4/CyLFClk.c **** * \copyright
  12:Generated_Source\PSoC4/CyLFClk.c **** * Copyright 2008-2017, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/CyLFClk.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/CyLFClk.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/CyLFClk.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/CyLFClk.c **** 
  18:Generated_Source\PSoC4/CyLFClk.c **** 
  19:Generated_Source\PSoC4/CyLFClk.c **** #include "CyLFClk.h"
  20:Generated_Source\PSoC4/CyLFClk.c **** #include "CyLib.h"
  21:Generated_Source\PSoC4/CyLFClk.c **** 
  22:Generated_Source\PSoC4/CyLFClk.c **** #if (CY_IP_WCO && CY_IP_SRSSV2)
  23:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkGetLfclkSource(void);
  24:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_WCO && CY_IP_SRSSV2) */
  25:Generated_Source\PSoC4/CyLFClk.c **** 
  26:Generated_Source\PSoC4/CyLFClk.c **** 
  27:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2 && (!CY_IP_CPUSS))
  28:Generated_Source\PSoC4/CyLFClk.c ****     /* Default Ilo Trim Register value for ILO trimming*/
  29:Generated_Source\PSoC4/CyLFClk.c ****     static volatile uint16 defaultIloTrimRegValue = CY_SYS_CLK_ILO_TRIM_DEFAULT_VALUE;
  30:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2 && (!CY_IP_CPUSS)) */
  31:Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 15


  32:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2)
  33:Generated_Source\PSoC4/CyLFClk.c ****     /* CySysClkLfclkPosedgeCatch() / CySysClkLfclkPosedgeRestore() */
  34:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 lfclkPosedgeWdtCounter0Enabled = 0u;
  35:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 lfclkPosedgeWdtCounter0Mode    = CY_SYS_WDT_MODE_NONE;
  36:Generated_Source\PSoC4/CyLFClk.c **** 
  37:Generated_Source\PSoC4/CyLFClk.c ****     static volatile uint32 disableServicedIsr = 0uL;
  38:Generated_Source\PSoC4/CyLFClk.c ****     static volatile uint32 wdtIsrMask = CY_SYS_WDT_COUNTER0_INT |\
  39:Generated_Source\PSoC4/CyLFClk.c ****                                         CY_SYS_WDT_COUNTER1_INT |\
  40:Generated_Source\PSoC4/CyLFClk.c ****                                         CY_SYS_WDT_COUNTER2_INT;
  41:Generated_Source\PSoC4/CyLFClk.c **** 
  42:Generated_Source\PSoC4/CyLFClk.c ****     static const uint32 counterIntMaskTbl[CY_WDT_NUM_OF_WDT] = {CY_SYS_WDT_COUNTER0_INT,
  43:Generated_Source\PSoC4/CyLFClk.c ****                                                                 CY_SYS_WDT_COUNTER1_INT,
  44:Generated_Source\PSoC4/CyLFClk.c ****                                                                 CY_SYS_WDT_COUNTER2_INT};
  45:Generated_Source\PSoC4/CyLFClk.c **** 
  46:Generated_Source\PSoC4/CyLFClk.c ****     static void CySysClkLfclkPosedgeCatch(void);
  47:Generated_Source\PSoC4/CyLFClk.c ****     static void CySysClkLfclkPosedgeRestore(void);
  48:Generated_Source\PSoC4/CyLFClk.c **** 
  49:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysWdtLocked(void);
  50:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkIloEnabled(void);
  51:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2) */
  52:Generated_Source\PSoC4/CyLFClk.c **** 
  53:Generated_Source\PSoC4/CyLFClk.c **** #if (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
  54:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkGetTimerSource(void);
  55:Generated_Source\PSoC4/CyLFClk.c ****     static volatile uint32 disableTimerServicedIsr = 0uL;
  56:Generated_Source\PSoC4/CyLFClk.c ****     static volatile uint32 timerIsrMask = CY_SYS_TIMER0_INT |\
  57:Generated_Source\PSoC4/CyLFClk.c ****                                           CY_SYS_TIMER1_INT |\
  58:Generated_Source\PSoC4/CyLFClk.c ****                                           CY_SYS_TIMER2_INT;
  59:Generated_Source\PSoC4/CyLFClk.c **** 
  60:Generated_Source\PSoC4/CyLFClk.c ****     static const uint32 counterTimerIntMaskTbl[CY_SYS_NUM_OF_TIMERS] = {CY_SYS_TIMER0_INT,
  61:Generated_Source\PSoC4/CyLFClk.c ****                                                                         CY_SYS_TIMER1_INT,
  62:Generated_Source\PSoC4/CyLFClk.c ****                                                                         CY_SYS_TIMER2_INT};
  63:Generated_Source\PSoC4/CyLFClk.c **** 
  64:Generated_Source\PSoC4/CyLFClk.c ****     static cyTimerCallback cySysTimerCallback[CY_SYS_NUM_OF_TIMERS] = {(void *)0, (void *)0, (void 
  65:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_DWT_EN) */
  66:Generated_Source\PSoC4/CyLFClk.c **** 
  67:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2)
  68:Generated_Source\PSoC4/CyLFClk.c ****     static cyWdtCallback cySysWdtCallback[CY_WDT_NUM_OF_WDT] = {(void *)0, (void *)0, (void *)0};
  69:Generated_Source\PSoC4/CyLFClk.c **** #else
  70:Generated_Source\PSoC4/CyLFClk.c ****     static cyWdtCallback cySysWdtCallback = (void *)0;
  71:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2) */
  72:Generated_Source\PSoC4/CyLFClk.c **** 
  73:Generated_Source\PSoC4/CyLFClk.c **** 
  74:Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
  75:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloStart
  76:Generated_Source\PSoC4/CyLFClk.c **** ****************************************************************************//**
  77:Generated_Source\PSoC4/CyLFClk.c **** * \brief
  78:Generated_Source\PSoC4/CyLFClk.c **** *  Enables ILO.
  79:Generated_Source\PSoC4/CyLFClk.c **** *
  80:Generated_Source\PSoC4/CyLFClk.c **** *  Refer to the device datasheet for the ILO startup time.
  81:Generated_Source\PSoC4/CyLFClk.c **** *
  82:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
  83:Generated_Source\PSoC4/CyLFClk.c **** void CySysClkIloStart(void)
  84:Generated_Source\PSoC4/CyLFClk.c **** {
  86              		.loc 2 84 0
  87              		.cfi_startproc
  88              		@ args = 0, pretend = 0, frame = 0
  89              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 16


  90              		@ link register save eliminated.
  85:Generated_Source\PSoC4/CyLFClk.c ****     CY_SYS_CLK_ILO_CONFIG_REG |= CY_SYS_CLK_ILO_CONFIG_ENABLE;
  91              		.loc 2 85 0
  92 0000 8021     		movs	r1, #128
  93 0002 034A     		ldr	r2, .L5
  94 0004 0906     		lsls	r1, r1, #24
  95 0006 1368     		ldr	r3, [r2]
  86:Generated_Source\PSoC4/CyLFClk.c **** }
  96              		.loc 2 86 0
  97              		@ sp needed
  85:Generated_Source\PSoC4/CyLFClk.c ****     CY_SYS_CLK_ILO_CONFIG_REG |= CY_SYS_CLK_ILO_CONFIG_ENABLE;
  98              		.loc 2 85 0
  99 0008 0B43     		orrs	r3, r1
 100 000a 1360     		str	r3, [r2]
 101              		.loc 2 86 0
 102 000c 7047     		bx	lr
 103              	.L6:
 104 000e C046     		.align	2
 105              	.L5:
 106 0010 2C000340 		.word	1073938476
 107              		.cfi_endproc
 108              	.LFE1:
 109              		.size	CySysClkIloStart, .-CySysClkIloStart
 110              		.section	.text.CySysClkIloStop,"ax",%progbits
 111              		.align	1
 112              		.global	CySysClkIloStop
 113              		.code	16
 114              		.thumb_func
 115              		.type	CySysClkIloStop, %function
 116              	CySysClkIloStop:
 117              	.LFB2:
  87:Generated_Source\PSoC4/CyLFClk.c **** 
  88:Generated_Source\PSoC4/CyLFClk.c **** 
  89:Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
  90:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloStop
  91:Generated_Source\PSoC4/CyLFClk.c **** ****************************************************************************//**
  92:Generated_Source\PSoC4/CyLFClk.c **** * \brief
  93:Generated_Source\PSoC4/CyLFClk.c **** *  Disables the ILO.
  94:Generated_Source\PSoC4/CyLFClk.c **** *
  95:Generated_Source\PSoC4/CyLFClk.c **** *  This function has no effect if WDT is locked (CySysWdtLock() is
  96:Generated_Source\PSoC4/CyLFClk.c **** *  called). Call CySysWdtUnlock() to unlock WDT and stop ILO.
  97:Generated_Source\PSoC4/CyLFClk.c **** *
  98:Generated_Source\PSoC4/CyLFClk.c **** *  PSoC 4100 / PSoC 4200: Note that ILO is required for WDT's operation.
  99:Generated_Source\PSoC4/CyLFClk.c **** *
 100:Generated_Source\PSoC4/CyLFClk.c **** *  PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L / PSoC 4100M / 
 101:Generated_Source\PSoC4/CyLFClk.c **** *  PSoC 4200M:
 102:Generated_Source\PSoC4/CyLFClk.c **** *  Stopping ILO affects the peripheral clocked by LFCLK, if
 103:Generated_Source\PSoC4/CyLFClk.c **** *  LFCLK is configured to be sourced by ILO.
 104:Generated_Source\PSoC4/CyLFClk.c **** *
 105:Generated_Source\PSoC4/CyLFClk.c **** *  If the ILO is disabled, all blocks run by ILO will stop functioning.
 106:Generated_Source\PSoC4/CyLFClk.c **** *
 107:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
 108:Generated_Source\PSoC4/CyLFClk.c **** void CySysClkIloStop(void)
 109:Generated_Source\PSoC4/CyLFClk.c **** {
 118              		.loc 2 109 0
 119              		.cfi_startproc
 120              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 17


 121              		@ frame_needed = 0, uses_anonymous_args = 0
 122              		@ link register save eliminated.
 110:Generated_Source\PSoC4/CyLFClk.c ****     #if(CY_IP_SRSSV2)
 111:Generated_Source\PSoC4/CyLFClk.c ****         uint8  interruptState;
 112:Generated_Source\PSoC4/CyLFClk.c **** 
 113:Generated_Source\PSoC4/CyLFClk.c ****         /* Do nothing if WDT is locked or ILO is disabled */
 114:Generated_Source\PSoC4/CyLFClk.c ****         if (0u == CySysWdtLocked())
 115:Generated_Source\PSoC4/CyLFClk.c ****         {
 116:Generated_Source\PSoC4/CyLFClk.c ****             if (0u != CySysClkIloEnabled())
 117:Generated_Source\PSoC4/CyLFClk.c ****             {
 118:Generated_Source\PSoC4/CyLFClk.c **** 
 119:Generated_Source\PSoC4/CyLFClk.c ****             #if (CY_IP_WCO)
 120:Generated_Source\PSoC4/CyLFClk.c ****                 if (CY_SYS_CLK_LFCLK_SRC_ILO == CySysClkGetLfclkSource())
 121:Generated_Source\PSoC4/CyLFClk.c ****                 {
 122:Generated_Source\PSoC4/CyLFClk.c ****             #endif /* (CY_IP_WCO) */
 123:Generated_Source\PSoC4/CyLFClk.c **** 
 124:Generated_Source\PSoC4/CyLFClk.c ****                 interruptState = CyEnterCriticalSection();
 125:Generated_Source\PSoC4/CyLFClk.c ****                 CySysClkLfclkPosedgeCatch();
 126:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CLK_ILO_CONFIG_REG &= (uint32) ( ~(uint32)CY_SYS_CLK_ILO_CONFIG_ENABLE);
 127:Generated_Source\PSoC4/CyLFClk.c ****                 CySysClkLfclkPosedgeRestore();
 128:Generated_Source\PSoC4/CyLFClk.c ****                 CyExitCriticalSection(interruptState);
 129:Generated_Source\PSoC4/CyLFClk.c **** 
 130:Generated_Source\PSoC4/CyLFClk.c ****             #if (CY_IP_WCO)
 131:Generated_Source\PSoC4/CyLFClk.c ****                 }
 132:Generated_Source\PSoC4/CyLFClk.c ****                 else /* Safe to disable - shortened pulse does not impact peripheral */
 133:Generated_Source\PSoC4/CyLFClk.c ****                 {
 134:Generated_Source\PSoC4/CyLFClk.c ****                     CY_SYS_CLK_ILO_CONFIG_REG &= (uint32) ( ~(uint32)CY_SYS_CLK_ILO_CONFIG_ENABLE);
 135:Generated_Source\PSoC4/CyLFClk.c ****                 }
 136:Generated_Source\PSoC4/CyLFClk.c ****             #endif /* (CY_IP_WCO) */
 137:Generated_Source\PSoC4/CyLFClk.c **** 
 138:Generated_Source\PSoC4/CyLFClk.c ****             }
 139:Generated_Source\PSoC4/CyLFClk.c ****         }
 140:Generated_Source\PSoC4/CyLFClk.c ****     #else
 141:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_CLK_ILO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_ILO_CONFIG_ENABLE);
 123              		.loc 2 141 0
 124 0000 024A     		ldr	r2, .L8
 142:Generated_Source\PSoC4/CyLFClk.c ****     #endif /* (CY_IP_SRSSV2) */
 143:Generated_Source\PSoC4/CyLFClk.c **** }
 125              		.loc 2 143 0
 126              		@ sp needed
 141:Generated_Source\PSoC4/CyLFClk.c ****     #endif /* (CY_IP_SRSSV2) */
 127              		.loc 2 141 0
 128 0002 1368     		ldr	r3, [r2]
 129 0004 5B00     		lsls	r3, r3, #1
 130 0006 5B08     		lsrs	r3, r3, #1
 131 0008 1360     		str	r3, [r2]
 132              		.loc 2 143 0
 133 000a 7047     		bx	lr
 134              	.L9:
 135              		.align	2
 136              	.L8:
 137 000c 2C000340 		.word	1073938476
 138              		.cfi_endproc
 139              	.LFE2:
 140              		.size	CySysClkIloStop, .-CySysClkIloStop
 141              		.section	.text.CySysClkIloStartMeasurement,"ax",%progbits
 142              		.align	1
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 18


 143              		.global	CySysClkIloStartMeasurement
 144              		.code	16
 145              		.thumb_func
 146              		.type	CySysClkIloStartMeasurement, %function
 147              	CySysClkIloStartMeasurement:
 148              	.LFB3:
 144:Generated_Source\PSoC4/CyLFClk.c **** 
 145:Generated_Source\PSoC4/CyLFClk.c **** 
 146:Generated_Source\PSoC4/CyLFClk.c **** /******************************************************************************
 147:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloStartMeasurement
 148:Generated_Source\PSoC4/CyLFClk.c **** ***************************************************************************//**
 149:Generated_Source\PSoC4/CyLFClk.c **** * \brief
 150:Generated_Source\PSoC4/CyLFClk.c **** * Starts the ILO accuracy measurement.
 151:Generated_Source\PSoC4/CyLFClk.c **** *
 152:Generated_Source\PSoC4/CyLFClk.c **** * This function is non-blocking and needs to be called before using the 
 153:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloTrim() and CySysClkIloCompensate() API.
 154:Generated_Source\PSoC4/CyLFClk.c **** *
 155:Generated_Source\PSoC4/CyLFClk.c **** * This API configures measurement counters to be sourced by SysClk (Counter 1)
 156:Generated_Source\PSoC4/CyLFClk.c **** * and ILO (Counter 2). 
 157:Generated_Source\PSoC4/CyLFClk.c **** *
 158:Generated_Source\PSoC4/CyLFClk.c **** * \note SysClk should be sourced by IMO. Otherwise CySysClkIloTrim() and 
 159:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloCompensate() API can give incorrect results.
 160:Generated_Source\PSoC4/CyLFClk.c **** *
 161:Generated_Source\PSoC4/CyLFClk.c **** * In addition, this API stores the factory ILO trim settings on the first call 
 162:Generated_Source\PSoC4/CyLFClk.c **** * after reset. This stored factory setting is used by the 
 163:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloRestoreFactoryTrim() API to restore the ILO factory trim. 
 164:Generated_Source\PSoC4/CyLFClk.c **** * Hence, it is important to call this API before restoring the ILO 
 165:Generated_Source\PSoC4/CyLFClk.c **** * factory trim settings.
 166:Generated_Source\PSoC4/CyLFClk.c **** *
 167:Generated_Source\PSoC4/CyLFClk.c **** ******************************************************************************/
 168:Generated_Source\PSoC4/CyLFClk.c **** void CySysClkIloStartMeasurement(void)
 169:Generated_Source\PSoC4/CyLFClk.c **** {
 149              		.loc 2 169 0
 150              		.cfi_startproc
 151              		@ args = 0, pretend = 0, frame = 0
 152              		@ frame_needed = 0, uses_anonymous_args = 0
 153              		@ link register save eliminated.
 170:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2 && (!CY_IP_CPUSS))
 171:Generated_Source\PSoC4/CyLFClk.c ****     static uint8 iloTrimTrig = 0u;
 172:Generated_Source\PSoC4/CyLFClk.c **** 
 173:Generated_Source\PSoC4/CyLFClk.c ****     /* Write default ILO trim value while ILO starting ( Cypress ID 225244 )*/
 174:Generated_Source\PSoC4/CyLFClk.c ****     if (0u == iloTrimTrig)
 175:Generated_Source\PSoC4/CyLFClk.c ****     {
 176:Generated_Source\PSoC4/CyLFClk.c ****         defaultIloTrimRegValue = ((uint8)(CY_SYS_CLK_ILO_TRIM_REG & CY_SYS_CLK_ILO_TRIM_MASK));
 177:Generated_Source\PSoC4/CyLFClk.c ****         iloTrimTrig = 1u;
 178:Generated_Source\PSoC4/CyLFClk.c ****     }
 179:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2 && (!CY_IP_CPUSS)) */
 180:Generated_Source\PSoC4/CyLFClk.c **** 
 181:Generated_Source\PSoC4/CyLFClk.c ****     /* Configure measurement counters to source by SysClk (Counter 1) and ILO (Counter 2)*/
 182:Generated_Source\PSoC4/CyLFClk.c ****     CY_SYS_CLK_DFT_REG = (CY_SYS_CLK_DFT_REG & (uint32) ~CY_SYS_CLK_DFT_SELECT_DEFAULT_MASK) |
 154              		.loc 2 182 0
 155 0000 074A     		ldr	r2, .L11
 156 0002 084B     		ldr	r3, .L11+4
 157 0004 1168     		ldr	r1, [r2]
 183:Generated_Source\PSoC4/CyLFClk.c ****                             CY_SYS_CLK_SEL_ILO_DFT_SOURCE; 
 184:Generated_Source\PSoC4/CyLFClk.c **** 
 185:Generated_Source\PSoC4/CyLFClk.c ****     CY_SYS_TST_DDFT_CTRL_REG = (CY_SYS_TST_DDFT_CTRL_REG & (uint32) ~ CY_SYS_TST_DDFT_CTRL_REG_DEFA
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 19


 186:Generated_Source\PSoC4/CyLFClk.c ****                             CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1;
 187:Generated_Source\PSoC4/CyLFClk.c **** }
 158              		.loc 2 187 0
 159              		@ sp needed
 182:Generated_Source\PSoC4/CyLFClk.c ****                             CY_SYS_CLK_SEL_ILO_DFT_SOURCE; 
 160              		.loc 2 182 0
 161 0006 0B40     		ands	r3, r1
 162 0008 8021     		movs	r1, #128
 163 000a 4900     		lsls	r1, r1, #1
 164 000c 0B43     		orrs	r3, r1
 165 000e 1360     		str	r3, [r2]
 185:Generated_Source\PSoC4/CyLFClk.c ****                             CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1;
 166              		.loc 2 185 0
 167 0010 054A     		ldr	r2, .L11+8
 168 0012 064B     		ldr	r3, .L11+12
 169 0014 1168     		ldr	r1, [r2]
 170 0016 0B40     		ands	r3, r1
 171 0018 0549     		ldr	r1, .L11+16
 172 001a 0B43     		orrs	r3, r1
 173 001c 1360     		str	r3, [r2]
 174              		.loc 2 187 0
 175 001e 7047     		bx	lr
 176              	.L12:
 177              		.align	2
 178              	.L11:
 179 0020 34000340 		.word	1073938484
 180 0024 FFF0FFFF 		.word	-3841
 181 0028 18000340 		.word	1073938456
 182 002c F0F0FFFF 		.word	-3856
 183 0030 08090000 		.word	2312
 184              		.cfi_endproc
 185              	.LFE3:
 186              		.size	CySysClkIloStartMeasurement, .-CySysClkIloStartMeasurement
 187              		.section	.text.CySysClkIloStopMeasurement,"ax",%progbits
 188              		.align	1
 189              		.global	CySysClkIloStopMeasurement
 190              		.code	16
 191              		.thumb_func
 192              		.type	CySysClkIloStopMeasurement, %function
 193              	CySysClkIloStopMeasurement:
 194              	.LFB4:
 188:Generated_Source\PSoC4/CyLFClk.c **** 
 189:Generated_Source\PSoC4/CyLFClk.c **** 
 190:Generated_Source\PSoC4/CyLFClk.c **** /******************************************************************************
 191:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloStopMeasurement
 192:Generated_Source\PSoC4/CyLFClk.c **** ***************************************************************************//**
 193:Generated_Source\PSoC4/CyLFClk.c **** * \brief
 194:Generated_Source\PSoC4/CyLFClk.c **** * Stops the ILO accuracy measurement.
 195:Generated_Source\PSoC4/CyLFClk.c **** *
 196:Generated_Source\PSoC4/CyLFClk.c **** * Calling this function immediately stops the the ILO frequency measurement.
 197:Generated_Source\PSoC4/CyLFClk.c **** * This function should be called before placing the device to deepsleep, if 
 198:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloStartMeasurement() API was called before. 
 199:Generated_Source\PSoC4/CyLFClk.c **** *
 200:Generated_Source\PSoC4/CyLFClk.c **** ******************************************************************************/
 201:Generated_Source\PSoC4/CyLFClk.c **** void CySysClkIloStopMeasurement(void)
 202:Generated_Source\PSoC4/CyLFClk.c **** {
 195              		.loc 2 202 0
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 20


 196              		.cfi_startproc
 197              		@ args = 0, pretend = 0, frame = 0
 198              		@ frame_needed = 0, uses_anonymous_args = 0
 199              		@ link register save eliminated.
 203:Generated_Source\PSoC4/CyLFClk.c ****     /* Set default configurations in 11...8 DFT register bits to zero */
 204:Generated_Source\PSoC4/CyLFClk.c ****     CY_SYS_CLK_DFT_REG &= ~CY_SYS_CLK_DFT_SELECT_DEFAULT_MASK;
 200              		.loc 2 204 0
 201 0000 054A     		ldr	r2, .L14
 202 0002 064B     		ldr	r3, .L14+4
 203 0004 1168     		ldr	r1, [r2]
 205:Generated_Source\PSoC4/CyLFClk.c ****     #if(CY_IP_SRSSLT)
 206:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_TST_DDFT_CTRL_REG &= ((uint32) CY_SYS_TST_DDFT_CTRL_REG_DEFAULT_MASK);
 207:Generated_Source\PSoC4/CyLFClk.c ****     #endif /* (CY_IP_SRSSLT) */
 208:Generated_Source\PSoC4/CyLFClk.c **** }
 204              		.loc 2 208 0
 205              		@ sp needed
 204:Generated_Source\PSoC4/CyLFClk.c ****     #if(CY_IP_SRSSLT)
 206              		.loc 2 204 0
 207 0006 0B40     		ands	r3, r1
 208 0008 1360     		str	r3, [r2]
 206:Generated_Source\PSoC4/CyLFClk.c ****     #endif /* (CY_IP_SRSSLT) */
 209              		.loc 2 206 0
 210 000a 054A     		ldr	r2, .L14+8
 211 000c 054B     		ldr	r3, .L14+12
 212 000e 1168     		ldr	r1, [r2]
 213 0010 0B40     		ands	r3, r1
 214 0012 1360     		str	r3, [r2]
 215              		.loc 2 208 0
 216 0014 7047     		bx	lr
 217              	.L15:
 218 0016 C046     		.align	2
 219              	.L14:
 220 0018 34000340 		.word	1073938484
 221 001c FFF0FFFF 		.word	-3841
 222 0020 18000340 		.word	1073938456
 223 0024 0F0F0000 		.word	3855
 224              		.cfi_endproc
 225              	.LFE4:
 226              		.size	CySysClkIloStopMeasurement, .-CySysClkIloStopMeasurement
 227              		.global	__aeabi_uidiv
 228              		.section	.text.CySysClkIloCompensate,"ax",%progbits
 229              		.align	1
 230              		.global	CySysClkIloCompensate
 231              		.code	16
 232              		.thumb_func
 233              		.type	CySysClkIloCompensate, %function
 234              	CySysClkIloCompensate:
 235              	.LFB5:
 209:Generated_Source\PSoC4/CyLFClk.c **** 
 210:Generated_Source\PSoC4/CyLFClk.c **** 
 211:Generated_Source\PSoC4/CyLFClk.c **** /******************************************************************************
 212:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloCompensate
 213:Generated_Source\PSoC4/CyLFClk.c **** ***************************************************************************//**
 214:Generated_Source\PSoC4/CyLFClk.c **** * \brief
 215:Generated_Source\PSoC4/CyLFClk.c **** * This API measures the current ILO accuracy.
 216:Generated_Source\PSoC4/CyLFClk.c **** *
 217:Generated_Source\PSoC4/CyLFClk.c **** * Basing on the measured frequency the required number of ILO cycles for a 
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 21


 218:Generated_Source\PSoC4/CyLFClk.c **** * given delay (in microseconds) is obtained. The desired delay that needs to 
 219:Generated_Source\PSoC4/CyLFClk.c **** * be compensated is passed through the desiredDelay parameter. The compensated 
 220:Generated_Source\PSoC4/CyLFClk.c **** * cycle count is returned through the compesatedCycles pointer.
 221:Generated_Source\PSoC4/CyLFClk.c **** * The compensated ILO cycles can then be used to define the WDT period value, 
 222:Generated_Source\PSoC4/CyLFClk.c **** * effectively compensating for the ILO inaccuracy and allowing a more 
 223:Generated_Source\PSoC4/CyLFClk.c **** * accurate WDT interrupt generation.
 224:Generated_Source\PSoC4/CyLFClk.c **** *
 225:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloStartMeasurement() API should be called prior to calling this API. 
 226:Generated_Source\PSoC4/CyLFClk.c **** *
 227:Generated_Source\PSoC4/CyLFClk.c **** * \note SysClk should be sourced by IMO. Otherwise CySysClkIloTrim() and 
 228:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloCompensate() API can give incorrect results.
 229:Generated_Source\PSoC4/CyLFClk.c **** *
 230:Generated_Source\PSoC4/CyLFClk.c **** * \note If the System clock frequency is changed in runtime, the CyDelayFreq() 
 231:Generated_Source\PSoC4/CyLFClk.c **** * with the appropriate parameter (Frequency of bus clock in Hertz) should be 
 232:Generated_Source\PSoC4/CyLFClk.c **** * called before calling a next CySysClkIloCompensate().
 233:Generated_Source\PSoC4/CyLFClk.c **** *
 234:Generated_Source\PSoC4/CyLFClk.c **** * \warning Do not enter deep sleep mode until the function returns CYRET_SUCCESS.
 235:Generated_Source\PSoC4/CyLFClk.c **** *
 236:Generated_Source\PSoC4/CyLFClk.c **** * \param desiredDelay Required delay in microseconds.
 237:Generated_Source\PSoC4/CyLFClk.c **** *
 238:Generated_Source\PSoC4/CyLFClk.c **** * \param *compensatedCycles The pointer to the variable in which the required
 239:Generated_Source\PSoC4/CyLFClk.c **** * number of ILO cycles for the given delay will be returned.
 240:Generated_Source\PSoC4/CyLFClk.c **** *
 241:Generated_Source\PSoC4/CyLFClk.c **** * \details
 242:Generated_Source\PSoC4/CyLFClk.c **** * The value returned in *compensatedCycles pointer is not valid until the 
 243:Generated_Source\PSoC4/CyLFClk.c **** * function returns CYRET_SUCCESS.
 244:Generated_Source\PSoC4/CyLFClk.c **** *
 245:Generated_Source\PSoC4/CyLFClk.c **** * The desiredDelay parameter value should be in next range: <br>From 100 to 
 246:Generated_Source\PSoC4/CyLFClk.c **** * 2 000 000 microseconds for PSoC 4000 / PSoC 4000S / PSoC 4100S / PSoC Analog 
 247:Generated_Source\PSoC4/CyLFClk.c **** * Coprocessor devices.<br>From 100 to 4 000 000 000 microseconds for 
 248:Generated_Source\PSoC4/CyLFClk.c **** * PSoC 4100 / PSoC 4200 / PSoC 4100 BLE / PSoC 4200 BLE / PRoC BLE /
 249:Generated_Source\PSoC4/CyLFClk.c **** * PSoC 4200L / PSoC 4100M /PSoC 4200M devices.
 250:Generated_Source\PSoC4/CyLFClk.c **** *
 251:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_SUCCESS - The compensation process is complete and the 
 252:Generated_Source\PSoC4/CyLFClk.c **** * compensated cycles value is returned in the compensatedCycles pointer.
 253:Generated_Source\PSoC4/CyLFClk.c **** *
 254:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_STARTED - Indicates measurement is in progress. It is 
 255:Generated_Source\PSoC4/CyLFClk.c **** * strongly recommended to do not make pauses between API calling. The 
 256:Generated_Source\PSoC4/CyLFClk.c **** * function should be called repeatedly until the API returns CYRET_SUCCESS.
 257:Generated_Source\PSoC4/CyLFClk.c **** *
 258:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_INVALID_STATE - Indicates that measurement not started. 
 259:Generated_Source\PSoC4/CyLFClk.c **** * The user should call CySysClkIloStartMeasurement() API before calling 
 260:Generated_Source\PSoC4/CyLFClk.c **** * this API.
 261:Generated_Source\PSoC4/CyLFClk.c **** *
 262:Generated_Source\PSoC4/CyLFClk.c **** * \note For a correct WDT or DeepSleep Timers functioning with ILO compensating 
 263:Generated_Source\PSoC4/CyLFClk.c **** * the CySysClkIloCompensate() should be called before WDT or DeepSleep Timers 
 264:Generated_Source\PSoC4/CyLFClk.c **** * enabling.
 265:Generated_Source\PSoC4/CyLFClk.c **** *
 266:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
 267:Generated_Source\PSoC4/CyLFClk.c **** cystatus CySysClkIloCompensate(uint32 desiredDelay , uint32* compensatedCycles)
 268:Generated_Source\PSoC4/CyLFClk.c **** {
 236              		.loc 2 268 0
 237              		.cfi_startproc
 238              		@ args = 0, pretend = 0, frame = 0
 239              		@ frame_needed = 0, uses_anonymous_args = 0
 240              	.LVL0:
 241 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 22


 242              		.cfi_def_cfa_offset 24
 243              		.cfi_offset 3, -24
 244              		.cfi_offset 4, -20
 245              		.cfi_offset 5, -16
 246              		.cfi_offset 6, -12
 247              		.cfi_offset 7, -8
 248              		.cfi_offset 14, -4
 249              		.loc 2 268 0
 250 0002 0F00     		movs	r7, r1
 269:Generated_Source\PSoC4/CyLFClk.c ****     uint32 iloCompensatedCycles;
 270:Generated_Source\PSoC4/CyLFClk.c ****     uint32 desiredDelayInCounts;
 271:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 compensateRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 272:Generated_Source\PSoC4/CyLFClk.c ****     uint32 checkStatus;
 273:Generated_Source\PSoC4/CyLFClk.c ****     cystatus returnStatus;
 274:Generated_Source\PSoC4/CyLFClk.c **** 
 275:Generated_Source\PSoC4/CyLFClk.c ****     checkStatus = (uint32) (CY_SYS_CLK_DFT_REG & (uint32) CY_SYS_TST_DDFT_CTRL_REG_DEFAULT_MASK);
 276:Generated_Source\PSoC4/CyLFClk.c **** 
 277:Generated_Source\PSoC4/CyLFClk.c ****     /* Check if CySysStartMeasurement was called before */
 278:Generated_Source\PSoC4/CyLFClk.c ****     if((checkStatus == CY_SYS_CLK_SEL_ILO_DFT_SOURCE) && 
 251              		.loc 2 278 0
 252 0004 8021     		movs	r1, #128
 253              	.LVL1:
 275:Generated_Source\PSoC4/CyLFClk.c **** 
 254              		.loc 2 275 0
 255 0006 2A4B     		ldr	r3, .L29
 256              		.loc 2 278 0
 257 0008 4900     		lsls	r1, r1, #1
 275:Generated_Source\PSoC4/CyLFClk.c **** 
 258              		.loc 2 275 0
 259 000a 1A68     		ldr	r2, [r3]
 260              	.LVL2:
 261              		.loc 2 278 0
 262 000c 294B     		ldr	r3, .L29+4
 263 000e 1A40     		ands	r2, r3
 264              	.LVL3:
 279:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_TST_DDFT_CTRL_REG == CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1) &&
 280:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_CLK_MAX_DELAY_US >= desiredDelay) &&
 281:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_CLK_MIN_DELAY_US <= desiredDelay) &&
 282:Generated_Source\PSoC4/CyLFClk.c ****        (compensatedCycles !=  NULL))
 283:Generated_Source\PSoC4/CyLFClk.c ****     {
 284:Generated_Source\PSoC4/CyLFClk.c ****         if(CY_SYS_CLK_TRIM_OR_COMP_FINISHED != compensateRunningStatus)
 285:Generated_Source\PSoC4/CyLFClk.c ****         {
 286:Generated_Source\PSoC4/CyLFClk.c ****             /* Wait until counter 1 stopped counting and after it calculate compensated cycles */
 287:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_CNT_REG1_REG & CY_SYS_CLK_ILO_CALIBR_COMPLETE_MASK))
 288:Generated_Source\PSoC4/CyLFClk.c ****             {
 289:Generated_Source\PSoC4/CyLFClk.c ****                 if (0u != CY_SYS_CNT_REG2_REG)
 290:Generated_Source\PSoC4/CyLFClk.c ****                 {
 291:Generated_Source\PSoC4/CyLFClk.c ****                     /* Calculate required number of ILO cycles for given delay */
 292:Generated_Source\PSoC4/CyLFClk.c ****                     #if(CY_IP_SRSSV2)
 293:Generated_Source\PSoC4/CyLFClk.c ****                         if (CY_SYS_CLK_DELAY_COUNTS_LIMIT < desiredDelay)
 294:Generated_Source\PSoC4/CyLFClk.c ****                         {
 295:Generated_Source\PSoC4/CyLFClk.c ****                             desiredDelayInCounts = (desiredDelay / CY_SYS_CLK_ILO_PERIOD);
 296:Generated_Source\PSoC4/CyLFClk.c ****                             iloCompensatedCycles = 
 297:Generated_Source\PSoC4/CyLFClk.c ****                             (((CY_SYS_CNT_REG2_REG * cydelayFreqHz) / (cydelayFreqHz >> CY_SYS_CLK_
 298:Generated_Source\PSoC4/CyLFClk.c ****                                 CY_SYS_CLK_ILO_FREQ_2MSB) * (desiredDelayInCounts / CY_SYS_CLK_ILO_
 299:Generated_Source\PSoC4/CyLFClk.c ****                         }
 300:Generated_Source\PSoC4/CyLFClk.c ****                         else
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 23


 301:Generated_Source\PSoC4/CyLFClk.c ****                         {
 302:Generated_Source\PSoC4/CyLFClk.c ****                             desiredDelayInCounts = ((desiredDelay * CY_SYS_CLK_COEF_PHUNDRED) + 
 303:Generated_Source\PSoC4/CyLFClk.c ****                                                      CY_SYS_CLK_HALF_OF_CLOCK) / CY_SYS_CLK_ILO_PER
 304:Generated_Source\PSoC4/CyLFClk.c **** 
 305:Generated_Source\PSoC4/CyLFClk.c ****                             iloCompensatedCycles = (((CY_SYS_CNT_REG2_REG * cydelayFreqHz) / 
 306:Generated_Source\PSoC4/CyLFClk.c ****                                                      (cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER))
 307:Generated_Source\PSoC4/CyLFClk.c ****                                                      desiredDelayInCounts) / CY_SYS_CLK_ILO_DESIRED
 308:Generated_Source\PSoC4/CyLFClk.c ****                         }
 309:Generated_Source\PSoC4/CyLFClk.c ****                     #else /* (CY_IP_SRSSLT) */
 310:Generated_Source\PSoC4/CyLFClk.c ****                         desiredDelayInCounts = ((desiredDelay * CY_SYS_CLK_COEF_PHUNDRED) + CY_SYS_
 311:Generated_Source\PSoC4/CyLFClk.c ****                                                                                            CY_SYS_C
 312:Generated_Source\PSoC4/CyLFClk.c ****                         if(CY_SYS_CLK_MAX_LITE_NUMBER < desiredDelayInCounts)
 313:Generated_Source\PSoC4/CyLFClk.c ****                         {
 314:Generated_Source\PSoC4/CyLFClk.c ****                             iloCompensatedCycles = (((CY_SYS_CNT_REG2_REG * cydelayFreqHz) / (cydel
 315:Generated_Source\PSoC4/CyLFClk.c ****                                                    CY_SYS_CLK_SYS_CLK_DEVIDER)) / CY_SYS_CLK_ILO_FR
 316:Generated_Source\PSoC4/CyLFClk.c ****                                                    (desiredDelayInCounts / CY_SYS_CLK_ILO_FREQ_3LSB
 317:Generated_Source\PSoC4/CyLFClk.c ****                         }
 318:Generated_Source\PSoC4/CyLFClk.c ****                         else
 319:Generated_Source\PSoC4/CyLFClk.c ****                         {
 320:Generated_Source\PSoC4/CyLFClk.c ****                             iloCompensatedCycles = (((CY_SYS_CNT_REG2_REG * cydelayFreqHz) / 
 321:Generated_Source\PSoC4/CyLFClk.c ****                                                      (cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER))
 322:Generated_Source\PSoC4/CyLFClk.c ****                                                      desiredDelayInCounts) / CY_SYS_CLK_ILO_DESIRED
 323:Generated_Source\PSoC4/CyLFClk.c ****                         }
 324:Generated_Source\PSoC4/CyLFClk.c ****                     #endif /* (CY_IP_SRSSV2) */
 325:Generated_Source\PSoC4/CyLFClk.c **** 
 326:Generated_Source\PSoC4/CyLFClk.c ****                     *compensatedCycles = iloCompensatedCycles;
 327:Generated_Source\PSoC4/CyLFClk.c ****                     compensateRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 328:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CYRET_SUCCESS;
 329:Generated_Source\PSoC4/CyLFClk.c ****                 }
 330:Generated_Source\PSoC4/CyLFClk.c ****                 else
 331:Generated_Source\PSoC4/CyLFClk.c ****                 {
 332:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus  = CYRET_INVALID_STATE;
 333:Generated_Source\PSoC4/CyLFClk.c ****                 }
 334:Generated_Source\PSoC4/CyLFClk.c ****             }
 335:Generated_Source\PSoC4/CyLFClk.c ****             else
 336:Generated_Source\PSoC4/CyLFClk.c ****             {
 337:Generated_Source\PSoC4/CyLFClk.c ****                 returnStatus = CYRET_STARTED;
 338:Generated_Source\PSoC4/CyLFClk.c ****             }
 339:Generated_Source\PSoC4/CyLFClk.c ****         }
 340:Generated_Source\PSoC4/CyLFClk.c ****         else
 341:Generated_Source\PSoC4/CyLFClk.c ****         {
 342:Generated_Source\PSoC4/CyLFClk.c ****             /* Reload CNTR 1 count value for next measurement cycle*/
 343:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_CNT_REG1_REG = (cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER);
 344:Generated_Source\PSoC4/CyLFClk.c ****             compensateRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_STARTED;
 345:Generated_Source\PSoC4/CyLFClk.c ****             returnStatus = CYRET_STARTED;
 346:Generated_Source\PSoC4/CyLFClk.c ****         }
 347:Generated_Source\PSoC4/CyLFClk.c ****     }
 348:Generated_Source\PSoC4/CyLFClk.c ****     else
 349:Generated_Source\PSoC4/CyLFClk.c ****     {
 350:Generated_Source\PSoC4/CyLFClk.c ****         returnStatus = CYRET_INVALID_STATE;
 265              		.loc 2 350 0
 266 0010 1123     		movs	r3, #17
 278:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_TST_DDFT_CTRL_REG == CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1) &&
 267              		.loc 2 278 0
 268 0012 8A42     		cmp	r2, r1
 269 0014 49D1     		bne	.L17
 279:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_TST_DDFT_CTRL_REG == CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1) &&
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 24


 270              		.loc 2 279 0 discriminator 1
 271 0016 284A     		ldr	r2, .L29+8
 272              	.LVL4:
 273 0018 1168     		ldr	r1, [r2]
 278:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_TST_DDFT_CTRL_REG == CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1) &&
 274              		.loc 2 278 0 discriminator 1
 275 001a 284A     		ldr	r2, .L29+12
 276 001c 9142     		cmp	r1, r2
 277 001e 44D1     		bne	.L17
 280:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_CLK_MIN_DELAY_US <= desiredDelay) &&
 278              		.loc 2 280 0
 279 0020 0200     		movs	r2, r0
 280 0022 2749     		ldr	r1, .L29+16
 281 0024 643A     		subs	r2, r2, #100
 282 0026 8A42     		cmp	r2, r1
 283 0028 3FD8     		bhi	.L17
 281:Generated_Source\PSoC4/CyLFClk.c ****        (compensatedCycles !=  NULL))
 284              		.loc 2 281 0
 285 002a 002F     		cmp	r7, #0
 286 002c 3DD0     		beq	.L17
 284:Generated_Source\PSoC4/CyLFClk.c ****         {
 287              		.loc 2 284 0
 288 002e 254B     		ldr	r3, .L29+20
 289 0030 2549     		ldr	r1, .L29+24
 290 0032 1A68     		ldr	r2, [r3]
 291 0034 002A     		cmp	r2, #0
 292 0036 31D0     		beq	.L18
 287:Generated_Source\PSoC4/CyLFClk.c ****             {
 293              		.loc 2 287 0
 294 0038 0A68     		ldr	r2, [r1]
 337:Generated_Source\PSoC4/CyLFClk.c ****             }
 295              		.loc 2 337 0
 296 003a 0723     		movs	r3, #7
 287:Generated_Source\PSoC4/CyLFClk.c ****             {
 297              		.loc 2 287 0
 298 003c 002A     		cmp	r2, #0
 299 003e 34DA     		bge	.L17
 289:Generated_Source\PSoC4/CyLFClk.c ****                 {
 300              		.loc 2 289 0
 301 0040 224E     		ldr	r6, .L29+28
 302              		.loc 2 350 0
 303 0042 0A33     		adds	r3, r3, #10
 289:Generated_Source\PSoC4/CyLFClk.c ****                 {
 304              		.loc 2 289 0
 305 0044 3268     		ldr	r2, [r6]
 306 0046 002A     		cmp	r2, #0
 307 0048 2FD0     		beq	.L17
 310:Generated_Source\PSoC4/CyLFClk.c ****                                                                                            CY_SYS_C
 308              		.loc 2 310 0
 309 004a 5333     		adds	r3, r3, #83
 310 004c 4343     		muls	r3, r0
 311 004e 1C00     		movs	r4, r3
 312 0050 1F4B     		ldr	r3, .L29+32
 313 0052 2049     		ldr	r1, .L29+36
 314 0054 E418     		adds	r4, r4, r3
 315 0056 2000     		movs	r0, r4
 316              	.LVL5:
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 25


 317 0058 FFF7FEFF 		bl	__aeabi_uidiv
 318              	.LVL6:
 319 005c 1E4B     		ldr	r3, .L29+40
 320 005e 0500     		movs	r5, r0
 321              	.LVL7:
 314:Generated_Source\PSoC4/CyLFClk.c ****                                                    CY_SYS_CLK_SYS_CLK_DEVIDER)) / CY_SYS_CLK_ILO_FR
 322              		.loc 2 314 0
 323 0060 1968     		ldr	r1, [r3]
 324 0062 3068     		ldr	r0, [r6]
 325              	.LVL8:
 312:Generated_Source\PSoC4/CyLFClk.c ****                         {
 326              		.loc 2 312 0
 327 0064 1D4A     		ldr	r2, .L29+44
 314:Generated_Source\PSoC4/CyLFClk.c ****                                                    CY_SYS_CLK_SYS_CLK_DEVIDER)) / CY_SYS_CLK_ILO_FR
 328              		.loc 2 314 0
 329 0066 4843     		muls	r0, r1
 330 0068 890A     		lsrs	r1, r1, #10
 312:Generated_Source\PSoC4/CyLFClk.c ****                         {
 331              		.loc 2 312 0
 332 006a 9542     		cmp	r5, r2
 333 006c 0BD9     		bls	.L19
 314:Generated_Source\PSoC4/CyLFClk.c ****                                                    CY_SYS_CLK_SYS_CLK_DEVIDER)) / CY_SYS_CLK_ILO_FR
 334              		.loc 2 314 0
 335 006e FFF7FEFF 		bl	__aeabi_uidiv
 336              	.LVL9:
 337 0072 2821     		movs	r1, #40
 338 0074 FFF7FEFF 		bl	__aeabi_uidiv
 339              	.LVL10:
 340 0078 1949     		ldr	r1, .L29+48
 341 007a 0500     		movs	r5, r0
 342              	.LVL11:
 343 007c 2000     		movs	r0, r4
 344 007e FFF7FEFF 		bl	__aeabi_uidiv
 345              	.LVL12:
 346 0082 6843     		muls	r0, r5
 347              	.LVL13:
 348 0084 05E0     		b	.L20
 349              	.LVL14:
 350              	.L19:
 320:Generated_Source\PSoC4/CyLFClk.c ****                                                      (cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER))
 351              		.loc 2 320 0
 352 0086 FFF7FEFF 		bl	__aeabi_uidiv
 353              	.LVL15:
 354 008a 1649     		ldr	r1, .L29+52
 355 008c 6843     		muls	r0, r5
 356 008e FFF7FEFF 		bl	__aeabi_uidiv
 357              	.LVL16:
 358              	.L20:
 327:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CYRET_SUCCESS;
 359              		.loc 2 327 0
 360 0092 0023     		movs	r3, #0
 361 0094 0B4A     		ldr	r2, .L29+20
 326:Generated_Source\PSoC4/CyLFClk.c ****                     compensateRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 362              		.loc 2 326 0
 363 0096 3860     		str	r0, [r7]
 327:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CYRET_SUCCESS;
 364              		.loc 2 327 0
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 26


 365 0098 1360     		str	r3, [r2]
 366              	.LVL17:
 367 009a 06E0     		b	.L17
 368              	.LVL18:
 369              	.L18:
 343:Generated_Source\PSoC4/CyLFClk.c ****             compensateRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_STARTED;
 370              		.loc 2 343 0
 371 009c 0E4A     		ldr	r2, .L29+40
 372 009e 1268     		ldr	r2, [r2]
 373 00a0 920A     		lsrs	r2, r2, #10
 374 00a2 0A60     		str	r2, [r1]
 344:Generated_Source\PSoC4/CyLFClk.c ****             returnStatus = CYRET_STARTED;
 375              		.loc 2 344 0
 376 00a4 0122     		movs	r2, #1
 377 00a6 1A60     		str	r2, [r3]
 378              	.LVL19:
 345:Generated_Source\PSoC4/CyLFClk.c ****         }
 379              		.loc 2 345 0
 380 00a8 0723     		movs	r3, #7
 381              	.LVL20:
 382              	.L17:
 351:Generated_Source\PSoC4/CyLFClk.c ****     }
 352:Generated_Source\PSoC4/CyLFClk.c **** 
 353:Generated_Source\PSoC4/CyLFClk.c ****     return (returnStatus);
 354:Generated_Source\PSoC4/CyLFClk.c **** }
 383              		.loc 2 354 0
 384 00aa 1800     		movs	r0, r3
 385              		@ sp needed
 386              	.LVL21:
 387 00ac F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 388              	.L30:
 389 00ae C046     		.align	2
 390              	.L29:
 391 00b0 34000340 		.word	1073938484
 392 00b4 0F0F0000 		.word	3855
 393 00b8 18000340 		.word	1073938456
 394 00bc 08090000 		.word	2312
 395 00c0 1C841E00 		.word	1999900
 396 00c4 00000000 		.word	.LANCHOR0
 397 00c8 1C000340 		.word	1073938460
 398 00cc 20000340 		.word	1073938464
 399 00d0 71020000 		.word	625
 400 00d4 C4090000 		.word	2500
 401 00d8 00000000 		.word	cydelayFreqHz
 402 00dc 60D10000 		.word	53600
 403 00e0 A0252600 		.word	2500000
 404 00e4 409C0000 		.word	40000
 405              		.cfi_endproc
 406              	.LFE5:
 407              		.size	CySysClkIloCompensate, .-CySysClkIloCompensate
 408              		.section	.text.CySysClkWcoStart,"ax",%progbits
 409              		.align	1
 410              		.global	CySysClkWcoStart
 411              		.code	16
 412              		.thumb_func
 413              		.type	CySysClkWcoStart, %function
 414              	CySysClkWcoStart:
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 27


 415              	.LFB6:
 355:Generated_Source\PSoC4/CyLFClk.c **** 
 356:Generated_Source\PSoC4/CyLFClk.c **** 
 357:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2)
 358:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 359:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkIloEnabled
 360:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 361:Generated_Source\PSoC4/CyLFClk.c ****     *
 362:Generated_Source\PSoC4/CyLFClk.c ****     * \internal
 363:Generated_Source\PSoC4/CyLFClk.c ****     * Reports the ILO enable state.
 364:Generated_Source\PSoC4/CyLFClk.c ****     *
 365:Generated_Source\PSoC4/CyLFClk.c ****     * \return
 366:Generated_Source\PSoC4/CyLFClk.c ****     * 1 if ILO is enabled, and 0 if ILO is disabled.
 367:Generated_Source\PSoC4/CyLFClk.c ****     *
 368:Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
 369:Generated_Source\PSoC4/CyLFClk.c ****     ********************************************************************************/
 370:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkIloEnabled(void)
 371:Generated_Source\PSoC4/CyLFClk.c ****     {
 372:Generated_Source\PSoC4/CyLFClk.c ****         /* Prohibits writing to WDT registers and ILO/WCO registers when not equal to 0 */
 373:Generated_Source\PSoC4/CyLFClk.c ****         return ((0u != (CY_SYS_CLK_ILO_CONFIG_REG & (uint32)(CY_SYS_CLK_ILO_CONFIG_ENABLE))) ?
 374:Generated_Source\PSoC4/CyLFClk.c ****             (uint32) 1u :
 375:Generated_Source\PSoC4/CyLFClk.c ****             (uint32) 0u);
 376:Generated_Source\PSoC4/CyLFClk.c ****     }
 377:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2) */
 378:Generated_Source\PSoC4/CyLFClk.c **** 
 379:Generated_Source\PSoC4/CyLFClk.c **** 
 380:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2 && (!CY_IP_CPUSS))
 381:Generated_Source\PSoC4/CyLFClk.c **** /********************************************************************************
 382:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloTrim
 383:Generated_Source\PSoC4/CyLFClk.c **** *****************************************************************************//**
 384:Generated_Source\PSoC4/CyLFClk.c **** * \brief
 385:Generated_Source\PSoC4/CyLFClk.c **** * The API trims the ILO frequency to +/- 10% accuracy range using accurate 
 386:Generated_Source\PSoC4/CyLFClk.c **** * SysClk.
 387:Generated_Source\PSoC4/CyLFClk.c **** *
 388:Generated_Source\PSoC4/CyLFClk.c **** * The API can be blocking or non-blocking depending on the value of the mode 
 389:Generated_Source\PSoC4/CyLFClk.c **** * parameter passed. The accuracy of ILO after trimming in parts per thousand 
 390:Generated_Source\PSoC4/CyLFClk.c **** * is returned through the iloAccuracyInPPT pointer. A positive number indicates 
 391:Generated_Source\PSoC4/CyLFClk.c **** * that the ILO is running fast and a negative number indicates that the ILO is 
 392:Generated_Source\PSoC4/CyLFClk.c **** * running slowly. This error is relative to the error in the reference clock 
 393:Generated_Source\PSoC4/CyLFClk.c **** * (SysClk), so the absolute error will be higher and depends on the accuracy 
 394:Generated_Source\PSoC4/CyLFClk.c **** * of the reference.
 395:Generated_Source\PSoC4/CyLFClk.c **** *
 396:Generated_Source\PSoC4/CyLFClk.c **** * The CySysClkIloStartMeasurement() API should be called prior to calling this 
 397:Generated_Source\PSoC4/CyLFClk.c **** * API. Otherwise it will return CYRET_INVALID_STATE as the measurement was not 
 398:Generated_Source\PSoC4/CyLFClk.c **** * started.
 399:Generated_Source\PSoC4/CyLFClk.c **** *
 400:Generated_Source\PSoC4/CyLFClk.c **** * \note SysClk should be sourced by IMO. Otherwise CySysClkIloTrim() and 
 401:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloCompensate() API can give incorrect results.
 402:Generated_Source\PSoC4/CyLFClk.c **** *
 403:Generated_Source\PSoC4/CyLFClk.c **** * \note If System clock frequency is changed in runtime, the CyDelayFreq() 
 404:Generated_Source\PSoC4/CyLFClk.c **** * with the appropriate parameter (Frequency of bus clock in Hertz) should be 
 405:Generated_Source\PSoC4/CyLFClk.c **** * called before next CySysClkIloCompensate() usage.
 406:Generated_Source\PSoC4/CyLFClk.c **** *
 407:Generated_Source\PSoC4/CyLFClk.c **** * \warning Do not enter deep sleep mode until the function returns CYRET_SUCCESS
 408:Generated_Source\PSoC4/CyLFClk.c **** * or CYRET_TIMEOUT.
 409:Generated_Source\PSoC4/CyLFClk.c **** *
 410:Generated_Source\PSoC4/CyLFClk.c **** * Available for all PSoC 4 devices with ILO trim capability. This excludes 
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 28


 411:Generated_Source\PSoC4/CyLFClk.c **** * PSoC 4000 / PSoC 4100 / PSoC 4200 / PSoC 4000S / PSoC 4100S / PSoC
 412:Generated_Source\PSoC4/CyLFClk.c **** * Analog Coprocessor devices.
 413:Generated_Source\PSoC4/CyLFClk.c **** *
 414:Generated_Source\PSoC4/CyLFClk.c **** * \param mode
 415:Generated_Source\PSoC4/CyLFClk.c **** *  CY_SYS_CLK_BLOCKING -  The function does not return until the ILO is 
 416:Generated_Source\PSoC4/CyLFClk.c **** * within +/-10% accuracy range or time out has occurred.<br>
 417:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_NON_BLOCKING - The function returns immediately after 
 418:Generated_Source\PSoC4/CyLFClk.c **** * performing a single iteration of the trim process. The function should be 
 419:Generated_Source\PSoC4/CyLFClk.c **** * called repeatedly until the trimming is completed successfully.
 420:Generated_Source\PSoC4/CyLFClk.c **** *
 421:Generated_Source\PSoC4/CyLFClk.c **** * \param *iloAccuracyInPPT Pointer to an integer in which the trimmed ILO 
 422:Generated_Source\PSoC4/CyLFClk.c **** * accuracy will be returned.
 423:Generated_Source\PSoC4/CyLFClk.c **** *
 424:Generated_Source\PSoC4/CyLFClk.c **** * \details The value returned in *iloAccuracyInPPT pointer is not valid 
 425:Generated_Source\PSoC4/CyLFClk.c **** * until the function returns CYRET_SUCCESS. ILO accuracy in PPT is given by:
 426:Generated_Source\PSoC4/CyLFClk.c **** *
 427:Generated_Source\PSoC4/CyLFClk.c **** * IloAccuracyInPPT = ((MeasuredIloFreq - DesiredIloFreq) * 
 428:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_PERTHOUSAND) / DesiredIloFreq);
 429:Generated_Source\PSoC4/CyLFClk.c **** *
 430:Generated_Source\PSoC4/CyLFClk.c **** * DesiredIloFreq  = 32000, CY_SYS_CLK_PERTHOUSAND = 1000;
 431:Generated_Source\PSoC4/CyLFClk.c **** *
 432:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_SUCCESS - Indicates trimming is complete. This value indicates 
 433:Generated_Source\PSoC4/CyLFClk.c **** * trimming is successful and iloAccuracyInPPT is within +/- 10%.
 434:Generated_Source\PSoC4/CyLFClk.c **** *
 435:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_STARTED - Indicates measurement is in progress. This is applicable 
 436:Generated_Source\PSoC4/CyLFClk.c **** * only for non-blocking mode.
 437:Generated_Source\PSoC4/CyLFClk.c **** *
 438:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_INVALID_STATE - Indicates trimming was unsuccessful. You should 
 439:Generated_Source\PSoC4/CyLFClk.c **** * call CySysClkIloStartMeasurement() before calling this API.
 440:Generated_Source\PSoC4/CyLFClk.c **** *
 441:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_TIMEOUT - Indicates trimming was unsuccessful. This is applicable 
 442:Generated_Source\PSoC4/CyLFClk.c **** * only for blocking mode. Timeout means the trimming was tried 5 times without 
 443:Generated_Source\PSoC4/CyLFClk.c **** * success (i.e. ILO accuracy > +/- 10%). The user can call the API again for 
 444:Generated_Source\PSoC4/CyLFClk.c **** * another try or wait for some time before calling it again (to let the system 
 445:Generated_Source\PSoC4/CyLFClk.c **** * to settle to another operating point change in temperature etc.) and continue 
 446:Generated_Source\PSoC4/CyLFClk.c **** * using the previous trim value till the next call.
 447:Generated_Source\PSoC4/CyLFClk.c **** *
 448:Generated_Source\PSoC4/CyLFClk.c **** **********************************************************************************/
 449:Generated_Source\PSoC4/CyLFClk.c **** cystatus CySysClkIloTrim(uint32 mode, int32* iloAccuracyInPPT)
 450:Generated_Source\PSoC4/CyLFClk.c **** {
 451:Generated_Source\PSoC4/CyLFClk.c ****     uint32 timeOutClocks = CY_SYS_CLK_TIMEOUT;
 452:Generated_Source\PSoC4/CyLFClk.c ****     uint32 waitUntilCntr1Stops;
 453:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 trimRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 454:Generated_Source\PSoC4/CyLFClk.c ****     uint32 checkStatus;
 455:Generated_Source\PSoC4/CyLFClk.c ****     cystatus returnStatus;
 456:Generated_Source\PSoC4/CyLFClk.c **** 
 457:Generated_Source\PSoC4/CyLFClk.c ****     checkStatus = (uint32) (CY_SYS_CLK_DFT_REG & (uint32) CY_SYS_TST_DDFT_CTRL_REG_DEFAULT_MASK);
 458:Generated_Source\PSoC4/CyLFClk.c **** 
 459:Generated_Source\PSoC4/CyLFClk.c ****     /* Check if DFT and CTRL registers were configures in CySysStartMeasurement*/
 460:Generated_Source\PSoC4/CyLFClk.c ****     if((checkStatus == CY_SYS_CLK_SEL_ILO_DFT_SOURCE) &&
 461:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_TST_DDFT_CTRL_REG == CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1) &&
 462:Generated_Source\PSoC4/CyLFClk.c ****        (iloAccuracyInPPT != NULL))
 463:Generated_Source\PSoC4/CyLFClk.c ****     {
 464:Generated_Source\PSoC4/CyLFClk.c ****         if(CY_SYS_CLK_BLOCKING == mode)
 465:Generated_Source\PSoC4/CyLFClk.c ****         {
 466:Generated_Source\PSoC4/CyLFClk.c ****             waitUntilCntr1Stops = cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER;
 467:Generated_Source\PSoC4/CyLFClk.c ****             do
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 29


 468:Generated_Source\PSoC4/CyLFClk.c ****             {
 469:Generated_Source\PSoC4/CyLFClk.c ****                 /* Reload CNTR 1 count value for measuring cycle*/
 470:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CNT_REG1_REG = cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER; 
 471:Generated_Source\PSoC4/CyLFClk.c **** 
 472:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait until counter CNTR 1 will finish down-counting */
 473:Generated_Source\PSoC4/CyLFClk.c ****                 while (0u == (CY_SYS_CNT_REG1_REG & CY_SYS_CLK_ILO_CALIBR_COMPLETE_MASK))
 474:Generated_Source\PSoC4/CyLFClk.c ****                 {
 475:Generated_Source\PSoC4/CyLFClk.c ****                     waitUntilCntr1Stops--;
 476:Generated_Source\PSoC4/CyLFClk.c ****                     if (0u == waitUntilCntr1Stops)
 477:Generated_Source\PSoC4/CyLFClk.c ****                     {
 478:Generated_Source\PSoC4/CyLFClk.c ****                         break;
 479:Generated_Source\PSoC4/CyLFClk.c ****                     }
 480:Generated_Source\PSoC4/CyLFClk.c ****                 }
 481:Generated_Source\PSoC4/CyLFClk.c ****                 trimRunningStatus = CySysClkIloUpdateTrimReg(iloAccuracyInPPT);
 482:Generated_Source\PSoC4/CyLFClk.c ****                 timeOutClocks--;
 483:Generated_Source\PSoC4/CyLFClk.c **** 
 484:Generated_Source\PSoC4/CyLFClk.c ****             /* Untill ILO accuracy will be in range less than +/- 10% or timeout occurs*/
 485:Generated_Source\PSoC4/CyLFClk.c ****             } while((CYRET_SUCCESS != trimRunningStatus) && 
 486:Generated_Source\PSoC4/CyLFClk.c ****               (CYRET_INVALID_STATE != trimRunningStatus) && 
 487:Generated_Source\PSoC4/CyLFClk.c ****                                (0u != timeOutClocks));
 488:Generated_Source\PSoC4/CyLFClk.c **** 
 489:Generated_Source\PSoC4/CyLFClk.c ****             if (CYRET_SUCCESS == trimRunningStatus)
 490:Generated_Source\PSoC4/CyLFClk.c ****             {
 491:Generated_Source\PSoC4/CyLFClk.c ****                 returnStatus = CYRET_SUCCESS;
 492:Generated_Source\PSoC4/CyLFClk.c ****             }
 493:Generated_Source\PSoC4/CyLFClk.c ****             else
 494:Generated_Source\PSoC4/CyLFClk.c ****             {
 495:Generated_Source\PSoC4/CyLFClk.c ****                 if(0u == timeOutClocks)
 496:Generated_Source\PSoC4/CyLFClk.c ****                 {
 497:Generated_Source\PSoC4/CyLFClk.c ****                     trimRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 498:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CYRET_TIMEOUT;
 499:Generated_Source\PSoC4/CyLFClk.c ****                 }
 500:Generated_Source\PSoC4/CyLFClk.c ****                 else
 501:Generated_Source\PSoC4/CyLFClk.c ****                 {
 502:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CYRET_INVALID_STATE;
 503:Generated_Source\PSoC4/CyLFClk.c ****                 }
 504:Generated_Source\PSoC4/CyLFClk.c ****             }
 505:Generated_Source\PSoC4/CyLFClk.c ****         }
 506:Generated_Source\PSoC4/CyLFClk.c ****         /* Non - blocking mode */
 507:Generated_Source\PSoC4/CyLFClk.c ****         else
 508:Generated_Source\PSoC4/CyLFClk.c ****         {
 509:Generated_Source\PSoC4/CyLFClk.c ****             if (CY_SYS_CLK_TRIM_OR_COMP_FINISHED != trimRunningStatus)
 510:Generated_Source\PSoC4/CyLFClk.c ****             {
 511:Generated_Source\PSoC4/CyLFClk.c ****                 /* Checking if the counter CNTR 1 finished down-counting */
 512:Generated_Source\PSoC4/CyLFClk.c ****                 if(0u != (CY_SYS_CNT_REG1_REG & CY_SYS_CLK_ILO_CALIBR_COMPLETE_MASK))
 513:Generated_Source\PSoC4/CyLFClk.c ****                 {
 514:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CySysClkIloUpdateTrimReg(iloAccuracyInPPT);
 515:Generated_Source\PSoC4/CyLFClk.c ****                     trimRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 516:Generated_Source\PSoC4/CyLFClk.c ****                 }
 517:Generated_Source\PSoC4/CyLFClk.c ****                 else
 518:Generated_Source\PSoC4/CyLFClk.c ****                 {
 519:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CYRET_STARTED;
 520:Generated_Source\PSoC4/CyLFClk.c ****                 }
 521:Generated_Source\PSoC4/CyLFClk.c ****             }
 522:Generated_Source\PSoC4/CyLFClk.c ****             else
 523:Generated_Source\PSoC4/CyLFClk.c ****             {
 524:Generated_Source\PSoC4/CyLFClk.c ****                 /* Reload CNTR 1 count value for next measuring */
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 30


 525:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CNT_REG1_REG = cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER;
 526:Generated_Source\PSoC4/CyLFClk.c ****                 trimRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_STARTED;
 527:Generated_Source\PSoC4/CyLFClk.c ****                 returnStatus = CYRET_STARTED;
 528:Generated_Source\PSoC4/CyLFClk.c ****             }
 529:Generated_Source\PSoC4/CyLFClk.c ****         }
 530:Generated_Source\PSoC4/CyLFClk.c ****     }
 531:Generated_Source\PSoC4/CyLFClk.c ****     else
 532:Generated_Source\PSoC4/CyLFClk.c ****     {
 533:Generated_Source\PSoC4/CyLFClk.c ****         returnStatus = CYRET_INVALID_STATE;
 534:Generated_Source\PSoC4/CyLFClk.c ****     }
 535:Generated_Source\PSoC4/CyLFClk.c **** 
 536:Generated_Source\PSoC4/CyLFClk.c ****     return (returnStatus);
 537:Generated_Source\PSoC4/CyLFClk.c **** }
 538:Generated_Source\PSoC4/CyLFClk.c **** 
 539:Generated_Source\PSoC4/CyLFClk.c **** 
 540:Generated_Source\PSoC4/CyLFClk.c **** /********************************************************************************
 541:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloUpdateTrimReg
 542:Generated_Source\PSoC4/CyLFClk.c **** *********************************************************************************
 543:Generated_Source\PSoC4/CyLFClk.c **** *
 544:Generated_Source\PSoC4/CyLFClk.c **** * \internal
 545:Generated_Source\PSoC4/CyLFClk.c **** * Function calculates ILO accuracy and check is error range is higher than 
 546:Generated_Source\PSoC4/CyLFClk.c **** * +/- 10%. If Measured frequency is higher than +/- 10% function updates 
 547:Generated_Source\PSoC4/CyLFClk.c **** * ILO Trim register.
 548:Generated_Source\PSoC4/CyLFClk.c **** *
 549:Generated_Source\PSoC4/CyLFClk.c **** * \param
 550:Generated_Source\PSoC4/CyLFClk.c **** * iloAccuracyInPPT Pointer to an integer in which the trimmed ILO 
 551:Generated_Source\PSoC4/CyLFClk.c **** * accuracy will be returned. The value returned in this pointer is not valid 
 552:Generated_Source\PSoC4/CyLFClk.c **** * until the function returns CYRET_SUCCESS. If ILO frequency error is lower 
 553:Generated_Source\PSoC4/CyLFClk.c **** * than +/- 10% then the value returned in this pointer will be updated.
 554:Generated_Source\PSoC4/CyLFClk.c **** *
 555:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_SUCCESS - Indicates that ILO frequency error is lower than 
 556:Generated_Source\PSoC4/CyLFClk.c **** * +/- 10% and no actions are required.
 557:Generated_Source\PSoC4/CyLFClk.c **** *
 558:Generated_Source\PSoC4/CyLFClk.c **** * \return  CYRET_STARTED - Indicates that ILO frequency error is higher than 
 559:Generated_Source\PSoC4/CyLFClk.c **** * +/- 10% and ILO Trim register was updated.
 560:Generated_Source\PSoC4/CyLFClk.c **** *
 561:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_INVALID_STATE - Indicates trimming was unsuccessful.
 562:Generated_Source\PSoC4/CyLFClk.c **** *
 563:Generated_Source\PSoC4/CyLFClk.c **** * Post #1 - To obtain 10% ILO accuracy the calculated accuracy should be equal 
 564:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_ERROR_RANGE = 5.6%. Error value should take to account IMO error of 
 565:Generated_Source\PSoC4/CyLFClk.c **** * +/-2% (+/-0.64kHz), trim step of 2.36kHz (+/-1.18kHz) and error while ILO 
 566:Generated_Source\PSoC4/CyLFClk.c **** * frequency measuring.
 567:Generated_Source\PSoC4/CyLFClk.c **** *
 568:Generated_Source\PSoC4/CyLFClk.c **** * \endinternal
 569:Generated_Source\PSoC4/CyLFClk.c **** *
 570:Generated_Source\PSoC4/CyLFClk.c **** **********************************************************************************/
 571:Generated_Source\PSoC4/CyLFClk.c **** cystatus CySysClkIloUpdateTrimReg(int32* iloAccuracyInPPT)
 572:Generated_Source\PSoC4/CyLFClk.c **** {
 573:Generated_Source\PSoC4/CyLFClk.c ****     uint32 measuredIloFreq;
 574:Generated_Source\PSoC4/CyLFClk.c ****     uint32 currentIloTrimValue;
 575:Generated_Source\PSoC4/CyLFClk.c ****     int32 iloAccuracyValue;
 576:Generated_Source\PSoC4/CyLFClk.c ****     int32 trimStep;
 577:Generated_Source\PSoC4/CyLFClk.c ****     cystatus errorRangeStatus;
 578:Generated_Source\PSoC4/CyLFClk.c **** 
 579:Generated_Source\PSoC4/CyLFClk.c ****     if(0u != CY_SYS_CNT_REG2_REG)
 580:Generated_Source\PSoC4/CyLFClk.c ****     {
 581:Generated_Source\PSoC4/CyLFClk.c ****         measuredIloFreq = (CY_SYS_CNT_REG2_REG * cydelayFreqHz) / (cydelayFreqHz >> CY_SYS_CLK_SYS_
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 31


 582:Generated_Source\PSoC4/CyLFClk.c **** 
 583:Generated_Source\PSoC4/CyLFClk.c ****         /* Calculate value of error in PPT according to formula - 
 584:Generated_Source\PSoC4/CyLFClk.c ****         *       ((measuredIlofrequency - iloDesired frequency) * 1000 / iloDesired frequency) */
 585:Generated_Source\PSoC4/CyLFClk.c ****         iloAccuracyValue = (((int32) measuredIloFreq - (int32) CY_SYS_CLK_ILO_DESIRED_FREQ_HZ) * \
 586:Generated_Source\PSoC4/CyLFClk.c ****                             ((int32) CY_SYS_CLK_PERTHOUSAND)) / ((int32) CY_SYS_CLK_ILO_DESIRED_FRE
 587:Generated_Source\PSoC4/CyLFClk.c **** 
 588:Generated_Source\PSoC4/CyLFClk.c ****         /* Check if ILO accuracy is more than +/- CY_SYS_CLK_ERROR_RANGE. See post #1 of API descri
 589:Generated_Source\PSoC4/CyLFClk.c ****         if(CY_SYS_CLK_ERROR_RANGE < (uint32) (CY_SYS_CLK_ABS_MACRO(iloAccuracyValue)))
 590:Generated_Source\PSoC4/CyLFClk.c ****         {
 591:Generated_Source\PSoC4/CyLFClk.c ****             if (0 < iloAccuracyValue)
 592:Generated_Source\PSoC4/CyLFClk.c ****             {
 593:Generated_Source\PSoC4/CyLFClk.c ****                 trimStep = (int32) (((iloAccuracyValue * (int32) CY_SYS_CLK_ERROR_COEF) + 
 594:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CLK_HALF_OF_STEP) / CY_SYS_CLK_ERROR_STEP);
 595:Generated_Source\PSoC4/CyLFClk.c ****             }
 596:Generated_Source\PSoC4/CyLFClk.c ****             else
 597:Generated_Source\PSoC4/CyLFClk.c ****             {
 598:Generated_Source\PSoC4/CyLFClk.c ****                 trimStep = (int32) (((iloAccuracyValue * (int32) CY_SYS_CLK_ERROR_COEF) - 
 599:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CLK_HALF_OF_STEP) / CY_SYS_CLK_ERROR_STEP);
 600:Generated_Source\PSoC4/CyLFClk.c ****             }
 601:Generated_Source\PSoC4/CyLFClk.c ****             currentIloTrimValue = (CY_SYS_CLK_ILO_TRIM_REG & CY_SYS_CLK_ILO_TRIM_MASK);
 602:Generated_Source\PSoC4/CyLFClk.c ****             trimStep = (int32) currentIloTrimValue - trimStep;
 603:Generated_Source\PSoC4/CyLFClk.c **** 
 604:Generated_Source\PSoC4/CyLFClk.c ****             if(trimStep > CY_SYS_CLK_FOURBITS_MAX)
 605:Generated_Source\PSoC4/CyLFClk.c ****             {
 606:Generated_Source\PSoC4/CyLFClk.c ****                 trimStep = CY_SYS_CLK_FOURBITS_MAX;
 607:Generated_Source\PSoC4/CyLFClk.c ****             }
 608:Generated_Source\PSoC4/CyLFClk.c ****             if(trimStep < 0)
 609:Generated_Source\PSoC4/CyLFClk.c ****             {
 610:Generated_Source\PSoC4/CyLFClk.c ****                 trimStep = 0;
 611:Generated_Source\PSoC4/CyLFClk.c ****             }
 612:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_CLK_ILO_TRIM_REG = (CY_SYS_CLK_ILO_TRIM_REG & (uint32)(~CY_SYS_CLK_ILO_TRIM_MASK
 613:Generated_Source\PSoC4/CyLFClk.c ****                                                                  ((uint32) trimStep);
 614:Generated_Source\PSoC4/CyLFClk.c ****             errorRangeStatus = CYRET_STARTED;
 615:Generated_Source\PSoC4/CyLFClk.c ****         } /* Else return success because error is in +/- 10% range*/
 616:Generated_Source\PSoC4/CyLFClk.c ****         else
 617:Generated_Source\PSoC4/CyLFClk.c ****         {
 618:Generated_Source\PSoC4/CyLFClk.c ****             /* Write trimmed ILO accuracy through pointer. */
 619:Generated_Source\PSoC4/CyLFClk.c ****             *iloAccuracyInPPT = iloAccuracyValue;
 620:Generated_Source\PSoC4/CyLFClk.c ****             errorRangeStatus = CYRET_SUCCESS;
 621:Generated_Source\PSoC4/CyLFClk.c ****         }
 622:Generated_Source\PSoC4/CyLFClk.c ****     }
 623:Generated_Source\PSoC4/CyLFClk.c ****     else
 624:Generated_Source\PSoC4/CyLFClk.c ****     {
 625:Generated_Source\PSoC4/CyLFClk.c ****         errorRangeStatus = CYRET_INVALID_STATE;
 626:Generated_Source\PSoC4/CyLFClk.c ****     }
 627:Generated_Source\PSoC4/CyLFClk.c **** return (errorRangeStatus);
 628:Generated_Source\PSoC4/CyLFClk.c **** }
 629:Generated_Source\PSoC4/CyLFClk.c **** 
 630:Generated_Source\PSoC4/CyLFClk.c **** 
 631:Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
 632:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloRestoreFactoryTrim
 633:Generated_Source\PSoC4/CyLFClk.c **** ****************************************************************************//**
 634:Generated_Source\PSoC4/CyLFClk.c **** * \brief
 635:Generated_Source\PSoC4/CyLFClk.c **** * Restores the ILO Trim Register to factory value.
 636:Generated_Source\PSoC4/CyLFClk.c **** *
 637:Generated_Source\PSoC4/CyLFClk.c **** * The CySysClkIloStartMeasurement() API should be called prior to 
 638:Generated_Source\PSoC4/CyLFClk.c **** * calling this API. Otherwise CYRET_UNKNOWN will be returned.
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 32


 639:Generated_Source\PSoC4/CyLFClk.c **** *
 640:Generated_Source\PSoC4/CyLFClk.c **** * Available for all PSoC 4 devices except for PSoC 4000 / PSoC 4100 / PSoC 4200 
 641:Generated_Source\PSoC4/CyLFClk.c **** * / PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices.
 642:Generated_Source\PSoC4/CyLFClk.c **** *
 643:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_SUCCESS - Operation was successful. 
 644:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_UNKNOWN - CySysClkIloStartMeasurement() was not called 
 645:Generated_Source\PSoC4/CyLFClk.c **** * before this API. Hence the trim value cannot be updated.
 646:Generated_Source\PSoC4/CyLFClk.c **** *
 647:Generated_Source\PSoC4/CyLFClk.c **** ******************************************************************************/
 648:Generated_Source\PSoC4/CyLFClk.c **** cystatus CySysClkIloRestoreFactoryTrim(void)
 649:Generated_Source\PSoC4/CyLFClk.c **** {
 650:Generated_Source\PSoC4/CyLFClk.c ****     cystatus returnStatus = CYRET_SUCCESS;
 651:Generated_Source\PSoC4/CyLFClk.c **** 
 652:Generated_Source\PSoC4/CyLFClk.c ****     /* Check was defaultIloTrimRegValue modified in CySysClkIloStartMeasurement */
 653:Generated_Source\PSoC4/CyLFClk.c ****     if(CY_SYS_CLK_ILO_TRIM_DEFAULT_VALUE != defaultIloTrimRegValue)
 654:Generated_Source\PSoC4/CyLFClk.c ****         {
 655:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_CLK_ILO_TRIM_REG = ((CY_SYS_CLK_ILO_TRIM_REG & (uint32)(~CY_SYS_CLK_ILO_TRIM_MAS
 656:Generated_Source\PSoC4/CyLFClk.c ****                                        (defaultIloTrimRegValue & CY_SYS_CLK_ILO_TRIM_MASK));
 657:Generated_Source\PSoC4/CyLFClk.c ****         }
 658:Generated_Source\PSoC4/CyLFClk.c ****         else
 659:Generated_Source\PSoC4/CyLFClk.c ****         {
 660:Generated_Source\PSoC4/CyLFClk.c ****             returnStatus = CYRET_UNKNOWN;
 661:Generated_Source\PSoC4/CyLFClk.c ****         }
 662:Generated_Source\PSoC4/CyLFClk.c **** 
 663:Generated_Source\PSoC4/CyLFClk.c ****         return (returnStatus);
 664:Generated_Source\PSoC4/CyLFClk.c **** }
 665:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2 && (!CY_IP_CPUSS)) */
 666:Generated_Source\PSoC4/CyLFClk.c **** 
 667:Generated_Source\PSoC4/CyLFClk.c **** 
 668:Generated_Source\PSoC4/CyLFClk.c **** #if (CY_IP_WCO && CY_IP_SRSSV2)
 669:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 670:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkGetLfclkSource
 671:Generated_Source\PSoC4/CyLFClk.c ****     ********************************************************************************
 672:Generated_Source\PSoC4/CyLFClk.c ****     *
 673:Generated_Source\PSoC4/CyLFClk.c ****     * \internal
 674:Generated_Source\PSoC4/CyLFClk.c ****     *  Gets the clock source for the LFCLK clock.
 675:Generated_Source\PSoC4/CyLFClk.c ****     *  The function is applicable only for PSoC 4100 BLE / PSoC 4200 BLE / 
 676:Generated_Source\PSoC4/CyLFClk.c ****     *  PSoC 4100M / PSoC 4200M / PSoC 4200L.
 677:Generated_Source\PSoC4/CyLFClk.c ****     *
 678:Generated_Source\PSoC4/CyLFClk.c ****     * \return The LFCLK source:
 679:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_CLK_LFCLK_SRC_ILO Internal Low Frequency (32 kHz) Oscillator (ILO)
 680:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_CLK_LFCLK_SRC_WCO Low Frequency Watch Crystal Oscillator (WCO)
 681:Generated_Source\PSoC4/CyLFClk.c ****     *
 682:Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
 683:Generated_Source\PSoC4/CyLFClk.c ****     *
 684:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 685:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkGetLfclkSource(void)
 686:Generated_Source\PSoC4/CyLFClk.c ****     {
 687:Generated_Source\PSoC4/CyLFClk.c ****         uint32 lfclkSource;
 688:Generated_Source\PSoC4/CyLFClk.c ****         lfclkSource = CY_SYS_WDT_CONFIG_REG & CY_SYS_CLK_LFCLK_SEL_MASK;
 689:Generated_Source\PSoC4/CyLFClk.c ****         return (lfclkSource);
 690:Generated_Source\PSoC4/CyLFClk.c ****     }
 691:Generated_Source\PSoC4/CyLFClk.c **** 
 692:Generated_Source\PSoC4/CyLFClk.c **** 
 693:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 694:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkSetLfclkSource
 695:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 33


 696:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 697:Generated_Source\PSoC4/CyLFClk.c ****     *  Sets the clock source for the LFCLK clock.
 698:Generated_Source\PSoC4/CyLFClk.c ****     *
 699:Generated_Source\PSoC4/CyLFClk.c ****     * The switch between LFCLK sources must be done between the positive edges of
 700:Generated_Source\PSoC4/CyLFClk.c ****     * LFCLK, because the glitch risk is around the LFCLK positive edge. To ensure
 701:Generated_Source\PSoC4/CyLFClk.c ****     * that the switch can be done safely, the WDT counter value is read until it
 702:Generated_Source\PSoC4/CyLFClk.c ****     * changes.
 703:Generated_Source\PSoC4/CyLFClk.c ****     *
 704:Generated_Source\PSoC4/CyLFClk.c ****     * That means that the positive edge just finished and the switch is performed.
 705:Generated_Source\PSoC4/CyLFClk.c ****     * The enabled WDT counter is used for that purpose. If no counters are enabled,
 706:Generated_Source\PSoC4/CyLFClk.c ****     * counter 0 is enabled. And after the LFCLK source is switched, counter 0
 707:Generated_Source\PSoC4/CyLFClk.c ****     * configuration is restored.
 708:Generated_Source\PSoC4/CyLFClk.c ****     *
 709:Generated_Source\PSoC4/CyLFClk.c ****     *  The function is applicable only for devices with more than one source for 
 710:Generated_Source\PSoC4/CyLFClk.c ****     * LFCLK - PSoC 4100 BLE / PSoC 4200 BLE / PRoC BLE / PSoC 4100M / PSoC 4200M / 
 711:Generated_Source\PSoC4/CyLFClk.c ****     * PSoC 4200L.
 712:Generated_Source\PSoC4/CyLFClk.c ****     *
 713:Generated_Source\PSoC4/CyLFClk.c ****     * \note For PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices LFCLK can
 714:Generated_Source\PSoC4/CyLFClk.c ****     * only be sourced from ILO even though WCO is available.
 715:Generated_Source\PSoC4/CyLFClk.c ****     *
 716:Generated_Source\PSoC4/CyLFClk.c ****     * \param
 717:Generated_Source\PSoC4/CyLFClk.c ****     * source
 718:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_CLK_LFCLK_SRC_ILO - Internal Low Frequency (32 kHz) 
 719:Generated_Source\PSoC4/CyLFClk.c ****     * Oscillator (ILO).<br>
 720:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_CLK_LFCLK_SRC_WCO - Low Frequency Watch Crystal Oscillator (WCO).
 721:Generated_Source\PSoC4/CyLFClk.c ****     *
 722:Generated_Source\PSoC4/CyLFClk.c ****     * \details
 723:Generated_Source\PSoC4/CyLFClk.c ****     * This function has no effect if WDT is locked (CySysWdtLock() is called). 
 724:Generated_Source\PSoC4/CyLFClk.c ****     * Call CySysWdtUnlock() to unlock WDT.
 725:Generated_Source\PSoC4/CyLFClk.c ****     *
 726:Generated_Source\PSoC4/CyLFClk.c ****     * Both the current source and the new source must be running and stable before
 727:Generated_Source\PSoC4/CyLFClk.c ****     * calling this function.
 728:Generated_Source\PSoC4/CyLFClk.c ****     *
 729:Generated_Source\PSoC4/CyLFClk.c ****     * Changing the LFCLK clock source may change the LFCLK clock frequency and
 730:Generated_Source\PSoC4/CyLFClk.c ****     * affect the functionality that uses this clock. For example, watchdog timer
 731:Generated_Source\PSoC4/CyLFClk.c ****     * "uses this clock" or "this clock uses" (WDT) is clocked by LFCLK.
 732:Generated_Source\PSoC4/CyLFClk.c ****     *
 733:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 734:Generated_Source\PSoC4/CyLFClk.c ****     void CySysClkSetLfclkSource(uint32 source)
 735:Generated_Source\PSoC4/CyLFClk.c ****     {
 736:Generated_Source\PSoC4/CyLFClk.c ****         uint8  interruptState;
 737:Generated_Source\PSoC4/CyLFClk.c **** 
 738:Generated_Source\PSoC4/CyLFClk.c ****         if (CySysClkGetLfclkSource() != source)
 739:Generated_Source\PSoC4/CyLFClk.c ****         {
 740:Generated_Source\PSoC4/CyLFClk.c ****             interruptState = CyEnterCriticalSection();
 741:Generated_Source\PSoC4/CyLFClk.c ****             CySysClkLfclkPosedgeCatch();
 742:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = (CY_SYS_WDT_CONFIG_REG & (uint32)(~CY_SYS_CLK_LFCLK_SEL_MASK)) 
 743:Generated_Source\PSoC4/CyLFClk.c ****                                     (source & CY_SYS_CLK_LFCLK_SEL_MASK);
 744:Generated_Source\PSoC4/CyLFClk.c ****             CySysClkLfclkPosedgeRestore();
 745:Generated_Source\PSoC4/CyLFClk.c ****             CyExitCriticalSection(interruptState);
 746:Generated_Source\PSoC4/CyLFClk.c ****         }
 747:Generated_Source\PSoC4/CyLFClk.c ****     }
 748:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_WCO && CY_IP_SRSSV2) */
 749:Generated_Source\PSoC4/CyLFClk.c **** 
 750:Generated_Source\PSoC4/CyLFClk.c **** 
 751:Generated_Source\PSoC4/CyLFClk.c **** #if (CY_IP_WCO)
 752:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 34


 753:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkWcoStart
 754:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 755:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 756:Generated_Source\PSoC4/CyLFClk.c ****     *  Enables Watch Crystal Oscillator (WCO).
 757:Generated_Source\PSoC4/CyLFClk.c ****     * 
 758:Generated_Source\PSoC4/CyLFClk.c ****     * This API enables WCO which is used as a source for LFCLK. Similar to ILO, 
 759:Generated_Source\PSoC4/CyLFClk.c ****     * WCO is also available in all modes except Hibernate and Stop modes.
 760:Generated_Source\PSoC4/CyLFClk.c ****     * \note In PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices
 761:Generated_Source\PSoC4/CyLFClk.c ****     * WCO cannot be a source for the LFCLK. 
 762:Generated_Source\PSoC4/CyLFClk.c ****     *
 763:Generated_Source\PSoC4/CyLFClk.c ****     *  WCO is always enabled in High Power Mode (HPM). Refer to the device
 764:Generated_Source\PSoC4/CyLFClk.c ****     *  datasheet for the  WCO startup time. Once WCO becomes stable it can be
 765:Generated_Source\PSoC4/CyLFClk.c ****     *  switched to Low Power Mode (LPM). Note that oscillator can be unstable
 766:Generated_Source\PSoC4/CyLFClk.c ****     *  during a switch and hence its output should not be used at that moment.
 767:Generated_Source\PSoC4/CyLFClk.c ****     *
 768:Generated_Source\PSoC4/CyLFClk.c ****     *  The CySysClkWcoSetPowerMode() function configures the WCO power mode.
 769:Generated_Source\PSoC4/CyLFClk.c ****     *
 770:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 771:Generated_Source\PSoC4/CyLFClk.c ****     void CySysClkWcoStart(void)
 772:Generated_Source\PSoC4/CyLFClk.c ****     {
 416              		.loc 2 772 0
 417              		.cfi_startproc
 418              		@ args = 0, pretend = 0, frame = 0
 419              		@ frame_needed = 0, uses_anonymous_args = 0
 420 0000 10B5     		push	{r4, lr}
 421              		.cfi_def_cfa_offset 8
 422              		.cfi_offset 4, -8
 423              		.cfi_offset 14, -4
 773:Generated_Source\PSoC4/CyLFClk.c ****         CySysClkWcoSetHighPowerMode();
 424              		.loc 2 773 0
 425 0002 FFF7FEFF 		bl	CySysClkWcoSetHighPowerMode
 426              	.LVL22:
 774:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE;
 427              		.loc 2 774 0
 428 0006 8021     		movs	r1, #128
 429 0008 024A     		ldr	r2, .L32
 430 000a 0906     		lsls	r1, r1, #24
 431 000c 1368     		ldr	r3, [r2]
 775:Generated_Source\PSoC4/CyLFClk.c ****     }
 432              		.loc 2 775 0
 433              		@ sp needed
 774:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE;
 434              		.loc 2 774 0
 435 000e 0B43     		orrs	r3, r1
 436 0010 1360     		str	r3, [r2]
 437              		.loc 2 775 0
 438 0012 10BD     		pop	{r4, pc}
 439              	.L33:
 440              		.align	2
 441              	.L32:
 442 0014 00000740 		.word	1074200576
 443              		.cfi_endproc
 444              	.LFE6:
 445              		.size	CySysClkWcoStart, .-CySysClkWcoStart
 446              		.section	.text.CySysClkWcoEnabled,"ax",%progbits
 447              		.align	1
 448              		.global	CySysClkWcoEnabled
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 35


 449              		.code	16
 450              		.thumb_func
 451              		.type	CySysClkWcoEnabled, %function
 452              	CySysClkWcoEnabled:
 453              	.LFB8:
 776:Generated_Source\PSoC4/CyLFClk.c **** 
 777:Generated_Source\PSoC4/CyLFClk.c **** 
 778:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 779:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkWcoStop
 780:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 781:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 782:Generated_Source\PSoC4/CyLFClk.c ****     * Disables the 32 KHz Crystal Oscillator.
 783:Generated_Source\PSoC4/CyLFClk.c ****     *
 784:Generated_Source\PSoC4/CyLFClk.c ****     * API switch of WCO.
 785:Generated_Source\PSoC4/CyLFClk.c ****     * \note PSoC 4100S / PSoC Analog Coprocessor: WCO is required for DeepSleep 
 786:Generated_Source\PSoC4/CyLFClk.c ****     * Timer's operation.
 787:Generated_Source\PSoC4/CyLFClk.c ****     *
 788:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 789:Generated_Source\PSoC4/CyLFClk.c ****     void  CySysClkWcoStop(void)
 790:Generated_Source\PSoC4/CyLFClk.c ****     {
 791:Generated_Source\PSoC4/CyLFClk.c ****         #if (CY_IP_SRSSV2)
 792:Generated_Source\PSoC4/CyLFClk.c ****             uint8  interruptState;
 793:Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (CY_IP_SRSSV2) */
 794:Generated_Source\PSoC4/CyLFClk.c **** 
 795:Generated_Source\PSoC4/CyLFClk.c ****         if (0u != CySysClkWcoEnabled())
 796:Generated_Source\PSoC4/CyLFClk.c ****         {
 797:Generated_Source\PSoC4/CyLFClk.c ****             #if (CY_IP_SRSSV2)
 798:Generated_Source\PSoC4/CyLFClk.c ****                 if (CY_SYS_CLK_LFCLK_SRC_WCO == CySysClkGetLfclkSource())
 799:Generated_Source\PSoC4/CyLFClk.c ****                 {
 800:Generated_Source\PSoC4/CyLFClk.c ****                     interruptState = CyEnterCriticalSection();
 801:Generated_Source\PSoC4/CyLFClk.c ****                     CySysClkLfclkPosedgeCatch();
 802:Generated_Source\PSoC4/CyLFClk.c ****                     CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE;
 803:Generated_Source\PSoC4/CyLFClk.c ****                     CySysClkLfclkPosedgeRestore();
 804:Generated_Source\PSoC4/CyLFClk.c ****                     CyExitCriticalSection(interruptState);
 805:Generated_Source\PSoC4/CyLFClk.c ****                 }
 806:Generated_Source\PSoC4/CyLFClk.c ****                 else /* Safe to disable - shortened pulse does not impact peripheral */
 807:Generated_Source\PSoC4/CyLFClk.c ****             #endif /* (CY_IP_SRSSV2) */
 808:Generated_Source\PSoC4/CyLFClk.c ****             {
 809:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE;
 810:Generated_Source\PSoC4/CyLFClk.c ****             }
 811:Generated_Source\PSoC4/CyLFClk.c ****         } /* Otherwise do nothing. WCO configuration cannot be changed. */
 812:Generated_Source\PSoC4/CyLFClk.c ****     }
 813:Generated_Source\PSoC4/CyLFClk.c **** 
 814:Generated_Source\PSoC4/CyLFClk.c **** 
 815:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 816:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkWcoEnabled
 817:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 818:Generated_Source\PSoC4/CyLFClk.c ****     * \internal Reports the WCO enable state.
 819:Generated_Source\PSoC4/CyLFClk.c ****     *
 820:Generated_Source\PSoC4/CyLFClk.c ****     * \return 1 if WCO is enabled
 821:Generated_Source\PSoC4/CyLFClk.c ****     * \return 0 if WCO is disabled.
 822:Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
 823:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 824:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysClkWcoEnabled(void)
 825:Generated_Source\PSoC4/CyLFClk.c ****     {
 454              		.loc 2 825 0
 455              		.cfi_startproc
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 36


 456              		@ args = 0, pretend = 0, frame = 0
 457              		@ frame_needed = 0, uses_anonymous_args = 0
 458              		@ link register save eliminated.
 826:Generated_Source\PSoC4/CyLFClk.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & (uint32)(CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE))) ?
 459              		.loc 2 826 0
 460 0000 014B     		ldr	r3, .L35
 827:Generated_Source\PSoC4/CyLFClk.c ****                 (uint32) 1u :
 828:Generated_Source\PSoC4/CyLFClk.c ****                 (uint32) 0u);
 829:Generated_Source\PSoC4/CyLFClk.c ****     }
 461              		.loc 2 829 0
 462              		@ sp needed
 826:Generated_Source\PSoC4/CyLFClk.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & (uint32)(CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE))) ?
 463              		.loc 2 826 0
 464 0002 1868     		ldr	r0, [r3]
 465 0004 C00F     		lsrs	r0, r0, #31
 466              		.loc 2 829 0
 467 0006 7047     		bx	lr
 468              	.L36:
 469              		.align	2
 470              	.L35:
 471 0008 00000740 		.word	1074200576
 472              		.cfi_endproc
 473              	.LFE8:
 474              		.size	CySysClkWcoEnabled, .-CySysClkWcoEnabled
 475              		.section	.text.CySysClkWcoStop,"ax",%progbits
 476              		.align	1
 477              		.global	CySysClkWcoStop
 478              		.code	16
 479              		.thumb_func
 480              		.type	CySysClkWcoStop, %function
 481              	CySysClkWcoStop:
 482              	.LFB7:
 790:Generated_Source\PSoC4/CyLFClk.c ****         #if (CY_IP_SRSSV2)
 483              		.loc 2 790 0
 484              		.cfi_startproc
 485              		@ args = 0, pretend = 0, frame = 0
 486              		@ frame_needed = 0, uses_anonymous_args = 0
 487 0000 10B5     		push	{r4, lr}
 488              		.cfi_def_cfa_offset 8
 489              		.cfi_offset 4, -8
 490              		.cfi_offset 14, -4
 795:Generated_Source\PSoC4/CyLFClk.c ****         {
 491              		.loc 2 795 0
 492 0002 FFF7FEFF 		bl	CySysClkWcoEnabled
 493              	.LVL23:
 494 0006 0028     		cmp	r0, #0
 495 0008 04D0     		beq	.L37
 809:Generated_Source\PSoC4/CyLFClk.c ****             }
 496              		.loc 2 809 0
 497 000a 034A     		ldr	r2, .L42
 498 000c 1368     		ldr	r3, [r2]
 499 000e 5B00     		lsls	r3, r3, #1
 500 0010 5B08     		lsrs	r3, r3, #1
 501 0012 1360     		str	r3, [r2]
 502              	.L37:
 812:Generated_Source\PSoC4/CyLFClk.c **** 
 503              		.loc 2 812 0
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 37


 504              		@ sp needed
 505 0014 10BD     		pop	{r4, pc}
 506              	.L43:
 507 0016 C046     		.align	2
 508              	.L42:
 509 0018 00000740 		.word	1074200576
 510              		.cfi_endproc
 511              	.LFE7:
 512              		.size	CySysClkWcoStop, .-CySysClkWcoStop
 513              		.section	.text.CySysClkWcoSetPowerMode,"ax",%progbits
 514              		.align	1
 515              		.global	CySysClkWcoSetPowerMode
 516              		.code	16
 517              		.thumb_func
 518              		.type	CySysClkWcoSetPowerMode, %function
 519              	CySysClkWcoSetPowerMode:
 520              	.LFB9:
 830:Generated_Source\PSoC4/CyLFClk.c **** 
 831:Generated_Source\PSoC4/CyLFClk.c **** 
 832:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 833:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkWcoSetPowerMode
 834:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 835:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 836:Generated_Source\PSoC4/CyLFClk.c ****     * Sets the power mode for the 32 KHz WCO.
 837:Generated_Source\PSoC4/CyLFClk.c ****     *
 838:Generated_Source\PSoC4/CyLFClk.c ****     * By default (if this function is not called), the WCO is in High power mode 
 839:Generated_Source\PSoC4/CyLFClk.c ****     * during Active and device's low power modes
 840:Generated_Source\PSoC4/CyLFClk.c ****     *
 841:Generated_Source\PSoC4/CyLFClk.c ****     * \param mode
 842:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_CLK_WCO_HPM - The High Power mode.<br>
 843:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_CLK_WCO_LPM - The Low Power mode.
 844:Generated_Source\PSoC4/CyLFClk.c ****     *
 845:Generated_Source\PSoC4/CyLFClk.c ****     * \return A previous power mode. The same as the parameters.
 846:Generated_Source\PSoC4/CyLFClk.c ****     *
 847:Generated_Source\PSoC4/CyLFClk.c ****     * \note
 848:Generated_Source\PSoC4/CyLFClk.c ****     * The WCO Low Power mode is applicable for PSoC 4100 BLE / PSoC 4200 BLE devices.
 849:Generated_Source\PSoC4/CyLFClk.c ****     *
 850:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 851:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysClkWcoSetPowerMode(uint32 mode)
 852:Generated_Source\PSoC4/CyLFClk.c ****     {
 521              		.loc 2 852 0
 522              		.cfi_startproc
 523              		@ args = 0, pretend = 0, frame = 0
 524              		@ frame_needed = 0, uses_anonymous_args = 0
 525              	.LVL24:
 853:Generated_Source\PSoC4/CyLFClk.c ****         uint32 powerModeStatus;
 854:Generated_Source\PSoC4/CyLFClk.c **** 
 855:Generated_Source\PSoC4/CyLFClk.c ****         powerModeStatus = CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_LPM_EN;
 526              		.loc 2 855 0
 527 0000 054B     		ldr	r3, .L47
 852:Generated_Source\PSoC4/CyLFClk.c ****         uint32 powerModeStatus;
 528              		.loc 2 852 0
 529 0002 10B5     		push	{r4, lr}
 530              		.cfi_def_cfa_offset 8
 531              		.cfi_offset 4, -8
 532              		.cfi_offset 14, -4
 533              		.loc 2 855 0
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 38


 534 0004 1C68     		ldr	r4, [r3]
 535 0006 0123     		movs	r3, #1
 536 0008 1C40     		ands	r4, r3
 537              	.LVL25:
 856:Generated_Source\PSoC4/CyLFClk.c **** 
 857:Generated_Source\PSoC4/CyLFClk.c ****         switch(mode)
 538              		.loc 2 857 0
 539 000a 0028     		cmp	r0, #0
 540 000c 01D1     		bne	.L45
 858:Generated_Source\PSoC4/CyLFClk.c ****         {
 859:Generated_Source\PSoC4/CyLFClk.c ****         case CY_SYS_CLK_WCO_HPM:
 860:Generated_Source\PSoC4/CyLFClk.c ****                 CySysClkWcoSetHighPowerMode();
 541              		.loc 2 860 0
 542 000e FFF7FEFF 		bl	CySysClkWcoSetHighPowerMode
 543              	.LVL26:
 544              	.L45:
 861:Generated_Source\PSoC4/CyLFClk.c ****             break;
 862:Generated_Source\PSoC4/CyLFClk.c **** 
 863:Generated_Source\PSoC4/CyLFClk.c ****         #if(CY_IP_BLESS)
 864:Generated_Source\PSoC4/CyLFClk.c ****             case CY_SYS_CLK_WCO_LPM:
 865:Generated_Source\PSoC4/CyLFClk.c ****                     CySysClkWcoSetLowPowerMode();
 866:Generated_Source\PSoC4/CyLFClk.c ****                 break;
 867:Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (CY_IP_BLESS) */
 868:Generated_Source\PSoC4/CyLFClk.c **** 
 869:Generated_Source\PSoC4/CyLFClk.c ****         default:
 870:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
 871:Generated_Source\PSoC4/CyLFClk.c ****             break;
 872:Generated_Source\PSoC4/CyLFClk.c ****         }
 873:Generated_Source\PSoC4/CyLFClk.c **** 
 874:Generated_Source\PSoC4/CyLFClk.c ****         return (powerModeStatus);
 875:Generated_Source\PSoC4/CyLFClk.c ****     }
 545              		.loc 2 875 0
 546 0012 2000     		movs	r0, r4
 547              		@ sp needed
 548              	.LVL27:
 549 0014 10BD     		pop	{r4, pc}
 550              	.L48:
 551 0016 C046     		.align	2
 552              	.L47:
 553 0018 00000740 		.word	1074200576
 554              		.cfi_endproc
 555              	.LFE9:
 556              		.size	CySysClkWcoSetPowerMode, .-CySysClkWcoSetPowerMode
 557              		.section	.text.CySysClkWcoClockOutSelect,"ax",%progbits
 558              		.align	1
 559              		.global	CySysClkWcoClockOutSelect
 560              		.code	16
 561              		.thumb_func
 562              		.type	CySysClkWcoClockOutSelect, %function
 563              	CySysClkWcoClockOutSelect:
 564              	.LFB10:
 876:Generated_Source\PSoC4/CyLFClk.c **** 
 877:Generated_Source\PSoC4/CyLFClk.c **** 
 878:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 879:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkWcoClockOutSelect
 880:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 881:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 39


 882:Generated_Source\PSoC4/CyLFClk.c ****     * Selects the WCO block output source.
 883:Generated_Source\PSoC4/CyLFClk.c ****     *
 884:Generated_Source\PSoC4/CyLFClk.c ****     * In addition to generating 32.768 kHz clock from external crystals, WCO 
 885:Generated_Source\PSoC4/CyLFClk.c ****     * can be sourced by external clock source using wco_out pin. The API help to
 886:Generated_Source\PSoC4/CyLFClk.c ****     * lets you select between the sources: External crystal or external pin.
 887:Generated_Source\PSoC4/CyLFClk.c ****     *
 888:Generated_Source\PSoC4/CyLFClk.c ****     * If you want to use external pin to drive WCO the next procedure is required:
 889:Generated_Source\PSoC4/CyLFClk.c ****     * <br> 1) Disable the WCO.
 890:Generated_Source\PSoC4/CyLFClk.c ****     * <br> 2) Drive the wco_out pin to an external signal source.
 891:Generated_Source\PSoC4/CyLFClk.c ****     * <br> 3) Call CySysClkWcoClockOutSelect(CY_SYS_CLK_WCO_SEL_PIN).
 892:Generated_Source\PSoC4/CyLFClk.c ****     * <br> 4) Enable the WCO and wait for 15 us before clocking the XO pad at the high 
 893:Generated_Source\PSoC4/CyLFClk.c ****     * potential. Let's assume you are using the 1.6v clock amplitude, then the
 894:Generated_Source\PSoC4/CyLFClk.c ****     * sequence would start at 1.6v, then 0v, then 1.6v etc at a chosen frequency.
 895:Generated_Source\PSoC4/CyLFClk.c ****     *
 896:Generated_Source\PSoC4/CyLFClk.c ****     * If you want to use WCO after using an external pin source:
 897:Generated_Source\PSoC4/CyLFClk.c ****     * <br> 1) Disable the WCO.
 898:Generated_Source\PSoC4/CyLFClk.c ****     * <br> 2) Drive off wco_out pin with external signal source.
 899:Generated_Source\PSoC4/CyLFClk.c ****     * <br> 3) Call CySysClkWcoClockOutSelect(CY_SYS_CLK_WCO_SEL_CRYSTAL).
 900:Generated_Source\PSoC4/CyLFClk.c ****     * <br> 4) Enable the WCO.
 901:Generated_Source\PSoC4/CyLFClk.c ****     *
 902:Generated_Source\PSoC4/CyLFClk.c ****     * \warning 
 903:Generated_Source\PSoC4/CyLFClk.c ****     * Do not use the oscillator output clock prior to a 15uS delay in your system.
 904:Generated_Source\PSoC4/CyLFClk.c ****     * There are no limitations on the external clock frequency.
 905:Generated_Source\PSoC4/CyLFClk.c ****     * \warning 
 906:Generated_Source\PSoC4/CyLFClk.c ****     * When external clock source was selected to drive WCO block the IMO can be 
 907:Generated_Source\PSoC4/CyLFClk.c ****     * trimmed only when external clock source period is equal to WCO external
 908:Generated_Source\PSoC4/CyLFClk.c ****     * crystal period. Also external clock source accuracy should be higher 
 909:Generated_Source\PSoC4/CyLFClk.c ****     * or equal to WCO external crystal accuracy.
 910:Generated_Source\PSoC4/CyLFClk.c ****     *
 911:Generated_Source\PSoC4/CyLFClk.c ****     * \param clockSel
 912:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_CLK_WCO_SEL_CRYSTAL - Selects External crystal as clock 
 913:Generated_Source\PSoC4/CyLFClk.c ****     * source of WCO.<br>
 914:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_CLK_WCO_SEL_PIN - Selects External clock input on wco_in pin as 
 915:Generated_Source\PSoC4/CyLFClk.c ****     * clock source of WCO.
 916:Generated_Source\PSoC4/CyLFClk.c ****     *
 917:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 918:Generated_Source\PSoC4/CyLFClk.c ****     void CySysClkWcoClockOutSelect(uint32 clockSel)
 919:Generated_Source\PSoC4/CyLFClk.c ****     {
 565              		.loc 2 919 0
 566              		.cfi_startproc
 567              		@ args = 0, pretend = 0, frame = 0
 568              		@ frame_needed = 0, uses_anonymous_args = 0
 569              	.LVL28:
 570 0000 10B5     		push	{r4, lr}
 571              		.cfi_def_cfa_offset 8
 572              		.cfi_offset 4, -8
 573              		.cfi_offset 14, -4
 574              		.loc 2 919 0
 575 0002 0400     		movs	r4, r0
 920:Generated_Source\PSoC4/CyLFClk.c ****         if (0u != CySysClkWcoEnabled())
 576              		.loc 2 920 0
 577 0004 FFF7FEFF 		bl	CySysClkWcoEnabled
 578              	.LVL29:
 579 0008 0028     		cmp	r0, #0
 580 000a 08D0     		beq	.L49
 921:Generated_Source\PSoC4/CyLFClk.c ****         {
 922:Generated_Source\PSoC4/CyLFClk.c ****             if (1u >= clockSel)
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 40


 581              		.loc 2 922 0
 582 000c 012C     		cmp	r4, #1
 583 000e 06D8     		bhi	.L49
 923:Generated_Source\PSoC4/CyLFClk.c ****             {
 924:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CLK_WCO_CONFIG_REG = (CY_SYS_CLK_WCO_CONFIG_REG & (uint32)(~CY_SYS_CLK_WCO_S
 584              		.loc 2 924 0
 585 0010 0421     		movs	r1, #4
 586 0012 034A     		ldr	r2, .L54
 587 0014 A400     		lsls	r4, r4, #2
 588              	.LVL30:
 589 0016 1368     		ldr	r3, [r2]
 590 0018 8B43     		bics	r3, r1
 591 001a 1C43     		orrs	r4, r3
 592 001c 1460     		str	r4, [r2]
 593              	.L49:
 925:Generated_Source\PSoC4/CyLFClk.c ****                                         (clockSel << CY_SYS_CLK_WCO_SELECT_PIN_OFFSET);
 926:Generated_Source\PSoC4/CyLFClk.c ****             }
 927:Generated_Source\PSoC4/CyLFClk.c ****             else
 928:Generated_Source\PSoC4/CyLFClk.c ****             {
 929:Generated_Source\PSoC4/CyLFClk.c ****                 CYASSERT(0u != 0u);
 930:Generated_Source\PSoC4/CyLFClk.c ****             }
 931:Generated_Source\PSoC4/CyLFClk.c ****         }
 932:Generated_Source\PSoC4/CyLFClk.c ****     }
 594              		.loc 2 932 0
 595              		@ sp needed
 596 001e 10BD     		pop	{r4, pc}
 597              	.L55:
 598              		.align	2
 599              	.L54:
 600 0020 00000740 		.word	1074200576
 601              		.cfi_endproc
 602              	.LFE10:
 603              		.size	CySysClkWcoClockOutSelect, .-CySysClkWcoClockOutSelect
 604              		.section	.text.CySysWdtGetEnabledStatus,"ax",%progbits
 605              		.align	1
 606              		.global	CySysWdtGetEnabledStatus
 607              		.code	16
 608              		.thumb_func
 609              		.type	CySysWdtGetEnabledStatus, %function
 610              	CySysWdtGetEnabledStatus:
 611              	.LFB11:
 933:Generated_Source\PSoC4/CyLFClk.c **** #endif  /* (CY_IP_WCO) */
 934:Generated_Source\PSoC4/CyLFClk.c **** 
 935:Generated_Source\PSoC4/CyLFClk.c **** 
 936:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2)
 937:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 938:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtLock
 939:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 940:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 941:Generated_Source\PSoC4/CyLFClk.c ****     * Locks out configuration changes to the Watchdog timer registers and ILO
 942:Generated_Source\PSoC4/CyLFClk.c ****     * configuration register.
 943:Generated_Source\PSoC4/CyLFClk.c ****     *
 944:Generated_Source\PSoC4/CyLFClk.c ****     * After this function is called, ILO clock can't be disabled until
 945:Generated_Source\PSoC4/CyLFClk.c ****     * CySysWdtUnlock() is called.
 946:Generated_Source\PSoC4/CyLFClk.c ****     *
 947:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 948:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtLock(void)
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 41


 949:Generated_Source\PSoC4/CyLFClk.c ****     {
 950:Generated_Source\PSoC4/CyLFClk.c ****         uint8 interruptState;
 951:Generated_Source\PSoC4/CyLFClk.c ****         interruptState = CyEnterCriticalSection();
 952:Generated_Source\PSoC4/CyLFClk.c **** 
 953:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_CLK_SELECT_REG = (CY_SYS_CLK_SELECT_REG & (uint32)(~CY_SYS_WDT_CLK_LOCK_BITS_MASK)) 
 954:Generated_Source\PSoC4/CyLFClk.c ****                  CY_SYS_WDT_CLK_LOCK_BITS_MASK;
 955:Generated_Source\PSoC4/CyLFClk.c **** 
 956:Generated_Source\PSoC4/CyLFClk.c ****         CyExitCriticalSection(interruptState);
 957:Generated_Source\PSoC4/CyLFClk.c ****     }
 958:Generated_Source\PSoC4/CyLFClk.c **** 
 959:Generated_Source\PSoC4/CyLFClk.c **** 
 960:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 961:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtLocked
 962:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 963:Generated_Source\PSoC4/CyLFClk.c ****     * \internal
 964:Generated_Source\PSoC4/CyLFClk.c ****     * Reports the WDT lock state.
 965:Generated_Source\PSoC4/CyLFClk.c ****     *
 966:Generated_Source\PSoC4/CyLFClk.c ****     * \return 1 - WDT is locked, and 0 - WDT is unlocked.
 967:Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
 968:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 969:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysWdtLocked(void)
 970:Generated_Source\PSoC4/CyLFClk.c ****     {
 971:Generated_Source\PSoC4/CyLFClk.c ****         /* Prohibits writing to WDT registers and ILO/WCO registers when not equal 0 */
 972:Generated_Source\PSoC4/CyLFClk.c ****         return ((0u != (CY_SYS_CLK_SELECT_REG & (uint32)(CY_SYS_WDT_CLK_LOCK_BITS_MASK))) ? (uint32
 973:Generated_Source\PSoC4/CyLFClk.c ****     }
 974:Generated_Source\PSoC4/CyLFClk.c **** 
 975:Generated_Source\PSoC4/CyLFClk.c **** 
 976:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 977:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtUnlock
 978:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 979:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 980:Generated_Source\PSoC4/CyLFClk.c ****     *  Unlocks the Watchdog Timer configuration register.
 981:Generated_Source\PSoC4/CyLFClk.c ****     *
 982:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 983:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtUnlock(void)
 984:Generated_Source\PSoC4/CyLFClk.c ****     {
 985:Generated_Source\PSoC4/CyLFClk.c ****         uint8 interruptState;
 986:Generated_Source\PSoC4/CyLFClk.c ****         interruptState = CyEnterCriticalSection();
 987:Generated_Source\PSoC4/CyLFClk.c **** 
 988:Generated_Source\PSoC4/CyLFClk.c ****         /* Removing WDT lock requires two writes */
 989:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & (uint32)(~CY_SYS_WDT_CLK_LOCK_BITS_MASK))
 990:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_WDT_CLK_LOCK_BIT0);
 991:Generated_Source\PSoC4/CyLFClk.c **** 
 992:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & (uint32)(~CY_SYS_WDT_CLK_LOCK_BITS_MASK))
 993:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_WDT_CLK_LOCK_BIT1);
 994:Generated_Source\PSoC4/CyLFClk.c **** 
 995:Generated_Source\PSoC4/CyLFClk.c ****         CyExitCriticalSection(interruptState);
 996:Generated_Source\PSoC4/CyLFClk.c ****     }
 997:Generated_Source\PSoC4/CyLFClk.c **** 
 998:Generated_Source\PSoC4/CyLFClk.c **** 
 999:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1000:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetEnabledStatus
1001:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1002:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1003:Generated_Source\PSoC4/CyLFClk.c ****     *  Reads the enabled status of one of the three WDT counters.
1004:Generated_Source\PSoC4/CyLFClk.c ****     *
1005:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum: Valid range [0-2].  The number of the WDT counter.
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 42


1006:Generated_Source\PSoC4/CyLFClk.c ****     *
1007:Generated_Source\PSoC4/CyLFClk.c ****     * \return The status of the WDT counter:
1008:Generated_Source\PSoC4/CyLFClk.c ****     * \return 0 - If the counter is disabled.
1009:Generated_Source\PSoC4/CyLFClk.c ****     * \return 1 - If the counter is enabled.
1010:Generated_Source\PSoC4/CyLFClk.c ****     *
1011:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1012:Generated_Source\PSoC4/CyLFClk.c ****     * This function returns an actual WDT counter status from the status register. It may
1013:Generated_Source\PSoC4/CyLFClk.c ****     * take up to 3 LFCLK cycles for the WDT status register to contain actual data
1014:Generated_Source\PSoC4/CyLFClk.c ****     * after the WDT counter is enabled.
1015:Generated_Source\PSoC4/CyLFClk.c ****     *
1016:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1017:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetEnabledStatus(uint32 counterNum)
1018:Generated_Source\PSoC4/CyLFClk.c ****     {
1019:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT(counterNum < CY_SYS_WDT_COUNTERS_MAX);
1020:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WDT_CONTROL_REG >> ((CY_SYS_WDT_CNT_SHIFT * counterNum) + CY_SYS_WDT_CNT_ST
1021:Generated_Source\PSoC4/CyLFClk.c ****     }
1022:Generated_Source\PSoC4/CyLFClk.c **** 
1023:Generated_Source\PSoC4/CyLFClk.c **** 
1024:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1025:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetMode
1026:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1027:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1028:Generated_Source\PSoC4/CyLFClk.c ****     * Writes the mode of one of the three WDT counters.
1029:Generated_Source\PSoC4/CyLFClk.c ****     *
1030:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum: Valid range [0-2].  The number of the WDT counter.
1031:Generated_Source\PSoC4/CyLFClk.c ****     *
1032:Generated_Source\PSoC4/CyLFClk.c ****     * \param mode
1033:Generated_Source\PSoC4/CyLFClk.c ****     *  CY_SYS_WDT_MODE_NONE - Free running.<br>
1034:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_MODE_INT - The interrupt generated on match for counter 0
1035:Generated_Source\PSoC4/CyLFClk.c ****     * and 1, and on bit toggle for counter 2.<br>
1036:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_MODE_RESET - Reset on match (valid for counter 0 and 1 only).<br>
1037:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_MODE_INT_RESET - Generate an interrupt.  Generate a reset on
1038:Generated_Source\PSoC4/CyLFClk.c ****     * the 3rd non-handled interrupt (valid for counter 0 and counter 1 only).
1039:Generated_Source\PSoC4/CyLFClk.c ****     *
1040:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1041:Generated_Source\PSoC4/CyLFClk.c ****     * WDT counter counterNum should be disabled to set a mode. Otherwise, this
1042:Generated_Source\PSoC4/CyLFClk.c ****     * function call has no effect. If the specified counter is enabled,
1043:Generated_Source\PSoC4/CyLFClk.c ****     * call the CySysWdtDisable() function with the corresponding parameter to
1044:Generated_Source\PSoC4/CyLFClk.c ****     * disable the specified counter and wait for it to stop.
1045:Generated_Source\PSoC4/CyLFClk.c ****     *
1046:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1047:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetMode(uint32 counterNum, uint32 mode)
1048:Generated_Source\PSoC4/CyLFClk.c ****     {
1049:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
1050:Generated_Source\PSoC4/CyLFClk.c **** 
1051:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT(counterNum < CY_SYS_WDT_COUNTERS_MAX);
1052:Generated_Source\PSoC4/CyLFClk.c **** 
1053:Generated_Source\PSoC4/CyLFClk.c ****         if(0u == CySysWdtGetEnabledStatus(counterNum))
1054:Generated_Source\PSoC4/CyLFClk.c ****         {
1055:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WDT_CONFIG_REG &
1056:Generated_Source\PSoC4/CyLFClk.c ****                                 (uint32)~((uint32)(CY_SYS_WDT_MODE_MASK << (counterNum * CY_SYS_WDT
1057:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= (uint32)((mode & CY_SYS_WDT_MODE_MASK) << (counterNum * CY_SYS_WDT_CN
1058:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = configRegValue;
1059:Generated_Source\PSoC4/CyLFClk.c ****         }
1060:Generated_Source\PSoC4/CyLFClk.c ****     }
1061:Generated_Source\PSoC4/CyLFClk.c **** 
1062:Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 43


1063:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1064:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetMode
1065:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1066:Generated_Source\PSoC4/CyLFClk.c ****     * 
1067:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the mode of one of the three WDT counters.
1068:Generated_Source\PSoC4/CyLFClk.c ****     *
1069:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the WDT counter.
1070:Generated_Source\PSoC4/CyLFClk.c ****     *
1071:Generated_Source\PSoC4/CyLFClk.c ****     * \return The mode of the counter. The same enumerated values as the mode 
1072:Generated_Source\PSoC4/CyLFClk.c ****     * parameter used in CySysWdtSetMode().
1073:Generated_Source\PSoC4/CyLFClk.c ****     *
1074:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1075:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetMode(uint32 counterNum)
1076:Generated_Source\PSoC4/CyLFClk.c ****     {
1077:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WDT_CONFIG_REG >> (counterNum * CY_SYS_WDT_CNT_SHIFT)) & CY_SYS_WDT_MODE_MA
1078:Generated_Source\PSoC4/CyLFClk.c ****     }
1079:Generated_Source\PSoC4/CyLFClk.c **** 
1080:Generated_Source\PSoC4/CyLFClk.c **** 
1081:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1082:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetClearOnMatch
1083:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1084:Generated_Source\PSoC4/CyLFClk.c ****     * 
1085:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Configures the WDT counter "clear on match" setting.
1086:Generated_Source\PSoC4/CyLFClk.c ****     *
1087:Generated_Source\PSoC4/CyLFClk.c ****     * If configured to "clear on match", the counter counts from 0 to MatchValue
1088:Generated_Source\PSoC4/CyLFClk.c ****     * giving it a period of (MatchValue + 1).
1089:Generated_Source\PSoC4/CyLFClk.c ****     *
1090:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum
1091:Generated_Source\PSoC4/CyLFClk.c ****     * Valid range [0-1]. The number of the WDT counter. The match values are not
1092:Generated_Source\PSoC4/CyLFClk.c ****     * supported by counter 2.
1093:Generated_Source\PSoC4/CyLFClk.c ****     *
1094:Generated_Source\PSoC4/CyLFClk.c ****     * \param enable 0 to disable appropriate counter <br>
1095:Generated_Source\PSoC4/CyLFClk.c ****     *  1 to enable appropriate counter
1096:Generated_Source\PSoC4/CyLFClk.c ****     *
1097:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1098:Generated_Source\PSoC4/CyLFClk.c ****     * WDT counter counterNum should be disabled. Otherwise this function call
1099:Generated_Source\PSoC4/CyLFClk.c ****     * has no effect. If the specified counter is enabled, call the CySysWdtDisable()
1100:Generated_Source\PSoC4/CyLFClk.c ****     * function with the corresponding parameter to disable the specified counter and
1101:Generated_Source\PSoC4/CyLFClk.c ****     * wait for it to stop. This may take up to three LFCLK cycles.
1102:Generated_Source\PSoC4/CyLFClk.c ****     *
1103:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1104:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetClearOnMatch(uint32 counterNum, uint32 enable)
1105:Generated_Source\PSoC4/CyLFClk.c ****     {
1106:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
1107:Generated_Source\PSoC4/CyLFClk.c **** 
1108:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_WDT_COUNTER0) ||
1109:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_WDT_COUNTER1));
1110:Generated_Source\PSoC4/CyLFClk.c **** 
1111:Generated_Source\PSoC4/CyLFClk.c ****         if(0u == CySysWdtGetEnabledStatus(counterNum))
1112:Generated_Source\PSoC4/CyLFClk.c ****         {
1113:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WDT_CONFIG_REG & (uint32)~((uint32)((uint32)1u << 
1114:Generated_Source\PSoC4/CyLFClk.c ****                                      ((counterNum * CY_SYS_WDT_CNT_SHIFT) + CY_SYS_WDT_CNT_MATCH_CL
1115:Generated_Source\PSoC4/CyLFClk.c **** 
1116:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue
1117:Generated_Source\PSoC4/CyLFClk.c ****                 |= (uint32)(enable << ((counterNum * CY_SYS_WDT_CNT_SHIFT) + CY_SYS_WDT_CNT_MATCH_C
1118:Generated_Source\PSoC4/CyLFClk.c **** 
1119:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = configRegValue;
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 44


1120:Generated_Source\PSoC4/CyLFClk.c ****         }
1121:Generated_Source\PSoC4/CyLFClk.c ****     }
1122:Generated_Source\PSoC4/CyLFClk.c **** 
1123:Generated_Source\PSoC4/CyLFClk.c **** 
1124:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1125:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetClearOnMatch
1126:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1127:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1128:Generated_Source\PSoC4/CyLFClk.c ****     * Reads the "clear on match" setting for the specified counter.
1129:Generated_Source\PSoC4/CyLFClk.c ****     *
1130:Generated_Source\PSoC4/CyLFClk.c ****     * \param
1131:Generated_Source\PSoC4/CyLFClk.c ****     * counterNum Valid range [0-1]. The number of the WDT counter. The match values
1132:Generated_Source\PSoC4/CyLFClk.c ****     * are not supported by counter 2.
1133:Generated_Source\PSoC4/CyLFClk.c ****     *
1134:Generated_Source\PSoC4/CyLFClk.c ****     * \return The "clear on match" status: <br>1 if enabled <br>0 if disabled
1135:Generated_Source\PSoC4/CyLFClk.c ****     *
1136:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1137:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetClearOnMatch(uint32 counterNum)
1138:Generated_Source\PSoC4/CyLFClk.c ****     {
1139:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_WDT_COUNTER0) ||
1140:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_WDT_COUNTER1));
1141:Generated_Source\PSoC4/CyLFClk.c **** 
1142:Generated_Source\PSoC4/CyLFClk.c ****         return (uint32)((CY_SYS_WDT_CONFIG_REG >>
1143:Generated_Source\PSoC4/CyLFClk.c ****                         ((counterNum * CY_SYS_WDT_CNT_SHIFT) + CY_SYS_WDT_CNT_MATCH_CLR_SHIFT)) & 0
1144:Generated_Source\PSoC4/CyLFClk.c ****     }
1145:Generated_Source\PSoC4/CyLFClk.c **** 
1146:Generated_Source\PSoC4/CyLFClk.c **** 
1147:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1148:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtEnable
1149:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1150:Generated_Source\PSoC4/CyLFClk.c ****     *
1151:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Enables the specified WDT counters.
1152:Generated_Source\PSoC4/CyLFClk.c ****     *
1153:Generated_Source\PSoC4/CyLFClk.c ****     * All the counters specified in the mask are enabled.
1154:Generated_Source\PSoC4/CyLFClk.c ****     *
1155:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterMask
1156:Generated_Source\PSoC4/CyLFClk.c ****     *  CY_SYS_WDT_COUNTER0_MASK - The mask for counter 0 to enable.<br>
1157:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER1_MASK - The mask for counter 1 to enable.<br>
1158:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER2_MASK - The mask for counter 2 to enable.
1159:Generated_Source\PSoC4/CyLFClk.c ****     *
1160:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1161:Generated_Source\PSoC4/CyLFClk.c ****     * Enabling or disabling WDT requires 3 LFCLK cycles to come into effect.
1162:Generated_Source\PSoC4/CyLFClk.c ****     * Therefore, the WDT enable state must not be changed more than once in
1163:Generated_Source\PSoC4/CyLFClk.c ****     * that period.
1164:Generated_Source\PSoC4/CyLFClk.c ****     *
1165:Generated_Source\PSoC4/CyLFClk.c ****     * After WDT is enabled, it is illegal to write WDT configuration (WDT_CONFIG)
1166:Generated_Source\PSoC4/CyLFClk.c ****     * and control (WDT_CONTROL) registers. This means that all WDT functions that
1167:Generated_Source\PSoC4/CyLFClk.c ****     * contain 'write' in the name (with the exception of CySysWdtSetMatch()
1168:Generated_Source\PSoC4/CyLFClk.c ****     * function) are illegal to call if WDT is enabled.
1169:Generated_Source\PSoC4/CyLFClk.c ****     *
1170:Generated_Source\PSoC4/CyLFClk.c ****     * PSoC 4100 / PSoC 4200: This function enables ILO.
1171:Generated_Source\PSoC4/CyLFClk.c ****     *
1172:Generated_Source\PSoC4/CyLFClk.c ****     * PSoC 4100 BLE / PSoC 4200 BLE / PSoC4200L / PSoC 4100M 
1173:Generated_Source\PSoC4/CyLFClk.c ****     * / PSoC 4200M:
1174:Generated_Source\PSoC4/CyLFClk.c ****     * LFLCK should be configured before calling this function. The desired
1175:Generated_Source\PSoC4/CyLFClk.c ****     * source should be enabled and configured to be the source for LFCLK.
1176:Generated_Source\PSoC4/CyLFClk.c ****     *
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 45


1177:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1178:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtEnable(uint32 counterMask)
1179:Generated_Source\PSoC4/CyLFClk.c ****     {
1180:Generated_Source\PSoC4/CyLFClk.c ****         #if (!CY_IP_WCO)
1181:Generated_Source\PSoC4/CyLFClk.c ****             CySysClkIloStart();
1182:Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (!CY_IP_WCO) */
1183:Generated_Source\PSoC4/CyLFClk.c **** 
1184:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_CONTROL_REG |= counterMask;
1185:Generated_Source\PSoC4/CyLFClk.c **** 
1186:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_WDT_COUNTER0_MASK))
1187:Generated_Source\PSoC4/CyLFClk.c ****         {
1188:Generated_Source\PSoC4/CyLFClk.c ****             while (0u == CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER0))
1189:Generated_Source\PSoC4/CyLFClk.c ****             {
1190:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
1191:Generated_Source\PSoC4/CyLFClk.c ****             }
1192:Generated_Source\PSoC4/CyLFClk.c ****         }
1193:Generated_Source\PSoC4/CyLFClk.c **** 
1194:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_WDT_COUNTER1_MASK))
1195:Generated_Source\PSoC4/CyLFClk.c ****         {
1196:Generated_Source\PSoC4/CyLFClk.c ****             while (0u == CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER1))
1197:Generated_Source\PSoC4/CyLFClk.c ****             {
1198:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
1199:Generated_Source\PSoC4/CyLFClk.c ****             }
1200:Generated_Source\PSoC4/CyLFClk.c ****         }
1201:Generated_Source\PSoC4/CyLFClk.c **** 
1202:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_WDT_COUNTER2_MASK))
1203:Generated_Source\PSoC4/CyLFClk.c ****         {
1204:Generated_Source\PSoC4/CyLFClk.c ****             while (0u == CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER2))
1205:Generated_Source\PSoC4/CyLFClk.c ****             {
1206:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
1207:Generated_Source\PSoC4/CyLFClk.c ****             }
1208:Generated_Source\PSoC4/CyLFClk.c ****         }
1209:Generated_Source\PSoC4/CyLFClk.c ****     }
1210:Generated_Source\PSoC4/CyLFClk.c **** 
1211:Generated_Source\PSoC4/CyLFClk.c **** 
1212:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1213:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtDisable
1214:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1215:Generated_Source\PSoC4/CyLFClk.c ****     *
1216:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Disables the specified WDT counters.
1217:Generated_Source\PSoC4/CyLFClk.c ****     * All the counters specified in the mask are disabled. The function waits for 
1218:Generated_Source\PSoC4/CyLFClk.c ****     * the changes to come into effect.
1219:Generated_Source\PSoC4/CyLFClk.c ****     *
1220:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterMask
1221:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER0_MASK - The mask for counter 0 to disable. <br>
1222:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER1_MASK - The mask for counter 1 to disable. <br>
1223:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER2_MASK - The mask for counter 2 to disable.
1224:Generated_Source\PSoC4/CyLFClk.c ****     *
1225:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1226:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtDisable(uint32 counterMask)
1227:Generated_Source\PSoC4/CyLFClk.c ****     {
1228:Generated_Source\PSoC4/CyLFClk.c ****         if (0uL == CySysWdtLocked())
1229:Generated_Source\PSoC4/CyLFClk.c ****         {
1230:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONTROL_REG &= ~counterMask;
1231:Generated_Source\PSoC4/CyLFClk.c **** 
1232:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (counterMask & CY_SYS_WDT_COUNTER0_MASK))
1233:Generated_Source\PSoC4/CyLFClk.c ****             {
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 46


1234:Generated_Source\PSoC4/CyLFClk.c ****                 while (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER0))
1235:Generated_Source\PSoC4/CyLFClk.c ****                 {
1236:Generated_Source\PSoC4/CyLFClk.c ****                     /* Wait for changes to come into effect */
1237:Generated_Source\PSoC4/CyLFClk.c ****                 }
1238:Generated_Source\PSoC4/CyLFClk.c ****             }
1239:Generated_Source\PSoC4/CyLFClk.c **** 
1240:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (counterMask & CY_SYS_WDT_COUNTER1_MASK))
1241:Generated_Source\PSoC4/CyLFClk.c ****             {
1242:Generated_Source\PSoC4/CyLFClk.c ****                 while (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER1))
1243:Generated_Source\PSoC4/CyLFClk.c ****                 {
1244:Generated_Source\PSoC4/CyLFClk.c ****                     /* Wait for changes to come into effect */
1245:Generated_Source\PSoC4/CyLFClk.c ****                 }
1246:Generated_Source\PSoC4/CyLFClk.c ****             }
1247:Generated_Source\PSoC4/CyLFClk.c **** 
1248:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (counterMask & CY_SYS_WDT_COUNTER2_MASK))
1249:Generated_Source\PSoC4/CyLFClk.c ****             {
1250:Generated_Source\PSoC4/CyLFClk.c ****                 while (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER2))
1251:Generated_Source\PSoC4/CyLFClk.c ****                 {
1252:Generated_Source\PSoC4/CyLFClk.c ****                     /* Wait for changes to come into effect */
1253:Generated_Source\PSoC4/CyLFClk.c ****                 }
1254:Generated_Source\PSoC4/CyLFClk.c ****             }
1255:Generated_Source\PSoC4/CyLFClk.c ****         }
1256:Generated_Source\PSoC4/CyLFClk.c ****     }
1257:Generated_Source\PSoC4/CyLFClk.c **** 
1258:Generated_Source\PSoC4/CyLFClk.c **** 
1259:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1260:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetCascade
1261:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1262:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1263:Generated_Source\PSoC4/CyLFClk.c ****     * Writes the two WDT cascade values based on the combination of mask values
1264:Generated_Source\PSoC4/CyLFClk.c ****     * specified.
1265:Generated_Source\PSoC4/CyLFClk.c ****     *
1266:Generated_Source\PSoC4/CyLFClk.c ****     * \param cascadeMask The mask value used to set or clear the cascade values:
1267:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_CASCADE_NONE - Neither <br>
1268:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_CASCADE_01 - Cascade 01 <br>
1269:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_CASCADE_12 - Cascade 12
1270:Generated_Source\PSoC4/CyLFClk.c ****     *
1271:Generated_Source\PSoC4/CyLFClk.c ****     * If only one cascade mask is specified, the second cascade is disabled.
1272:Generated_Source\PSoC4/CyLFClk.c ****     * To set both cascade modes, two defines should be ORed:
1273:Generated_Source\PSoC4/CyLFClk.c ****     * (CY_SYS_TIMER_CASCADE_01 | CY_SYS_TIMER_CASCADE_12).
1274:Generated_Source\PSoC4/CyLFClk.c ****     * \note If CySysWdtSetCascade() was called with ORed defines it is necessary 
1275:Generated_Source\PSoC4/CyLFClk.c ****     * to call CySysWdtSetClearOnMatch(1,1). It is needed to make sure that 
1276:Generated_Source\PSoC4/CyLFClk.c ****     * Counter 2 will be updated in the expected way.
1277:Generated_Source\PSoC4/CyLFClk.c ****     *
1278:Generated_Source\PSoC4/CyLFClk.c ****     * WDT counters that are part of the specified cascade should be disabled.
1279:Generated_Source\PSoC4/CyLFClk.c ****     * Otherwise this function call has no effect. If the specified
1280:Generated_Source\PSoC4/CyLFClk.c ****     * counter is enabled, call CySysWdtDisable() function with the corresponding
1281:Generated_Source\PSoC4/CyLFClk.c ****     * parameter to disable the specified counter and wait for it to stop. This may
1282:Generated_Source\PSoC4/CyLFClk.c ****     * take up to 3 LFCLK cycles.
1283:Generated_Source\PSoC4/CyLFClk.c ****     *
1284:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1285:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetCascade(uint32 cascadeMask)
1286:Generated_Source\PSoC4/CyLFClk.c ****     {
1287:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
1288:Generated_Source\PSoC4/CyLFClk.c ****         uint32 countersEnableStatus;
1289:Generated_Source\PSoC4/CyLFClk.c **** 
1290:Generated_Source\PSoC4/CyLFClk.c ****         countersEnableStatus = CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER0) |
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 47


1291:Generated_Source\PSoC4/CyLFClk.c ****                             CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER1) |
1292:Generated_Source\PSoC4/CyLFClk.c ****                             CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER2);
1293:Generated_Source\PSoC4/CyLFClk.c **** 
1294:Generated_Source\PSoC4/CyLFClk.c ****         if (0u == countersEnableStatus)
1295:Generated_Source\PSoC4/CyLFClk.c ****         {
1296:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WDT_CONFIG_REG;
1297:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue &= ((uint32)(~(CY_SYS_WDT_CASCADE_01|CY_SYS_WDT_CASCADE_12)));
1298:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= cascadeMask;
1299:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = configRegValue;
1300:Generated_Source\PSoC4/CyLFClk.c ****         }
1301:Generated_Source\PSoC4/CyLFClk.c ****     }
1302:Generated_Source\PSoC4/CyLFClk.c **** 
1303:Generated_Source\PSoC4/CyLFClk.c **** 
1304:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1305:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetCascade
1306:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1307:Generated_Source\PSoC4/CyLFClk.c ****     *
1308:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the two WDT cascade values returning a mask of the bits set.
1309:Generated_Source\PSoC4/CyLFClk.c ****     *
1310:Generated_Source\PSoC4/CyLFClk.c ****     * \return The mask of the cascade values set.
1311:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_CASCADE_NONE - Neither
1312:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_CASCADE_01 - Cascade 01
1313:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_CASCADE_12 - Cascade 12
1314:Generated_Source\PSoC4/CyLFClk.c ****     *
1315:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1316:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetCascade(void)
1317:Generated_Source\PSoC4/CyLFClk.c ****     {
1318:Generated_Source\PSoC4/CyLFClk.c ****         return (CY_SYS_WDT_CONFIG_REG & (CY_SYS_WDT_CASCADE_01 | CY_SYS_WDT_CASCADE_12));
1319:Generated_Source\PSoC4/CyLFClk.c ****     }
1320:Generated_Source\PSoC4/CyLFClk.c **** 
1321:Generated_Source\PSoC4/CyLFClk.c **** 
1322:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1323:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetMatch
1324:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1325:Generated_Source\PSoC4/CyLFClk.c ****     *
1326:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Configures the WDT counter match comparison value.
1327:Generated_Source\PSoC4/CyLFClk.c ****     *
1328:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum
1329:Generated_Source\PSoC4/CyLFClk.c ****     * Valid range [0-1]. The number of the WDT counter. The match values are not
1330:Generated_Source\PSoC4/CyLFClk.c ****     * supported by counter 2.
1331:Generated_Source\PSoC4/CyLFClk.c ****     *
1332:Generated_Source\PSoC4/CyLFClk.c ****     * \param match
1333:Generated_Source\PSoC4/CyLFClk.c ****     * Valid range [0-65535]. The value to be used to match against the counter.
1334:Generated_Source\PSoC4/CyLFClk.c ****     *
1335:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1336:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetMatch(uint32 counterNum, uint32 match)
1337:Generated_Source\PSoC4/CyLFClk.c ****     {
1338:Generated_Source\PSoC4/CyLFClk.c ****         uint32 regValue;
1339:Generated_Source\PSoC4/CyLFClk.c **** 
1340:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_WDT_COUNTER0) ||
1341:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_WDT_COUNTER1));
1342:Generated_Source\PSoC4/CyLFClk.c **** 
1343:Generated_Source\PSoC4/CyLFClk.c ****         /* Wait for previous changes to come into effect */
1344:Generated_Source\PSoC4/CyLFClk.c ****         CyDelayUs(CY_SYS_WDT_3LFCLK_DELAY_US);
1345:Generated_Source\PSoC4/CyLFClk.c **** 
1346:Generated_Source\PSoC4/CyLFClk.c ****         regValue = CY_SYS_WDT_MATCH_REG;
1347:Generated_Source\PSoC4/CyLFClk.c ****         regValue &= (uint32)~((uint32)(CY_SYS_WDT_LOWER_16BITS_MASK << (counterNum * CY_SYS_WDT_CNT
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 48


1348:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_MATCH_REG = (regValue | (match << (counterNum * CY_SYS_WDT_CNT_MATCH_SHIFT)));
1349:Generated_Source\PSoC4/CyLFClk.c **** 
1350:Generated_Source\PSoC4/CyLFClk.c ****         /* Make sure match synchronization has started */
1351:Generated_Source\PSoC4/CyLFClk.c ****         CyDelayUs(CY_SYS_WDT_1LFCLK_DELAY_US);
1352:Generated_Source\PSoC4/CyLFClk.c ****     }
1353:Generated_Source\PSoC4/CyLFClk.c **** 
1354:Generated_Source\PSoC4/CyLFClk.c **** 
1355:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1356:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetToggleBit
1357:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1358:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1359:Generated_Source\PSoC4/CyLFClk.c ****     * Configures which bit in WDT counter 2 to monitor for a toggle.
1360:Generated_Source\PSoC4/CyLFClk.c ****     *
1361:Generated_Source\PSoC4/CyLFClk.c ****     * When that bit toggles, an interrupt is generated if the mode for counter 2 has
1362:Generated_Source\PSoC4/CyLFClk.c ****     * enabled interrupts.
1363:Generated_Source\PSoC4/CyLFClk.c ****     *
1364:Generated_Source\PSoC4/CyLFClk.c ****     * \param bits Valid range [0-31].  Counter 2 bit to monitor for a toggle.
1365:Generated_Source\PSoC4/CyLFClk.c ****     *
1366:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1367:Generated_Source\PSoC4/CyLFClk.c ****     * WDT Counter 2 should be disabled. Otherwise this function call has no
1368:Generated_Source\PSoC4/CyLFClk.c ****     * effect.
1369:Generated_Source\PSoC4/CyLFClk.c ****     *
1370:Generated_Source\PSoC4/CyLFClk.c ****     * If the specified counter is enabled, call the CySysWdtDisable() function with
1371:Generated_Source\PSoC4/CyLFClk.c ****     * the corresponding parameter to disable the specified counter and wait for it to
1372:Generated_Source\PSoC4/CyLFClk.c ****     * stop. This may take up to 3 LFCLK cycles.
1373:Generated_Source\PSoC4/CyLFClk.c ****     *
1374:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1375:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetToggleBit(uint32 bits)
1376:Generated_Source\PSoC4/CyLFClk.c ****     {
1377:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
1378:Generated_Source\PSoC4/CyLFClk.c **** 
1379:Generated_Source\PSoC4/CyLFClk.c ****         if (0u == CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER2))
1380:Generated_Source\PSoC4/CyLFClk.c ****         {
1381:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WDT_CONFIG_REG;
1382:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue &= (uint32)(~((uint32)(CY_SYS_WDT_CONFIG_BITS2_MASK << CY_SYS_WDT_CONFIG
1383:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= ((bits & CY_SYS_WDT_CONFIG_BITS2_MASK) << CY_SYS_WDT_CONFIG_BITS2_POS
1384:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = configRegValue;
1385:Generated_Source\PSoC4/CyLFClk.c ****         }
1386:Generated_Source\PSoC4/CyLFClk.c ****     }
1387:Generated_Source\PSoC4/CyLFClk.c **** 
1388:Generated_Source\PSoC4/CyLFClk.c **** 
1389:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1390:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetToggleBit
1391:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1392:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1393:Generated_Source\PSoC4/CyLFClk.c ****     * Reads which bit in WDT counter 2 is monitored for a toggle.
1394:Generated_Source\PSoC4/CyLFClk.c ****     *
1395:Generated_Source\PSoC4/CyLFClk.c ****     * \return The bit that is monitored (range of 0 to 31)
1396:Generated_Source\PSoC4/CyLFClk.c ****     *
1397:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1398:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetToggleBit(void)
1399:Generated_Source\PSoC4/CyLFClk.c ****     {
1400:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WDT_CONFIG_REG >> CY_SYS_WDT_CONFIG_BITS2_POS) & CY_SYS_WDT_CONFIG_BITS2_MA
1401:Generated_Source\PSoC4/CyLFClk.c ****     }
1402:Generated_Source\PSoC4/CyLFClk.c **** 
1403:Generated_Source\PSoC4/CyLFClk.c **** 
1404:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 49


1405:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetMatch
1406:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1407:Generated_Source\PSoC4/CyLFClk.c ****     *
1408:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the WDT counter match comparison value.
1409:Generated_Source\PSoC4/CyLFClk.c ****     *
1410:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-1].  The number of the WDT counter. The match
1411:Generated_Source\PSoC4/CyLFClk.c ****     * values are not supported by counter 2.
1412:Generated_Source\PSoC4/CyLFClk.c ****     *
1413:Generated_Source\PSoC4/CyLFClk.c ****     * \return A 16-bit match value.
1414:Generated_Source\PSoC4/CyLFClk.c ****     *
1415:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1416:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetMatch(uint32 counterNum)
1417:Generated_Source\PSoC4/CyLFClk.c ****     {
1418:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_WDT_COUNTER0) ||
1419:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_WDT_COUNTER1));
1420:Generated_Source\PSoC4/CyLFClk.c **** 
1421:Generated_Source\PSoC4/CyLFClk.c ****         return ((uint32)(CY_SYS_WDT_MATCH_REG >> 
1422:Generated_Source\PSoC4/CyLFClk.c ****                                             (counterNum * CY_SYS_WDT_CNT_MATCH_SHIFT)) & CY_SYS_WDT
1423:Generated_Source\PSoC4/CyLFClk.c ****     }
1424:Generated_Source\PSoC4/CyLFClk.c **** 
1425:Generated_Source\PSoC4/CyLFClk.c **** 
1426:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1427:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetCount
1428:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1429:Generated_Source\PSoC4/CyLFClk.c ****     *
1430:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the current WDT counter value.
1431:Generated_Source\PSoC4/CyLFClk.c ****     *
1432:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum: Valid range [0-2]. The number of the WDT counter.
1433:Generated_Source\PSoC4/CyLFClk.c ****     *
1434:Generated_Source\PSoC4/CyLFClk.c ****     * \return A live counter value.  Counter 0 and Counter 1 are 16 bit counters 
1435:Generated_Source\PSoC4/CyLFClk.c ****     * and counter 2 is a 32 bit counter.
1436:Generated_Source\PSoC4/CyLFClk.c ****     *
1437:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1438:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetCount(uint32 counterNum)
1439:Generated_Source\PSoC4/CyLFClk.c ****     {
1440:Generated_Source\PSoC4/CyLFClk.c ****         uint32 regValue = 0u;
1441:Generated_Source\PSoC4/CyLFClk.c **** 
1442:Generated_Source\PSoC4/CyLFClk.c ****         switch(counterNum)
1443:Generated_Source\PSoC4/CyLFClk.c ****         {
1444:Generated_Source\PSoC4/CyLFClk.c ****             /* WDT Counter 0 */
1445:Generated_Source\PSoC4/CyLFClk.c ****             case 0u:
1446:Generated_Source\PSoC4/CyLFClk.c ****                 regValue = CY_SYS_WDT_CTRLOW_REG & CY_SYS_WDT_LOWER_16BITS_MASK;
1447:Generated_Source\PSoC4/CyLFClk.c ****             break;
1448:Generated_Source\PSoC4/CyLFClk.c **** 
1449:Generated_Source\PSoC4/CyLFClk.c ****             /* WDT Counter 1 */
1450:Generated_Source\PSoC4/CyLFClk.c ****             case 1u:
1451:Generated_Source\PSoC4/CyLFClk.c ****                 regValue = (CY_SYS_WDT_CTRLOW_REG >> CY_SYS_WDT_CNT_MATCH_SHIFT) & CY_SYS_WDT_LOWER
1452:Generated_Source\PSoC4/CyLFClk.c ****             break;
1453:Generated_Source\PSoC4/CyLFClk.c **** 
1454:Generated_Source\PSoC4/CyLFClk.c ****             /* WDT Counter 2 */
1455:Generated_Source\PSoC4/CyLFClk.c ****             case 2u:
1456:Generated_Source\PSoC4/CyLFClk.c ****                 regValue = CY_SYS_WDT_CTRHIGH_REG;
1457:Generated_Source\PSoC4/CyLFClk.c ****             break;
1458:Generated_Source\PSoC4/CyLFClk.c **** 
1459:Generated_Source\PSoC4/CyLFClk.c ****             default:
1460:Generated_Source\PSoC4/CyLFClk.c ****                 CYASSERT(0u != 0u);
1461:Generated_Source\PSoC4/CyLFClk.c ****             break;
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 50


1462:Generated_Source\PSoC4/CyLFClk.c ****         }
1463:Generated_Source\PSoC4/CyLFClk.c **** 
1464:Generated_Source\PSoC4/CyLFClk.c ****         return (regValue);
1465:Generated_Source\PSoC4/CyLFClk.c ****     }
1466:Generated_Source\PSoC4/CyLFClk.c **** 
1467:Generated_Source\PSoC4/CyLFClk.c **** 
1468:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1469:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetInterruptSource
1470:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1471:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1472:Generated_Source\PSoC4/CyLFClk.c ****     * Reads a mask containing all the WDT counters interrupts that are currently
1473:Generated_Source\PSoC4/CyLFClk.c ****     * set by the hardware, if a corresponding mode is selected.
1474:Generated_Source\PSoC4/CyLFClk.c ****     *
1475:Generated_Source\PSoC4/CyLFClk.c ****     * \return The mask of interrupts set
1476:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_COUNTER0_INT - Counter 0
1477:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_COUNTER1_INT - Counter 1
1478:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_COUNTER2_INT - Counter 2
1479:Generated_Source\PSoC4/CyLFClk.c ****     *
1480:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1481:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetInterruptSource(void)
1482:Generated_Source\PSoC4/CyLFClk.c ****     {
1483:Generated_Source\PSoC4/CyLFClk.c ****         return (CY_SYS_WDT_CONTROL_REG & (CY_SYS_WDT_COUNTER0_INT | CY_SYS_WDT_COUNTER1_INT | CY_SY
1484:Generated_Source\PSoC4/CyLFClk.c ****     }
1485:Generated_Source\PSoC4/CyLFClk.c **** 
1486:Generated_Source\PSoC4/CyLFClk.c **** 
1487:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1488:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtClearInterrupt
1489:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1490:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1491:Generated_Source\PSoC4/CyLFClk.c ****     * Clears all the WDT counter interrupts set in the mask.
1492:Generated_Source\PSoC4/CyLFClk.c ****     *
1493:Generated_Source\PSoC4/CyLFClk.c ****     * Calling this function also prevents from Reset when the counter mode is set 
1494:Generated_Source\PSoC4/CyLFClk.c ****     * to generate 3 interrupts and then the device resets.
1495:Generated_Source\PSoC4/CyLFClk.c ****     *
1496:Generated_Source\PSoC4/CyLFClk.c ****     * All the WDT interrupts are to be cleared by the firmware, otherwise
1497:Generated_Source\PSoC4/CyLFClk.c ****     * interrupts are generated continuously.
1498:Generated_Source\PSoC4/CyLFClk.c ****     *
1499:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterMask
1500:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER0_INT - Clears counter 0 interrupts <br>
1501:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER1_INT - Clears counter 1 interrupts <br>
1502:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER2_INT - Clears counter 2 interrupts
1503:Generated_Source\PSoC4/CyLFClk.c ****     *
1504:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1505:Generated_Source\PSoC4/CyLFClk.c ****     * This function temporary removes the watchdog lock, if it was set, and
1506:Generated_Source\PSoC4/CyLFClk.c ****     * restores the lock state after cleaning the WDT interrupts that are set in
1507:Generated_Source\PSoC4/CyLFClk.c ****     * a mask.
1508:Generated_Source\PSoC4/CyLFClk.c ****     *
1509:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1510:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtClearInterrupt(uint32 counterMask)
1511:Generated_Source\PSoC4/CyLFClk.c ****     {
1512:Generated_Source\PSoC4/CyLFClk.c ****         uint8 interruptState;
1513:Generated_Source\PSoC4/CyLFClk.c ****         uint32 wdtLockState;
1514:Generated_Source\PSoC4/CyLFClk.c **** 
1515:Generated_Source\PSoC4/CyLFClk.c ****         interruptState = CyEnterCriticalSection();
1516:Generated_Source\PSoC4/CyLFClk.c **** 
1517:Generated_Source\PSoC4/CyLFClk.c ****         if (0u != CySysWdtLocked())
1518:Generated_Source\PSoC4/CyLFClk.c ****         {
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 51


1519:Generated_Source\PSoC4/CyLFClk.c ****             wdtLockState = 1u;
1520:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtUnlock();
1521:Generated_Source\PSoC4/CyLFClk.c ****         }
1522:Generated_Source\PSoC4/CyLFClk.c ****         else
1523:Generated_Source\PSoC4/CyLFClk.c ****         {
1524:Generated_Source\PSoC4/CyLFClk.c ****             wdtLockState = 0u;
1525:Generated_Source\PSoC4/CyLFClk.c ****         }
1526:Generated_Source\PSoC4/CyLFClk.c **** 
1527:Generated_Source\PSoC4/CyLFClk.c ****         /* Set new WDT control register value */
1528:Generated_Source\PSoC4/CyLFClk.c ****         counterMask &= (CY_SYS_WDT_COUNTER0_INT |
1529:Generated_Source\PSoC4/CyLFClk.c ****                         CY_SYS_WDT_COUNTER1_INT |
1530:Generated_Source\PSoC4/CyLFClk.c ****                         CY_SYS_WDT_COUNTER2_INT);
1531:Generated_Source\PSoC4/CyLFClk.c **** 
1532:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_CONTROL_REG = counterMask | (CY_SYS_WDT_CONTROL_REG & ~(CY_SYS_WDT_COUNTER0_INT 
1533:Generated_Source\PSoC4/CyLFClk.c ****                                                                            CY_SYS_WDT_COUNTER1_INT 
1534:Generated_Source\PSoC4/CyLFClk.c ****                                                                            CY_SYS_WDT_COUNTER2_INT)
1535:Generated_Source\PSoC4/CyLFClk.c **** 
1536:Generated_Source\PSoC4/CyLFClk.c ****         /* Read the CY_SYS_WDT_CONTROL_REG to clear the interrupt request.
1537:Generated_Source\PSoC4/CyLFClk.c ****          * Cypress ID #207093, #206231
1538:Generated_Source\PSoC4/CyLFClk.c ****         */
1539:Generated_Source\PSoC4/CyLFClk.c ****         (void)CY_SYS_WDT_CONTROL_REG;
1540:Generated_Source\PSoC4/CyLFClk.c **** 
1541:Generated_Source\PSoC4/CyLFClk.c ****         if (1u == wdtLockState)
1542:Generated_Source\PSoC4/CyLFClk.c ****         {
1543:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtLock();
1544:Generated_Source\PSoC4/CyLFClk.c ****         }
1545:Generated_Source\PSoC4/CyLFClk.c **** 
1546:Generated_Source\PSoC4/CyLFClk.c ****         CyExitCriticalSection(interruptState);
1547:Generated_Source\PSoC4/CyLFClk.c ****     }
1548:Generated_Source\PSoC4/CyLFClk.c **** 
1549:Generated_Source\PSoC4/CyLFClk.c **** 
1550:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1551:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtResetCounters
1552:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1553:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1554:Generated_Source\PSoC4/CyLFClk.c ****     * Resets all the WDT counters set in the mask.
1555:Generated_Source\PSoC4/CyLFClk.c ****     *
1556:Generated_Source\PSoC4/CyLFClk.c ****     * \param countersMask
1557:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER0_RESET - Reset counter 0 <br>
1558:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER1_RESET - Reset counter 1 <br>
1559:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER2_RESET - Reset counter 2
1560:Generated_Source\PSoC4/CyLFClk.c ****     *
1561:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1562:Generated_Source\PSoC4/CyLFClk.c ****     * This function does not reset counter values if the Watchdog is locked.
1563:Generated_Source\PSoC4/CyLFClk.c ****     * This function waits while corresponding counters will be reset. This may
1564:Generated_Source\PSoC4/CyLFClk.c ****     * take up to 3 LFCLK cycles.
1565:Generated_Source\PSoC4/CyLFClk.c ****     * The LFCLK source must be enabled. Otherwise, the function will never exit.
1566:Generated_Source\PSoC4/CyLFClk.c ****     *
1567:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1568:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtResetCounters(uint32 countersMask)
1569:Generated_Source\PSoC4/CyLFClk.c ****     {
1570:Generated_Source\PSoC4/CyLFClk.c ****         /* Set new WDT reset value */
1571:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_CONTROL_REG |= (countersMask & CY_SYS_WDT_COUNTERS_RESET);
1572:Generated_Source\PSoC4/CyLFClk.c **** 
1573:Generated_Source\PSoC4/CyLFClk.c ****         while (0uL != (CY_SYS_WDT_CONTROL_REG & CY_SYS_WDT_COUNTERS_RESET))
1574:Generated_Source\PSoC4/CyLFClk.c ****         {
1575:Generated_Source\PSoC4/CyLFClk.c ****             /* Wait for reset to come into effect */
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 52


1576:Generated_Source\PSoC4/CyLFClk.c ****         }
1577:Generated_Source\PSoC4/CyLFClk.c ****     }
1578:Generated_Source\PSoC4/CyLFClk.c **** 
1579:Generated_Source\PSoC4/CyLFClk.c **** 
1580:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1581:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetInterruptCallback
1582:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1583:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1584:Generated_Source\PSoC4/CyLFClk.c ****     * Sets the ISR callback function for the particular WDT counter.
1585:Generated_Source\PSoC4/CyLFClk.c ****     * These functions are called on the WDT interrupt.
1586:Generated_Source\PSoC4/CyLFClk.c ****     *
1587:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum The number of the WDT counter.
1588:Generated_Source\PSoC4/CyLFClk.c ****     * \param function The pointer to the callback function.
1589:Generated_Source\PSoC4/CyLFClk.c ****     *
1590:Generated_Source\PSoC4/CyLFClk.c ****     * \return The pointer to the previous callback function.
1591:Generated_Source\PSoC4/CyLFClk.c ****     * \return NULL is returned if the specified address is not set.
1592:Generated_Source\PSoC4/CyLFClk.c ****     *
1593:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1594:Generated_Source\PSoC4/CyLFClk.c ****     cyWdtCallback CySysWdtSetInterruptCallback(uint32 counterNum, cyWdtCallback function)
1595:Generated_Source\PSoC4/CyLFClk.c ****     {
1596:Generated_Source\PSoC4/CyLFClk.c ****         cyWdtCallback prevCallback = (void *)0;
1597:Generated_Source\PSoC4/CyLFClk.c **** 
1598:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum < CY_WDT_NUM_OF_WDT)
1599:Generated_Source\PSoC4/CyLFClk.c ****         {
1600:Generated_Source\PSoC4/CyLFClk.c ****             prevCallback = cySysWdtCallback[counterNum];
1601:Generated_Source\PSoC4/CyLFClk.c ****             cySysWdtCallback[counterNum] = function;
1602:Generated_Source\PSoC4/CyLFClk.c ****         }
1603:Generated_Source\PSoC4/CyLFClk.c ****         else
1604:Generated_Source\PSoC4/CyLFClk.c ****         {
1605:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
1606:Generated_Source\PSoC4/CyLFClk.c ****         }
1607:Generated_Source\PSoC4/CyLFClk.c **** 
1608:Generated_Source\PSoC4/CyLFClk.c ****         return((cyWdtCallback)prevCallback);
1609:Generated_Source\PSoC4/CyLFClk.c ****     }
1610:Generated_Source\PSoC4/CyLFClk.c **** 
1611:Generated_Source\PSoC4/CyLFClk.c **** 
1612:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1613:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetInterruptCallback
1614:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1615:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1616:Generated_Source\PSoC4/CyLFClk.c ****     * Gets the ISR callback function for the particular WDT counter.
1617:Generated_Source\PSoC4/CyLFClk.c ****     *
1618:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum The number of the WDT counter.
1619:Generated_Source\PSoC4/CyLFClk.c ****     *
1620:Generated_Source\PSoC4/CyLFClk.c ****     * \return The pointer to the callback function registered for a particular WDT by
1621:Generated_Source\PSoC4/CyLFClk.c ****     * a particular address that are passed through arguments.
1622:Generated_Source\PSoC4/CyLFClk.c ****     *
1623:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1624:Generated_Source\PSoC4/CyLFClk.c ****     cyWdtCallback CySysWdtGetInterruptCallback(uint32 counterNum)
1625:Generated_Source\PSoC4/CyLFClk.c ****     {
1626:Generated_Source\PSoC4/CyLFClk.c ****         cyWdtCallback retCallback = (void *)0;
1627:Generated_Source\PSoC4/CyLFClk.c **** 
1628:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum < CY_WDT_NUM_OF_WDT)
1629:Generated_Source\PSoC4/CyLFClk.c ****         {
1630:Generated_Source\PSoC4/CyLFClk.c ****             retCallback = (cyWdtCallback)cySysWdtCallback[counterNum];
1631:Generated_Source\PSoC4/CyLFClk.c ****         }
1632:Generated_Source\PSoC4/CyLFClk.c ****         else
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 53


1633:Generated_Source\PSoC4/CyLFClk.c ****         {
1634:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
1635:Generated_Source\PSoC4/CyLFClk.c ****         }
1636:Generated_Source\PSoC4/CyLFClk.c **** 
1637:Generated_Source\PSoC4/CyLFClk.c ****         return(retCallback);
1638:Generated_Source\PSoC4/CyLFClk.c ****     }
1639:Generated_Source\PSoC4/CyLFClk.c **** 
1640:Generated_Source\PSoC4/CyLFClk.c **** 
1641:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1642:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtEnableCounterIsr
1643:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1644:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1645:Generated_Source\PSoC4/CyLFClk.c ****     * Enables the ISR callback servicing for the particular WDT counter
1646:Generated_Source\PSoC4/CyLFClk.c ****     *
1647:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the WDT counter.
1648:Generated_Source\PSoC4/CyLFClk.c ****     *
1649:Generated_Source\PSoC4/CyLFClk.c ****     * Value corresponds to appropriate WDT counter. For example value 1 
1650:Generated_Source\PSoC4/CyLFClk.c ****     * corresponds to second WDT counter.
1651:Generated_Source\PSoC4/CyLFClk.c ****     *
1652:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1653:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtEnableCounterIsr(uint32 counterNum)
1654:Generated_Source\PSoC4/CyLFClk.c ****     {
1655:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum <= CY_SYS_WDT_COUNTER2)
1656:Generated_Source\PSoC4/CyLFClk.c ****         {
1657:Generated_Source\PSoC4/CyLFClk.c ****             disableServicedIsr &= ~counterIntMaskTbl[counterNum];
1658:Generated_Source\PSoC4/CyLFClk.c ****             wdtIsrMask |= counterIntMaskTbl[counterNum];
1659:Generated_Source\PSoC4/CyLFClk.c ****         }
1660:Generated_Source\PSoC4/CyLFClk.c ****         else
1661:Generated_Source\PSoC4/CyLFClk.c ****         {
1662:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
1663:Generated_Source\PSoC4/CyLFClk.c ****         }
1664:Generated_Source\PSoC4/CyLFClk.c ****     }
1665:Generated_Source\PSoC4/CyLFClk.c **** 
1666:Generated_Source\PSoC4/CyLFClk.c **** 
1667:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1668:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtDisableCounterIsr
1669:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1670:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1671:Generated_Source\PSoC4/CyLFClk.c ****     * Disables the ISR callback servicing for the particular WDT counter
1672:Generated_Source\PSoC4/CyLFClk.c ****     *
1673:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the WDT counter.
1674:Generated_Source\PSoC4/CyLFClk.c ****     *
1675:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1676:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtDisableCounterIsr(uint32 counterNum)
1677:Generated_Source\PSoC4/CyLFClk.c ****     {
1678:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum <= CY_SYS_WDT_COUNTER2)
1679:Generated_Source\PSoC4/CyLFClk.c ****         {
1680:Generated_Source\PSoC4/CyLFClk.c ****             wdtIsrMask &= ~counterIntMaskTbl[counterNum];
1681:Generated_Source\PSoC4/CyLFClk.c ****         }
1682:Generated_Source\PSoC4/CyLFClk.c ****         else
1683:Generated_Source\PSoC4/CyLFClk.c ****         {
1684:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
1685:Generated_Source\PSoC4/CyLFClk.c ****         }
1686:Generated_Source\PSoC4/CyLFClk.c ****     }
1687:Generated_Source\PSoC4/CyLFClk.c **** 
1688:Generated_Source\PSoC4/CyLFClk.c **** 
1689:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 54


1690:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtIsr
1691:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1692:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1693:Generated_Source\PSoC4/CyLFClk.c ****     * This is the handler of the WDT interrupt in CPU NVIC.
1694:Generated_Source\PSoC4/CyLFClk.c ****     *
1695:Generated_Source\PSoC4/CyLFClk.c ****     * The handler checks which WDT triggered in the interrupt and calls the 
1696:Generated_Source\PSoC4/CyLFClk.c ****     * respective callback functions configured by the user by using 
1697:Generated_Source\PSoC4/CyLFClk.c ****     * CySysWdtSetIsrCallback() API.
1698:Generated_Source\PSoC4/CyLFClk.c ****     *
1699:Generated_Source\PSoC4/CyLFClk.c ****     * The order of the callback execution is incremental. Callback-0 is
1700:Generated_Source\PSoC4/CyLFClk.c ****     * run as the first one and callback-2 is called as the last one.
1701:Generated_Source\PSoC4/CyLFClk.c ****     *
1702:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1703:Generated_Source\PSoC4/CyLFClk.c ****     * This function clears the WDT interrupt every time when it is called.
1704:Generated_Source\PSoC4/CyLFClk.c ****     * Reset after the 3rd interrupt does not happen if this function is registered
1705:Generated_Source\PSoC4/CyLFClk.c ****     * as the interrupt handler even if the "Watchdog with Interrupt" mode is
1706:Generated_Source\PSoC4/CyLFClk.c ****     * selected on the "Low Frequency Clocks" tab.
1707:Generated_Source\PSoC4/CyLFClk.c ****     *
1708:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1709:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtIsr(void)
1710:Generated_Source\PSoC4/CyLFClk.c ****     {
1711:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_WDT_COUNTER0_INT & CY_SYS_WDT_CONTROL_REG))
1712:Generated_Source\PSoC4/CyLFClk.c ****         {
1713:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_WDT_COUNTER0_INT & wdtIsrMask))
1714:Generated_Source\PSoC4/CyLFClk.c ****             {
1715:Generated_Source\PSoC4/CyLFClk.c ****                 wdtIsrMask &= ~(disableServicedIsr & CY_SYS_WDT_COUNTER0_INT);
1716:Generated_Source\PSoC4/CyLFClk.c ****                 disableServicedIsr  &= ~CY_SYS_WDT_COUNTER0_INT;
1717:Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysWdtCallback[CY_SYS_WDT_COUNTER0] != (void *) 0)
1718:Generated_Source\PSoC4/CyLFClk.c ****                 {
1719:Generated_Source\PSoC4/CyLFClk.c ****                     (void)(cySysWdtCallback[CY_SYS_WDT_COUNTER0])();
1720:Generated_Source\PSoC4/CyLFClk.c ****                 }
1721:Generated_Source\PSoC4/CyLFClk.c ****             }
1722:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER0_INT);
1723:Generated_Source\PSoC4/CyLFClk.c ****         }
1724:Generated_Source\PSoC4/CyLFClk.c **** 
1725:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_WDT_COUNTER1_INT & CY_SYS_WDT_CONTROL_REG))
1726:Generated_Source\PSoC4/CyLFClk.c ****         {
1727:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_WDT_COUNTER1_INT & wdtIsrMask))
1728:Generated_Source\PSoC4/CyLFClk.c ****             {
1729:Generated_Source\PSoC4/CyLFClk.c ****                 wdtIsrMask &= ~(disableServicedIsr & CY_SYS_WDT_COUNTER1_INT);
1730:Generated_Source\PSoC4/CyLFClk.c ****                 disableServicedIsr  &= ~CY_SYS_WDT_COUNTER1_INT;
1731:Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysWdtCallback[CY_SYS_WDT_COUNTER1] != (void *) 0)
1732:Generated_Source\PSoC4/CyLFClk.c ****                 {
1733:Generated_Source\PSoC4/CyLFClk.c ****                     (void)(cySysWdtCallback[CY_SYS_WDT_COUNTER1])();
1734:Generated_Source\PSoC4/CyLFClk.c ****                 }
1735:Generated_Source\PSoC4/CyLFClk.c ****             }
1736:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER1_INT);
1737:Generated_Source\PSoC4/CyLFClk.c ****         }
1738:Generated_Source\PSoC4/CyLFClk.c **** 
1739:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_WDT_COUNTER2_INT & CY_SYS_WDT_CONTROL_REG))
1740:Generated_Source\PSoC4/CyLFClk.c ****         {
1741:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_WDT_COUNTER2_INT & wdtIsrMask))
1742:Generated_Source\PSoC4/CyLFClk.c ****             {
1743:Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysWdtCallback[CY_SYS_WDT_COUNTER2] != (void *) 0)
1744:Generated_Source\PSoC4/CyLFClk.c ****                 {
1745:Generated_Source\PSoC4/CyLFClk.c ****                     (void)(cySysWdtCallback[CY_SYS_WDT_COUNTER2])();
1746:Generated_Source\PSoC4/CyLFClk.c ****                 }
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 55


1747:Generated_Source\PSoC4/CyLFClk.c ****             }
1748:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER2_INT);
1749:Generated_Source\PSoC4/CyLFClk.c ****         }
1750:Generated_Source\PSoC4/CyLFClk.c ****     }
1751:Generated_Source\PSoC4/CyLFClk.c **** 
1752:Generated_Source\PSoC4/CyLFClk.c **** 
1753:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1754:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWatchdogFeed
1755:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1756:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1757:Generated_Source\PSoC4/CyLFClk.c ****     * Feeds the corresponded Watchdog Counter before it causes the device reset.
1758:Generated_Source\PSoC4/CyLFClk.c ****     *
1759:Generated_Source\PSoC4/CyLFClk.c ****     * Supported only for first WDT0 and second WDT1 counters in the "Watchdog" or 
1760:Generated_Source\PSoC4/CyLFClk.c ****     * "Watchdog w/ Interrupts" modes.
1761:Generated_Source\PSoC4/CyLFClk.c ****     *
1762:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum
1763:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER0 - Feeds the Counter 0 <br>
1764:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER1 - Feeds the Counter 1
1765:Generated_Source\PSoC4/CyLFClk.c ****     *
1766:Generated_Source\PSoC4/CyLFClk.c ****     * Value of counterNum corresponds to appropriate counter. For example value 1 
1767:Generated_Source\PSoC4/CyLFClk.c ****     * corresponds to second WDT1 Counter.
1768:Generated_Source\PSoC4/CyLFClk.c ****     *
1769:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1770:Generated_Source\PSoC4/CyLFClk.c ****     * Clears the WDT counter in the "Watchdog" mode or clears the WDT interrupt in
1771:Generated_Source\PSoC4/CyLFClk.c ****     * "Watchdog w/ Interrupts" mode. Does nothing in other modes.
1772:Generated_Source\PSoC4/CyLFClk.c ****     *
1773:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1774:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWatchdogFeed(uint32 counterNum)
1775:Generated_Source\PSoC4/CyLFClk.c ****     {
1776:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum == CY_SYS_WDT_COUNTER0)
1777:Generated_Source\PSoC4/CyLFClk.c ****         {
1778:Generated_Source\PSoC4/CyLFClk.c ****             if(CY_SYS_WDT_MODE_INT_RESET == CySysWdtGetMode(counterNum))
1779:Generated_Source\PSoC4/CyLFClk.c ****             {
1780:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER0_INT);
1781:Generated_Source\PSoC4/CyLFClk.c ****             }
1782:Generated_Source\PSoC4/CyLFClk.c ****             else if(CY_SYS_WDT_MODE_RESET == CySysWdtGetMode(counterNum))
1783:Generated_Source\PSoC4/CyLFClk.c ****             {
1784:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtResetCounters(CY_SYS_WDT_COUNTER0_RESET);
1785:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER0_INT);
1786:Generated_Source\PSoC4/CyLFClk.c ****             }
1787:Generated_Source\PSoC4/CyLFClk.c ****             else
1788:Generated_Source\PSoC4/CyLFClk.c ****             {
1789:Generated_Source\PSoC4/CyLFClk.c ****                 /* Do nothing. */
1790:Generated_Source\PSoC4/CyLFClk.c ****             }
1791:Generated_Source\PSoC4/CyLFClk.c ****         }
1792:Generated_Source\PSoC4/CyLFClk.c ****         else if(counterNum == CY_SYS_WDT_COUNTER1)
1793:Generated_Source\PSoC4/CyLFClk.c ****         {
1794:Generated_Source\PSoC4/CyLFClk.c ****             if(CY_SYS_WDT_MODE_INT_RESET == CySysWdtGetMode(counterNum))
1795:Generated_Source\PSoC4/CyLFClk.c ****             {
1796:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER1_INT);
1797:Generated_Source\PSoC4/CyLFClk.c ****             }
1798:Generated_Source\PSoC4/CyLFClk.c ****             else if(CY_SYS_WDT_MODE_RESET == CySysWdtGetMode(counterNum))
1799:Generated_Source\PSoC4/CyLFClk.c ****             {
1800:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtResetCounters(CY_SYS_WDT_COUNTER1_RESET);
1801:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER1_INT);
1802:Generated_Source\PSoC4/CyLFClk.c ****             }
1803:Generated_Source\PSoC4/CyLFClk.c ****             else
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 56


1804:Generated_Source\PSoC4/CyLFClk.c ****             {
1805:Generated_Source\PSoC4/CyLFClk.c ****                 /* Do nothing. */
1806:Generated_Source\PSoC4/CyLFClk.c ****             }
1807:Generated_Source\PSoC4/CyLFClk.c ****         }
1808:Generated_Source\PSoC4/CyLFClk.c ****         else
1809:Generated_Source\PSoC4/CyLFClk.c ****         {
1810:Generated_Source\PSoC4/CyLFClk.c ****             /* Do nothing. */
1811:Generated_Source\PSoC4/CyLFClk.c ****         }
1812:Generated_Source\PSoC4/CyLFClk.c ****     }
1813:Generated_Source\PSoC4/CyLFClk.c **** 
1814:Generated_Source\PSoC4/CyLFClk.c **** 
1815:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1816:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkLfclkPosedgeCatch
1817:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1818:Generated_Source\PSoC4/CyLFClk.c ****     * \internal
1819:Generated_Source\PSoC4/CyLFClk.c ****     * Returns once the LFCLK positive edge occurred.
1820:Generated_Source\PSoC4/CyLFClk.c ****     *
1821:Generated_Source\PSoC4/CyLFClk.c ****     * CySysClkLfclkPosedgeRestore() should be called after this function
1822:Generated_Source\PSoC4/CyLFClk.c ****     * to restore the WDT configuration.
1823:Generated_Source\PSoC4/CyLFClk.c ****     *
1824:Generated_Source\PSoC4/CyLFClk.c ****     * A pair of the CySysClkLfclkPosedgeCatch() and CySysClkLfclkPosedgeRestore()
1825:Generated_Source\PSoC4/CyLFClk.c ****     * functions is expected to be called inside a critical section.
1826:Generated_Source\PSoC4/CyLFClk.c ****     *
1827:Generated_Source\PSoC4/CyLFClk.c ****     * To ensure that the WDT counter value is read until it changes, the enabled
1828:Generated_Source\PSoC4/CyLFClk.c ****     * WDT counter is used. If no counter is enabled, counter 0 is enabled.
1829:Generated_Source\PSoC4/CyLFClk.c ****     * And after the LFCLK source is switched, the counter 0 configuration
1830:Generated_Source\PSoC4/CyLFClk.c ****     * is restored.
1831:Generated_Source\PSoC4/CyLFClk.c ****     *
1832:Generated_Source\PSoC4/CyLFClk.c ****     * Not applicable for the PSoC 4000 / PSoC 4000S / PSoC 4100S / PSoC Analog 
1833:Generated_Source\PSoC4/CyLFClk.c ****     * Coprocessor devices.
1834:Generated_Source\PSoC4/CyLFClk.c ****     *
1835:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1836:Generated_Source\PSoC4/CyLFClk.c ****     * This function has no effect if WDT is locked (CySysWdtLock() is
1837:Generated_Source\PSoC4/CyLFClk.c ****     * called). Call CySysWdtUnlock() to unlock WDT.
1838:Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
1839:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1840:Generated_Source\PSoC4/CyLFClk.c ****     static void CySysClkLfclkPosedgeCatch(void)
1841:Generated_Source\PSoC4/CyLFClk.c ****     {
1842:Generated_Source\PSoC4/CyLFClk.c ****         uint32 firstCount;
1843:Generated_Source\PSoC4/CyLFClk.c ****         static uint32 lfclkPosedgeEnabledWdtCounter = 0u;
1844:Generated_Source\PSoC4/CyLFClk.c **** 
1845:Generated_Source\PSoC4/CyLFClk.c ****         if (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER0))
1846:Generated_Source\PSoC4/CyLFClk.c ****         {
1847:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeEnabledWdtCounter = CY_SYS_WDT_COUNTER0;
1848:Generated_Source\PSoC4/CyLFClk.c ****         }
1849:Generated_Source\PSoC4/CyLFClk.c ****         else if (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER1))
1850:Generated_Source\PSoC4/CyLFClk.c ****         {
1851:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeEnabledWdtCounter = CY_SYS_WDT_COUNTER1;
1852:Generated_Source\PSoC4/CyLFClk.c ****         }
1853:Generated_Source\PSoC4/CyLFClk.c ****         else if (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER2))
1854:Generated_Source\PSoC4/CyLFClk.c ****         {
1855:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeEnabledWdtCounter = CY_SYS_WDT_COUNTER2;
1856:Generated_Source\PSoC4/CyLFClk.c ****         }
1857:Generated_Source\PSoC4/CyLFClk.c ****         else /* All WDT counters are disabled */
1858:Generated_Source\PSoC4/CyLFClk.c ****         {
1859:Generated_Source\PSoC4/CyLFClk.c ****             /* Configure WDT counter # 0 */
1860:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeWdtCounter0Enabled = 1u;
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 57


1861:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeEnabledWdtCounter = CY_SYS_WDT_COUNTER0;
1862:Generated_Source\PSoC4/CyLFClk.c **** 
1863:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeWdtCounter0Mode = CySysWdtGetMode(CY_SYS_WDT_COUNTER0);
1864:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtSetMode(CY_SYS_WDT_COUNTER0, CY_SYS_WDT_MODE_NONE);
1865:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtEnable(CY_SYS_WDT_COUNTER0_MASK);
1866:Generated_Source\PSoC4/CyLFClk.c ****         }
1867:Generated_Source\PSoC4/CyLFClk.c **** 
1868:Generated_Source\PSoC4/CyLFClk.c ****         firstCount = CySysWdtGetCount(lfclkPosedgeEnabledWdtCounter);
1869:Generated_Source\PSoC4/CyLFClk.c ****         while (CySysWdtGetCount(lfclkPosedgeEnabledWdtCounter) == firstCount)
1870:Generated_Source\PSoC4/CyLFClk.c ****         {
1871:Generated_Source\PSoC4/CyLFClk.c ****             /* Wait for counter to increment */
1872:Generated_Source\PSoC4/CyLFClk.c ****         }
1873:Generated_Source\PSoC4/CyLFClk.c ****     }
1874:Generated_Source\PSoC4/CyLFClk.c **** 
1875:Generated_Source\PSoC4/CyLFClk.c **** 
1876:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1877:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkLfclkPosedgeRestore
1878:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1879:Generated_Source\PSoC4/CyLFClk.c ****     * \internal
1880:Generated_Source\PSoC4/CyLFClk.c ****     *  Restores the WDT configuration after a CySysClkLfclkPosedgeCatch() call.
1881:Generated_Source\PSoC4/CyLFClk.c ****     *
1882:Generated_Source\PSoC4/CyLFClk.c ****     *  A pair of the CySysClkLfclkPosedgeCatch() and CySysClkLfclkPosedgeRestore()
1883:Generated_Source\PSoC4/CyLFClk.c ****     *  functions is expected to be called inside a critical section.
1884:Generated_Source\PSoC4/CyLFClk.c ****     *
1885:Generated_Source\PSoC4/CyLFClk.c ****     * Not applicable for the PSoC 4000/PSoC 4000S / PSoC 4100S / PSoC Analog 
1886:Generated_Source\PSoC4/CyLFClk.c ****     * Coprocessor devices.
1887:Generated_Source\PSoC4/CyLFClk.c ****     *
1888:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1889:Generated_Source\PSoC4/CyLFClk.c ****     *  This function has no effect if WDT is locked (CySysWdtLock() is
1890:Generated_Source\PSoC4/CyLFClk.c ****     *  called). Call CySysWdtUnlock() to unlock WDT.
1891:Generated_Source\PSoC4/CyLFClk.c ****     *
1892:Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
1893:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1894:Generated_Source\PSoC4/CyLFClk.c ****     static void CySysClkLfclkPosedgeRestore(void)
1895:Generated_Source\PSoC4/CyLFClk.c ****     {
1896:Generated_Source\PSoC4/CyLFClk.c ****         if (lfclkPosedgeWdtCounter0Enabled != 0u)
1897:Generated_Source\PSoC4/CyLFClk.c ****         {
1898:Generated_Source\PSoC4/CyLFClk.c ****             /* Restore counter # 0 configuration and force its shutdown */
1899:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONTROL_REG &= (uint32)(~CY_SYS_WDT_COUNTER0_MASK);
1900:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtSetMode(CY_SYS_WDT_COUNTER0, lfclkPosedgeWdtCounter0Mode);
1901:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeWdtCounter0Enabled = 0u;
1902:Generated_Source\PSoC4/CyLFClk.c ****         }
1903:Generated_Source\PSoC4/CyLFClk.c ****     }
1904:Generated_Source\PSoC4/CyLFClk.c **** 
1905:Generated_Source\PSoC4/CyLFClk.c **** #else
1906:Generated_Source\PSoC4/CyLFClk.c **** 
1907:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1908:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetEnabledStatus
1909:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1910:Generated_Source\PSoC4/CyLFClk.c ****     *
1911:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the enabled status of the WDT counter.
1912:Generated_Source\PSoC4/CyLFClk.c ****     *
1913:Generated_Source\PSoC4/CyLFClk.c ****     * \return The status of the WDT counter:
1914:Generated_Source\PSoC4/CyLFClk.c ****     * \return 0 - Counter is disabled
1915:Generated_Source\PSoC4/CyLFClk.c ****     * \return 1 - Counter is enabled
1916:Generated_Source\PSoC4/CyLFClk.c ****     *
1917:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 58


1918:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetEnabledStatus(void)
1919:Generated_Source\PSoC4/CyLFClk.c ****     {
 612              		.loc 2 1919 0
 613              		.cfi_startproc
 614              		@ args = 0, pretend = 0, frame = 0
 615              		@ frame_needed = 0, uses_anonymous_args = 0
 616              		@ link register save eliminated.
1920:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WDT_DISABLE_KEY_REG == CY_SYS_WDT_KEY) ? (uint32) 0u : (uint32) 1u);
 617              		.loc 2 1920 0
 618 0000 034B     		ldr	r3, .L57
1921:Generated_Source\PSoC4/CyLFClk.c ****     }
 619              		.loc 2 1921 0
 620              		@ sp needed
1920:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WDT_DISABLE_KEY_REG == CY_SYS_WDT_KEY) ? (uint32) 0u : (uint32) 1u);
 621              		.loc 2 1920 0
 622 0002 1868     		ldr	r0, [r3]
 623 0004 034B     		ldr	r3, .L57+4
 624 0006 C018     		adds	r0, r0, r3
 625 0008 431E     		subs	r3, r0, #1
 626 000a 9841     		sbcs	r0, r0, r3
 627              		.loc 2 1921 0
 628 000c 7047     		bx	lr
 629              	.L58:
 630 000e C046     		.align	2
 631              	.L57:
 632 0010 38000340 		.word	1073938488
 633 0014 9B771253 		.word	1393719195
 634              		.cfi_endproc
 635              	.LFE11:
 636              		.size	CySysWdtGetEnabledStatus, .-CySysWdtGetEnabledStatus
 637              		.section	.text.CySysWdtEnable,"ax",%progbits
 638              		.align	1
 639              		.global	CySysWdtEnable
 640              		.code	16
 641              		.thumb_func
 642              		.type	CySysWdtEnable, %function
 643              	CySysWdtEnable:
 644              	.LFB12:
1922:Generated_Source\PSoC4/CyLFClk.c **** 
1923:Generated_Source\PSoC4/CyLFClk.c **** 
1924:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1925:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtEnable
1926:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1927:Generated_Source\PSoC4/CyLFClk.c ****     *
1928:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1929:Generated_Source\PSoC4/CyLFClk.c ****     * Enables watchdog timer reset generation.
1930:Generated_Source\PSoC4/CyLFClk.c ****     *
1931:Generated_Source\PSoC4/CyLFClk.c ****     * CySysWdtClearInterrupt() feeds the watchdog. Two unserviced interrupts lead 
1932:Generated_Source\PSoC4/CyLFClk.c ****     * to a system reset (i.e. at the third match).
1933:Generated_Source\PSoC4/CyLFClk.c ****     *
1934:Generated_Source\PSoC4/CyLFClk.c ****     * ILO is enabled by the hardware once WDT is started.
1935:Generated_Source\PSoC4/CyLFClk.c ****     *
1936:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1937:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtEnable(void)
1938:Generated_Source\PSoC4/CyLFClk.c ****     {
 645              		.loc 2 1938 0
 646              		.cfi_startproc
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 59


 647              		@ args = 0, pretend = 0, frame = 0
 648              		@ frame_needed = 0, uses_anonymous_args = 0
 649              		@ link register save eliminated.
1939:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_DISABLE_KEY_REG = 0u;
 650              		.loc 2 1939 0
 651 0000 0022     		movs	r2, #0
 652 0002 014B     		ldr	r3, .L60
1940:Generated_Source\PSoC4/CyLFClk.c ****     }
 653              		.loc 2 1940 0
 654              		@ sp needed
1939:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_DISABLE_KEY_REG = 0u;
 655              		.loc 2 1939 0
 656 0004 1A60     		str	r2, [r3]
 657              		.loc 2 1940 0
 658 0006 7047     		bx	lr
 659              	.L61:
 660              		.align	2
 661              	.L60:
 662 0008 38000340 		.word	1073938488
 663              		.cfi_endproc
 664              	.LFE12:
 665              		.size	CySysWdtEnable, .-CySysWdtEnable
 666              		.section	.text.CySysWdtDisable,"ax",%progbits
 667              		.align	1
 668              		.global	CySysWdtDisable
 669              		.code	16
 670              		.thumb_func
 671              		.type	CySysWdtDisable, %function
 672              	CySysWdtDisable:
 673              	.LFB13:
1941:Generated_Source\PSoC4/CyLFClk.c **** 
1942:Generated_Source\PSoC4/CyLFClk.c **** 
1943:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1944:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtDisable
1945:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1946:Generated_Source\PSoC4/CyLFClk.c ****     *
1947:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Disables the WDT reset generation.
1948:Generated_Source\PSoC4/CyLFClk.c ****     *
1949:Generated_Source\PSoC4/CyLFClk.c ****     * This function unlocks the ENABLE bit in the CLK_ILO_CONFIG registers and
1950:Generated_Source\PSoC4/CyLFClk.c ****     * enables the user to disable ILO.
1951:Generated_Source\PSoC4/CyLFClk.c ****     *
1952:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1953:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtDisable(void)
1954:Generated_Source\PSoC4/CyLFClk.c ****     {
 674              		.loc 2 1954 0
 675              		.cfi_startproc
 676              		@ args = 0, pretend = 0, frame = 0
 677              		@ frame_needed = 0, uses_anonymous_args = 0
 678              		@ link register save eliminated.
1955:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_DISABLE_KEY_REG = CY_SYS_WDT_KEY;
 679              		.loc 2 1955 0
 680 0000 014A     		ldr	r2, .L63
 681 0002 024B     		ldr	r3, .L63+4
1956:Generated_Source\PSoC4/CyLFClk.c ****     }
 682              		.loc 2 1956 0
 683              		@ sp needed
1955:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_DISABLE_KEY_REG = CY_SYS_WDT_KEY;
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 60


 684              		.loc 2 1955 0
 685 0004 1A60     		str	r2, [r3]
 686              		.loc 2 1956 0
 687 0006 7047     		bx	lr
 688              	.L64:
 689              		.align	2
 690              	.L63:
 691 0008 6588EDAC 		.word	-1393719195
 692 000c 38000340 		.word	1073938488
 693              		.cfi_endproc
 694              	.LFE13:
 695              		.size	CySysWdtDisable, .-CySysWdtDisable
 696              		.section	.text.CySysWdtSetMatch,"ax",%progbits
 697              		.align	1
 698              		.global	CySysWdtSetMatch
 699              		.code	16
 700              		.thumb_func
 701              		.type	CySysWdtSetMatch, %function
 702              	CySysWdtSetMatch:
 703              	.LFB14:
1957:Generated_Source\PSoC4/CyLFClk.c **** 
1958:Generated_Source\PSoC4/CyLFClk.c **** 
1959:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1960:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetMatch
1961:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1962:Generated_Source\PSoC4/CyLFClk.c ****     *
1963:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Configures the WDT counter match comparison value.
1964:Generated_Source\PSoC4/CyLFClk.c ****     *
1965:Generated_Source\PSoC4/CyLFClk.c ****     * \param match Valid range [0-65535]. The value to be used to match against 
1966:Generated_Source\PSoC4/CyLFClk.c ****     * the counter.
1967:Generated_Source\PSoC4/CyLFClk.c ****     *
1968:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1969:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetMatch(uint32 match)
1970:Generated_Source\PSoC4/CyLFClk.c ****     {
 704              		.loc 2 1970 0
 705              		.cfi_startproc
 706              		@ args = 0, pretend = 0, frame = 0
 707              		@ frame_needed = 0, uses_anonymous_args = 0
 708              		@ link register save eliminated.
 709              	.LVL31:
1971:Generated_Source\PSoC4/CyLFClk.c ****         match &= CY_SYS_WDT_MATCH_MASK;
1972:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_MATCH_REG = (CY_SYS_WDT_MATCH_REG & (uint32)(~CY_SYS_WDT_MATCH_MASK)) | match;
 710              		.loc 2 1972 0
 711 0000 034A     		ldr	r2, .L66
 712 0002 80B2     		uxth	r0, r0
 713              	.LVL32:
 714 0004 1368     		ldr	r3, [r2]
1973:Generated_Source\PSoC4/CyLFClk.c ****     }
 715              		.loc 2 1973 0
 716              		@ sp needed
1972:Generated_Source\PSoC4/CyLFClk.c ****     }
 717              		.loc 2 1972 0
 718 0006 1B0C     		lsrs	r3, r3, #16
 719 0008 1B04     		lsls	r3, r3, #16
 720 000a 1843     		orrs	r0, r3
 721 000c 1060     		str	r0, [r2]
 722              		.loc 2 1973 0
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 61


 723 000e 7047     		bx	lr
 724              	.L67:
 725              		.align	2
 726              	.L66:
 727 0010 40000340 		.word	1073938496
 728              		.cfi_endproc
 729              	.LFE14:
 730              		.size	CySysWdtSetMatch, .-CySysWdtSetMatch
 731              		.section	.text.CySysWdtGetMatch,"ax",%progbits
 732              		.align	1
 733              		.global	CySysWdtGetMatch
 734              		.code	16
 735              		.thumb_func
 736              		.type	CySysWdtGetMatch, %function
 737              	CySysWdtGetMatch:
 738              	.LFB15:
1974:Generated_Source\PSoC4/CyLFClk.c **** 
1975:Generated_Source\PSoC4/CyLFClk.c **** 
1976:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1977:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetMatch
1978:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1979:Generated_Source\PSoC4/CyLFClk.c ****     *
1980:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the WDT counter match comparison value.
1981:Generated_Source\PSoC4/CyLFClk.c ****     *
1982:Generated_Source\PSoC4/CyLFClk.c ****     * \return The counter match value.
1983:Generated_Source\PSoC4/CyLFClk.c ****     *
1984:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1985:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetMatch(void)
1986:Generated_Source\PSoC4/CyLFClk.c ****     {
 739              		.loc 2 1986 0
 740              		.cfi_startproc
 741              		@ args = 0, pretend = 0, frame = 0
 742              		@ frame_needed = 0, uses_anonymous_args = 0
 743              		@ link register save eliminated.
1987:Generated_Source\PSoC4/CyLFClk.c ****         return (CY_SYS_WDT_MATCH_REG & CY_SYS_WDT_MATCH_MASK);
 744              		.loc 2 1987 0
 745 0000 014B     		ldr	r3, .L69
1988:Generated_Source\PSoC4/CyLFClk.c ****     }
 746              		.loc 2 1988 0
 747              		@ sp needed
1987:Generated_Source\PSoC4/CyLFClk.c ****         return (CY_SYS_WDT_MATCH_REG & CY_SYS_WDT_MATCH_MASK);
 748              		.loc 2 1987 0
 749 0002 1868     		ldr	r0, [r3]
 750 0004 80B2     		uxth	r0, r0
 751              		.loc 2 1988 0
 752 0006 7047     		bx	lr
 753              	.L70:
 754              		.align	2
 755              	.L69:
 756 0008 40000340 		.word	1073938496
 757              		.cfi_endproc
 758              	.LFE15:
 759              		.size	CySysWdtGetMatch, .-CySysWdtGetMatch
 760              		.section	.text.CySysWdtGetCount,"ax",%progbits
 761              		.align	1
 762              		.global	CySysWdtGetCount
 763              		.code	16
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 62


 764              		.thumb_func
 765              		.type	CySysWdtGetCount, %function
 766              	CySysWdtGetCount:
 767              	.LFB16:
1989:Generated_Source\PSoC4/CyLFClk.c **** 
1990:Generated_Source\PSoC4/CyLFClk.c **** 
1991:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1992:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetCount
1993:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1994:Generated_Source\PSoC4/CyLFClk.c ****     *
1995:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the current WDT counter value.
1996:Generated_Source\PSoC4/CyLFClk.c ****     *
1997:Generated_Source\PSoC4/CyLFClk.c ****     * \return A live counter value.
1998:Generated_Source\PSoC4/CyLFClk.c ****     *
1999:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2000:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetCount(void)
2001:Generated_Source\PSoC4/CyLFClk.c ****     {
 768              		.loc 2 2001 0
 769              		.cfi_startproc
 770              		@ args = 0, pretend = 0, frame = 0
 771              		@ frame_needed = 0, uses_anonymous_args = 0
 772              		@ link register save eliminated.
2002:Generated_Source\PSoC4/CyLFClk.c ****         return ((uint32)CY_SYS_WDT_COUNTER_REG);
 773              		.loc 2 2002 0
 774 0000 014B     		ldr	r3, .L72
2003:Generated_Source\PSoC4/CyLFClk.c ****     }
 775              		.loc 2 2003 0
 776              		@ sp needed
2002:Generated_Source\PSoC4/CyLFClk.c ****         return ((uint32)CY_SYS_WDT_COUNTER_REG);
 777              		.loc 2 2002 0
 778 0002 1868     		ldr	r0, [r3]
 779              		.loc 2 2003 0
 780 0004 7047     		bx	lr
 781              	.L73:
 782 0006 C046     		.align	2
 783              	.L72:
 784 0008 3C000340 		.word	1073938492
 785              		.cfi_endproc
 786              	.LFE16:
 787              		.size	CySysWdtGetCount, .-CySysWdtGetCount
 788              		.section	.text.CySysWdtSetIgnoreBits,"ax",%progbits
 789              		.align	1
 790              		.global	CySysWdtSetIgnoreBits
 791              		.code	16
 792              		.thumb_func
 793              		.type	CySysWdtSetIgnoreBits, %function
 794              	CySysWdtSetIgnoreBits:
 795              	.LFB17:
2004:Generated_Source\PSoC4/CyLFClk.c **** 
2005:Generated_Source\PSoC4/CyLFClk.c **** 
2006:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2007:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetIgnoreBits
2008:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2009:Generated_Source\PSoC4/CyLFClk.c ****     *
2010:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2011:Generated_Source\PSoC4/CyLFClk.c ****     * Configures the number of the MSB bits of the watchdog timer that are not
2012:Generated_Source\PSoC4/CyLFClk.c ****     * checked against the match.
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 63


2013:Generated_Source\PSoC4/CyLFClk.c ****     *
2014:Generated_Source\PSoC4/CyLFClk.c ****     * \param bitsNum Valid range [0-15]. The number of the MSB bits.
2015:Generated_Source\PSoC4/CyLFClk.c ****     *
2016:Generated_Source\PSoC4/CyLFClk.c ****     * \details The value of bitsNum controls the time-to-reset of the watchdog
2017:Generated_Source\PSoC4/CyLFClk.c ****     * (which happens after 3 successive matches).
2018:Generated_Source\PSoC4/CyLFClk.c ****     *
2019:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2020:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetIgnoreBits(uint32 bitsNum)
2021:Generated_Source\PSoC4/CyLFClk.c ****     {
 796              		.loc 2 2021 0
 797              		.cfi_startproc
 798              		@ args = 0, pretend = 0, frame = 0
 799              		@ frame_needed = 0, uses_anonymous_args = 0
 800              	.LVL33:
2022:Generated_Source\PSoC4/CyLFClk.c ****         bitsNum = ((uint32)(bitsNum << CY_SYS_WDT_IGNORE_BITS_SHIFT) & CY_SYS_WDT_IGNORE_BITS_MASK)
2023:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_MATCH_REG = (CY_SYS_WDT_MATCH_REG & (uint32)(~CY_SYS_WDT_IGNORE_BITS_MASK)) | bi
 801              		.loc 2 2023 0
 802 0000 F021     		movs	r1, #240
2021:Generated_Source\PSoC4/CyLFClk.c ****         bitsNum = ((uint32)(bitsNum << CY_SYS_WDT_IGNORE_BITS_SHIFT) & CY_SYS_WDT_IGNORE_BITS_MASK)
 803              		.loc 2 2021 0
 804 0002 10B5     		push	{r4, lr}
 805              		.cfi_def_cfa_offset 8
 806              		.cfi_offset 4, -8
 807              		.cfi_offset 14, -4
 808              		.loc 2 2023 0
 809 0004 044C     		ldr	r4, .L75
2022:Generated_Source\PSoC4/CyLFClk.c ****         bitsNum = ((uint32)(bitsNum << CY_SYS_WDT_IGNORE_BITS_SHIFT) & CY_SYS_WDT_IGNORE_BITS_MASK)
 810              		.loc 2 2022 0
 811 0006 0204     		lsls	r2, r0, #16
 812              	.LVL34:
 813              		.loc 2 2023 0
 814 0008 044B     		ldr	r3, .L75+4
 815 000a 2068     		ldr	r0, [r4]
 816 000c 0903     		lsls	r1, r1, #12
 817 000e 0A40     		ands	r2, r1
 818              	.LVL35:
 819 0010 0340     		ands	r3, r0
 820 0012 1A43     		orrs	r2, r3
 821 0014 2260     		str	r2, [r4]
2024:Generated_Source\PSoC4/CyLFClk.c ****     }
 822              		.loc 2 2024 0
 823              		@ sp needed
 824 0016 10BD     		pop	{r4, pc}
 825              	.L76:
 826              		.align	2
 827              	.L75:
 828 0018 40000340 		.word	1073938496
 829 001c FFFFF0FF 		.word	-983041
 830              		.cfi_endproc
 831              	.LFE17:
 832              		.size	CySysWdtSetIgnoreBits, .-CySysWdtSetIgnoreBits
 833              		.section	.text.CySysWdtGetIgnoreBits,"ax",%progbits
 834              		.align	1
 835              		.global	CySysWdtGetIgnoreBits
 836              		.code	16
 837              		.thumb_func
 838              		.type	CySysWdtGetIgnoreBits, %function
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 64


 839              	CySysWdtGetIgnoreBits:
 840              	.LFB18:
2025:Generated_Source\PSoC4/CyLFClk.c **** 
2026:Generated_Source\PSoC4/CyLFClk.c **** 
2027:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2028:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetIgnoreBits
2029:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2030:Generated_Source\PSoC4/CyLFClk.c ****     *
2031:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2032:Generated_Source\PSoC4/CyLFClk.c ****     * Reads the number of the  MSB bits of the watchdog timer that are not
2033:Generated_Source\PSoC4/CyLFClk.c ****     * checked against the match.
2034:Generated_Source\PSoC4/CyLFClk.c ****     *
2035:Generated_Source\PSoC4/CyLFClk.c ****     * \return The number of the MSB bits.
2036:Generated_Source\PSoC4/CyLFClk.c ****     *
2037:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2038:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetIgnoreBits(void)
2039:Generated_Source\PSoC4/CyLFClk.c ****     {
 841              		.loc 2 2039 0
 842              		.cfi_startproc
 843              		@ args = 0, pretend = 0, frame = 0
 844              		@ frame_needed = 0, uses_anonymous_args = 0
 845              		@ link register save eliminated.
2040:Generated_Source\PSoC4/CyLFClk.c ****         return((uint32)((CY_SYS_WDT_MATCH_REG & CY_SYS_WDT_IGNORE_BITS_MASK) >> CY_SYS_WDT_IGNORE_B
 846              		.loc 2 2040 0
 847 0000 024B     		ldr	r3, .L78
2041:Generated_Source\PSoC4/CyLFClk.c ****     }
 848              		.loc 2 2041 0
 849              		@ sp needed
2040:Generated_Source\PSoC4/CyLFClk.c ****         return((uint32)((CY_SYS_WDT_MATCH_REG & CY_SYS_WDT_IGNORE_BITS_MASK) >> CY_SYS_WDT_IGNORE_B
 850              		.loc 2 2040 0
 851 0002 1868     		ldr	r0, [r3]
 852 0004 0003     		lsls	r0, r0, #12
 853 0006 000F     		lsrs	r0, r0, #28
 854              		.loc 2 2041 0
 855 0008 7047     		bx	lr
 856              	.L79:
 857 000a C046     		.align	2
 858              	.L78:
 859 000c 40000340 		.word	1073938496
 860              		.cfi_endproc
 861              	.LFE18:
 862              		.size	CySysWdtGetIgnoreBits, .-CySysWdtGetIgnoreBits
 863              		.section	.text.CySysWdtClearInterrupt,"ax",%progbits
 864              		.align	1
 865              		.global	CySysWdtClearInterrupt
 866              		.code	16
 867              		.thumb_func
 868              		.type	CySysWdtClearInterrupt, %function
 869              	CySysWdtClearInterrupt:
 870              	.LFB19:
2042:Generated_Source\PSoC4/CyLFClk.c **** 
2043:Generated_Source\PSoC4/CyLFClk.c **** 
2044:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2045:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtClearInterrupt
2046:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2047:Generated_Source\PSoC4/CyLFClk.c ****     *
2048:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 65


2049:Generated_Source\PSoC4/CyLFClk.c ****     * Feeds the watchdog.
2050:Generated_Source\PSoC4/CyLFClk.c ****     * Cleans the WDT match flag which is set every time the WDT counter reaches a 
2051:Generated_Source\PSoC4/CyLFClk.c ****     * WDT match value. Two unserviced interrupts lead to a system reset 
2052:Generated_Source\PSoC4/CyLFClk.c ****     * (i.e. at the third match).
2053:Generated_Source\PSoC4/CyLFClk.c ****     *
2054:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2055:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtClearInterrupt(void)
2056:Generated_Source\PSoC4/CyLFClk.c ****     {
 871              		.loc 2 2056 0
 872              		.cfi_startproc
 873              		@ args = 0, pretend = 0, frame = 0
 874              		@ frame_needed = 0, uses_anonymous_args = 0
 875              		@ link register save eliminated.
2057:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_SRSS_INTR_REG |= CY_SYS_WDT_LOWER_BIT_MASK;
 876              		.loc 2 2057 0
 877 0000 0121     		movs	r1, #1
 878 0002 024A     		ldr	r2, .L81
2058:Generated_Source\PSoC4/CyLFClk.c ****     }
 879              		.loc 2 2058 0
 880              		@ sp needed
2057:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_SRSS_INTR_REG |= CY_SYS_WDT_LOWER_BIT_MASK;
 881              		.loc 2 2057 0
 882 0004 1368     		ldr	r3, [r2]
 883 0006 0B43     		orrs	r3, r1
 884 0008 1360     		str	r3, [r2]
 885              		.loc 2 2058 0
 886 000a 7047     		bx	lr
 887              	.L82:
 888              		.align	2
 889              	.L81:
 890 000c 44000340 		.word	1073938500
 891              		.cfi_endproc
 892              	.LFE19:
 893              		.size	CySysWdtClearInterrupt, .-CySysWdtClearInterrupt
 894              		.section	.text.CySysWdtMaskInterrupt,"ax",%progbits
 895              		.align	1
 896              		.global	CySysWdtMaskInterrupt
 897              		.code	16
 898              		.thumb_func
 899              		.type	CySysWdtMaskInterrupt, %function
 900              	CySysWdtMaskInterrupt:
 901              	.LFB20:
2059:Generated_Source\PSoC4/CyLFClk.c **** 
2060:Generated_Source\PSoC4/CyLFClk.c **** 
2061:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2062:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtMaskInterrupt
2063:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2064:Generated_Source\PSoC4/CyLFClk.c ****     *
2065:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2066:Generated_Source\PSoC4/CyLFClk.c ****     * After masking interrupts from WDT, they are not passed to CPU.
2067:Generated_Source\PSoC4/CyLFClk.c ****     * This function does not disable WDT reset generation.
2068:Generated_Source\PSoC4/CyLFClk.c ****     *
2069:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2070:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtMaskInterrupt(void)
2071:Generated_Source\PSoC4/CyLFClk.c ****     {
 902              		.loc 2 2071 0
 903              		.cfi_startproc
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 66


 904              		@ args = 0, pretend = 0, frame = 0
 905              		@ frame_needed = 0, uses_anonymous_args = 0
 906              		@ link register save eliminated.
2072:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_SRSS_INTR_MASK_REG &= (uint32)(~ (uint32)CY_SYS_WDT_LOWER_BIT_MASK);
 907              		.loc 2 2072 0
 908 0000 0121     		movs	r1, #1
 909 0002 024A     		ldr	r2, .L84
2073:Generated_Source\PSoC4/CyLFClk.c ****     }
 910              		.loc 2 2073 0
 911              		@ sp needed
2072:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_SRSS_INTR_MASK_REG &= (uint32)(~ (uint32)CY_SYS_WDT_LOWER_BIT_MASK);
 912              		.loc 2 2072 0
 913 0004 1368     		ldr	r3, [r2]
 914 0006 8B43     		bics	r3, r1
 915 0008 1360     		str	r3, [r2]
 916              		.loc 2 2073 0
 917 000a 7047     		bx	lr
 918              	.L85:
 919              		.align	2
 920              	.L84:
 921 000c 4C000340 		.word	1073938508
 922              		.cfi_endproc
 923              	.LFE20:
 924              		.size	CySysWdtMaskInterrupt, .-CySysWdtMaskInterrupt
 925              		.section	.text.CySysWdtUnmaskInterrupt,"ax",%progbits
 926              		.align	1
 927              		.global	CySysWdtUnmaskInterrupt
 928              		.code	16
 929              		.thumb_func
 930              		.type	CySysWdtUnmaskInterrupt, %function
 931              	CySysWdtUnmaskInterrupt:
 932              	.LFB21:
2074:Generated_Source\PSoC4/CyLFClk.c **** 
2075:Generated_Source\PSoC4/CyLFClk.c **** 
2076:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2077:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtUnmaskInterrupt
2078:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2079:Generated_Source\PSoC4/CyLFClk.c ****     *
2080:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2081:Generated_Source\PSoC4/CyLFClk.c ****     * After unmasking interrupts from WDT, they are passed to CPU.
2082:Generated_Source\PSoC4/CyLFClk.c ****     * This function does not impact the reset generation.
2083:Generated_Source\PSoC4/CyLFClk.c ****     *
2084:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2085:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtUnmaskInterrupt(void)
2086:Generated_Source\PSoC4/CyLFClk.c ****     {
 933              		.loc 2 2086 0
 934              		.cfi_startproc
 935              		@ args = 0, pretend = 0, frame = 0
 936              		@ frame_needed = 0, uses_anonymous_args = 0
 937              		@ link register save eliminated.
2087:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_SRSS_INTR_MASK_REG |= CY_SYS_WDT_LOWER_BIT_MASK;
 938              		.loc 2 2087 0
 939 0000 0121     		movs	r1, #1
 940 0002 024A     		ldr	r2, .L87
2088:Generated_Source\PSoC4/CyLFClk.c ****     }
 941              		.loc 2 2088 0
 942              		@ sp needed
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 67


2087:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_SRSS_INTR_MASK_REG |= CY_SYS_WDT_LOWER_BIT_MASK;
 943              		.loc 2 2087 0
 944 0004 1368     		ldr	r3, [r2]
 945 0006 0B43     		orrs	r3, r1
 946 0008 1360     		str	r3, [r2]
 947              		.loc 2 2088 0
 948 000a 7047     		bx	lr
 949              	.L88:
 950              		.align	2
 951              	.L87:
 952 000c 4C000340 		.word	1073938508
 953              		.cfi_endproc
 954              	.LFE21:
 955              		.size	CySysWdtUnmaskInterrupt, .-CySysWdtUnmaskInterrupt
 956              		.section	.text.CySysWdtSetInterruptCallback,"ax",%progbits
 957              		.align	1
 958              		.global	CySysWdtSetInterruptCallback
 959              		.code	16
 960              		.thumb_func
 961              		.type	CySysWdtSetInterruptCallback, %function
 962              	CySysWdtSetInterruptCallback:
 963              	.LFB22:
2089:Generated_Source\PSoC4/CyLFClk.c **** 
2090:Generated_Source\PSoC4/CyLFClk.c **** 
2091:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2092:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetIsrCallback
2093:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2094:Generated_Source\PSoC4/CyLFClk.c ****     *
2095:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2096:Generated_Source\PSoC4/CyLFClk.c ****     * Sets the ISR callback function for the WDT counter
2097:Generated_Source\PSoC4/CyLFClk.c ****     *
2098:Generated_Source\PSoC4/CyLFClk.c ****     * \param function The pointer to the callback function.
2099:Generated_Source\PSoC4/CyLFClk.c ****     *
2100:Generated_Source\PSoC4/CyLFClk.c ****     * \return The pointer to a previous callback function.
2101:Generated_Source\PSoC4/CyLFClk.c ****     *
2102:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2103:Generated_Source\PSoC4/CyLFClk.c ****     cyWdtCallback CySysWdtSetInterruptCallback(cyWdtCallback function)
2104:Generated_Source\PSoC4/CyLFClk.c ****     {
 964              		.loc 2 2104 0
 965              		.cfi_startproc
 966              		@ args = 0, pretend = 0, frame = 0
 967              		@ frame_needed = 0, uses_anonymous_args = 0
 968              		@ link register save eliminated.
 969              	.LVL36:
2105:Generated_Source\PSoC4/CyLFClk.c ****         cyWdtCallback prevCallback = (void *)0;
2106:Generated_Source\PSoC4/CyLFClk.c **** 
2107:Generated_Source\PSoC4/CyLFClk.c ****         prevCallback = cySysWdtCallback;
 970              		.loc 2 2107 0
 971 0000 024B     		ldr	r3, .L90
2108:Generated_Source\PSoC4/CyLFClk.c ****         cySysWdtCallback = function;
2109:Generated_Source\PSoC4/CyLFClk.c **** 
2110:Generated_Source\PSoC4/CyLFClk.c ****         return(prevCallback);
2111:Generated_Source\PSoC4/CyLFClk.c ****     }
 972              		.loc 2 2111 0
 973              		@ sp needed
2107:Generated_Source\PSoC4/CyLFClk.c ****         cySysWdtCallback = function;
 974              		.loc 2 2107 0
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 68


 975 0002 5A68     		ldr	r2, [r3, #4]
 976              	.LVL37:
2108:Generated_Source\PSoC4/CyLFClk.c ****         cySysWdtCallback = function;
 977              		.loc 2 2108 0
 978 0004 5860     		str	r0, [r3, #4]
 979              		.loc 2 2111 0
 980 0006 1000     		movs	r0, r2
 981              	.LVL38:
 982 0008 7047     		bx	lr
 983              	.L91:
 984 000a C046     		.align	2
 985              	.L90:
 986 000c 00000000 		.word	.LANCHOR0
 987              		.cfi_endproc
 988              	.LFE22:
 989              		.size	CySysWdtSetInterruptCallback, .-CySysWdtSetInterruptCallback
 990              		.section	.text.CySysWdtGetInterruptCallback,"ax",%progbits
 991              		.align	1
 992              		.global	CySysWdtGetInterruptCallback
 993              		.code	16
 994              		.thumb_func
 995              		.type	CySysWdtGetInterruptCallback, %function
 996              	CySysWdtGetInterruptCallback:
 997              	.LFB23:
2112:Generated_Source\PSoC4/CyLFClk.c **** 
2113:Generated_Source\PSoC4/CyLFClk.c **** 
2114:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2115:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetIsrCallback
2116:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2117:Generated_Source\PSoC4/CyLFClk.c ****     *
2118:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2119:Generated_Source\PSoC4/CyLFClk.c ****     * Gets the ISR callback function for the WDT counter
2120:Generated_Source\PSoC4/CyLFClk.c ****     *
2121:Generated_Source\PSoC4/CyLFClk.c ****     * \return The pointer to the callback function registered for WDT.
2122:Generated_Source\PSoC4/CyLFClk.c ****     *
2123:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2124:Generated_Source\PSoC4/CyLFClk.c ****     cyWdtCallback CySysWdtGetInterruptCallback(void)
2125:Generated_Source\PSoC4/CyLFClk.c ****     {
 998              		.loc 2 2125 0
 999              		.cfi_startproc
 1000              		@ args = 0, pretend = 0, frame = 0
 1001              		@ frame_needed = 0, uses_anonymous_args = 0
 1002              		@ link register save eliminated.
2126:Generated_Source\PSoC4/CyLFClk.c ****         return(cySysWdtCallback);
 1003              		.loc 2 2126 0
 1004 0000 014B     		ldr	r3, .L93
2127:Generated_Source\PSoC4/CyLFClk.c ****     }
 1005              		.loc 2 2127 0
 1006              		@ sp needed
2126:Generated_Source\PSoC4/CyLFClk.c ****         return(cySysWdtCallback);
 1007              		.loc 2 2126 0
 1008 0002 5868     		ldr	r0, [r3, #4]
 1009              		.loc 2 2127 0
 1010 0004 7047     		bx	lr
 1011              	.L94:
 1012 0006 C046     		.align	2
 1013              	.L93:
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 69


 1014 0008 00000000 		.word	.LANCHOR0
 1015              		.cfi_endproc
 1016              	.LFE23:
 1017              		.size	CySysWdtGetInterruptCallback, .-CySysWdtGetInterruptCallback
 1018              		.section	.text.CySysWdtIsr,"ax",%progbits
 1019              		.align	1
 1020              		.global	CySysWdtIsr
 1021              		.code	16
 1022              		.thumb_func
 1023              		.type	CySysWdtIsr, %function
 1024              	CySysWdtIsr:
 1025              	.LFB24:
2128:Generated_Source\PSoC4/CyLFClk.c **** 
2129:Generated_Source\PSoC4/CyLFClk.c **** 
2130:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2131:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtIsr
2132:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2133:Generated_Source\PSoC4/CyLFClk.c ****     *
2134:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2135:Generated_Source\PSoC4/CyLFClk.c ****     * This is the handler of the WDT interrupt in CPU NVIC.
2136:Generated_Source\PSoC4/CyLFClk.c ****     *
2137:Generated_Source\PSoC4/CyLFClk.c ****     * The handler calls the respective callback functions configured by the user 
2138:Generated_Source\PSoC4/CyLFClk.c ****     * by using CySysWdtSetIsrCallback() API.
2139:Generated_Source\PSoC4/CyLFClk.c ****     *
2140:Generated_Source\PSoC4/CyLFClk.c ****     *
2141:Generated_Source\PSoC4/CyLFClk.c ****     * \details
2142:Generated_Source\PSoC4/CyLFClk.c ****     * This function clears the WDT interrupt every time when it is called.
2143:Generated_Source\PSoC4/CyLFClk.c ****     * Reset after the 3rd interrupt does not happen if this function is registered
2144:Generated_Source\PSoC4/CyLFClk.c ****     * as the interrupt handler even if the "Watchdog with Interrupt" mode is
2145:Generated_Source\PSoC4/CyLFClk.c ****     * selected on the "Low Frequency Clocks" tab.
2146:Generated_Source\PSoC4/CyLFClk.c ****     *
2147:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2148:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtIsr(void)
2149:Generated_Source\PSoC4/CyLFClk.c ****     {
 1026              		.loc 2 2149 0
 1027              		.cfi_startproc
 1028              		@ args = 0, pretend = 0, frame = 0
 1029              		@ frame_needed = 0, uses_anonymous_args = 0
2150:Generated_Source\PSoC4/CyLFClk.c ****         if(cySysWdtCallback != (void *) 0)
 1030              		.loc 2 2150 0
 1031 0000 044B     		ldr	r3, .L100
2149:Generated_Source\PSoC4/CyLFClk.c ****         if(cySysWdtCallback != (void *) 0)
 1032              		.loc 2 2149 0
 1033 0002 10B5     		push	{r4, lr}
 1034              		.cfi_def_cfa_offset 8
 1035              		.cfi_offset 4, -8
 1036              		.cfi_offset 14, -4
 1037              		.loc 2 2150 0
 1038 0004 5B68     		ldr	r3, [r3, #4]
 1039 0006 002B     		cmp	r3, #0
 1040 0008 00D0     		beq	.L96
2151:Generated_Source\PSoC4/CyLFClk.c ****         {
2152:Generated_Source\PSoC4/CyLFClk.c ****             (void)(cySysWdtCallback)();
 1041              		.loc 2 2152 0
 1042 000a 9847     		blx	r3
 1043              	.LVL39:
 1044              	.L96:
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 70


2153:Generated_Source\PSoC4/CyLFClk.c ****         }
2154:Generated_Source\PSoC4/CyLFClk.c **** 
2155:Generated_Source\PSoC4/CyLFClk.c ****         CySysWdtClearInterrupt();
 1045              		.loc 2 2155 0
 1046 000c FFF7FEFF 		bl	CySysWdtClearInterrupt
 1047              	.LVL40:
2156:Generated_Source\PSoC4/CyLFClk.c ****     }
 1048              		.loc 2 2156 0
 1049              		@ sp needed
 1050 0010 10BD     		pop	{r4, pc}
 1051              	.L101:
 1052 0012 C046     		.align	2
 1053              	.L100:
 1054 0014 00000000 		.word	.LANCHOR0
 1055              		.cfi_endproc
 1056              	.LFE24:
 1057              		.size	CySysWdtIsr, .-CySysWdtIsr
 1058              		.bss
 1059              		.align	2
 1060              		.set	.LANCHOR0,. + 0
 1061              		.type	compensateRunningStatus.4804, %object
 1062              		.size	compensateRunningStatus.4804, 4
 1063              	compensateRunningStatus.4804:
 1064 0000 00000000 		.space	4
 1065              		.type	cySysWdtCallback, %object
 1066              		.size	cySysWdtCallback, 4
 1067              	cySysWdtCallback:
 1068 0004 00000000 		.space	4
 1069              		.text
 1070              	.Letext0:
 1071              		.file 3 "Generated_Source\\PSoC4\\cytypes.h"
 1072              		.file 4 "Generated_Source\\PSoC4\\CyLib.h"
 1073              		.section	.debug_info,"",%progbits
 1074              	.Ldebug_info0:
 1075 0000 06040000 		.4byte	0x406
 1076 0004 0400     		.2byte	0x4
 1077 0006 00000000 		.4byte	.Ldebug_abbrev0
 1078 000a 04       		.byte	0x4
 1079 000b 01       		.uleb128 0x1
 1080 000c A7000000 		.4byte	.LASF57
 1081 0010 0C       		.byte	0xc
 1082 0011 6C000000 		.4byte	.LASF58
 1083 0015 9E020000 		.4byte	.LASF59
 1084 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1085 001d 00000000 		.4byte	0
 1086 0021 00000000 		.4byte	.Ldebug_line0
 1087 0025 02       		.uleb128 0x2
 1088 0026 01       		.byte	0x1
 1089 0027 06       		.byte	0x6
 1090 0028 66040000 		.4byte	.LASF0
 1091 002c 02       		.uleb128 0x2
 1092 002d 01       		.byte	0x1
 1093 002e 08       		.byte	0x8
 1094 002f AD010000 		.4byte	.LASF1
 1095 0033 02       		.uleb128 0x2
 1096 0034 02       		.byte	0x2
 1097 0035 05       		.byte	0x5
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 71


 1098 0036 19040000 		.4byte	.LASF2
 1099 003a 02       		.uleb128 0x2
 1100 003b 02       		.byte	0x2
 1101 003c 07       		.byte	0x7
 1102 003d 11020000 		.4byte	.LASF3
 1103 0041 02       		.uleb128 0x2
 1104 0042 04       		.byte	0x4
 1105 0043 05       		.byte	0x5
 1106 0044 50040000 		.4byte	.LASF4
 1107 0048 02       		.uleb128 0x2
 1108 0049 04       		.byte	0x4
 1109 004a 07       		.byte	0x7
 1110 004b F7010000 		.4byte	.LASF5
 1111 004f 02       		.uleb128 0x2
 1112 0050 08       		.byte	0x8
 1113 0051 05       		.byte	0x5
 1114 0052 D2030000 		.4byte	.LASF6
 1115 0056 02       		.uleb128 0x2
 1116 0057 08       		.byte	0x8
 1117 0058 07       		.byte	0x7
 1118 0059 2E030000 		.4byte	.LASF7
 1119 005d 03       		.uleb128 0x3
 1120 005e 04       		.byte	0x4
 1121 005f 05       		.byte	0x5
 1122 0060 696E7400 		.ascii	"int\000"
 1123 0064 02       		.uleb128 0x2
 1124 0065 04       		.byte	0x4
 1125 0066 07       		.byte	0x7
 1126 0067 11030000 		.4byte	.LASF8
 1127 006b 04       		.uleb128 0x4
 1128 006c EE020000 		.4byte	.LASF12
 1129 0070 03       		.byte	0x3
 1130 0071 FD01     		.2byte	0x1fd
 1131 0073 48000000 		.4byte	0x48
 1132 0077 02       		.uleb128 0x2
 1133 0078 04       		.byte	0x4
 1134 0079 04       		.byte	0x4
 1135 007a 8F010000 		.4byte	.LASF9
 1136 007e 02       		.uleb128 0x2
 1137 007f 08       		.byte	0x8
 1138 0080 04       		.byte	0x4
 1139 0081 50020000 		.4byte	.LASF10
 1140 0085 02       		.uleb128 0x2
 1141 0086 01       		.byte	0x1
 1142 0087 08       		.byte	0x8
 1143 0088 ED030000 		.4byte	.LASF11
 1144 008c 04       		.uleb128 0x4
 1145 008d 19000000 		.4byte	.LASF13
 1146 0091 03       		.byte	0x3
 1147 0092 9D02     		.2byte	0x29d
 1148 0094 48000000 		.4byte	0x48
 1149 0098 04       		.uleb128 0x4
 1150 0099 22000000 		.4byte	.LASF14
 1151 009d 03       		.byte	0x3
 1152 009e A702     		.2byte	0x2a7
 1153 00a0 A4000000 		.4byte	0xa4
 1154 00a4 05       		.uleb128 0x5
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 72


 1155 00a5 6B000000 		.4byte	0x6b
 1156 00a9 06       		.uleb128 0x6
 1157 00aa 04       		.byte	0x4
 1158 00ab AF000000 		.4byte	0xaf
 1159 00af 07       		.uleb128 0x7
 1160 00b0 08       		.uleb128 0x8
 1161 00b1 C1010000 		.4byte	.LASF15
 1162 00b5 01       		.byte	0x1
 1163 00b6 58       		.byte	0x58
 1164 00b7 A9000000 		.4byte	0xa9
 1165 00bb 02       		.uleb128 0x2
 1166 00bc 08       		.byte	0x8
 1167 00bd 04       		.byte	0x4
 1168 00be 67020000 		.4byte	.LASF16
 1169 00c2 02       		.uleb128 0x2
 1170 00c3 04       		.byte	0x4
 1171 00c4 07       		.byte	0x7
 1172 00c5 A7030000 		.4byte	.LASF17
 1173 00c9 09       		.uleb128 0x9
 1174 00ca F5020000 		.4byte	.LASF60
 1175 00ce 01       		.byte	0x1
 1176 00cf 9202     		.2byte	0x292
 1177 00d1 00000000 		.4byte	.LFB0
 1178 00d5 34000000 		.4byte	.LFE0-.LFB0
 1179 00d9 01       		.uleb128 0x1
 1180 00da 9C       		.byte	0x9c
 1181 00db 0A       		.uleb128 0xa
 1182 00dc 96000000 		.4byte	.LASF18
 1183 00e0 02       		.byte	0x2
 1184 00e1 53       		.byte	0x53
 1185 00e2 00000000 		.4byte	.LFB1
 1186 00e6 14000000 		.4byte	.LFE1-.LFB1
 1187 00ea 01       		.uleb128 0x1
 1188 00eb 9C       		.byte	0x9c
 1189 00ec 0A       		.uleb128 0xa
 1190 00ed CF010000 		.4byte	.LASF19
 1191 00f1 02       		.byte	0x2
 1192 00f2 6C       		.byte	0x6c
 1193 00f3 00000000 		.4byte	.LFB2
 1194 00f7 10000000 		.4byte	.LFE2-.LFB2
 1195 00fb 01       		.uleb128 0x1
 1196 00fc 9C       		.byte	0x9c
 1197 00fd 0A       		.uleb128 0xa
 1198 00fe 73020000 		.4byte	.LASF20
 1199 0102 02       		.byte	0x2
 1200 0103 A8       		.byte	0xa8
 1201 0104 00000000 		.4byte	.LFB3
 1202 0108 34000000 		.4byte	.LFE3-.LFB3
 1203 010c 01       		.uleb128 0x1
 1204 010d 9C       		.byte	0x9c
 1205 010e 0A       		.uleb128 0xa
 1206 010f 35020000 		.4byte	.LASF21
 1207 0113 02       		.byte	0x2
 1208 0114 C9       		.byte	0xc9
 1209 0115 00000000 		.4byte	.LFB4
 1210 0119 28000000 		.4byte	.LFE4-.LFB4
 1211 011d 01       		.uleb128 0x1
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 73


 1212 011e 9C       		.byte	0x9c
 1213 011f 0B       		.uleb128 0xb
 1214 0120 8F040000 		.4byte	.LASF31
 1215 0124 02       		.byte	0x2
 1216 0125 0B01     		.2byte	0x10b
 1217 0127 8C000000 		.4byte	0x8c
 1218 012b 00000000 		.4byte	.LFB5
 1219 012f E8000000 		.4byte	.LFE5-.LFB5
 1220 0133 01       		.uleb128 0x1
 1221 0134 9C       		.byte	0x9c
 1222 0135 AC010000 		.4byte	0x1ac
 1223 0139 0C       		.uleb128 0xc
 1224 013a E0030000 		.4byte	.LASF22
 1225 013e 02       		.byte	0x2
 1226 013f 0B01     		.2byte	0x10b
 1227 0141 6B000000 		.4byte	0x6b
 1228 0145 00000000 		.4byte	.LLST0
 1229 0149 0C       		.uleb128 0xc
 1230 014a 62030000 		.4byte	.LASF23
 1231 014e 02       		.byte	0x2
 1232 014f 0B01     		.2byte	0x10b
 1233 0151 AC010000 		.4byte	0x1ac
 1234 0155 3A000000 		.4byte	.LLST1
 1235 0159 0D       		.uleb128 0xd
 1236 015a 57000000 		.4byte	.LASF24
 1237 015e 02       		.byte	0x2
 1238 015f 0D01     		.2byte	0x10d
 1239 0161 6B000000 		.4byte	0x6b
 1240 0165 66000000 		.4byte	.LLST2
 1241 0169 0D       		.uleb128 0xd
 1242 016a 69010000 		.4byte	.LASF25
 1243 016e 02       		.byte	0x2
 1244 016f 0E01     		.2byte	0x10e
 1245 0171 6B000000 		.4byte	0x6b
 1246 0175 84000000 		.4byte	.LLST3
 1247 0179 0E       		.uleb128 0xe
 1248 017a 95010000 		.4byte	.LASF26
 1249 017e 02       		.byte	0x2
 1250 017f 0F01     		.2byte	0x10f
 1251 0181 6B000000 		.4byte	0x6b
 1252 0185 05       		.uleb128 0x5
 1253 0186 03       		.byte	0x3
 1254 0187 00000000 		.4byte	compensateRunningStatus.4804
 1255 018b 0D       		.uleb128 0xd
 1256 018c 39010000 		.4byte	.LASF27
 1257 0190 02       		.byte	0x2
 1258 0191 1001     		.2byte	0x110
 1259 0193 6B000000 		.4byte	0x6b
 1260 0197 AD000000 		.4byte	.LLST4
 1261 019b 0D       		.uleb128 0xd
 1262 019c 59040000 		.4byte	.LASF28
 1263 01a0 02       		.byte	0x2
 1264 01a1 1101     		.2byte	0x111
 1265 01a3 8C000000 		.4byte	0x8c
 1266 01a7 D1000000 		.4byte	.LLST5
 1267 01ab 00       		.byte	0
 1268 01ac 06       		.uleb128 0x6
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 74


 1269 01ad 04       		.byte	0x4
 1270 01ae 6B000000 		.4byte	0x6b
 1271 01b2 0F       		.uleb128 0xf
 1272 01b3 24020000 		.4byte	.LASF29
 1273 01b7 02       		.byte	0x2
 1274 01b8 0303     		.2byte	0x303
 1275 01ba 00000000 		.4byte	.LFB6
 1276 01be 18000000 		.4byte	.LFE6-.LFB6
 1277 01c2 01       		.uleb128 0x1
 1278 01c3 9C       		.byte	0x9c
 1279 01c4 D2010000 		.4byte	0x1d2
 1280 01c8 10       		.uleb128 0x10
 1281 01c9 06000000 		.4byte	.LVL22
 1282 01cd C9000000 		.4byte	0xc9
 1283 01d1 00       		.byte	0
 1284 01d2 11       		.uleb128 0x11
 1285 01d3 23040000 		.4byte	.LASF37
 1286 01d7 02       		.byte	0x2
 1287 01d8 3803     		.2byte	0x338
 1288 01da 6B000000 		.4byte	0x6b
 1289 01de 00000000 		.4byte	.LFB8
 1290 01e2 0C000000 		.4byte	.LFE8-.LFB8
 1291 01e6 01       		.uleb128 0x1
 1292 01e7 9C       		.byte	0x9c
 1293 01e8 0F       		.uleb128 0xf
 1294 01e9 1E030000 		.4byte	.LASF30
 1295 01ed 02       		.byte	0x2
 1296 01ee 1503     		.2byte	0x315
 1297 01f0 00000000 		.4byte	.LFB7
 1298 01f4 1C000000 		.4byte	.LFE7-.LFB7
 1299 01f8 01       		.uleb128 0x1
 1300 01f9 9C       		.byte	0x9c
 1301 01fa 08020000 		.4byte	0x208
 1302 01fe 10       		.uleb128 0x10
 1303 01ff 06000000 		.4byte	.LVL23
 1304 0203 D2010000 		.4byte	0x1d2
 1305 0207 00       		.byte	0
 1306 0208 12       		.uleb128 0x12
 1307 0209 DF010000 		.4byte	.LASF32
 1308 020d 02       		.byte	0x2
 1309 020e 5303     		.2byte	0x353
 1310 0210 6B000000 		.4byte	0x6b
 1311 0214 00000000 		.4byte	.LFB9
 1312 0218 1C000000 		.4byte	.LFE9-.LFB9
 1313 021c 01       		.uleb128 0x1
 1314 021d 9C       		.byte	0x9c
 1315 021e 4C020000 		.4byte	0x24c
 1316 0222 0C       		.uleb128 0xc
 1317 0223 5D030000 		.4byte	.LASF33
 1318 0227 02       		.byte	0x2
 1319 0228 5303     		.2byte	0x353
 1320 022a 6B000000 		.4byte	0x6b
 1321 022e FC000000 		.4byte	.LLST6
 1322 0232 0D       		.uleb128 0xd
 1323 0233 39000000 		.4byte	.LASF34
 1324 0237 02       		.byte	0x2
 1325 0238 5503     		.2byte	0x355
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 75


 1326 023a 6B000000 		.4byte	0x6b
 1327 023e 1D010000 		.4byte	.LLST7
 1328 0242 10       		.uleb128 0x10
 1329 0243 12000000 		.4byte	.LVL26
 1330 0247 C9000000 		.4byte	0xc9
 1331 024b 00       		.byte	0
 1332 024c 0F       		.uleb128 0xf
 1333 024d 36040000 		.4byte	.LASF35
 1334 0251 02       		.byte	0x2
 1335 0252 9603     		.2byte	0x396
 1336 0254 00000000 		.4byte	.LFB10
 1337 0258 24000000 		.4byte	.LFE10-.LFB10
 1338 025c 01       		.uleb128 0x1
 1339 025d 9C       		.byte	0x9c
 1340 025e 7C020000 		.4byte	0x27c
 1341 0262 0C       		.uleb128 0xc
 1342 0263 8D000000 		.4byte	.LASF36
 1343 0267 02       		.byte	0x2
 1344 0268 9603     		.2byte	0x396
 1345 026a 6B000000 		.4byte	0x6b
 1346 026e 3B010000 		.4byte	.LLST8
 1347 0272 10       		.uleb128 0x10
 1348 0273 08000000 		.4byte	.LVL29
 1349 0277 D2010000 		.4byte	0x1d2
 1350 027b 00       		.byte	0
 1351 027c 11       		.uleb128 0x11
 1352 027d 00000000 		.4byte	.LASF38
 1353 0281 02       		.byte	0x2
 1354 0282 7E07     		.2byte	0x77e
 1355 0284 6B000000 		.4byte	0x6b
 1356 0288 00000000 		.4byte	.LFB11
 1357 028c 18000000 		.4byte	.LFE11-.LFB11
 1358 0290 01       		.uleb128 0x1
 1359 0291 9C       		.byte	0x9c
 1360 0292 13       		.uleb128 0x13
 1361 0293 8F020000 		.4byte	.LASF39
 1362 0297 02       		.byte	0x2
 1363 0298 9107     		.2byte	0x791
 1364 029a 00000000 		.4byte	.LFB12
 1365 029e 0C000000 		.4byte	.LFE12-.LFB12
 1366 02a2 01       		.uleb128 0x1
 1367 02a3 9C       		.byte	0x9c
 1368 02a4 13       		.uleb128 0x13
 1369 02a5 57020000 		.4byte	.LASF40
 1370 02a9 02       		.byte	0x2
 1371 02aa A107     		.2byte	0x7a1
 1372 02ac 00000000 		.4byte	.LFB13
 1373 02b0 10000000 		.4byte	.LFE13-.LFB13
 1374 02b4 01       		.uleb128 0x1
 1375 02b5 9C       		.byte	0x9c
 1376 02b6 0F       		.uleb128 0xf
 1377 02b7 28000000 		.4byte	.LASF41
 1378 02bb 02       		.byte	0x2
 1379 02bc B107     		.2byte	0x7b1
 1380 02be 00000000 		.4byte	.LFB14
 1381 02c2 14000000 		.4byte	.LFE14-.LFB14
 1382 02c6 01       		.uleb128 0x1
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 76


 1383 02c7 9C       		.byte	0x9c
 1384 02c8 DD020000 		.4byte	0x2dd
 1385 02cc 0C       		.uleb128 0xc
 1386 02cd BB010000 		.4byte	.LASF42
 1387 02d1 02       		.byte	0x2
 1388 02d2 B107     		.2byte	0x7b1
 1389 02d4 6B000000 		.4byte	0x6b
 1390 02d8 67010000 		.4byte	.LLST9
 1391 02dc 00       		.byte	0
 1392 02dd 11       		.uleb128 0x11
 1393 02de F2030000 		.4byte	.LASF43
 1394 02e2 02       		.byte	0x2
 1395 02e3 C107     		.2byte	0x7c1
 1396 02e5 6B000000 		.4byte	0x6b
 1397 02e9 00000000 		.4byte	.LFB15
 1398 02ed 0C000000 		.4byte	.LFE15-.LFB15
 1399 02f1 01       		.uleb128 0x1
 1400 02f2 9C       		.byte	0x9c
 1401 02f3 11       		.uleb128 0x11
 1402 02f4 DD020000 		.4byte	.LASF44
 1403 02f8 02       		.byte	0x2
 1404 02f9 D007     		.2byte	0x7d0
 1405 02fb 6B000000 		.4byte	0x6b
 1406 02ff 00000000 		.4byte	.LFB16
 1407 0303 0C000000 		.4byte	.LFE16-.LFB16
 1408 0307 01       		.uleb128 0x1
 1409 0308 9C       		.byte	0x9c
 1410 0309 0F       		.uleb128 0xf
 1411 030a 03040000 		.4byte	.LASF45
 1412 030e 02       		.byte	0x2
 1413 030f E407     		.2byte	0x7e4
 1414 0311 00000000 		.4byte	.LFB17
 1415 0315 20000000 		.4byte	.LFE17-.LFB17
 1416 0319 01       		.uleb128 0x1
 1417 031a 9C       		.byte	0x9c
 1418 031b 30030000 		.4byte	0x330
 1419 031f 0C       		.uleb128 0xc
 1420 0320 09020000 		.4byte	.LASF46
 1421 0324 02       		.byte	0x2
 1422 0325 E407     		.2byte	0x7e4
 1423 0327 6B000000 		.4byte	0x6b
 1424 032b 9D010000 		.4byte	.LLST10
 1425 032f 00       		.byte	0
 1426 0330 11       		.uleb128 0x11
 1427 0331 BC030000 		.4byte	.LASF47
 1428 0335 02       		.byte	0x2
 1429 0336 F607     		.2byte	0x7f6
 1430 0338 6B000000 		.4byte	0x6b
 1431 033c 00000000 		.4byte	.LFB18
 1432 0340 10000000 		.4byte	.LFE18-.LFB18
 1433 0344 01       		.uleb128 0x1
 1434 0345 9C       		.byte	0x9c
 1435 0346 13       		.uleb128 0x13
 1436 0347 52010000 		.4byte	.LASF48
 1437 034b 02       		.byte	0x2
 1438 034c 0708     		.2byte	0x807
 1439 034e 00000000 		.4byte	.LFB19
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 77


 1440 0352 10000000 		.4byte	.LFE19-.LFB19
 1441 0356 01       		.uleb128 0x1
 1442 0357 9C       		.byte	0x9c
 1443 0358 13       		.uleb128 0x13
 1444 0359 91030000 		.4byte	.LASF49
 1445 035d 02       		.byte	0x2
 1446 035e 1608     		.2byte	0x816
 1447 0360 00000000 		.4byte	.LFB20
 1448 0364 10000000 		.4byte	.LFE20-.LFB20
 1449 0368 01       		.uleb128 0x1
 1450 0369 9C       		.byte	0x9c
 1451 036a 13       		.uleb128 0x13
 1452 036b 45030000 		.4byte	.LASF50
 1453 036f 02       		.byte	0x2
 1454 0370 2508     		.2byte	0x825
 1455 0372 00000000 		.4byte	.LFB21
 1456 0376 10000000 		.4byte	.LFE21-.LFB21
 1457 037a 01       		.uleb128 0x1
 1458 037b 9C       		.byte	0x9c
 1459 037c 12       		.uleb128 0x12
 1460 037d 74030000 		.4byte	.LASF51
 1461 0381 02       		.byte	0x2
 1462 0382 3708     		.2byte	0x837
 1463 0384 B0000000 		.4byte	0xb0
 1464 0388 00000000 		.4byte	.LFB22
 1465 038c 10000000 		.4byte	.LFE22-.LFB22
 1466 0390 01       		.uleb128 0x1
 1467 0391 9C       		.byte	0x9c
 1468 0392 B7030000 		.4byte	0x3b7
 1469 0396 0C       		.uleb128 0xc
 1470 0397 A5040000 		.4byte	.LASF52
 1471 039b 02       		.byte	0x2
 1472 039c 3708     		.2byte	0x837
 1473 039e B0000000 		.4byte	0xb0
 1474 03a2 D5010000 		.4byte	.LLST11
 1475 03a6 0D       		.uleb128 0xd
 1476 03a7 45010000 		.4byte	.LASF53
 1477 03ab 02       		.byte	0x2
 1478 03ac 3908     		.2byte	0x839
 1479 03ae B0000000 		.4byte	0xb0
 1480 03b2 F7010000 		.4byte	.LLST12
 1481 03b6 00       		.byte	0
 1482 03b7 11       		.uleb128 0x11
 1483 03b8 72040000 		.4byte	.LASF54
 1484 03bc 02       		.byte	0x2
 1485 03bd 4C08     		.2byte	0x84c
 1486 03bf B0000000 		.4byte	0xb0
 1487 03c3 00000000 		.4byte	.LFB23
 1488 03c7 0C000000 		.4byte	.LFE23-.LFB23
 1489 03cb 01       		.uleb128 0x1
 1490 03cc 9C       		.byte	0x9c
 1491 03cd 14       		.uleb128 0x14
 1492 03ce B0030000 		.4byte	.LASF55
 1493 03d2 02       		.byte	0x2
 1494 03d3 6408     		.2byte	0x864
 1495 03d5 00000000 		.4byte	.LFB24
 1496 03d9 18000000 		.4byte	.LFE24-.LFB24
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 78


 1497 03dd 01       		.uleb128 0x1
 1498 03de 9C       		.byte	0x9c
 1499 03df ED030000 		.4byte	0x3ed
 1500 03e3 10       		.uleb128 0x10
 1501 03e4 10000000 		.4byte	.LVL40
 1502 03e8 46030000 		.4byte	0x346
 1503 03ec 00       		.byte	0
 1504 03ed 15       		.uleb128 0x15
 1505 03ee 7E010000 		.4byte	.LASF56
 1506 03f2 02       		.byte	0x2
 1507 03f3 46       		.byte	0x46
 1508 03f4 B0000000 		.4byte	0xb0
 1509 03f8 05       		.uleb128 0x5
 1510 03f9 03       		.byte	0x3
 1511 03fa 04000000 		.4byte	cySysWdtCallback
 1512 03fe 16       		.uleb128 0x16
 1513 03ff 49000000 		.4byte	.LASF61
 1514 0403 04       		.byte	0x4
 1515 0404 E7       		.byte	0xe7
 1516 0405 6B000000 		.4byte	0x6b
 1517 0409 00       		.byte	0
 1518              		.section	.debug_abbrev,"",%progbits
 1519              	.Ldebug_abbrev0:
 1520 0000 01       		.uleb128 0x1
 1521 0001 11       		.uleb128 0x11
 1522 0002 01       		.byte	0x1
 1523 0003 25       		.uleb128 0x25
 1524 0004 0E       		.uleb128 0xe
 1525 0005 13       		.uleb128 0x13
 1526 0006 0B       		.uleb128 0xb
 1527 0007 03       		.uleb128 0x3
 1528 0008 0E       		.uleb128 0xe
 1529 0009 1B       		.uleb128 0x1b
 1530 000a 0E       		.uleb128 0xe
 1531 000b 55       		.uleb128 0x55
 1532 000c 17       		.uleb128 0x17
 1533 000d 11       		.uleb128 0x11
 1534 000e 01       		.uleb128 0x1
 1535 000f 10       		.uleb128 0x10
 1536 0010 17       		.uleb128 0x17
 1537 0011 00       		.byte	0
 1538 0012 00       		.byte	0
 1539 0013 02       		.uleb128 0x2
 1540 0014 24       		.uleb128 0x24
 1541 0015 00       		.byte	0
 1542 0016 0B       		.uleb128 0xb
 1543 0017 0B       		.uleb128 0xb
 1544 0018 3E       		.uleb128 0x3e
 1545 0019 0B       		.uleb128 0xb
 1546 001a 03       		.uleb128 0x3
 1547 001b 0E       		.uleb128 0xe
 1548 001c 00       		.byte	0
 1549 001d 00       		.byte	0
 1550 001e 03       		.uleb128 0x3
 1551 001f 24       		.uleb128 0x24
 1552 0020 00       		.byte	0
 1553 0021 0B       		.uleb128 0xb
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 79


 1554 0022 0B       		.uleb128 0xb
 1555 0023 3E       		.uleb128 0x3e
 1556 0024 0B       		.uleb128 0xb
 1557 0025 03       		.uleb128 0x3
 1558 0026 08       		.uleb128 0x8
 1559 0027 00       		.byte	0
 1560 0028 00       		.byte	0
 1561 0029 04       		.uleb128 0x4
 1562 002a 16       		.uleb128 0x16
 1563 002b 00       		.byte	0
 1564 002c 03       		.uleb128 0x3
 1565 002d 0E       		.uleb128 0xe
 1566 002e 3A       		.uleb128 0x3a
 1567 002f 0B       		.uleb128 0xb
 1568 0030 3B       		.uleb128 0x3b
 1569 0031 05       		.uleb128 0x5
 1570 0032 49       		.uleb128 0x49
 1571 0033 13       		.uleb128 0x13
 1572 0034 00       		.byte	0
 1573 0035 00       		.byte	0
 1574 0036 05       		.uleb128 0x5
 1575 0037 35       		.uleb128 0x35
 1576 0038 00       		.byte	0
 1577 0039 49       		.uleb128 0x49
 1578 003a 13       		.uleb128 0x13
 1579 003b 00       		.byte	0
 1580 003c 00       		.byte	0
 1581 003d 06       		.uleb128 0x6
 1582 003e 0F       		.uleb128 0xf
 1583 003f 00       		.byte	0
 1584 0040 0B       		.uleb128 0xb
 1585 0041 0B       		.uleb128 0xb
 1586 0042 49       		.uleb128 0x49
 1587 0043 13       		.uleb128 0x13
 1588 0044 00       		.byte	0
 1589 0045 00       		.byte	0
 1590 0046 07       		.uleb128 0x7
 1591 0047 15       		.uleb128 0x15
 1592 0048 00       		.byte	0
 1593 0049 27       		.uleb128 0x27
 1594 004a 19       		.uleb128 0x19
 1595 004b 00       		.byte	0
 1596 004c 00       		.byte	0
 1597 004d 08       		.uleb128 0x8
 1598 004e 16       		.uleb128 0x16
 1599 004f 00       		.byte	0
 1600 0050 03       		.uleb128 0x3
 1601 0051 0E       		.uleb128 0xe
 1602 0052 3A       		.uleb128 0x3a
 1603 0053 0B       		.uleb128 0xb
 1604 0054 3B       		.uleb128 0x3b
 1605 0055 0B       		.uleb128 0xb
 1606 0056 49       		.uleb128 0x49
 1607 0057 13       		.uleb128 0x13
 1608 0058 00       		.byte	0
 1609 0059 00       		.byte	0
 1610 005a 09       		.uleb128 0x9
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 80


 1611 005b 2E       		.uleb128 0x2e
 1612 005c 00       		.byte	0
 1613 005d 03       		.uleb128 0x3
 1614 005e 0E       		.uleb128 0xe
 1615 005f 3A       		.uleb128 0x3a
 1616 0060 0B       		.uleb128 0xb
 1617 0061 3B       		.uleb128 0x3b
 1618 0062 05       		.uleb128 0x5
 1619 0063 27       		.uleb128 0x27
 1620 0064 19       		.uleb128 0x19
 1621 0065 11       		.uleb128 0x11
 1622 0066 01       		.uleb128 0x1
 1623 0067 12       		.uleb128 0x12
 1624 0068 06       		.uleb128 0x6
 1625 0069 40       		.uleb128 0x40
 1626 006a 18       		.uleb128 0x18
 1627 006b 9742     		.uleb128 0x2117
 1628 006d 19       		.uleb128 0x19
 1629 006e 00       		.byte	0
 1630 006f 00       		.byte	0
 1631 0070 0A       		.uleb128 0xa
 1632 0071 2E       		.uleb128 0x2e
 1633 0072 00       		.byte	0
 1634 0073 3F       		.uleb128 0x3f
 1635 0074 19       		.uleb128 0x19
 1636 0075 03       		.uleb128 0x3
 1637 0076 0E       		.uleb128 0xe
 1638 0077 3A       		.uleb128 0x3a
 1639 0078 0B       		.uleb128 0xb
 1640 0079 3B       		.uleb128 0x3b
 1641 007a 0B       		.uleb128 0xb
 1642 007b 27       		.uleb128 0x27
 1643 007c 19       		.uleb128 0x19
 1644 007d 11       		.uleb128 0x11
 1645 007e 01       		.uleb128 0x1
 1646 007f 12       		.uleb128 0x12
 1647 0080 06       		.uleb128 0x6
 1648 0081 40       		.uleb128 0x40
 1649 0082 18       		.uleb128 0x18
 1650 0083 9742     		.uleb128 0x2117
 1651 0085 19       		.uleb128 0x19
 1652 0086 00       		.byte	0
 1653 0087 00       		.byte	0
 1654 0088 0B       		.uleb128 0xb
 1655 0089 2E       		.uleb128 0x2e
 1656 008a 01       		.byte	0x1
 1657 008b 3F       		.uleb128 0x3f
 1658 008c 19       		.uleb128 0x19
 1659 008d 03       		.uleb128 0x3
 1660 008e 0E       		.uleb128 0xe
 1661 008f 3A       		.uleb128 0x3a
 1662 0090 0B       		.uleb128 0xb
 1663 0091 3B       		.uleb128 0x3b
 1664 0092 05       		.uleb128 0x5
 1665 0093 27       		.uleb128 0x27
 1666 0094 19       		.uleb128 0x19
 1667 0095 49       		.uleb128 0x49
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 81


 1668 0096 13       		.uleb128 0x13
 1669 0097 11       		.uleb128 0x11
 1670 0098 01       		.uleb128 0x1
 1671 0099 12       		.uleb128 0x12
 1672 009a 06       		.uleb128 0x6
 1673 009b 40       		.uleb128 0x40
 1674 009c 18       		.uleb128 0x18
 1675 009d 9642     		.uleb128 0x2116
 1676 009f 19       		.uleb128 0x19
 1677 00a0 01       		.uleb128 0x1
 1678 00a1 13       		.uleb128 0x13
 1679 00a2 00       		.byte	0
 1680 00a3 00       		.byte	0
 1681 00a4 0C       		.uleb128 0xc
 1682 00a5 05       		.uleb128 0x5
 1683 00a6 00       		.byte	0
 1684 00a7 03       		.uleb128 0x3
 1685 00a8 0E       		.uleb128 0xe
 1686 00a9 3A       		.uleb128 0x3a
 1687 00aa 0B       		.uleb128 0xb
 1688 00ab 3B       		.uleb128 0x3b
 1689 00ac 05       		.uleb128 0x5
 1690 00ad 49       		.uleb128 0x49
 1691 00ae 13       		.uleb128 0x13
 1692 00af 02       		.uleb128 0x2
 1693 00b0 17       		.uleb128 0x17
 1694 00b1 00       		.byte	0
 1695 00b2 00       		.byte	0
 1696 00b3 0D       		.uleb128 0xd
 1697 00b4 34       		.uleb128 0x34
 1698 00b5 00       		.byte	0
 1699 00b6 03       		.uleb128 0x3
 1700 00b7 0E       		.uleb128 0xe
 1701 00b8 3A       		.uleb128 0x3a
 1702 00b9 0B       		.uleb128 0xb
 1703 00ba 3B       		.uleb128 0x3b
 1704 00bb 05       		.uleb128 0x5
 1705 00bc 49       		.uleb128 0x49
 1706 00bd 13       		.uleb128 0x13
 1707 00be 02       		.uleb128 0x2
 1708 00bf 17       		.uleb128 0x17
 1709 00c0 00       		.byte	0
 1710 00c1 00       		.byte	0
 1711 00c2 0E       		.uleb128 0xe
 1712 00c3 34       		.uleb128 0x34
 1713 00c4 00       		.byte	0
 1714 00c5 03       		.uleb128 0x3
 1715 00c6 0E       		.uleb128 0xe
 1716 00c7 3A       		.uleb128 0x3a
 1717 00c8 0B       		.uleb128 0xb
 1718 00c9 3B       		.uleb128 0x3b
 1719 00ca 05       		.uleb128 0x5
 1720 00cb 49       		.uleb128 0x49
 1721 00cc 13       		.uleb128 0x13
 1722 00cd 02       		.uleb128 0x2
 1723 00ce 18       		.uleb128 0x18
 1724 00cf 00       		.byte	0
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 82


 1725 00d0 00       		.byte	0
 1726 00d1 0F       		.uleb128 0xf
 1727 00d2 2E       		.uleb128 0x2e
 1728 00d3 01       		.byte	0x1
 1729 00d4 3F       		.uleb128 0x3f
 1730 00d5 19       		.uleb128 0x19
 1731 00d6 03       		.uleb128 0x3
 1732 00d7 0E       		.uleb128 0xe
 1733 00d8 3A       		.uleb128 0x3a
 1734 00d9 0B       		.uleb128 0xb
 1735 00da 3B       		.uleb128 0x3b
 1736 00db 05       		.uleb128 0x5
 1737 00dc 27       		.uleb128 0x27
 1738 00dd 19       		.uleb128 0x19
 1739 00de 11       		.uleb128 0x11
 1740 00df 01       		.uleb128 0x1
 1741 00e0 12       		.uleb128 0x12
 1742 00e1 06       		.uleb128 0x6
 1743 00e2 40       		.uleb128 0x40
 1744 00e3 18       		.uleb128 0x18
 1745 00e4 9742     		.uleb128 0x2117
 1746 00e6 19       		.uleb128 0x19
 1747 00e7 01       		.uleb128 0x1
 1748 00e8 13       		.uleb128 0x13
 1749 00e9 00       		.byte	0
 1750 00ea 00       		.byte	0
 1751 00eb 10       		.uleb128 0x10
 1752 00ec 898201   		.uleb128 0x4109
 1753 00ef 00       		.byte	0
 1754 00f0 11       		.uleb128 0x11
 1755 00f1 01       		.uleb128 0x1
 1756 00f2 31       		.uleb128 0x31
 1757 00f3 13       		.uleb128 0x13
 1758 00f4 00       		.byte	0
 1759 00f5 00       		.byte	0
 1760 00f6 11       		.uleb128 0x11
 1761 00f7 2E       		.uleb128 0x2e
 1762 00f8 00       		.byte	0
 1763 00f9 3F       		.uleb128 0x3f
 1764 00fa 19       		.uleb128 0x19
 1765 00fb 03       		.uleb128 0x3
 1766 00fc 0E       		.uleb128 0xe
 1767 00fd 3A       		.uleb128 0x3a
 1768 00fe 0B       		.uleb128 0xb
 1769 00ff 3B       		.uleb128 0x3b
 1770 0100 05       		.uleb128 0x5
 1771 0101 27       		.uleb128 0x27
 1772 0102 19       		.uleb128 0x19
 1773 0103 49       		.uleb128 0x49
 1774 0104 13       		.uleb128 0x13
 1775 0105 11       		.uleb128 0x11
 1776 0106 01       		.uleb128 0x1
 1777 0107 12       		.uleb128 0x12
 1778 0108 06       		.uleb128 0x6
 1779 0109 40       		.uleb128 0x40
 1780 010a 18       		.uleb128 0x18
 1781 010b 9742     		.uleb128 0x2117
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 83


 1782 010d 19       		.uleb128 0x19
 1783 010e 00       		.byte	0
 1784 010f 00       		.byte	0
 1785 0110 12       		.uleb128 0x12
 1786 0111 2E       		.uleb128 0x2e
 1787 0112 01       		.byte	0x1
 1788 0113 3F       		.uleb128 0x3f
 1789 0114 19       		.uleb128 0x19
 1790 0115 03       		.uleb128 0x3
 1791 0116 0E       		.uleb128 0xe
 1792 0117 3A       		.uleb128 0x3a
 1793 0118 0B       		.uleb128 0xb
 1794 0119 3B       		.uleb128 0x3b
 1795 011a 05       		.uleb128 0x5
 1796 011b 27       		.uleb128 0x27
 1797 011c 19       		.uleb128 0x19
 1798 011d 49       		.uleb128 0x49
 1799 011e 13       		.uleb128 0x13
 1800 011f 11       		.uleb128 0x11
 1801 0120 01       		.uleb128 0x1
 1802 0121 12       		.uleb128 0x12
 1803 0122 06       		.uleb128 0x6
 1804 0123 40       		.uleb128 0x40
 1805 0124 18       		.uleb128 0x18
 1806 0125 9742     		.uleb128 0x2117
 1807 0127 19       		.uleb128 0x19
 1808 0128 01       		.uleb128 0x1
 1809 0129 13       		.uleb128 0x13
 1810 012a 00       		.byte	0
 1811 012b 00       		.byte	0
 1812 012c 13       		.uleb128 0x13
 1813 012d 2E       		.uleb128 0x2e
 1814 012e 00       		.byte	0
 1815 012f 3F       		.uleb128 0x3f
 1816 0130 19       		.uleb128 0x19
 1817 0131 03       		.uleb128 0x3
 1818 0132 0E       		.uleb128 0xe
 1819 0133 3A       		.uleb128 0x3a
 1820 0134 0B       		.uleb128 0xb
 1821 0135 3B       		.uleb128 0x3b
 1822 0136 05       		.uleb128 0x5
 1823 0137 27       		.uleb128 0x27
 1824 0138 19       		.uleb128 0x19
 1825 0139 11       		.uleb128 0x11
 1826 013a 01       		.uleb128 0x1
 1827 013b 12       		.uleb128 0x12
 1828 013c 06       		.uleb128 0x6
 1829 013d 40       		.uleb128 0x40
 1830 013e 18       		.uleb128 0x18
 1831 013f 9742     		.uleb128 0x2117
 1832 0141 19       		.uleb128 0x19
 1833 0142 00       		.byte	0
 1834 0143 00       		.byte	0
 1835 0144 14       		.uleb128 0x14
 1836 0145 2E       		.uleb128 0x2e
 1837 0146 01       		.byte	0x1
 1838 0147 3F       		.uleb128 0x3f
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 84


 1839 0148 19       		.uleb128 0x19
 1840 0149 03       		.uleb128 0x3
 1841 014a 0E       		.uleb128 0xe
 1842 014b 3A       		.uleb128 0x3a
 1843 014c 0B       		.uleb128 0xb
 1844 014d 3B       		.uleb128 0x3b
 1845 014e 05       		.uleb128 0x5
 1846 014f 27       		.uleb128 0x27
 1847 0150 19       		.uleb128 0x19
 1848 0151 11       		.uleb128 0x11
 1849 0152 01       		.uleb128 0x1
 1850 0153 12       		.uleb128 0x12
 1851 0154 06       		.uleb128 0x6
 1852 0155 40       		.uleb128 0x40
 1853 0156 18       		.uleb128 0x18
 1854 0157 9642     		.uleb128 0x2116
 1855 0159 19       		.uleb128 0x19
 1856 015a 01       		.uleb128 0x1
 1857 015b 13       		.uleb128 0x13
 1858 015c 00       		.byte	0
 1859 015d 00       		.byte	0
 1860 015e 15       		.uleb128 0x15
 1861 015f 34       		.uleb128 0x34
 1862 0160 00       		.byte	0
 1863 0161 03       		.uleb128 0x3
 1864 0162 0E       		.uleb128 0xe
 1865 0163 3A       		.uleb128 0x3a
 1866 0164 0B       		.uleb128 0xb
 1867 0165 3B       		.uleb128 0x3b
 1868 0166 0B       		.uleb128 0xb
 1869 0167 49       		.uleb128 0x49
 1870 0168 13       		.uleb128 0x13
 1871 0169 02       		.uleb128 0x2
 1872 016a 18       		.uleb128 0x18
 1873 016b 00       		.byte	0
 1874 016c 00       		.byte	0
 1875 016d 16       		.uleb128 0x16
 1876 016e 34       		.uleb128 0x34
 1877 016f 00       		.byte	0
 1878 0170 03       		.uleb128 0x3
 1879 0171 0E       		.uleb128 0xe
 1880 0172 3A       		.uleb128 0x3a
 1881 0173 0B       		.uleb128 0xb
 1882 0174 3B       		.uleb128 0x3b
 1883 0175 0B       		.uleb128 0xb
 1884 0176 49       		.uleb128 0x49
 1885 0177 13       		.uleb128 0x13
 1886 0178 3F       		.uleb128 0x3f
 1887 0179 19       		.uleb128 0x19
 1888 017a 3C       		.uleb128 0x3c
 1889 017b 19       		.uleb128 0x19
 1890 017c 00       		.byte	0
 1891 017d 00       		.byte	0
 1892 017e 00       		.byte	0
 1893              		.section	.debug_loc,"",%progbits
 1894              	.Ldebug_loc0:
 1895              	.LLST0:
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 85


 1896 0000 00000000 		.4byte	.LVL0
 1897 0004 58000000 		.4byte	.LVL5
 1898 0008 0100     		.2byte	0x1
 1899 000a 50       		.byte	0x50
 1900 000b 58000000 		.4byte	.LVL5
 1901 000f 9C000000 		.4byte	.LVL18
 1902 0013 0400     		.2byte	0x4
 1903 0015 F3       		.byte	0xf3
 1904 0016 01       		.uleb128 0x1
 1905 0017 50       		.byte	0x50
 1906 0018 9F       		.byte	0x9f
 1907 0019 9C000000 		.4byte	.LVL18
 1908 001d AA000000 		.4byte	.LVL20
 1909 0021 0100     		.2byte	0x1
 1910 0023 50       		.byte	0x50
 1911 0024 AA000000 		.4byte	.LVL20
 1912 0028 E8000000 		.4byte	.LFE5
 1913 002c 0400     		.2byte	0x4
 1914 002e F3       		.byte	0xf3
 1915 002f 01       		.uleb128 0x1
 1916 0030 50       		.byte	0x50
 1917 0031 9F       		.byte	0x9f
 1918 0032 00000000 		.4byte	0
 1919 0036 00000000 		.4byte	0
 1920              	.LLST1:
 1921 003a 00000000 		.4byte	.LVL0
 1922 003e 06000000 		.4byte	.LVL1
 1923 0042 0100     		.2byte	0x1
 1924 0044 51       		.byte	0x51
 1925 0045 06000000 		.4byte	.LVL1
 1926 0049 AC000000 		.4byte	.LVL21
 1927 004d 0100     		.2byte	0x1
 1928 004f 57       		.byte	0x57
 1929 0050 AC000000 		.4byte	.LVL21
 1930 0054 E8000000 		.4byte	.LFE5
 1931 0058 0400     		.2byte	0x4
 1932 005a F3       		.byte	0xf3
 1933 005b 01       		.uleb128 0x1
 1934 005c 51       		.byte	0x51
 1935 005d 9F       		.byte	0x9f
 1936 005e 00000000 		.4byte	0
 1937 0062 00000000 		.4byte	0
 1938              	.LLST2:
 1939 0066 84000000 		.4byte	.LVL13
 1940 006a 86000000 		.4byte	.LVL14
 1941 006e 0100     		.2byte	0x1
 1942 0070 50       		.byte	0x50
 1943 0071 92000000 		.4byte	.LVL16
 1944 0075 9C000000 		.4byte	.LVL18
 1945 0079 0100     		.2byte	0x1
 1946 007b 50       		.byte	0x50
 1947 007c 00000000 		.4byte	0
 1948 0080 00000000 		.4byte	0
 1949              	.LLST3:
 1950 0084 60000000 		.4byte	.LVL7
 1951 0088 64000000 		.4byte	.LVL8
 1952 008c 0100     		.2byte	0x1
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 86


 1953 008e 50       		.byte	0x50
 1954 008f 64000000 		.4byte	.LVL8
 1955 0093 7C000000 		.4byte	.LVL11
 1956 0097 0100     		.2byte	0x1
 1957 0099 55       		.byte	0x55
 1958 009a 86000000 		.4byte	.LVL14
 1959 009e 92000000 		.4byte	.LVL16
 1960 00a2 0100     		.2byte	0x1
 1961 00a4 55       		.byte	0x55
 1962 00a5 00000000 		.4byte	0
 1963 00a9 00000000 		.4byte	0
 1964              	.LLST4:
 1965 00ad 0C000000 		.4byte	.LVL2
 1966 00b1 10000000 		.4byte	.LVL3
 1967 00b5 0700     		.2byte	0x7
 1968 00b7 72       		.byte	0x72
 1969 00b8 00       		.sleb128 0
 1970 00b9 0A       		.byte	0xa
 1971 00ba 0F0F     		.2byte	0xf0f
 1972 00bc 1A       		.byte	0x1a
 1973 00bd 9F       		.byte	0x9f
 1974 00be 10000000 		.4byte	.LVL3
 1975 00c2 18000000 		.4byte	.LVL4
 1976 00c6 0100     		.2byte	0x1
 1977 00c8 52       		.byte	0x52
 1978 00c9 00000000 		.4byte	0
 1979 00cd 00000000 		.4byte	0
 1980              	.LLST5:
 1981 00d1 9A000000 		.4byte	.LVL17
 1982 00d5 9C000000 		.4byte	.LVL18
 1983 00d9 0200     		.2byte	0x2
 1984 00db 30       		.byte	0x30
 1985 00dc 9F       		.byte	0x9f
 1986 00dd A8000000 		.4byte	.LVL19
 1987 00e1 AA000000 		.4byte	.LVL20
 1988 00e5 0200     		.2byte	0x2
 1989 00e7 37       		.byte	0x37
 1990 00e8 9F       		.byte	0x9f
 1991 00e9 AA000000 		.4byte	.LVL20
 1992 00ed E8000000 		.4byte	.LFE5
 1993 00f1 0100     		.2byte	0x1
 1994 00f3 53       		.byte	0x53
 1995 00f4 00000000 		.4byte	0
 1996 00f8 00000000 		.4byte	0
 1997              	.LLST6:
 1998 00fc 00000000 		.4byte	.LVL24
 1999 0100 11000000 		.4byte	.LVL26-1
 2000 0104 0100     		.2byte	0x1
 2001 0106 50       		.byte	0x50
 2002 0107 11000000 		.4byte	.LVL26-1
 2003 010b 1C000000 		.4byte	.LFE9
 2004 010f 0400     		.2byte	0x4
 2005 0111 F3       		.byte	0xf3
 2006 0112 01       		.uleb128 0x1
 2007 0113 50       		.byte	0x50
 2008 0114 9F       		.byte	0x9f
 2009 0115 00000000 		.4byte	0
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 87


 2010 0119 00000000 		.4byte	0
 2011              	.LLST7:
 2012 011d 0A000000 		.4byte	.LVL25
 2013 0121 14000000 		.4byte	.LVL27
 2014 0125 0100     		.2byte	0x1
 2015 0127 54       		.byte	0x54
 2016 0128 14000000 		.4byte	.LVL27
 2017 012c 1C000000 		.4byte	.LFE9
 2018 0130 0100     		.2byte	0x1
 2019 0132 50       		.byte	0x50
 2020 0133 00000000 		.4byte	0
 2021 0137 00000000 		.4byte	0
 2022              	.LLST8:
 2023 013b 00000000 		.4byte	.LVL28
 2024 013f 07000000 		.4byte	.LVL29-1
 2025 0143 0100     		.2byte	0x1
 2026 0145 50       		.byte	0x50
 2027 0146 07000000 		.4byte	.LVL29-1
 2028 014a 16000000 		.4byte	.LVL30
 2029 014e 0100     		.2byte	0x1
 2030 0150 54       		.byte	0x54
 2031 0151 16000000 		.4byte	.LVL30
 2032 0155 24000000 		.4byte	.LFE10
 2033 0159 0400     		.2byte	0x4
 2034 015b F3       		.byte	0xf3
 2035 015c 01       		.uleb128 0x1
 2036 015d 50       		.byte	0x50
 2037 015e 9F       		.byte	0x9f
 2038 015f 00000000 		.4byte	0
 2039 0163 00000000 		.4byte	0
 2040              	.LLST9:
 2041 0167 00000000 		.4byte	.LVL31
 2042 016b 00000000 		.4byte	.LVL31
 2043 016f 0100     		.2byte	0x1
 2044 0171 50       		.byte	0x50
 2045 0172 00000000 		.4byte	.LVL31
 2046 0176 04000000 		.4byte	.LVL32
 2047 017a 0700     		.2byte	0x7
 2048 017c 70       		.byte	0x70
 2049 017d 00       		.sleb128 0
 2050 017e 0A       		.byte	0xa
 2051 017f FFFF     		.2byte	0xffff
 2052 0181 1A       		.byte	0x1a
 2053 0182 9F       		.byte	0x9f
 2054 0183 04000000 		.4byte	.LVL32
 2055 0187 14000000 		.4byte	.LFE14
 2056 018b 0800     		.2byte	0x8
 2057 018d F3       		.byte	0xf3
 2058 018e 01       		.uleb128 0x1
 2059 018f 50       		.byte	0x50
 2060 0190 0A       		.byte	0xa
 2061 0191 FFFF     		.2byte	0xffff
 2062 0193 1A       		.byte	0x1a
 2063 0194 9F       		.byte	0x9f
 2064 0195 00000000 		.4byte	0
 2065 0199 00000000 		.4byte	0
 2066              	.LLST10:
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 88


 2067 019d 00000000 		.4byte	.LVL33
 2068 01a1 08000000 		.4byte	.LVL34
 2069 01a5 0100     		.2byte	0x1
 2070 01a7 50       		.byte	0x50
 2071 01a8 08000000 		.4byte	.LVL34
 2072 01ac 10000000 		.4byte	.LVL35
 2073 01b0 0700     		.2byte	0x7
 2074 01b2 72       		.byte	0x72
 2075 01b3 00       		.sleb128 0
 2076 01b4 4E       		.byte	0x4e
 2077 01b5 3F       		.byte	0x3f
 2078 01b6 24       		.byte	0x24
 2079 01b7 1A       		.byte	0x1a
 2080 01b8 9F       		.byte	0x9f
 2081 01b9 10000000 		.4byte	.LVL35
 2082 01bd 20000000 		.4byte	.LFE17
 2083 01c1 0A00     		.2byte	0xa
 2084 01c3 F3       		.byte	0xf3
 2085 01c4 01       		.uleb128 0x1
 2086 01c5 50       		.byte	0x50
 2087 01c6 40       		.byte	0x40
 2088 01c7 24       		.byte	0x24
 2089 01c8 4E       		.byte	0x4e
 2090 01c9 3F       		.byte	0x3f
 2091 01ca 24       		.byte	0x24
 2092 01cb 1A       		.byte	0x1a
 2093 01cc 9F       		.byte	0x9f
 2094 01cd 00000000 		.4byte	0
 2095 01d1 00000000 		.4byte	0
 2096              	.LLST11:
 2097 01d5 00000000 		.4byte	.LVL36
 2098 01d9 08000000 		.4byte	.LVL38
 2099 01dd 0100     		.2byte	0x1
 2100 01df 50       		.byte	0x50
 2101 01e0 08000000 		.4byte	.LVL38
 2102 01e4 10000000 		.4byte	.LFE22
 2103 01e8 0500     		.2byte	0x5
 2104 01ea 03       		.byte	0x3
 2105 01eb 04000000 		.4byte	cySysWdtCallback
 2106 01ef 00000000 		.4byte	0
 2107 01f3 00000000 		.4byte	0
 2108              	.LLST12:
 2109 01f7 00000000 		.4byte	.LVL36
 2110 01fb 04000000 		.4byte	.LVL37
 2111 01ff 0200     		.2byte	0x2
 2112 0201 30       		.byte	0x30
 2113 0202 9F       		.byte	0x9f
 2114 0203 04000000 		.4byte	.LVL37
 2115 0207 10000000 		.4byte	.LFE22
 2116 020b 0100     		.2byte	0x1
 2117 020d 52       		.byte	0x52
 2118 020e 00000000 		.4byte	0
 2119 0212 00000000 		.4byte	0
 2120              		.section	.debug_aranges,"",%progbits
 2121 0000 DC000000 		.4byte	0xdc
 2122 0004 0200     		.2byte	0x2
 2123 0006 00000000 		.4byte	.Ldebug_info0
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 89


 2124 000a 04       		.byte	0x4
 2125 000b 00       		.byte	0
 2126 000c 0000     		.2byte	0
 2127 000e 0000     		.2byte	0
 2128 0010 00000000 		.4byte	.LFB0
 2129 0014 34000000 		.4byte	.LFE0-.LFB0
 2130 0018 00000000 		.4byte	.LFB1
 2131 001c 14000000 		.4byte	.LFE1-.LFB1
 2132 0020 00000000 		.4byte	.LFB2
 2133 0024 10000000 		.4byte	.LFE2-.LFB2
 2134 0028 00000000 		.4byte	.LFB3
 2135 002c 34000000 		.4byte	.LFE3-.LFB3
 2136 0030 00000000 		.4byte	.LFB4
 2137 0034 28000000 		.4byte	.LFE4-.LFB4
 2138 0038 00000000 		.4byte	.LFB5
 2139 003c E8000000 		.4byte	.LFE5-.LFB5
 2140 0040 00000000 		.4byte	.LFB6
 2141 0044 18000000 		.4byte	.LFE6-.LFB6
 2142 0048 00000000 		.4byte	.LFB8
 2143 004c 0C000000 		.4byte	.LFE8-.LFB8
 2144 0050 00000000 		.4byte	.LFB7
 2145 0054 1C000000 		.4byte	.LFE7-.LFB7
 2146 0058 00000000 		.4byte	.LFB9
 2147 005c 1C000000 		.4byte	.LFE9-.LFB9
 2148 0060 00000000 		.4byte	.LFB10
 2149 0064 24000000 		.4byte	.LFE10-.LFB10
 2150 0068 00000000 		.4byte	.LFB11
 2151 006c 18000000 		.4byte	.LFE11-.LFB11
 2152 0070 00000000 		.4byte	.LFB12
 2153 0074 0C000000 		.4byte	.LFE12-.LFB12
 2154 0078 00000000 		.4byte	.LFB13
 2155 007c 10000000 		.4byte	.LFE13-.LFB13
 2156 0080 00000000 		.4byte	.LFB14
 2157 0084 14000000 		.4byte	.LFE14-.LFB14
 2158 0088 00000000 		.4byte	.LFB15
 2159 008c 0C000000 		.4byte	.LFE15-.LFB15
 2160 0090 00000000 		.4byte	.LFB16
 2161 0094 0C000000 		.4byte	.LFE16-.LFB16
 2162 0098 00000000 		.4byte	.LFB17
 2163 009c 20000000 		.4byte	.LFE17-.LFB17
 2164 00a0 00000000 		.4byte	.LFB18
 2165 00a4 10000000 		.4byte	.LFE18-.LFB18
 2166 00a8 00000000 		.4byte	.LFB19
 2167 00ac 10000000 		.4byte	.LFE19-.LFB19
 2168 00b0 00000000 		.4byte	.LFB20
 2169 00b4 10000000 		.4byte	.LFE20-.LFB20
 2170 00b8 00000000 		.4byte	.LFB21
 2171 00bc 10000000 		.4byte	.LFE21-.LFB21
 2172 00c0 00000000 		.4byte	.LFB22
 2173 00c4 10000000 		.4byte	.LFE22-.LFB22
 2174 00c8 00000000 		.4byte	.LFB23
 2175 00cc 0C000000 		.4byte	.LFE23-.LFB23
 2176 00d0 00000000 		.4byte	.LFB24
 2177 00d4 18000000 		.4byte	.LFE24-.LFB24
 2178 00d8 00000000 		.4byte	0
 2179 00dc 00000000 		.4byte	0
 2180              		.section	.debug_ranges,"",%progbits
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 90


 2181              	.Ldebug_ranges0:
 2182 0000 00000000 		.4byte	.LFB0
 2183 0004 34000000 		.4byte	.LFE0
 2184 0008 00000000 		.4byte	.LFB1
 2185 000c 14000000 		.4byte	.LFE1
 2186 0010 00000000 		.4byte	.LFB2
 2187 0014 10000000 		.4byte	.LFE2
 2188 0018 00000000 		.4byte	.LFB3
 2189 001c 34000000 		.4byte	.LFE3
 2190 0020 00000000 		.4byte	.LFB4
 2191 0024 28000000 		.4byte	.LFE4
 2192 0028 00000000 		.4byte	.LFB5
 2193 002c E8000000 		.4byte	.LFE5
 2194 0030 00000000 		.4byte	.LFB6
 2195 0034 18000000 		.4byte	.LFE6
 2196 0038 00000000 		.4byte	.LFB8
 2197 003c 0C000000 		.4byte	.LFE8
 2198 0040 00000000 		.4byte	.LFB7
 2199 0044 1C000000 		.4byte	.LFE7
 2200 0048 00000000 		.4byte	.LFB9
 2201 004c 1C000000 		.4byte	.LFE9
 2202 0050 00000000 		.4byte	.LFB10
 2203 0054 24000000 		.4byte	.LFE10
 2204 0058 00000000 		.4byte	.LFB11
 2205 005c 18000000 		.4byte	.LFE11
 2206 0060 00000000 		.4byte	.LFB12
 2207 0064 0C000000 		.4byte	.LFE12
 2208 0068 00000000 		.4byte	.LFB13
 2209 006c 10000000 		.4byte	.LFE13
 2210 0070 00000000 		.4byte	.LFB14
 2211 0074 14000000 		.4byte	.LFE14
 2212 0078 00000000 		.4byte	.LFB15
 2213 007c 0C000000 		.4byte	.LFE15
 2214 0080 00000000 		.4byte	.LFB16
 2215 0084 0C000000 		.4byte	.LFE16
 2216 0088 00000000 		.4byte	.LFB17
 2217 008c 20000000 		.4byte	.LFE17
 2218 0090 00000000 		.4byte	.LFB18
 2219 0094 10000000 		.4byte	.LFE18
 2220 0098 00000000 		.4byte	.LFB19
 2221 009c 10000000 		.4byte	.LFE19
 2222 00a0 00000000 		.4byte	.LFB20
 2223 00a4 10000000 		.4byte	.LFE20
 2224 00a8 00000000 		.4byte	.LFB21
 2225 00ac 10000000 		.4byte	.LFE21
 2226 00b0 00000000 		.4byte	.LFB22
 2227 00b4 10000000 		.4byte	.LFE22
 2228 00b8 00000000 		.4byte	.LFB23
 2229 00bc 0C000000 		.4byte	.LFE23
 2230 00c0 00000000 		.4byte	.LFB24
 2231 00c4 18000000 		.4byte	.LFE24
 2232 00c8 00000000 		.4byte	0
 2233 00cc 00000000 		.4byte	0
 2234              		.section	.debug_line,"",%progbits
 2235              	.Ldebug_line0:
 2236 0000 E1020000 		.section	.debug_str,"MS",%progbits,1
 2236      02005C00 
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 91


 2236      00000201 
 2236      FB0E0D00 
 2236      01010101 
 2237              	.LASF38:
 2238 0000 43795379 		.ascii	"CySysWdtGetEnabledStatus\000"
 2238      73576474 
 2238      47657445 
 2238      6E61626C 
 2238      65645374 
 2239              	.LASF13:
 2240 0019 63797374 		.ascii	"cystatus\000"
 2240      61747573 
 2240      00
 2241              	.LASF14:
 2242 0022 72656733 		.ascii	"reg32\000"
 2242      3200
 2243              	.LASF41:
 2244 0028 43795379 		.ascii	"CySysWdtSetMatch\000"
 2244      73576474 
 2244      5365744D 
 2244      61746368 
 2244      00
 2245              	.LASF34:
 2246 0039 706F7765 		.ascii	"powerModeStatus\000"
 2246      724D6F64 
 2246      65537461 
 2246      74757300 
 2247              	.LASF61:
 2248 0049 63796465 		.ascii	"cydelayFreqHz\000"
 2248      6C617946 
 2248      72657148 
 2248      7A00
 2249              	.LASF24:
 2250 0057 696C6F43 		.ascii	"iloCompensatedCycles\000"
 2250      6F6D7065 
 2250      6E736174 
 2250      65644379 
 2250      636C6573 
 2251              	.LASF58:
 2252 006c 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLFClk.c\000"
 2252      72617465 
 2252      645F536F 
 2252      75726365 
 2252      5C50536F 
 2253              	.LASF36:
 2254 008d 636C6F63 		.ascii	"clockSel\000"
 2254      6B53656C 
 2254      00
 2255              	.LASF18:
 2256 0096 43795379 		.ascii	"CySysClkIloStart\000"
 2256      73436C6B 
 2256      496C6F53 
 2256      74617274 
 2256      00
 2257              	.LASF57:
 2258 00a7 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2258      43313120 
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 92


 2258      352E342E 
 2258      31203230 
 2258      31363036 
 2259 00da 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 2259      20726576 
 2259      6973696F 
 2259      6E203233 
 2259      37373135 
 2260 010d 67202D4F 		.ascii	"g -Os -ffunction-sections -ffat-lto-objects\000"
 2260      73202D66 
 2260      66756E63 
 2260      74696F6E 
 2260      2D736563 
 2261              	.LASF27:
 2262 0139 63686563 		.ascii	"checkStatus\000"
 2262      6B537461 
 2262      74757300 
 2263              	.LASF53:
 2264 0145 70726576 		.ascii	"prevCallback\000"
 2264      43616C6C 
 2264      6261636B 
 2264      00
 2265              	.LASF48:
 2266 0152 43795379 		.ascii	"CySysWdtClearInterrupt\000"
 2266      73576474 
 2266      436C6561 
 2266      72496E74 
 2266      65727275 
 2267              	.LASF25:
 2268 0169 64657369 		.ascii	"desiredDelayInCounts\000"
 2268      72656444 
 2268      656C6179 
 2268      496E436F 
 2268      756E7473 
 2269              	.LASF56:
 2270 017e 63795379 		.ascii	"cySysWdtCallback\000"
 2270      73576474 
 2270      43616C6C 
 2270      6261636B 
 2270      00
 2271              	.LASF9:
 2272 018f 666C6F61 		.ascii	"float\000"
 2272      7400
 2273              	.LASF26:
 2274 0195 636F6D70 		.ascii	"compensateRunningStatus\000"
 2274      656E7361 
 2274      74655275 
 2274      6E6E696E 
 2274      67537461 
 2275              	.LASF1:
 2276 01ad 756E7369 		.ascii	"unsigned char\000"
 2276      676E6564 
 2276      20636861 
 2276      7200
 2277              	.LASF42:
 2278 01bb 6D617463 		.ascii	"match\000"
 2278      6800
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 93


 2279              	.LASF15:
 2280 01c1 63795764 		.ascii	"cyWdtCallback\000"
 2280      7443616C 
 2280      6C626163 
 2280      6B00
 2281              	.LASF19:
 2282 01cf 43795379 		.ascii	"CySysClkIloStop\000"
 2282      73436C6B 
 2282      496C6F53 
 2282      746F7000 
 2283              	.LASF32:
 2284 01df 43795379 		.ascii	"CySysClkWcoSetPowerMode\000"
 2284      73436C6B 
 2284      57636F53 
 2284      6574506F 
 2284      7765724D 
 2285              	.LASF5:
 2286 01f7 6C6F6E67 		.ascii	"long unsigned int\000"
 2286      20756E73 
 2286      69676E65 
 2286      6420696E 
 2286      7400
 2287              	.LASF46:
 2288 0209 62697473 		.ascii	"bitsNum\000"
 2288      4E756D00 
 2289              	.LASF3:
 2290 0211 73686F72 		.ascii	"short unsigned int\000"
 2290      7420756E 
 2290      7369676E 
 2290      65642069 
 2290      6E7400
 2291              	.LASF29:
 2292 0224 43795379 		.ascii	"CySysClkWcoStart\000"
 2292      73436C6B 
 2292      57636F53 
 2292      74617274 
 2292      00
 2293              	.LASF21:
 2294 0235 43795379 		.ascii	"CySysClkIloStopMeasurement\000"
 2294      73436C6B 
 2294      496C6F53 
 2294      746F704D 
 2294      65617375 
 2295              	.LASF10:
 2296 0250 646F7562 		.ascii	"double\000"
 2296      6C6500
 2297              	.LASF40:
 2298 0257 43795379 		.ascii	"CySysWdtDisable\000"
 2298      73576474 
 2298      44697361 
 2298      626C6500 
 2299              	.LASF16:
 2300 0267 6C6F6E67 		.ascii	"long double\000"
 2300      20646F75 
 2300      626C6500 
 2301              	.LASF20:
 2302 0273 43795379 		.ascii	"CySysClkIloStartMeasurement\000"
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 94


 2302      73436C6B 
 2302      496C6F53 
 2302      74617274 
 2302      4D656173 
 2303              	.LASF39:
 2304 028f 43795379 		.ascii	"CySysWdtEnable\000"
 2304      73576474 
 2304      456E6162 
 2304      6C6500
 2305              	.LASF59:
 2306 029e 433A5C55 		.ascii	"C:\\Users\\PC\\Documents\\PSoC Creator\\yellowChip\\"
 2306      73657273 
 2306      5C50435C 
 2306      446F6375 
 2306      6D656E74 
 2307 02cc 626F6F74 		.ascii	"bootloader.cydsn\000"
 2307      6C6F6164 
 2307      65722E63 
 2307      7964736E 
 2307      00
 2308              	.LASF44:
 2309 02dd 43795379 		.ascii	"CySysWdtGetCount\000"
 2309      73576474 
 2309      47657443 
 2309      6F756E74 
 2309      00
 2310              	.LASF12:
 2311 02ee 75696E74 		.ascii	"uint32\000"
 2311      333200
 2312              	.LASF60:
 2313 02f5 43795379 		.ascii	"CySysClkWcoSetHighPowerMode\000"
 2313      73436C6B 
 2313      57636F53 
 2313      65744869 
 2313      6768506F 
 2314              	.LASF8:
 2315 0311 756E7369 		.ascii	"unsigned int\000"
 2315      676E6564 
 2315      20696E74 
 2315      00
 2316              	.LASF30:
 2317 031e 43795379 		.ascii	"CySysClkWcoStop\000"
 2317      73436C6B 
 2317      57636F53 
 2317      746F7000 
 2318              	.LASF7:
 2319 032e 6C6F6E67 		.ascii	"long long unsigned int\000"
 2319      206C6F6E 
 2319      6720756E 
 2319      7369676E 
 2319      65642069 
 2320              	.LASF50:
 2321 0345 43795379 		.ascii	"CySysWdtUnmaskInterrupt\000"
 2321      73576474 
 2321      556E6D61 
 2321      736B496E 
 2321      74657272 
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 95


 2322              	.LASF33:
 2323 035d 6D6F6465 		.ascii	"mode\000"
 2323      00
 2324              	.LASF23:
 2325 0362 636F6D70 		.ascii	"compensatedCycles\000"
 2325      656E7361 
 2325      74656443 
 2325      79636C65 
 2325      7300
 2326              	.LASF51:
 2327 0374 43795379 		.ascii	"CySysWdtSetInterruptCallback\000"
 2327      73576474 
 2327      53657449 
 2327      6E746572 
 2327      72757074 
 2328              	.LASF49:
 2329 0391 43795379 		.ascii	"CySysWdtMaskInterrupt\000"
 2329      73576474 
 2329      4D61736B 
 2329      496E7465 
 2329      72727570 
 2330              	.LASF17:
 2331 03a7 73697A65 		.ascii	"sizetype\000"
 2331      74797065 
 2331      00
 2332              	.LASF55:
 2333 03b0 43795379 		.ascii	"CySysWdtIsr\000"
 2333      73576474 
 2333      49737200 
 2334              	.LASF47:
 2335 03bc 43795379 		.ascii	"CySysWdtGetIgnoreBits\000"
 2335      73576474 
 2335      47657449 
 2335      676E6F72 
 2335      65426974 
 2336              	.LASF6:
 2337 03d2 6C6F6E67 		.ascii	"long long int\000"
 2337      206C6F6E 
 2337      6720696E 
 2337      7400
 2338              	.LASF22:
 2339 03e0 64657369 		.ascii	"desiredDelay\000"
 2339      72656444 
 2339      656C6179 
 2339      00
 2340              	.LASF11:
 2341 03ed 63686172 		.ascii	"char\000"
 2341      00
 2342              	.LASF43:
 2343 03f2 43795379 		.ascii	"CySysWdtGetMatch\000"
 2343      73576474 
 2343      4765744D 
 2343      61746368 
 2343      00
 2344              	.LASF45:
 2345 0403 43795379 		.ascii	"CySysWdtSetIgnoreBits\000"
 2345      73576474 
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccm1NqBt.s 			page 96


 2345      53657449 
 2345      676E6F72 
 2345      65426974 
 2346              	.LASF2:
 2347 0419 73686F72 		.ascii	"short int\000"
 2347      7420696E 
 2347      7400
 2348              	.LASF37:
 2349 0423 43795379 		.ascii	"CySysClkWcoEnabled\000"
 2349      73436C6B 
 2349      57636F45 
 2349      6E61626C 
 2349      656400
 2350              	.LASF35:
 2351 0436 43795379 		.ascii	"CySysClkWcoClockOutSelect\000"
 2351      73436C6B 
 2351      57636F43 
 2351      6C6F636B 
 2351      4F757453 
 2352              	.LASF4:
 2353 0450 6C6F6E67 		.ascii	"long int\000"
 2353      20696E74 
 2353      00
 2354              	.LASF28:
 2355 0459 72657475 		.ascii	"returnStatus\000"
 2355      726E5374 
 2355      61747573 
 2355      00
 2356              	.LASF0:
 2357 0466 7369676E 		.ascii	"signed char\000"
 2357      65642063 
 2357      68617200 
 2358              	.LASF54:
 2359 0472 43795379 		.ascii	"CySysWdtGetInterruptCallback\000"
 2359      73576474 
 2359      47657449 
 2359      6E746572 
 2359      72757074 
 2360              	.LASF31:
 2361 048f 43795379 		.ascii	"CySysClkIloCompensate\000"
 2361      73436C6B 
 2361      496C6F43 
 2361      6F6D7065 
 2361      6E736174 
 2362              	.LASF52:
 2363 04a5 66756E63 		.ascii	"function\000"
 2363      74696F6E 
 2363      00
 2364              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
