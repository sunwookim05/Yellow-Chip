ARM GAS  C:\Users\PC\AppData\Local\Temp\ccCKGB6e.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"mUART_UART.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.mUART_UartInit,"ax",%progbits
  20              		.align	1
  21              		.global	mUART_UartInit
  22              		.code	16
  23              		.thumb_func
  24              		.type	mUART_UartInit, %function
  25              	mUART_UartInit:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC4\\mUART_UART.c"
   1:Generated_Source\PSoC4/mUART_UART.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/mUART_UART.c **** * \file mUART_UART.c
   3:Generated_Source\PSoC4/mUART_UART.c **** * \version 4.0
   4:Generated_Source\PSoC4/mUART_UART.c **** *
   5:Generated_Source\PSoC4/mUART_UART.c **** * \brief
   6:Generated_Source\PSoC4/mUART_UART.c **** *  This file provides the source code to the API for the SCB Component in
   7:Generated_Source\PSoC4/mUART_UART.c **** *  UART mode.
   8:Generated_Source\PSoC4/mUART_UART.c **** *
   9:Generated_Source\PSoC4/mUART_UART.c **** * Note:
  10:Generated_Source\PSoC4/mUART_UART.c **** *
  11:Generated_Source\PSoC4/mUART_UART.c **** *******************************************************************************
  12:Generated_Source\PSoC4/mUART_UART.c **** * \copyright
  13:Generated_Source\PSoC4/mUART_UART.c **** * Copyright 2013-2017, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/mUART_UART.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/mUART_UART.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/mUART_UART.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/mUART_UART.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/mUART_UART.c **** 
  19:Generated_Source\PSoC4/mUART_UART.c **** #include "mUART_PVT.h"
  20:Generated_Source\PSoC4/mUART_UART.c **** #include "mUART_SPI_UART_PVT.h"
  21:Generated_Source\PSoC4/mUART_UART.c **** #include "cyapicallbacks.h"
  22:Generated_Source\PSoC4/mUART_UART.c **** 
  23:Generated_Source\PSoC4/mUART_UART.c **** #if (mUART_UART_WAKE_ENABLE_CONST && mUART_UART_RX_WAKEUP_IRQ)
  24:Generated_Source\PSoC4/mUART_UART.c ****     /**
  25:Generated_Source\PSoC4/mUART_UART.c ****     * \addtogroup group_globals
  26:Generated_Source\PSoC4/mUART_UART.c ****     * \{
  27:Generated_Source\PSoC4/mUART_UART.c ****     */
  28:Generated_Source\PSoC4/mUART_UART.c ****     /** This global variable determines whether to enable Skip Start
  29:Generated_Source\PSoC4/mUART_UART.c ****     * functionality when mUART_Sleep() function is called:
  30:Generated_Source\PSoC4/mUART_UART.c ****     * 0 – disable, other values – enable. Default value is 1.
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccCKGB6e.s 			page 2


  31:Generated_Source\PSoC4/mUART_UART.c ****     * It is only available when Enable wakeup from Deep Sleep Mode is enabled.
  32:Generated_Source\PSoC4/mUART_UART.c ****     */
  33:Generated_Source\PSoC4/mUART_UART.c ****     uint8 mUART_skipStart = 1u;
  34:Generated_Source\PSoC4/mUART_UART.c ****     /** \} globals */
  35:Generated_Source\PSoC4/mUART_UART.c **** #endif /* (mUART_UART_WAKE_ENABLE_CONST && mUART_UART_RX_WAKEUP_IRQ) */
  36:Generated_Source\PSoC4/mUART_UART.c **** 
  37:Generated_Source\PSoC4/mUART_UART.c **** #if(mUART_SCB_MODE_UNCONFIG_CONST_CFG)
  38:Generated_Source\PSoC4/mUART_UART.c **** 
  39:Generated_Source\PSoC4/mUART_UART.c ****     /***************************************
  40:Generated_Source\PSoC4/mUART_UART.c ****     *  Configuration Structure Initialization
  41:Generated_Source\PSoC4/mUART_UART.c ****     ***************************************/
  42:Generated_Source\PSoC4/mUART_UART.c **** 
  43:Generated_Source\PSoC4/mUART_UART.c ****     const mUART_UART_INIT_STRUCT mUART_configUart =
  44:Generated_Source\PSoC4/mUART_UART.c ****     {
  45:Generated_Source\PSoC4/mUART_UART.c ****         mUART_UART_SUB_MODE,
  46:Generated_Source\PSoC4/mUART_UART.c ****         mUART_UART_DIRECTION,
  47:Generated_Source\PSoC4/mUART_UART.c ****         mUART_UART_DATA_BITS_NUM,
  48:Generated_Source\PSoC4/mUART_UART.c ****         mUART_UART_PARITY_TYPE,
  49:Generated_Source\PSoC4/mUART_UART.c ****         mUART_UART_STOP_BITS_NUM,
  50:Generated_Source\PSoC4/mUART_UART.c ****         mUART_UART_OVS_FACTOR,
  51:Generated_Source\PSoC4/mUART_UART.c ****         mUART_UART_IRDA_LOW_POWER,
  52:Generated_Source\PSoC4/mUART_UART.c ****         mUART_UART_MEDIAN_FILTER_ENABLE,
  53:Generated_Source\PSoC4/mUART_UART.c ****         mUART_UART_RETRY_ON_NACK,
  54:Generated_Source\PSoC4/mUART_UART.c ****         mUART_UART_IRDA_POLARITY,
  55:Generated_Source\PSoC4/mUART_UART.c ****         mUART_UART_DROP_ON_PARITY_ERR,
  56:Generated_Source\PSoC4/mUART_UART.c ****         mUART_UART_DROP_ON_FRAME_ERR,
  57:Generated_Source\PSoC4/mUART_UART.c ****         mUART_UART_WAKE_ENABLE,
  58:Generated_Source\PSoC4/mUART_UART.c ****         0u,
  59:Generated_Source\PSoC4/mUART_UART.c ****         NULL,
  60:Generated_Source\PSoC4/mUART_UART.c ****         0u,
  61:Generated_Source\PSoC4/mUART_UART.c ****         NULL,
  62:Generated_Source\PSoC4/mUART_UART.c ****         mUART_UART_MP_MODE_ENABLE,
  63:Generated_Source\PSoC4/mUART_UART.c ****         mUART_UART_MP_ACCEPT_ADDRESS,
  64:Generated_Source\PSoC4/mUART_UART.c ****         mUART_UART_MP_RX_ADDRESS,
  65:Generated_Source\PSoC4/mUART_UART.c ****         mUART_UART_MP_RX_ADDRESS_MASK,
  66:Generated_Source\PSoC4/mUART_UART.c ****         (uint32) mUART_SCB_IRQ_INTERNAL,
  67:Generated_Source\PSoC4/mUART_UART.c ****         mUART_UART_INTR_RX_MASK,
  68:Generated_Source\PSoC4/mUART_UART.c ****         mUART_UART_RX_TRIGGER_LEVEL,
  69:Generated_Source\PSoC4/mUART_UART.c ****         mUART_UART_INTR_TX_MASK,
  70:Generated_Source\PSoC4/mUART_UART.c ****         mUART_UART_TX_TRIGGER_LEVEL,
  71:Generated_Source\PSoC4/mUART_UART.c ****         (uint8) mUART_UART_BYTE_MODE_ENABLE,
  72:Generated_Source\PSoC4/mUART_UART.c ****         (uint8) mUART_UART_CTS_ENABLE,
  73:Generated_Source\PSoC4/mUART_UART.c ****         (uint8) mUART_UART_CTS_POLARITY,
  74:Generated_Source\PSoC4/mUART_UART.c ****         (uint8) mUART_UART_RTS_POLARITY,
  75:Generated_Source\PSoC4/mUART_UART.c ****         (uint8) mUART_UART_RTS_FIFO_LEVEL,
  76:Generated_Source\PSoC4/mUART_UART.c ****         (uint8) mUART_UART_RX_BREAK_WIDTH
  77:Generated_Source\PSoC4/mUART_UART.c ****     };
  78:Generated_Source\PSoC4/mUART_UART.c **** 
  79:Generated_Source\PSoC4/mUART_UART.c **** 
  80:Generated_Source\PSoC4/mUART_UART.c ****     /*******************************************************************************
  81:Generated_Source\PSoC4/mUART_UART.c ****     * Function Name: mUART_UartInit
  82:Generated_Source\PSoC4/mUART_UART.c ****     ****************************************************************************//**
  83:Generated_Source\PSoC4/mUART_UART.c ****     *
  84:Generated_Source\PSoC4/mUART_UART.c ****     *  Configures the mUART for UART operation.
  85:Generated_Source\PSoC4/mUART_UART.c ****     *
  86:Generated_Source\PSoC4/mUART_UART.c ****     *  This function is intended specifically to be used when the mUART
  87:Generated_Source\PSoC4/mUART_UART.c ****     *  configuration is set to “Unconfigured mUART” in the customizer.
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccCKGB6e.s 			page 3


  88:Generated_Source\PSoC4/mUART_UART.c ****     *  After initializing the mUART in UART mode using this function,
  89:Generated_Source\PSoC4/mUART_UART.c ****     *  the component can be enabled using the mUART_Start() or
  90:Generated_Source\PSoC4/mUART_UART.c ****     * mUART_Enable() function.
  91:Generated_Source\PSoC4/mUART_UART.c ****     *  This function uses a pointer to a structure that provides the configuration
  92:Generated_Source\PSoC4/mUART_UART.c ****     *  settings. This structure contains the same information that would otherwise
  93:Generated_Source\PSoC4/mUART_UART.c ****     *  be provided by the customizer settings.
  94:Generated_Source\PSoC4/mUART_UART.c ****     *
  95:Generated_Source\PSoC4/mUART_UART.c ****     *  \param config: pointer to a structure that contains the following list of
  96:Generated_Source\PSoC4/mUART_UART.c ****     *   fields. These fields match the selections available in the customizer.
  97:Generated_Source\PSoC4/mUART_UART.c ****     *   Refer to the customizer for further description of the settings.
  98:Generated_Source\PSoC4/mUART_UART.c ****     *
  99:Generated_Source\PSoC4/mUART_UART.c ****     *******************************************************************************/
 100:Generated_Source\PSoC4/mUART_UART.c ****     void mUART_UartInit(const mUART_UART_INIT_STRUCT *config)
 101:Generated_Source\PSoC4/mUART_UART.c ****     {
 102:Generated_Source\PSoC4/mUART_UART.c ****         uint32 pinsConfig;
 103:Generated_Source\PSoC4/mUART_UART.c **** 
 104:Generated_Source\PSoC4/mUART_UART.c ****         if (NULL == config)
 105:Generated_Source\PSoC4/mUART_UART.c ****         {
 106:Generated_Source\PSoC4/mUART_UART.c ****             CYASSERT(0u != 0u); /* Halt execution due to bad function parameter */
 107:Generated_Source\PSoC4/mUART_UART.c ****         }
 108:Generated_Source\PSoC4/mUART_UART.c ****         else
 109:Generated_Source\PSoC4/mUART_UART.c ****         {
 110:Generated_Source\PSoC4/mUART_UART.c ****             /* Get direction to configure UART pins: TX, RX or TX+RX */
 111:Generated_Source\PSoC4/mUART_UART.c ****             pinsConfig  = config->direction;
 112:Generated_Source\PSoC4/mUART_UART.c **** 
 113:Generated_Source\PSoC4/mUART_UART.c ****         #if !(mUART_CY_SCBIP_V0 || mUART_CY_SCBIP_V1)
 114:Generated_Source\PSoC4/mUART_UART.c ****             /* Add RTS and CTS pins to configure */
 115:Generated_Source\PSoC4/mUART_UART.c ****             pinsConfig |= (0u != config->rtsRxFifoLevel) ? (mUART_UART_RTS_PIN_ENABLE) : (0u);
 116:Generated_Source\PSoC4/mUART_UART.c ****             pinsConfig |= (0u != config->enableCts)      ? (mUART_UART_CTS_PIN_ENABLE) : (0u);
 117:Generated_Source\PSoC4/mUART_UART.c ****         #endif /* !(mUART_CY_SCBIP_V0 || mUART_CY_SCBIP_V1) */
 118:Generated_Source\PSoC4/mUART_UART.c **** 
 119:Generated_Source\PSoC4/mUART_UART.c ****             /* Configure pins */
 120:Generated_Source\PSoC4/mUART_UART.c ****             mUART_SetPins(mUART_SCB_MODE_UART, config->mode, pinsConfig);
 121:Generated_Source\PSoC4/mUART_UART.c **** 
 122:Generated_Source\PSoC4/mUART_UART.c ****             /* Store internal configuration */
 123:Generated_Source\PSoC4/mUART_UART.c ****             mUART_scbMode       = (uint8) mUART_SCB_MODE_UART;
 124:Generated_Source\PSoC4/mUART_UART.c ****             mUART_scbEnableWake = (uint8) config->enableWake;
 125:Generated_Source\PSoC4/mUART_UART.c ****             mUART_scbEnableIntr = (uint8) config->enableInterrupt;
 126:Generated_Source\PSoC4/mUART_UART.c **** 
 127:Generated_Source\PSoC4/mUART_UART.c ****             /* Set RX direction internal variables */
 128:Generated_Source\PSoC4/mUART_UART.c ****             mUART_rxBuffer      =         config->rxBuffer;
 129:Generated_Source\PSoC4/mUART_UART.c ****             mUART_rxDataBits    = (uint8) config->dataBits;
 130:Generated_Source\PSoC4/mUART_UART.c ****             mUART_rxBufferSize  =         config->rxBufferSize;
 131:Generated_Source\PSoC4/mUART_UART.c **** 
 132:Generated_Source\PSoC4/mUART_UART.c ****             /* Set TX direction internal variables */
 133:Generated_Source\PSoC4/mUART_UART.c ****             mUART_txBuffer      =         config->txBuffer;
 134:Generated_Source\PSoC4/mUART_UART.c ****             mUART_txDataBits    = (uint8) config->dataBits;
 135:Generated_Source\PSoC4/mUART_UART.c ****             mUART_txBufferSize  =         config->txBufferSize;
 136:Generated_Source\PSoC4/mUART_UART.c **** 
 137:Generated_Source\PSoC4/mUART_UART.c ****             /* Configure UART interface */
 138:Generated_Source\PSoC4/mUART_UART.c ****             if(mUART_UART_MODE_IRDA == config->mode)
 139:Generated_Source\PSoC4/mUART_UART.c ****             {
 140:Generated_Source\PSoC4/mUART_UART.c ****                 /* OVS settings: IrDA */
 141:Generated_Source\PSoC4/mUART_UART.c ****                 mUART_CTRL_REG  = ((0u != config->enableIrdaLowPower) ?
 142:Generated_Source\PSoC4/mUART_UART.c ****                                                 (mUART_UART_GET_CTRL_OVS_IRDA_LP(config->oversample
 143:Generated_Source\PSoC4/mUART_UART.c ****                                                 (mUART_CTRL_OVS_IRDA_OVS16));
 144:Generated_Source\PSoC4/mUART_UART.c ****             }
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccCKGB6e.s 			page 4


 145:Generated_Source\PSoC4/mUART_UART.c ****             else
 146:Generated_Source\PSoC4/mUART_UART.c ****             {
 147:Generated_Source\PSoC4/mUART_UART.c ****                 /* OVS settings: UART and SmartCard */
 148:Generated_Source\PSoC4/mUART_UART.c ****                 mUART_CTRL_REG  = mUART_GET_CTRL_OVS(config->oversample);
 149:Generated_Source\PSoC4/mUART_UART.c ****             }
 150:Generated_Source\PSoC4/mUART_UART.c **** 
 151:Generated_Source\PSoC4/mUART_UART.c ****             mUART_CTRL_REG     |= mUART_GET_CTRL_BYTE_MODE  (config->enableByteMode)      |
 152:Generated_Source\PSoC4/mUART_UART.c ****                                              mUART_GET_CTRL_ADDR_ACCEPT(config->multiprocAcceptAddr
 153:Generated_Source\PSoC4/mUART_UART.c ****                                              mUART_CTRL_UART;
 154:Generated_Source\PSoC4/mUART_UART.c **** 
 155:Generated_Source\PSoC4/mUART_UART.c ****             /* Configure sub-mode: UART, SmartCard or IrDA */
 156:Generated_Source\PSoC4/mUART_UART.c ****             mUART_UART_CTRL_REG = mUART_GET_UART_CTRL_MODE(config->mode);
 157:Generated_Source\PSoC4/mUART_UART.c **** 
 158:Generated_Source\PSoC4/mUART_UART.c ****             /* Configure RX direction */
 159:Generated_Source\PSoC4/mUART_UART.c ****             mUART_UART_RX_CTRL_REG = mUART_GET_UART_RX_CTRL_MODE(config->stopBits)              |
 160:Generated_Source\PSoC4/mUART_UART.c ****                                         mUART_GET_UART_RX_CTRL_POLARITY(config->enableInvertedRx)  
 161:Generated_Source\PSoC4/mUART_UART.c ****                                         mUART_GET_UART_RX_CTRL_MP_MODE(config->enableMultiproc)    
 162:Generated_Source\PSoC4/mUART_UART.c ****                                         mUART_GET_UART_RX_CTRL_DROP_ON_PARITY_ERR(config->dropOnPar
 163:Generated_Source\PSoC4/mUART_UART.c ****                                         mUART_GET_UART_RX_CTRL_DROP_ON_FRAME_ERR(config->dropOnFram
 164:Generated_Source\PSoC4/mUART_UART.c ****                                         mUART_GET_UART_RX_CTRL_BREAK_WIDTH(config->breakWidth);
 165:Generated_Source\PSoC4/mUART_UART.c **** 
 166:Generated_Source\PSoC4/mUART_UART.c ****             if(mUART_UART_PARITY_NONE != config->parity)
 167:Generated_Source\PSoC4/mUART_UART.c ****             {
 168:Generated_Source\PSoC4/mUART_UART.c ****                mUART_UART_RX_CTRL_REG |= mUART_GET_UART_RX_CTRL_PARITY(config->parity) |
 169:Generated_Source\PSoC4/mUART_UART.c ****                                                     mUART_UART_RX_CTRL_PARITY_ENABLED;
 170:Generated_Source\PSoC4/mUART_UART.c ****             }
 171:Generated_Source\PSoC4/mUART_UART.c **** 
 172:Generated_Source\PSoC4/mUART_UART.c ****             mUART_RX_CTRL_REG      = mUART_GET_RX_CTRL_DATA_WIDTH(config->dataBits)       |
 173:Generated_Source\PSoC4/mUART_UART.c ****                                                 mUART_GET_RX_CTRL_MEDIAN(config->enableMedianFilter
 174:Generated_Source\PSoC4/mUART_UART.c ****                                                 mUART_GET_UART_RX_CTRL_ENABLED(config->direction);
 175:Generated_Source\PSoC4/mUART_UART.c **** 
 176:Generated_Source\PSoC4/mUART_UART.c ****             mUART_RX_FIFO_CTRL_REG = mUART_GET_RX_FIFO_CTRL_TRIGGER_LEVEL(config->rxTriggerLevel);
 177:Generated_Source\PSoC4/mUART_UART.c **** 
 178:Generated_Source\PSoC4/mUART_UART.c ****             /* Configure MP address */
 179:Generated_Source\PSoC4/mUART_UART.c ****             mUART_RX_MATCH_REG     = mUART_GET_RX_MATCH_ADDR(config->multiprocAddr) |
 180:Generated_Source\PSoC4/mUART_UART.c ****                                                 mUART_GET_RX_MATCH_MASK(config->multiprocAddrMask);
 181:Generated_Source\PSoC4/mUART_UART.c **** 
 182:Generated_Source\PSoC4/mUART_UART.c ****             /* Configure RX direction */
 183:Generated_Source\PSoC4/mUART_UART.c ****             mUART_UART_TX_CTRL_REG = mUART_GET_UART_TX_CTRL_MODE(config->stopBits) |
 184:Generated_Source\PSoC4/mUART_UART.c ****                                                 mUART_GET_UART_TX_CTRL_RETRY_NACK(config->enableRet
 185:Generated_Source\PSoC4/mUART_UART.c **** 
 186:Generated_Source\PSoC4/mUART_UART.c ****             if(mUART_UART_PARITY_NONE != config->parity)
 187:Generated_Source\PSoC4/mUART_UART.c ****             {
 188:Generated_Source\PSoC4/mUART_UART.c ****                mUART_UART_TX_CTRL_REG |= mUART_GET_UART_TX_CTRL_PARITY(config->parity) |
 189:Generated_Source\PSoC4/mUART_UART.c ****                                                     mUART_UART_TX_CTRL_PARITY_ENABLED;
 190:Generated_Source\PSoC4/mUART_UART.c ****             }
 191:Generated_Source\PSoC4/mUART_UART.c **** 
 192:Generated_Source\PSoC4/mUART_UART.c ****             mUART_TX_CTRL_REG      = mUART_GET_TX_CTRL_DATA_WIDTH(config->dataBits)    |
 193:Generated_Source\PSoC4/mUART_UART.c ****                                                 mUART_GET_UART_TX_CTRL_ENABLED(config->direction);
 194:Generated_Source\PSoC4/mUART_UART.c **** 
 195:Generated_Source\PSoC4/mUART_UART.c ****             mUART_TX_FIFO_CTRL_REG = mUART_GET_TX_FIFO_CTRL_TRIGGER_LEVEL(config->txTriggerLevel);
 196:Generated_Source\PSoC4/mUART_UART.c **** 
 197:Generated_Source\PSoC4/mUART_UART.c ****         #if !(mUART_CY_SCBIP_V0 || mUART_CY_SCBIP_V1)
 198:Generated_Source\PSoC4/mUART_UART.c ****             mUART_UART_FLOW_CTRL_REG = mUART_GET_UART_FLOW_CTRL_CTS_ENABLE(config->enableCts) | \
 199:Generated_Source\PSoC4/mUART_UART.c ****                                             mUART_GET_UART_FLOW_CTRL_CTS_POLARITY (config->ctsPolar
 200:Generated_Source\PSoC4/mUART_UART.c ****                                             mUART_GET_UART_FLOW_CTRL_RTS_POLARITY (config->rtsPolar
 201:Generated_Source\PSoC4/mUART_UART.c ****                                             mUART_GET_UART_FLOW_CTRL_TRIGGER_LEVEL(config->rtsRxFif
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccCKGB6e.s 			page 5


 202:Generated_Source\PSoC4/mUART_UART.c ****         #endif /* !(mUART_CY_SCBIP_V0 || mUART_CY_SCBIP_V1) */
 203:Generated_Source\PSoC4/mUART_UART.c **** 
 204:Generated_Source\PSoC4/mUART_UART.c ****             /* Configure interrupt with UART handler but do not enable it */
 205:Generated_Source\PSoC4/mUART_UART.c ****             CyIntDisable    (mUART_ISR_NUMBER);
 206:Generated_Source\PSoC4/mUART_UART.c ****             CyIntSetPriority(mUART_ISR_NUMBER, mUART_ISR_PRIORITY);
 207:Generated_Source\PSoC4/mUART_UART.c ****             (void) CyIntSetVector(mUART_ISR_NUMBER, &mUART_SPI_UART_ISR);
 208:Generated_Source\PSoC4/mUART_UART.c **** 
 209:Generated_Source\PSoC4/mUART_UART.c ****             /* Configure WAKE interrupt */
 210:Generated_Source\PSoC4/mUART_UART.c ****         #if(mUART_UART_RX_WAKEUP_IRQ)
 211:Generated_Source\PSoC4/mUART_UART.c ****             CyIntDisable    (mUART_RX_WAKE_ISR_NUMBER);
 212:Generated_Source\PSoC4/mUART_UART.c ****             CyIntSetPriority(mUART_RX_WAKE_ISR_NUMBER, mUART_RX_WAKE_ISR_PRIORITY);
 213:Generated_Source\PSoC4/mUART_UART.c ****             (void) CyIntSetVector(mUART_RX_WAKE_ISR_NUMBER, &mUART_UART_WAKEUP_ISR);
 214:Generated_Source\PSoC4/mUART_UART.c ****         #endif /* (mUART_UART_RX_WAKEUP_IRQ) */
 215:Generated_Source\PSoC4/mUART_UART.c **** 
 216:Generated_Source\PSoC4/mUART_UART.c ****             /* Configure interrupt sources */
 217:Generated_Source\PSoC4/mUART_UART.c ****             mUART_INTR_I2C_EC_MASK_REG = mUART_NO_INTR_SOURCES;
 218:Generated_Source\PSoC4/mUART_UART.c ****             mUART_INTR_SPI_EC_MASK_REG = mUART_NO_INTR_SOURCES;
 219:Generated_Source\PSoC4/mUART_UART.c ****             mUART_INTR_SLAVE_MASK_REG  = mUART_NO_INTR_SOURCES;
 220:Generated_Source\PSoC4/mUART_UART.c ****             mUART_INTR_MASTER_MASK_REG = mUART_NO_INTR_SOURCES;
 221:Generated_Source\PSoC4/mUART_UART.c ****             mUART_INTR_RX_MASK_REG     = config->rxInterruptMask;
 222:Generated_Source\PSoC4/mUART_UART.c ****             mUART_INTR_TX_MASK_REG     = config->txInterruptMask;
 223:Generated_Source\PSoC4/mUART_UART.c **** 
 224:Generated_Source\PSoC4/mUART_UART.c ****             /* Configure TX interrupt sources to restore. */
 225:Generated_Source\PSoC4/mUART_UART.c ****             mUART_IntrTxMask = LO16(mUART_INTR_TX_MASK_REG);
 226:Generated_Source\PSoC4/mUART_UART.c **** 
 227:Generated_Source\PSoC4/mUART_UART.c ****             /* Clear RX buffer indexes */
 228:Generated_Source\PSoC4/mUART_UART.c ****             mUART_rxBufferHead     = 0u;
 229:Generated_Source\PSoC4/mUART_UART.c ****             mUART_rxBufferTail     = 0u;
 230:Generated_Source\PSoC4/mUART_UART.c ****             mUART_rxBufferOverflow = 0u;
 231:Generated_Source\PSoC4/mUART_UART.c **** 
 232:Generated_Source\PSoC4/mUART_UART.c ****             /* Clear TX buffer indexes */
 233:Generated_Source\PSoC4/mUART_UART.c ****             mUART_txBufferHead = 0u;
 234:Generated_Source\PSoC4/mUART_UART.c ****             mUART_txBufferTail = 0u;
 235:Generated_Source\PSoC4/mUART_UART.c ****         }
 236:Generated_Source\PSoC4/mUART_UART.c ****     }
 237:Generated_Source\PSoC4/mUART_UART.c **** 
 238:Generated_Source\PSoC4/mUART_UART.c **** #else
 239:Generated_Source\PSoC4/mUART_UART.c **** 
 240:Generated_Source\PSoC4/mUART_UART.c ****     /*******************************************************************************
 241:Generated_Source\PSoC4/mUART_UART.c ****     * Function Name: mUART_UartInit
 242:Generated_Source\PSoC4/mUART_UART.c ****     ****************************************************************************//**
 243:Generated_Source\PSoC4/mUART_UART.c ****     *
 244:Generated_Source\PSoC4/mUART_UART.c ****     *  Configures the SCB for the UART operation.
 245:Generated_Source\PSoC4/mUART_UART.c ****     *
 246:Generated_Source\PSoC4/mUART_UART.c ****     *******************************************************************************/
 247:Generated_Source\PSoC4/mUART_UART.c ****     void mUART_UartInit(void)
 248:Generated_Source\PSoC4/mUART_UART.c ****     {
  28              		.loc 1 248 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 70B5     		push	{r4, r5, r6, lr}
  33              		.cfi_def_cfa_offset 16
  34              		.cfi_offset 4, -16
  35              		.cfi_offset 5, -12
  36              		.cfi_offset 6, -8
  37              		.cfi_offset 14, -4
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccCKGB6e.s 			page 6


 249:Generated_Source\PSoC4/mUART_UART.c ****         /* Configure UART interface */
 250:Generated_Source\PSoC4/mUART_UART.c ****         mUART_CTRL_REG = mUART_UART_DEFAULT_CTRL;
 251:Generated_Source\PSoC4/mUART_UART.c **** 
 252:Generated_Source\PSoC4/mUART_UART.c ****         /* Configure sub-mode: UART, SmartCard or IrDA */
 253:Generated_Source\PSoC4/mUART_UART.c ****         mUART_UART_CTRL_REG = mUART_UART_DEFAULT_UART_CTRL;
  38              		.loc 1 253 0
  39 0002 0024     		movs	r4, #0
 254:Generated_Source\PSoC4/mUART_UART.c **** 
 255:Generated_Source\PSoC4/mUART_UART.c ****         /* Configure RX direction */
 256:Generated_Source\PSoC4/mUART_UART.c ****         mUART_UART_RX_CTRL_REG = mUART_UART_DEFAULT_UART_RX_CTRL;
 257:Generated_Source\PSoC4/mUART_UART.c ****         mUART_RX_CTRL_REG      = mUART_UART_DEFAULT_RX_CTRL;
 258:Generated_Source\PSoC4/mUART_UART.c ****         mUART_RX_FIFO_CTRL_REG = mUART_UART_DEFAULT_RX_FIFO_CTRL;
  40              		.loc 1 258 0
  41 0004 0725     		movs	r5, #7
 259:Generated_Source\PSoC4/mUART_UART.c ****         mUART_RX_MATCH_REG     = mUART_UART_DEFAULT_RX_MATCH_REG;
 260:Generated_Source\PSoC4/mUART_UART.c **** 
 261:Generated_Source\PSoC4/mUART_UART.c ****         /* Configure TX direction */
 262:Generated_Source\PSoC4/mUART_UART.c ****         mUART_UART_TX_CTRL_REG = mUART_UART_DEFAULT_UART_TX_CTRL;
  42              		.loc 1 262 0
  43 0006 0121     		movs	r1, #1
 263:Generated_Source\PSoC4/mUART_UART.c ****         mUART_TX_CTRL_REG      = mUART_UART_DEFAULT_TX_CTRL;
 264:Generated_Source\PSoC4/mUART_UART.c ****         mUART_TX_FIFO_CTRL_REG = mUART_UART_DEFAULT_TX_FIFO_CTRL;
 265:Generated_Source\PSoC4/mUART_UART.c **** 
 266:Generated_Source\PSoC4/mUART_UART.c ****     #if !(mUART_CY_SCBIP_V0 || mUART_CY_SCBIP_V1)
 267:Generated_Source\PSoC4/mUART_UART.c ****         mUART_UART_FLOW_CTRL_REG = mUART_UART_DEFAULT_FLOW_CTRL;
  44              		.loc 1 267 0
  45 0008 0426     		movs	r6, #4
 250:Generated_Source\PSoC4/mUART_UART.c **** 
  46              		.loc 1 250 0
  47 000a 1E4A     		ldr	r2, .L2
  48 000c 1E4B     		ldr	r3, .L2+4
 268:Generated_Source\PSoC4/mUART_UART.c ****     #endif /* !(mUART_CY_SCBIP_V0 || mUART_CY_SCBIP_V1) */
 269:Generated_Source\PSoC4/mUART_UART.c **** 
 270:Generated_Source\PSoC4/mUART_UART.c ****         /* Configure interrupt with UART handler but do not enable it */
 271:Generated_Source\PSoC4/mUART_UART.c ****     #if(mUART_SCB_IRQ_INTERNAL)
 272:Generated_Source\PSoC4/mUART_UART.c ****         CyIntDisable    (mUART_ISR_NUMBER);
  49              		.loc 1 272 0
  50 000e 2800     		movs	r0, r5
 250:Generated_Source\PSoC4/mUART_UART.c **** 
  51              		.loc 1 250 0
  52 0010 1A60     		str	r2, [r3]
 253:Generated_Source\PSoC4/mUART_UART.c **** 
  53              		.loc 1 253 0
  54 0012 1E4B     		ldr	r3, .L2+8
 256:Generated_Source\PSoC4/mUART_UART.c ****         mUART_RX_CTRL_REG      = mUART_UART_DEFAULT_RX_CTRL;
  55              		.loc 1 256 0
  56 0014 1E4A     		ldr	r2, .L2+12
 253:Generated_Source\PSoC4/mUART_UART.c **** 
  57              		.loc 1 253 0
  58 0016 1C60     		str	r4, [r3]
 256:Generated_Source\PSoC4/mUART_UART.c ****         mUART_RX_CTRL_REG      = mUART_UART_DEFAULT_RX_CTRL;
  59              		.loc 1 256 0
  60 0018 1E4B     		ldr	r3, .L2+16
 273:Generated_Source\PSoC4/mUART_UART.c ****         CyIntSetPriority(mUART_ISR_NUMBER, mUART_ISR_PRIORITY);
 274:Generated_Source\PSoC4/mUART_UART.c ****         (void) CyIntSetVector(mUART_ISR_NUMBER, &mUART_SPI_UART_ISR);
 275:Generated_Source\PSoC4/mUART_UART.c ****     #endif /* (mUART_SCB_IRQ_INTERNAL) */
 276:Generated_Source\PSoC4/mUART_UART.c **** 
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccCKGB6e.s 			page 7


 277:Generated_Source\PSoC4/mUART_UART.c ****         /* Configure WAKE interrupt */
 278:Generated_Source\PSoC4/mUART_UART.c ****     #if(mUART_UART_RX_WAKEUP_IRQ)
 279:Generated_Source\PSoC4/mUART_UART.c ****         CyIntDisable    (mUART_RX_WAKE_ISR_NUMBER);
 280:Generated_Source\PSoC4/mUART_UART.c ****         CyIntSetPriority(mUART_RX_WAKE_ISR_NUMBER, mUART_RX_WAKE_ISR_PRIORITY);
 281:Generated_Source\PSoC4/mUART_UART.c ****         (void) CyIntSetVector(mUART_RX_WAKE_ISR_NUMBER, &mUART_UART_WAKEUP_ISR);
 282:Generated_Source\PSoC4/mUART_UART.c ****     #endif /* (mUART_UART_RX_WAKEUP_IRQ) */
 283:Generated_Source\PSoC4/mUART_UART.c **** 
 284:Generated_Source\PSoC4/mUART_UART.c ****         /* Configure interrupt sources */
 285:Generated_Source\PSoC4/mUART_UART.c ****         mUART_INTR_I2C_EC_MASK_REG = mUART_UART_DEFAULT_INTR_I2C_EC_MASK;
 286:Generated_Source\PSoC4/mUART_UART.c ****         mUART_INTR_SPI_EC_MASK_REG = mUART_UART_DEFAULT_INTR_SPI_EC_MASK;
 287:Generated_Source\PSoC4/mUART_UART.c ****         mUART_INTR_SLAVE_MASK_REG  = mUART_UART_DEFAULT_INTR_SLAVE_MASK;
 288:Generated_Source\PSoC4/mUART_UART.c ****         mUART_INTR_MASTER_MASK_REG = mUART_UART_DEFAULT_INTR_MASTER_MASK;
 289:Generated_Source\PSoC4/mUART_UART.c ****         mUART_INTR_RX_MASK_REG     = mUART_UART_DEFAULT_INTR_RX_MASK;
 290:Generated_Source\PSoC4/mUART_UART.c ****         mUART_INTR_TX_MASK_REG     = mUART_UART_DEFAULT_INTR_TX_MASK;
 291:Generated_Source\PSoC4/mUART_UART.c **** 
 292:Generated_Source\PSoC4/mUART_UART.c ****         /* Configure TX interrupt sources to restore. */
 293:Generated_Source\PSoC4/mUART_UART.c ****         mUART_IntrTxMask = LO16(mUART_INTR_TX_MASK_REG);
 294:Generated_Source\PSoC4/mUART_UART.c **** 
 295:Generated_Source\PSoC4/mUART_UART.c ****     #if(mUART_INTERNAL_RX_SW_BUFFER_CONST)
 296:Generated_Source\PSoC4/mUART_UART.c ****         mUART_rxBufferHead     = 0u;
 297:Generated_Source\PSoC4/mUART_UART.c ****         mUART_rxBufferTail     = 0u;
 298:Generated_Source\PSoC4/mUART_UART.c ****         mUART_rxBufferOverflow = 0u;
 299:Generated_Source\PSoC4/mUART_UART.c ****     #endif /* (mUART_INTERNAL_RX_SW_BUFFER_CONST) */
 300:Generated_Source\PSoC4/mUART_UART.c **** 
 301:Generated_Source\PSoC4/mUART_UART.c ****     #if(mUART_INTERNAL_TX_SW_BUFFER_CONST)
 302:Generated_Source\PSoC4/mUART_UART.c ****         mUART_txBufferHead = 0u;
 303:Generated_Source\PSoC4/mUART_UART.c ****         mUART_txBufferTail = 0u;
 304:Generated_Source\PSoC4/mUART_UART.c ****     #endif /* (mUART_INTERNAL_TX_SW_BUFFER_CONST) */
 305:Generated_Source\PSoC4/mUART_UART.c ****     }
  61              		.loc 1 305 0
  62              		@ sp needed
 256:Generated_Source\PSoC4/mUART_UART.c ****         mUART_RX_CTRL_REG      = mUART_UART_DEFAULT_RX_CTRL;
  63              		.loc 1 256 0
  64 001a 1A60     		str	r2, [r3]
 257:Generated_Source\PSoC4/mUART_UART.c ****         mUART_RX_FIFO_CTRL_REG = mUART_UART_DEFAULT_RX_FIFO_CTRL;
  65              		.loc 1 257 0
  66 001c 1E4B     		ldr	r3, .L2+20
  67 001e 1F4A     		ldr	r2, .L2+24
  68 0020 1360     		str	r3, [r2]
 258:Generated_Source\PSoC4/mUART_UART.c ****         mUART_RX_MATCH_REG     = mUART_UART_DEFAULT_RX_MATCH_REG;
  69              		.loc 1 258 0
  70 0022 1F4A     		ldr	r2, .L2+28
  71 0024 1560     		str	r5, [r2]
 259:Generated_Source\PSoC4/mUART_UART.c **** 
  72              		.loc 1 259 0
  73 0026 1F4A     		ldr	r2, .L2+32
  74 0028 1460     		str	r4, [r2]
 262:Generated_Source\PSoC4/mUART_UART.c ****         mUART_TX_CTRL_REG      = mUART_UART_DEFAULT_TX_CTRL;
  75              		.loc 1 262 0
  76 002a 1F4A     		ldr	r2, .L2+36
  77 002c 1160     		str	r1, [r2]
 263:Generated_Source\PSoC4/mUART_UART.c ****         mUART_TX_FIFO_CTRL_REG = mUART_UART_DEFAULT_TX_FIFO_CTRL;
  78              		.loc 1 263 0
  79 002e 1F4A     		ldr	r2, .L2+40
  80 0030 1360     		str	r3, [r2]
 264:Generated_Source\PSoC4/mUART_UART.c **** 
  81              		.loc 1 264 0
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccCKGB6e.s 			page 8


  82 0032 1F4B     		ldr	r3, .L2+44
  83 0034 1C60     		str	r4, [r3]
 267:Generated_Source\PSoC4/mUART_UART.c ****     #endif /* !(mUART_CY_SCBIP_V0 || mUART_CY_SCBIP_V1) */
  84              		.loc 1 267 0
  85 0036 1F4B     		ldr	r3, .L2+48
  86 0038 1E60     		str	r6, [r3]
 272:Generated_Source\PSoC4/mUART_UART.c ****         CyIntSetPriority(mUART_ISR_NUMBER, mUART_ISR_PRIORITY);
  87              		.loc 1 272 0
  88 003a FFF7FEFF 		bl	CyIntDisable
  89              	.LVL0:
 273:Generated_Source\PSoC4/mUART_UART.c ****         (void) CyIntSetVector(mUART_ISR_NUMBER, &mUART_SPI_UART_ISR);
  90              		.loc 1 273 0
  91 003e 2800     		movs	r0, r5
  92 0040 0321     		movs	r1, #3
  93 0042 FFF7FEFF 		bl	CyIntSetPriority
  94              	.LVL1:
 274:Generated_Source\PSoC4/mUART_UART.c ****     #endif /* (mUART_SCB_IRQ_INTERNAL) */
  95              		.loc 1 274 0
  96 0046 2800     		movs	r0, r5
  97 0048 1B49     		ldr	r1, .L2+52
  98 004a FFF7FEFF 		bl	CyIntSetVector
  99              	.LVL2:
 285:Generated_Source\PSoC4/mUART_UART.c ****         mUART_INTR_SPI_EC_MASK_REG = mUART_UART_DEFAULT_INTR_SPI_EC_MASK;
 100              		.loc 1 285 0
 101 004e 1B4B     		ldr	r3, .L2+56
 102 0050 1C60     		str	r4, [r3]
 286:Generated_Source\PSoC4/mUART_UART.c ****         mUART_INTR_SLAVE_MASK_REG  = mUART_UART_DEFAULT_INTR_SLAVE_MASK;
 103              		.loc 1 286 0
 104 0052 1B4B     		ldr	r3, .L2+60
 105 0054 1C60     		str	r4, [r3]
 287:Generated_Source\PSoC4/mUART_UART.c ****         mUART_INTR_MASTER_MASK_REG = mUART_UART_DEFAULT_INTR_MASTER_MASK;
 106              		.loc 1 287 0
 107 0056 1B4B     		ldr	r3, .L2+64
 108 0058 1C60     		str	r4, [r3]
 288:Generated_Source\PSoC4/mUART_UART.c ****         mUART_INTR_RX_MASK_REG     = mUART_UART_DEFAULT_INTR_RX_MASK;
 109              		.loc 1 288 0
 110 005a 1B4B     		ldr	r3, .L2+68
 111 005c 1C60     		str	r4, [r3]
 289:Generated_Source\PSoC4/mUART_UART.c ****         mUART_INTR_TX_MASK_REG     = mUART_UART_DEFAULT_INTR_TX_MASK;
 112              		.loc 1 289 0
 113 005e 1B4B     		ldr	r3, .L2+72
 114 0060 1E60     		str	r6, [r3]
 290:Generated_Source\PSoC4/mUART_UART.c **** 
 115              		.loc 1 290 0
 116 0062 1B4B     		ldr	r3, .L2+76
 117 0064 1C60     		str	r4, [r3]
 293:Generated_Source\PSoC4/mUART_UART.c **** 
 118              		.loc 1 293 0
 119 0066 1A68     		ldr	r2, [r3]
 120 0068 1A4B     		ldr	r3, .L2+80
 121 006a 1A80     		strh	r2, [r3]
 296:Generated_Source\PSoC4/mUART_UART.c ****         mUART_rxBufferTail     = 0u;
 122              		.loc 1 296 0
 123 006c 1A4B     		ldr	r3, .L2+84
 124 006e 1C60     		str	r4, [r3]
 297:Generated_Source\PSoC4/mUART_UART.c ****         mUART_rxBufferOverflow = 0u;
 125              		.loc 1 297 0
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccCKGB6e.s 			page 9


 126 0070 1A4B     		ldr	r3, .L2+88
 127 0072 1C60     		str	r4, [r3]
 298:Generated_Source\PSoC4/mUART_UART.c ****     #endif /* (mUART_INTERNAL_RX_SW_BUFFER_CONST) */
 128              		.loc 1 298 0
 129 0074 1A4B     		ldr	r3, .L2+92
 130 0076 1C70     		strb	r4, [r3]
 302:Generated_Source\PSoC4/mUART_UART.c ****         mUART_txBufferTail = 0u;
 131              		.loc 1 302 0
 132 0078 1A4B     		ldr	r3, .L2+96
 133 007a 1C60     		str	r4, [r3]
 303:Generated_Source\PSoC4/mUART_UART.c ****     #endif /* (mUART_INTERNAL_TX_SW_BUFFER_CONST) */
 134              		.loc 1 303 0
 135 007c 1A4B     		ldr	r3, .L2+100
 136 007e 1C60     		str	r4, [r3]
 137              		.loc 1 305 0
 138 0080 70BD     		pop	{r4, r5, r6, pc}
 139              	.L3:
 140 0082 C046     		.align	2
 141              	.L2:
 142 0084 0B000002 		.word	33554443
 143 0088 00000840 		.word	1074266112
 144 008c 40000840 		.word	1074266176
 145 0090 01000A00 		.word	655361
 146 0094 48000840 		.word	1074266184
 147 0098 07000080 		.word	-2147483641
 148 009c 00030840 		.word	1074266880
 149 00a0 04030840 		.word	1074266884
 150 00a4 10030840 		.word	1074266896
 151 00a8 44000840 		.word	1074266180
 152 00ac 00020840 		.word	1074266624
 153 00b0 04020840 		.word	1074266628
 154 00b4 50000840 		.word	1074266192
 155 00b8 00000000 		.word	mUART_SPI_UART_ISR
 156 00bc 880E0840 		.word	1074269832
 157 00c0 C80E0840 		.word	1074269896
 158 00c4 480F0840 		.word	1074270024
 159 00c8 080F0840 		.word	1074269960
 160 00cc C80F0840 		.word	1074270152
 161 00d0 880F0840 		.word	1074270088
 162 00d4 00000000 		.word	mUART_IntrTxMask
 163 00d8 00000000 		.word	mUART_rxBufferHead
 164 00dc 00000000 		.word	mUART_rxBufferTail
 165 00e0 00000000 		.word	mUART_rxBufferOverflow
 166 00e4 00000000 		.word	mUART_txBufferHead
 167 00e8 00000000 		.word	mUART_txBufferTail
 168              		.cfi_endproc
 169              	.LFE1:
 170              		.size	mUART_UartInit, .-mUART_UartInit
 171              		.section	.text.mUART_UartPostEnable,"ax",%progbits
 172              		.align	1
 173              		.global	mUART_UartPostEnable
 174              		.code	16
 175              		.thumb_func
 176              		.type	mUART_UartPostEnable, %function
 177              	mUART_UartPostEnable:
 178              	.LFB2:
 306:Generated_Source\PSoC4/mUART_UART.c **** #endif /* (mUART_SCB_MODE_UNCONFIG_CONST_CFG) */
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccCKGB6e.s 			page 10


 307:Generated_Source\PSoC4/mUART_UART.c **** 
 308:Generated_Source\PSoC4/mUART_UART.c **** 
 309:Generated_Source\PSoC4/mUART_UART.c **** /*******************************************************************************
 310:Generated_Source\PSoC4/mUART_UART.c **** * Function Name: mUART_UartPostEnable
 311:Generated_Source\PSoC4/mUART_UART.c **** ****************************************************************************//**
 312:Generated_Source\PSoC4/mUART_UART.c **** *
 313:Generated_Source\PSoC4/mUART_UART.c **** *  Restores HSIOM settings for the UART output pins (TX and/or RTS) to be
 314:Generated_Source\PSoC4/mUART_UART.c **** *  controlled by the SCB UART.
 315:Generated_Source\PSoC4/mUART_UART.c **** *
 316:Generated_Source\PSoC4/mUART_UART.c **** *******************************************************************************/
 317:Generated_Source\PSoC4/mUART_UART.c **** void mUART_UartPostEnable(void)
 318:Generated_Source\PSoC4/mUART_UART.c **** {
 179              		.loc 1 318 0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 0
 182              		@ frame_needed = 0, uses_anonymous_args = 0
 183              		@ link register save eliminated.
 319:Generated_Source\PSoC4/mUART_UART.c **** #if (mUART_SCB_MODE_UNCONFIG_CONST_CFG)
 320:Generated_Source\PSoC4/mUART_UART.c ****     #if (mUART_TX_SDA_MISO_PIN)
 321:Generated_Source\PSoC4/mUART_UART.c ****         if (mUART_CHECK_TX_SDA_MISO_PIN_USED)
 322:Generated_Source\PSoC4/mUART_UART.c ****         {
 323:Generated_Source\PSoC4/mUART_UART.c ****             /* Set SCB UART to drive the output pin */
 324:Generated_Source\PSoC4/mUART_UART.c ****             mUART_SET_HSIOM_SEL(mUART_TX_SDA_MISO_HSIOM_REG, mUART_TX_SDA_MISO_HSIOM_MASK,
 325:Generated_Source\PSoC4/mUART_UART.c ****                                            mUART_TX_SDA_MISO_HSIOM_POS, mUART_TX_SDA_MISO_HSIOM_SEL
 326:Generated_Source\PSoC4/mUART_UART.c ****         }
 327:Generated_Source\PSoC4/mUART_UART.c ****     #endif /* (mUART_TX_SDA_MISO_PIN_PIN) */
 328:Generated_Source\PSoC4/mUART_UART.c **** 
 329:Generated_Source\PSoC4/mUART_UART.c ****     #if !(mUART_CY_SCBIP_V0 || mUART_CY_SCBIP_V1)
 330:Generated_Source\PSoC4/mUART_UART.c ****         #if (mUART_RTS_SS0_PIN)
 331:Generated_Source\PSoC4/mUART_UART.c ****             if (mUART_CHECK_RTS_SS0_PIN_USED)
 332:Generated_Source\PSoC4/mUART_UART.c ****             {
 333:Generated_Source\PSoC4/mUART_UART.c ****                 /* Set SCB UART to drive the output pin */
 334:Generated_Source\PSoC4/mUART_UART.c ****                 mUART_SET_HSIOM_SEL(mUART_RTS_SS0_HSIOM_REG, mUART_RTS_SS0_HSIOM_MASK,
 335:Generated_Source\PSoC4/mUART_UART.c ****                                                mUART_RTS_SS0_HSIOM_POS, mUART_RTS_SS0_HSIOM_SEL_UAR
 336:Generated_Source\PSoC4/mUART_UART.c ****             }
 337:Generated_Source\PSoC4/mUART_UART.c ****         #endif /* (mUART_RTS_SS0_PIN) */
 338:Generated_Source\PSoC4/mUART_UART.c ****     #endif /* !(mUART_CY_SCBIP_V0 || mUART_CY_SCBIP_V1) */
 339:Generated_Source\PSoC4/mUART_UART.c **** 
 340:Generated_Source\PSoC4/mUART_UART.c **** #else
 341:Generated_Source\PSoC4/mUART_UART.c ****     #if (mUART_UART_TX_PIN)
 342:Generated_Source\PSoC4/mUART_UART.c ****          /* Set SCB UART to drive the output pin */
 343:Generated_Source\PSoC4/mUART_UART.c ****         mUART_SET_HSIOM_SEL(mUART_TX_HSIOM_REG, mUART_TX_HSIOM_MASK,
 184              		.loc 1 343 0
 185 0000 F021     		movs	r1, #240
 186 0002 054A     		ldr	r2, .L5
 344:Generated_Source\PSoC4/mUART_UART.c ****                                        mUART_TX_HSIOM_POS, mUART_TX_HSIOM_SEL_UART);
 345:Generated_Source\PSoC4/mUART_UART.c ****     #endif /* (mUART_UART_TX_PIN) */
 346:Generated_Source\PSoC4/mUART_UART.c **** 
 347:Generated_Source\PSoC4/mUART_UART.c ****     #if (mUART_UART_RTS_PIN)
 348:Generated_Source\PSoC4/mUART_UART.c ****         /* Set SCB UART to drive the output pin */
 349:Generated_Source\PSoC4/mUART_UART.c ****         mUART_SET_HSIOM_SEL(mUART_RTS_HSIOM_REG, mUART_RTS_HSIOM_MASK,
 350:Generated_Source\PSoC4/mUART_UART.c ****                                        mUART_RTS_HSIOM_POS, mUART_RTS_HSIOM_SEL_UART);
 351:Generated_Source\PSoC4/mUART_UART.c ****     #endif /* (mUART_UART_RTS_PIN) */
 352:Generated_Source\PSoC4/mUART_UART.c **** #endif /* (mUART_SCB_MODE_UNCONFIG_CONST_CFG) */
 353:Generated_Source\PSoC4/mUART_UART.c **** 
 354:Generated_Source\PSoC4/mUART_UART.c ****     /* Restore TX interrupt sources. */
 355:Generated_Source\PSoC4/mUART_UART.c ****     mUART_SetTxInterruptMode(mUART_IntrTxMask);
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccCKGB6e.s 			page 11


 356:Generated_Source\PSoC4/mUART_UART.c **** }
 187              		.loc 1 356 0
 188              		@ sp needed
 343:Generated_Source\PSoC4/mUART_UART.c ****                                        mUART_TX_HSIOM_POS, mUART_TX_HSIOM_SEL_UART);
 189              		.loc 1 343 0
 190 0004 1368     		ldr	r3, [r2]
 191 0006 8B43     		bics	r3, r1
 192 0008 6039     		subs	r1, r1, #96
 193 000a 0B43     		orrs	r3, r1
 194 000c 1360     		str	r3, [r2]
 355:Generated_Source\PSoC4/mUART_UART.c **** }
 195              		.loc 1 355 0
 196 000e 034B     		ldr	r3, .L5+4
 197 0010 1A88     		ldrh	r2, [r3]
 198 0012 034B     		ldr	r3, .L5+8
 199 0014 1A60     		str	r2, [r3]
 200              		.loc 1 356 0
 201 0016 7047     		bx	lr
 202              	.L6:
 203              		.align	2
 204              	.L5:
 205 0018 00040240 		.word	1073873920
 206 001c 00000000 		.word	mUART_IntrTxMask
 207 0020 880F0840 		.word	1074270088
 208              		.cfi_endproc
 209              	.LFE2:
 210              		.size	mUART_UartPostEnable, .-mUART_UartPostEnable
 211              		.section	.text.mUART_UartStop,"ax",%progbits
 212              		.align	1
 213              		.global	mUART_UartStop
 214              		.code	16
 215              		.thumb_func
 216              		.type	mUART_UartStop, %function
 217              	mUART_UartStop:
 218              	.LFB3:
 357:Generated_Source\PSoC4/mUART_UART.c **** 
 358:Generated_Source\PSoC4/mUART_UART.c **** 
 359:Generated_Source\PSoC4/mUART_UART.c **** /*******************************************************************************
 360:Generated_Source\PSoC4/mUART_UART.c **** * Function Name: mUART_UartStop
 361:Generated_Source\PSoC4/mUART_UART.c **** ****************************************************************************//**
 362:Generated_Source\PSoC4/mUART_UART.c **** *
 363:Generated_Source\PSoC4/mUART_UART.c **** *  Changes the HSIOM settings for the UART output pins (TX and/or RTS) to keep
 364:Generated_Source\PSoC4/mUART_UART.c **** *  them inactive after the block is disabled. The output pins are controlled by
 365:Generated_Source\PSoC4/mUART_UART.c **** *  the GPIO data register. Also, the function disables the skip start feature
 366:Generated_Source\PSoC4/mUART_UART.c **** *  to not cause it to trigger after the component is enabled.
 367:Generated_Source\PSoC4/mUART_UART.c **** *
 368:Generated_Source\PSoC4/mUART_UART.c **** *******************************************************************************/
 369:Generated_Source\PSoC4/mUART_UART.c **** void mUART_UartStop(void)
 370:Generated_Source\PSoC4/mUART_UART.c **** {
 219              		.loc 1 370 0
 220              		.cfi_startproc
 221              		@ args = 0, pretend = 0, frame = 0
 222              		@ frame_needed = 0, uses_anonymous_args = 0
 223              		@ link register save eliminated.
 371:Generated_Source\PSoC4/mUART_UART.c **** #if(mUART_SCB_MODE_UNCONFIG_CONST_CFG)
 372:Generated_Source\PSoC4/mUART_UART.c ****     #if (mUART_TX_SDA_MISO_PIN)
 373:Generated_Source\PSoC4/mUART_UART.c ****         if (mUART_CHECK_TX_SDA_MISO_PIN_USED)
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccCKGB6e.s 			page 12


 374:Generated_Source\PSoC4/mUART_UART.c ****         {
 375:Generated_Source\PSoC4/mUART_UART.c ****             /* Set GPIO to drive output pin */
 376:Generated_Source\PSoC4/mUART_UART.c ****             mUART_SET_HSIOM_SEL(mUART_TX_SDA_MISO_HSIOM_REG, mUART_TX_SDA_MISO_HSIOM_MASK,
 377:Generated_Source\PSoC4/mUART_UART.c ****                                            mUART_TX_SDA_MISO_HSIOM_POS, mUART_TX_SDA_MISO_HSIOM_SEL
 378:Generated_Source\PSoC4/mUART_UART.c ****         }
 379:Generated_Source\PSoC4/mUART_UART.c ****     #endif /* (mUART_TX_SDA_MISO_PIN_PIN) */
 380:Generated_Source\PSoC4/mUART_UART.c **** 
 381:Generated_Source\PSoC4/mUART_UART.c ****     #if !(mUART_CY_SCBIP_V0 || mUART_CY_SCBIP_V1)
 382:Generated_Source\PSoC4/mUART_UART.c ****         #if (mUART_RTS_SS0_PIN)
 383:Generated_Source\PSoC4/mUART_UART.c ****             if (mUART_CHECK_RTS_SS0_PIN_USED)
 384:Generated_Source\PSoC4/mUART_UART.c ****             {
 385:Generated_Source\PSoC4/mUART_UART.c ****                 /* Set output pin state after block is disabled */
 386:Generated_Source\PSoC4/mUART_UART.c ****                 mUART_uart_rts_spi_ss0_Write(mUART_GET_UART_RTS_INACTIVE);
 387:Generated_Source\PSoC4/mUART_UART.c **** 
 388:Generated_Source\PSoC4/mUART_UART.c ****                 /* Set GPIO to drive output pin */
 389:Generated_Source\PSoC4/mUART_UART.c ****                 mUART_SET_HSIOM_SEL(mUART_RTS_SS0_HSIOM_REG, mUART_RTS_SS0_HSIOM_MASK,
 390:Generated_Source\PSoC4/mUART_UART.c ****                                                mUART_RTS_SS0_HSIOM_POS, mUART_RTS_SS0_HSIOM_SEL_GPI
 391:Generated_Source\PSoC4/mUART_UART.c ****             }
 392:Generated_Source\PSoC4/mUART_UART.c ****         #endif /* (mUART_RTS_SS0_PIN) */
 393:Generated_Source\PSoC4/mUART_UART.c ****     #endif /* !(mUART_CY_SCBIP_V0 || mUART_CY_SCBIP_V1) */
 394:Generated_Source\PSoC4/mUART_UART.c **** 
 395:Generated_Source\PSoC4/mUART_UART.c **** #else
 396:Generated_Source\PSoC4/mUART_UART.c ****     #if (mUART_UART_TX_PIN)
 397:Generated_Source\PSoC4/mUART_UART.c ****         /* Set GPIO to drive output pin */
 398:Generated_Source\PSoC4/mUART_UART.c ****         mUART_SET_HSIOM_SEL(mUART_TX_HSIOM_REG, mUART_TX_HSIOM_MASK,
 224              		.loc 1 398 0
 225 0000 F021     		movs	r1, #240
 226 0002 064A     		ldr	r2, .L8
 399:Generated_Source\PSoC4/mUART_UART.c ****                                        mUART_TX_HSIOM_POS, mUART_TX_HSIOM_SEL_GPIO);
 400:Generated_Source\PSoC4/mUART_UART.c ****     #endif /* (mUART_UART_TX_PIN) */
 401:Generated_Source\PSoC4/mUART_UART.c **** 
 402:Generated_Source\PSoC4/mUART_UART.c ****     #if (mUART_UART_RTS_PIN)
 403:Generated_Source\PSoC4/mUART_UART.c ****         /* Set output pin state after block is disabled */
 404:Generated_Source\PSoC4/mUART_UART.c ****         mUART_rts_Write(mUART_GET_UART_RTS_INACTIVE);
 405:Generated_Source\PSoC4/mUART_UART.c **** 
 406:Generated_Source\PSoC4/mUART_UART.c ****         /* Set GPIO to drive output pin */
 407:Generated_Source\PSoC4/mUART_UART.c ****         mUART_SET_HSIOM_SEL(mUART_RTS_HSIOM_REG, mUART_RTS_HSIOM_MASK,
 408:Generated_Source\PSoC4/mUART_UART.c ****                                        mUART_RTS_HSIOM_POS, mUART_RTS_HSIOM_SEL_GPIO);
 409:Generated_Source\PSoC4/mUART_UART.c ****     #endif /* (mUART_UART_RTS_PIN) */
 410:Generated_Source\PSoC4/mUART_UART.c **** 
 411:Generated_Source\PSoC4/mUART_UART.c **** #endif /* (mUART_SCB_MODE_UNCONFIG_CONST_CFG) */
 412:Generated_Source\PSoC4/mUART_UART.c **** 
 413:Generated_Source\PSoC4/mUART_UART.c **** #if (mUART_UART_WAKE_ENABLE_CONST)
 414:Generated_Source\PSoC4/mUART_UART.c ****     /* Disable skip start feature used for wakeup */
 415:Generated_Source\PSoC4/mUART_UART.c ****     mUART_UART_RX_CTRL_REG &= (uint32) ~mUART_UART_RX_CTRL_SKIP_START;
 416:Generated_Source\PSoC4/mUART_UART.c **** #endif /* (mUART_UART_WAKE_ENABLE_CONST) */
 417:Generated_Source\PSoC4/mUART_UART.c **** 
 418:Generated_Source\PSoC4/mUART_UART.c ****     /* Store TX interrupt sources (exclude level triggered). */
 419:Generated_Source\PSoC4/mUART_UART.c ****     mUART_IntrTxMask = LO16(mUART_GetTxInterruptMode() & mUART_INTR_UART_TX_RESTORE);
 420:Generated_Source\PSoC4/mUART_UART.c **** }
 227              		.loc 1 420 0
 228              		@ sp needed
 398:Generated_Source\PSoC4/mUART_UART.c ****                                        mUART_TX_HSIOM_POS, mUART_TX_HSIOM_SEL_GPIO);
 229              		.loc 1 398 0
 230 0004 1368     		ldr	r3, [r2]
 231 0006 8B43     		bics	r3, r1
 232 0008 1360     		str	r3, [r2]
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccCKGB6e.s 			page 13


 419:Generated_Source\PSoC4/mUART_UART.c **** }
 233              		.loc 1 419 0
 234 000a 054B     		ldr	r3, .L8+4
 235 000c 1A68     		ldr	r2, [r3]
 236 000e E423     		movs	r3, #228
 237 0010 DB00     		lsls	r3, r3, #3
 238 0012 1340     		ands	r3, r2
 239 0014 034A     		ldr	r2, .L8+8
 240 0016 1380     		strh	r3, [r2]
 241              		.loc 1 420 0
 242 0018 7047     		bx	lr
 243              	.L9:
 244 001a C046     		.align	2
 245              	.L8:
 246 001c 00040240 		.word	1073873920
 247 0020 880F0840 		.word	1074270088
 248 0024 00000000 		.word	mUART_IntrTxMask
 249              		.cfi_endproc
 250              	.LFE3:
 251              		.size	mUART_UartStop, .-mUART_UartStop
 252              		.section	.text.mUART_UartSetRxAddress,"ax",%progbits
 253              		.align	1
 254              		.global	mUART_UartSetRxAddress
 255              		.code	16
 256              		.thumb_func
 257              		.type	mUART_UartSetRxAddress, %function
 258              	mUART_UartSetRxAddress:
 259              	.LFB4:
 421:Generated_Source\PSoC4/mUART_UART.c **** 
 422:Generated_Source\PSoC4/mUART_UART.c **** 
 423:Generated_Source\PSoC4/mUART_UART.c **** /*******************************************************************************
 424:Generated_Source\PSoC4/mUART_UART.c **** * Function Name: mUART_UartSetRxAddress
 425:Generated_Source\PSoC4/mUART_UART.c **** ****************************************************************************//**
 426:Generated_Source\PSoC4/mUART_UART.c **** *
 427:Generated_Source\PSoC4/mUART_UART.c **** *  Sets the hardware detectable receiver address for the UART in the
 428:Generated_Source\PSoC4/mUART_UART.c **** *  Multiprocessor mode.
 429:Generated_Source\PSoC4/mUART_UART.c **** *
 430:Generated_Source\PSoC4/mUART_UART.c **** *  \param address: Address for hardware address detection.
 431:Generated_Source\PSoC4/mUART_UART.c **** *
 432:Generated_Source\PSoC4/mUART_UART.c **** *******************************************************************************/
 433:Generated_Source\PSoC4/mUART_UART.c **** void mUART_UartSetRxAddress(uint32 address)
 434:Generated_Source\PSoC4/mUART_UART.c **** {
 260              		.loc 1 434 0
 261              		.cfi_startproc
 262              		@ args = 0, pretend = 0, frame = 0
 263              		@ frame_needed = 0, uses_anonymous_args = 0
 264              		@ link register save eliminated.
 265              	.LVL3:
 435:Generated_Source\PSoC4/mUART_UART.c ****      uint32 matchReg;
 436:Generated_Source\PSoC4/mUART_UART.c **** 
 437:Generated_Source\PSoC4/mUART_UART.c ****     matchReg = mUART_RX_MATCH_REG;
 438:Generated_Source\PSoC4/mUART_UART.c **** 
 439:Generated_Source\PSoC4/mUART_UART.c ****     matchReg &= ((uint32) ~mUART_RX_MATCH_ADDR_MASK); /* Clear address bits */
 266              		.loc 1 439 0
 267 0000 FF22     		movs	r2, #255
 437:Generated_Source\PSoC4/mUART_UART.c **** 
 268              		.loc 1 437 0
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccCKGB6e.s 			page 14


 269 0002 0349     		ldr	r1, .L11
 440:Generated_Source\PSoC4/mUART_UART.c ****     matchReg |= ((uint32)  (address & mUART_RX_MATCH_ADDR_MASK)); /* Set address  */
 270              		.loc 1 440 0
 271 0004 1040     		ands	r0, r2
 272              	.LVL4:
 437:Generated_Source\PSoC4/mUART_UART.c **** 
 273              		.loc 1 437 0
 274 0006 0B68     		ldr	r3, [r1]
 275              	.LVL5:
 441:Generated_Source\PSoC4/mUART_UART.c **** 
 442:Generated_Source\PSoC4/mUART_UART.c ****     mUART_RX_MATCH_REG = matchReg;
 443:Generated_Source\PSoC4/mUART_UART.c **** }
 276              		.loc 1 443 0
 277              		@ sp needed
 439:Generated_Source\PSoC4/mUART_UART.c ****     matchReg |= ((uint32)  (address & mUART_RX_MATCH_ADDR_MASK)); /* Set address  */
 278              		.loc 1 439 0
 279 0008 9343     		bics	r3, r2
 280              	.LVL6:
 440:Generated_Source\PSoC4/mUART_UART.c ****     matchReg |= ((uint32)  (address & mUART_RX_MATCH_ADDR_MASK)); /* Set address  */
 281              		.loc 1 440 0
 282 000a 1843     		orrs	r0, r3
 283              	.LVL7:
 442:Generated_Source\PSoC4/mUART_UART.c **** }
 284              		.loc 1 442 0
 285 000c 0860     		str	r0, [r1]
 286              		.loc 1 443 0
 287 000e 7047     		bx	lr
 288              	.L12:
 289              		.align	2
 290              	.L11:
 291 0010 10030840 		.word	1074266896
 292              		.cfi_endproc
 293              	.LFE4:
 294              		.size	mUART_UartSetRxAddress, .-mUART_UartSetRxAddress
 295              		.section	.text.mUART_UartSetRxAddressMask,"ax",%progbits
 296              		.align	1
 297              		.global	mUART_UartSetRxAddressMask
 298              		.code	16
 299              		.thumb_func
 300              		.type	mUART_UartSetRxAddressMask, %function
 301              	mUART_UartSetRxAddressMask:
 302              	.LFB5:
 444:Generated_Source\PSoC4/mUART_UART.c **** 
 445:Generated_Source\PSoC4/mUART_UART.c **** 
 446:Generated_Source\PSoC4/mUART_UART.c **** /*******************************************************************************
 447:Generated_Source\PSoC4/mUART_UART.c **** * Function Name: mUART_UartSetRxAddressMask
 448:Generated_Source\PSoC4/mUART_UART.c **** ****************************************************************************//**
 449:Generated_Source\PSoC4/mUART_UART.c **** *
 450:Generated_Source\PSoC4/mUART_UART.c **** *  Sets the hardware address mask for the UART in the Multiprocessor mode.
 451:Generated_Source\PSoC4/mUART_UART.c **** *
 452:Generated_Source\PSoC4/mUART_UART.c **** *  \param addressMask: Address mask.
 453:Generated_Source\PSoC4/mUART_UART.c **** *   - Bit value 0 – excludes bit from address comparison.
 454:Generated_Source\PSoC4/mUART_UART.c **** *   - Bit value 1 – the bit needs to match with the corresponding bit
 455:Generated_Source\PSoC4/mUART_UART.c **** *     of the address.
 456:Generated_Source\PSoC4/mUART_UART.c **** *
 457:Generated_Source\PSoC4/mUART_UART.c **** *******************************************************************************/
 458:Generated_Source\PSoC4/mUART_UART.c **** void mUART_UartSetRxAddressMask(uint32 addressMask)
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccCKGB6e.s 			page 15


 459:Generated_Source\PSoC4/mUART_UART.c **** {
 303              		.loc 1 459 0
 304              		.cfi_startproc
 305              		@ args = 0, pretend = 0, frame = 0
 306              		@ frame_needed = 0, uses_anonymous_args = 0
 307              		@ link register save eliminated.
 308              	.LVL8:
 460:Generated_Source\PSoC4/mUART_UART.c ****     uint32 matchReg;
 461:Generated_Source\PSoC4/mUART_UART.c **** 
 462:Generated_Source\PSoC4/mUART_UART.c ****     matchReg = mUART_RX_MATCH_REG;
 309              		.loc 1 462 0
 310 0000 034A     		ldr	r2, .L14
 463:Generated_Source\PSoC4/mUART_UART.c **** 
 464:Generated_Source\PSoC4/mUART_UART.c ****     matchReg &= ((uint32) ~mUART_RX_MATCH_MASK_MASK); /* Clear address mask bits */
 311              		.loc 1 464 0
 312 0002 044B     		ldr	r3, .L14+4
 462:Generated_Source\PSoC4/mUART_UART.c **** 
 313              		.loc 1 462 0
 314 0004 1168     		ldr	r1, [r2]
 315              	.LVL9:
 465:Generated_Source\PSoC4/mUART_UART.c ****     matchReg |= ((uint32) (addressMask << mUART_RX_MATCH_MASK_POS));
 316              		.loc 1 465 0
 317 0006 0004     		lsls	r0, r0, #16
 318              	.LVL10:
 464:Generated_Source\PSoC4/mUART_UART.c ****     matchReg |= ((uint32) (addressMask << mUART_RX_MATCH_MASK_POS));
 319              		.loc 1 464 0
 320 0008 0B40     		ands	r3, r1
 321              	.LVL11:
 322              		.loc 1 465 0
 323 000a 1843     		orrs	r0, r3
 324              	.LVL12:
 466:Generated_Source\PSoC4/mUART_UART.c **** 
 467:Generated_Source\PSoC4/mUART_UART.c ****     mUART_RX_MATCH_REG = matchReg;
 325              		.loc 1 467 0
 326 000c 1060     		str	r0, [r2]
 468:Generated_Source\PSoC4/mUART_UART.c **** }
 327              		.loc 1 468 0
 328              		@ sp needed
 329 000e 7047     		bx	lr
 330              	.L15:
 331              		.align	2
 332              	.L14:
 333 0010 10030840 		.word	1074266896
 334 0014 FFFF00FF 		.word	-16711681
 335              		.cfi_endproc
 336              	.LFE5:
 337              		.size	mUART_UartSetRxAddressMask, .-mUART_UartSetRxAddressMask
 338              		.section	.text.mUART_UartGetChar,"ax",%progbits
 339              		.align	1
 340              		.global	mUART_UartGetChar
 341              		.code	16
 342              		.thumb_func
 343              		.type	mUART_UartGetChar, %function
 344              	mUART_UartGetChar:
 345              	.LFB6:
 469:Generated_Source\PSoC4/mUART_UART.c **** 
 470:Generated_Source\PSoC4/mUART_UART.c **** 
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccCKGB6e.s 			page 16


 471:Generated_Source\PSoC4/mUART_UART.c **** #if(mUART_UART_RX_DIRECTION)
 472:Generated_Source\PSoC4/mUART_UART.c ****     /*******************************************************************************
 473:Generated_Source\PSoC4/mUART_UART.c ****     * Function Name: mUART_UartGetChar
 474:Generated_Source\PSoC4/mUART_UART.c ****     ****************************************************************************//**
 475:Generated_Source\PSoC4/mUART_UART.c ****     *
 476:Generated_Source\PSoC4/mUART_UART.c ****     *  Retrieves next data element from receive buffer.
 477:Generated_Source\PSoC4/mUART_UART.c ****     *  This function is designed for ASCII characters and returns a char where
 478:Generated_Source\PSoC4/mUART_UART.c ****     *  1 to 255 are valid characters and 0 indicates an error occurred or no data
 479:Generated_Source\PSoC4/mUART_UART.c ****     *  is present.
 480:Generated_Source\PSoC4/mUART_UART.c ****     *  - RX software buffer is disabled: Returns data element retrieved from RX
 481:Generated_Source\PSoC4/mUART_UART.c ****     *    FIFO.
 482:Generated_Source\PSoC4/mUART_UART.c ****     *  - RX software buffer is enabled: Returns data element from the software
 483:Generated_Source\PSoC4/mUART_UART.c ****     *    receive buffer.
 484:Generated_Source\PSoC4/mUART_UART.c ****     *
 485:Generated_Source\PSoC4/mUART_UART.c ****     *  \return
 486:Generated_Source\PSoC4/mUART_UART.c ****     *   Next data element from the receive buffer. ASCII character values from
 487:Generated_Source\PSoC4/mUART_UART.c ****     *   1 to 255 are valid. A returned zero signifies an error condition or no
 488:Generated_Source\PSoC4/mUART_UART.c ****     *   data available.
 489:Generated_Source\PSoC4/mUART_UART.c ****     *
 490:Generated_Source\PSoC4/mUART_UART.c ****     *  \sideeffect
 491:Generated_Source\PSoC4/mUART_UART.c ****     *   The errors bits may not correspond with reading characters due to
 492:Generated_Source\PSoC4/mUART_UART.c ****     *   RX FIFO and software buffer usage.
 493:Generated_Source\PSoC4/mUART_UART.c ****     *   RX software buffer is enabled: The internal software buffer overflow
 494:Generated_Source\PSoC4/mUART_UART.c ****     *   is not treated as an error condition.
 495:Generated_Source\PSoC4/mUART_UART.c ****     *   Check mUART_rxBufferOverflow to capture that error condition.
 496:Generated_Source\PSoC4/mUART_UART.c ****     *
 497:Generated_Source\PSoC4/mUART_UART.c ****     *******************************************************************************/
 498:Generated_Source\PSoC4/mUART_UART.c ****     uint32 mUART_UartGetChar(void)
 499:Generated_Source\PSoC4/mUART_UART.c ****     {
 346              		.loc 1 499 0
 347              		.cfi_startproc
 348              		@ args = 0, pretend = 0, frame = 0
 349              		@ frame_needed = 0, uses_anonymous_args = 0
 350              	.LVL13:
 351 0000 10B5     		push	{r4, lr}
 352              		.cfi_def_cfa_offset 8
 353              		.cfi_offset 4, -8
 354              		.cfi_offset 14, -4
 500:Generated_Source\PSoC4/mUART_UART.c ****         uint32 rxData = 0u;
 501:Generated_Source\PSoC4/mUART_UART.c **** 
 502:Generated_Source\PSoC4/mUART_UART.c ****         /* Reads data only if there is data to read */
 503:Generated_Source\PSoC4/mUART_UART.c ****         if (0u != mUART_SpiUartGetRxBufferSize())
 355              		.loc 1 503 0
 356 0002 FFF7FEFF 		bl	mUART_SpiUartGetRxBufferSize
 357              	.LVL14:
 358 0006 0300     		movs	r3, r0
 500:Generated_Source\PSoC4/mUART_UART.c ****         uint32 rxData = 0u;
 359              		.loc 1 500 0
 360 0008 0020     		movs	r0, #0
 361              		.loc 1 503 0
 362 000a 8342     		cmp	r3, r0
 363 000c 01D0     		beq	.L17
 504:Generated_Source\PSoC4/mUART_UART.c ****         {
 505:Generated_Source\PSoC4/mUART_UART.c ****             rxData = mUART_SpiUartReadRxData();
 364              		.loc 1 505 0
 365 000e FFF7FEFF 		bl	mUART_SpiUartReadRxData
 366              	.LVL15:
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccCKGB6e.s 			page 17


 367              	.L17:
 506:Generated_Source\PSoC4/mUART_UART.c ****         }
 507:Generated_Source\PSoC4/mUART_UART.c **** 
 508:Generated_Source\PSoC4/mUART_UART.c ****         if (mUART_CHECK_INTR_RX(mUART_INTR_RX_ERR))
 368              		.loc 1 508 0
 369 0012 D822     		movs	r2, #216
 370 0014 034B     		ldr	r3, .L25
 371 0016 9200     		lsls	r2, r2, #2
 372 0018 1968     		ldr	r1, [r3]
 373 001a 1142     		tst	r1, r2
 374 001c 01D0     		beq	.L18
 375              	.LVL16:
 509:Generated_Source\PSoC4/mUART_UART.c ****         {
 510:Generated_Source\PSoC4/mUART_UART.c ****             rxData = 0u; /* Error occurred: returns zero */
 376              		.loc 1 510 0
 377 001e 0020     		movs	r0, #0
 511:Generated_Source\PSoC4/mUART_UART.c ****             mUART_ClearRxInterruptSource(mUART_INTR_RX_ERR);
 378              		.loc 1 511 0
 379 0020 1A60     		str	r2, [r3]
 380              	.LVL17:
 381              	.L18:
 512:Generated_Source\PSoC4/mUART_UART.c ****         }
 513:Generated_Source\PSoC4/mUART_UART.c **** 
 514:Generated_Source\PSoC4/mUART_UART.c ****         return (rxData);
 515:Generated_Source\PSoC4/mUART_UART.c ****     }
 382              		.loc 1 515 0
 383              		@ sp needed
 384 0022 10BD     		pop	{r4, pc}
 385              	.L26:
 386              		.align	2
 387              	.L25:
 388 0024 C00F0840 		.word	1074270144
 389              		.cfi_endproc
 390              	.LFE6:
 391              		.size	mUART_UartGetChar, .-mUART_UartGetChar
 392              		.section	.text.mUART_UartGetByte,"ax",%progbits
 393              		.align	1
 394              		.global	mUART_UartGetByte
 395              		.code	16
 396              		.thumb_func
 397              		.type	mUART_UartGetByte, %function
 398              	mUART_UartGetByte:
 399              	.LFB7:
 516:Generated_Source\PSoC4/mUART_UART.c **** 
 517:Generated_Source\PSoC4/mUART_UART.c **** 
 518:Generated_Source\PSoC4/mUART_UART.c ****     /*******************************************************************************
 519:Generated_Source\PSoC4/mUART_UART.c ****     * Function Name: mUART_UartGetByte
 520:Generated_Source\PSoC4/mUART_UART.c ****     ****************************************************************************//**
 521:Generated_Source\PSoC4/mUART_UART.c ****     *
 522:Generated_Source\PSoC4/mUART_UART.c ****     *  Retrieves the next data element from the receive buffer, returns the
 523:Generated_Source\PSoC4/mUART_UART.c ****     *  received byte and error condition.
 524:Generated_Source\PSoC4/mUART_UART.c ****     *   - The RX software buffer is disabled: returns the data element retrieved
 525:Generated_Source\PSoC4/mUART_UART.c ****     *     from the RX FIFO. Undefined data will be returned if the RX FIFO is
 526:Generated_Source\PSoC4/mUART_UART.c ****     *     empty.
 527:Generated_Source\PSoC4/mUART_UART.c ****     *   - The RX software buffer is enabled: returns data element from the
 528:Generated_Source\PSoC4/mUART_UART.c ****     *     software receive buffer.
 529:Generated_Source\PSoC4/mUART_UART.c ****     *
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccCKGB6e.s 			page 18


 530:Generated_Source\PSoC4/mUART_UART.c ****     *  \return
 531:Generated_Source\PSoC4/mUART_UART.c ****     *   Bits 7-0 contain the next data element from the receive buffer and
 532:Generated_Source\PSoC4/mUART_UART.c ****     *   other bits contain the error condition.
 533:Generated_Source\PSoC4/mUART_UART.c ****     *   - mUART_UART_RX_OVERFLOW - Attempt to write to a full
 534:Generated_Source\PSoC4/mUART_UART.c ****     *     receiver FIFO.
 535:Generated_Source\PSoC4/mUART_UART.c ****     *   - mUART_UART_RX_UNDERFLOW    Attempt to read from an empty
 536:Generated_Source\PSoC4/mUART_UART.c ****     *     receiver FIFO.
 537:Generated_Source\PSoC4/mUART_UART.c ****     *   - mUART_UART_RX_FRAME_ERROR - UART framing error detected.
 538:Generated_Source\PSoC4/mUART_UART.c ****     *   - mUART_UART_RX_PARITY_ERROR - UART parity error detected.
 539:Generated_Source\PSoC4/mUART_UART.c ****     *
 540:Generated_Source\PSoC4/mUART_UART.c ****     *  \sideeffect
 541:Generated_Source\PSoC4/mUART_UART.c ****     *   The errors bits may not correspond with reading characters due to
 542:Generated_Source\PSoC4/mUART_UART.c ****     *   RX FIFO and software buffer usage.
 543:Generated_Source\PSoC4/mUART_UART.c ****     *   RX software buffer is enabled: The internal software buffer overflow
 544:Generated_Source\PSoC4/mUART_UART.c ****     *   is not treated as an error condition.
 545:Generated_Source\PSoC4/mUART_UART.c ****     *   Check mUART_rxBufferOverflow to capture that error condition.
 546:Generated_Source\PSoC4/mUART_UART.c ****     *
 547:Generated_Source\PSoC4/mUART_UART.c ****     *******************************************************************************/
 548:Generated_Source\PSoC4/mUART_UART.c ****     uint32 mUART_UartGetByte(void)
 549:Generated_Source\PSoC4/mUART_UART.c ****     {
 400              		.loc 1 549 0
 401              		.cfi_startproc
 402              		@ args = 0, pretend = 0, frame = 0
 403              		@ frame_needed = 0, uses_anonymous_args = 0
 404 0000 70B5     		push	{r4, r5, r6, lr}
 405              		.cfi_def_cfa_offset 16
 406              		.cfi_offset 4, -16
 407              		.cfi_offset 5, -12
 408              		.cfi_offset 6, -8
 409              		.cfi_offset 14, -4
 550:Generated_Source\PSoC4/mUART_UART.c ****         uint32 rxData;
 551:Generated_Source\PSoC4/mUART_UART.c ****         uint32 tmpStatus;
 552:Generated_Source\PSoC4/mUART_UART.c **** 
 553:Generated_Source\PSoC4/mUART_UART.c ****         #if (mUART_CHECK_RX_SW_BUFFER)
 554:Generated_Source\PSoC4/mUART_UART.c ****         {
 555:Generated_Source\PSoC4/mUART_UART.c ****             mUART_DisableInt();
 410              		.loc 1 555 0
 411 0002 0720     		movs	r0, #7
 412 0004 FFF7FEFF 		bl	CyIntDisable
 413              	.LVL18:
 556:Generated_Source\PSoC4/mUART_UART.c ****         }
 557:Generated_Source\PSoC4/mUART_UART.c ****         #endif
 558:Generated_Source\PSoC4/mUART_UART.c **** 
 559:Generated_Source\PSoC4/mUART_UART.c ****         if (0u != mUART_SpiUartGetRxBufferSize())
 414              		.loc 1 559 0
 415 0008 FFF7FEFF 		bl	mUART_SpiUartGetRxBufferSize
 416              	.LVL19:
 417 000c 0D4D     		ldr	r5, .L30
 418 000e 0028     		cmp	r0, #0
 419 0010 06D0     		beq	.L28
 560:Generated_Source\PSoC4/mUART_UART.c ****         {
 561:Generated_Source\PSoC4/mUART_UART.c ****             /* Enables interrupt to receive more bytes: at least one byte is in
 562:Generated_Source\PSoC4/mUART_UART.c ****             * buffer.
 563:Generated_Source\PSoC4/mUART_UART.c ****             */
 564:Generated_Source\PSoC4/mUART_UART.c ****             #if (mUART_CHECK_RX_SW_BUFFER)
 565:Generated_Source\PSoC4/mUART_UART.c ****             {
 566:Generated_Source\PSoC4/mUART_UART.c ****                 mUART_EnableInt();
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccCKGB6e.s 			page 19


 420              		.loc 1 566 0
 421 0012 0720     		movs	r0, #7
 422 0014 FFF7FEFF 		bl	CyIntEnable
 423              	.LVL20:
 567:Generated_Source\PSoC4/mUART_UART.c ****             }
 568:Generated_Source\PSoC4/mUART_UART.c ****             #endif
 569:Generated_Source\PSoC4/mUART_UART.c **** 
 570:Generated_Source\PSoC4/mUART_UART.c ****             /* Get received byte */
 571:Generated_Source\PSoC4/mUART_UART.c ****             rxData = mUART_SpiUartReadRxData();
 424              		.loc 1 571 0
 425 0018 FFF7FEFF 		bl	mUART_SpiUartReadRxData
 426              	.LVL21:
 427 001c 0400     		movs	r4, r0
 428              	.LVL22:
 429 001e 06E0     		b	.L29
 430              	.LVL23:
 431              	.L28:
 572:Generated_Source\PSoC4/mUART_UART.c ****         }
 573:Generated_Source\PSoC4/mUART_UART.c ****         else
 574:Generated_Source\PSoC4/mUART_UART.c ****         {
 575:Generated_Source\PSoC4/mUART_UART.c ****             /* Reads a byte directly from RX FIFO: underflow is raised in the
 576:Generated_Source\PSoC4/mUART_UART.c ****             * case of empty. Otherwise the first received byte will be read.
 577:Generated_Source\PSoC4/mUART_UART.c ****             */
 578:Generated_Source\PSoC4/mUART_UART.c ****             rxData = mUART_RX_FIFO_RD_REG;
 432              		.loc 1 578 0
 433 0020 094B     		ldr	r3, .L30+4
 579:Generated_Source\PSoC4/mUART_UART.c **** 
 580:Generated_Source\PSoC4/mUART_UART.c **** 
 581:Generated_Source\PSoC4/mUART_UART.c ****             /* Enables interrupt to receive more bytes. */
 582:Generated_Source\PSoC4/mUART_UART.c ****             #if (mUART_CHECK_RX_SW_BUFFER)
 583:Generated_Source\PSoC4/mUART_UART.c ****             {
 584:Generated_Source\PSoC4/mUART_UART.c **** 
 585:Generated_Source\PSoC4/mUART_UART.c ****                 /* The byte has been read from RX FIFO. Clear RX interrupt to
 586:Generated_Source\PSoC4/mUART_UART.c ****                 * not involve interrupt handler when RX FIFO is empty.
 587:Generated_Source\PSoC4/mUART_UART.c ****                 */
 588:Generated_Source\PSoC4/mUART_UART.c ****                 mUART_ClearRxInterruptSource(mUART_INTR_RX_NOT_EMPTY);
 589:Generated_Source\PSoC4/mUART_UART.c **** 
 590:Generated_Source\PSoC4/mUART_UART.c ****                 mUART_EnableInt();
 434              		.loc 1 590 0
 435 0022 0720     		movs	r0, #7
 578:Generated_Source\PSoC4/mUART_UART.c **** 
 436              		.loc 1 578 0
 437 0024 1C68     		ldr	r4, [r3]
 438              	.LVL24:
 588:Generated_Source\PSoC4/mUART_UART.c **** 
 439              		.loc 1 588 0
 440 0026 0423     		movs	r3, #4
 441 0028 2B60     		str	r3, [r5]
 442              		.loc 1 590 0
 443 002a FFF7FEFF 		bl	CyIntEnable
 444              	.LVL25:
 445              	.L29:
 591:Generated_Source\PSoC4/mUART_UART.c ****             }
 592:Generated_Source\PSoC4/mUART_UART.c ****             #endif
 593:Generated_Source\PSoC4/mUART_UART.c ****         }
 594:Generated_Source\PSoC4/mUART_UART.c **** 
 595:Generated_Source\PSoC4/mUART_UART.c ****         /* Get and clear RX error mask */
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccCKGB6e.s 			page 20


 596:Generated_Source\PSoC4/mUART_UART.c ****         tmpStatus = (mUART_GetRxInterruptSource() & mUART_INTR_RX_ERR);
 597:Generated_Source\PSoC4/mUART_UART.c ****         mUART_ClearRxInterruptSource(mUART_INTR_RX_ERR);
 446              		.loc 1 597 0
 447 002e D823     		movs	r3, #216
 448 0030 9B00     		lsls	r3, r3, #2
 596:Generated_Source\PSoC4/mUART_UART.c ****         mUART_ClearRxInterruptSource(mUART_INTR_RX_ERR);
 449              		.loc 1 596 0
 450 0032 2868     		ldr	r0, [r5]
 451              	.LVL26:
 452              		.loc 1 597 0
 453 0034 2B60     		str	r3, [r5]
 454              	.LVL27:
 598:Generated_Source\PSoC4/mUART_UART.c **** 
 599:Generated_Source\PSoC4/mUART_UART.c ****         /* Puts together data and error status:
 600:Generated_Source\PSoC4/mUART_UART.c ****         * MP mode and accept address: 9th bit is set to notify mark.
 601:Generated_Source\PSoC4/mUART_UART.c ****         */
 602:Generated_Source\PSoC4/mUART_UART.c ****         rxData |= ((uint32) (tmpStatus << 8u));
 603:Generated_Source\PSoC4/mUART_UART.c **** 
 604:Generated_Source\PSoC4/mUART_UART.c ****         return (rxData);
 455              		.loc 1 604 0
 456 0036 D823     		movs	r3, #216
 457 0038 0002     		lsls	r0, r0, #8
 458              	.LVL28:
 459 003a 9B02     		lsls	r3, r3, #10
 460 003c 1840     		ands	r0, r3
 461 003e 2043     		orrs	r0, r4
 605:Generated_Source\PSoC4/mUART_UART.c ****     }
 462              		.loc 1 605 0
 463              		@ sp needed
 464 0040 70BD     		pop	{r4, r5, r6, pc}
 465              	.L31:
 466 0042 C046     		.align	2
 467              	.L30:
 468 0044 C00F0840 		.word	1074270144
 469 0048 40030840 		.word	1074266944
 470              		.cfi_endproc
 471              	.LFE7:
 472              		.size	mUART_UartGetByte, .-mUART_UartGetByte
 473              		.section	.text.mUART_UartSetRtsPolarity,"ax",%progbits
 474              		.align	1
 475              		.global	mUART_UartSetRtsPolarity
 476              		.code	16
 477              		.thumb_func
 478              		.type	mUART_UartSetRtsPolarity, %function
 479              	mUART_UartSetRtsPolarity:
 480              	.LFB8:
 606:Generated_Source\PSoC4/mUART_UART.c **** 
 607:Generated_Source\PSoC4/mUART_UART.c **** 
 608:Generated_Source\PSoC4/mUART_UART.c ****     #if !(mUART_CY_SCBIP_V0 || mUART_CY_SCBIP_V1)
 609:Generated_Source\PSoC4/mUART_UART.c ****         /*******************************************************************************
 610:Generated_Source\PSoC4/mUART_UART.c ****         * Function Name: mUART_UartSetRtsPolarity
 611:Generated_Source\PSoC4/mUART_UART.c ****         ****************************************************************************//**
 612:Generated_Source\PSoC4/mUART_UART.c ****         *
 613:Generated_Source\PSoC4/mUART_UART.c ****         *  Sets active polarity of RTS output signal.
 614:Generated_Source\PSoC4/mUART_UART.c ****         *  Only available for PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4100M / PSoC 4200M /
 615:Generated_Source\PSoC4/mUART_UART.c ****         *  PSoC 4200L / PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices.
 616:Generated_Source\PSoC4/mUART_UART.c ****         *
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccCKGB6e.s 			page 21


 617:Generated_Source\PSoC4/mUART_UART.c ****         *  \param polarity: Active polarity of RTS output signal.
 618:Generated_Source\PSoC4/mUART_UART.c ****         *   - mUART_UART_RTS_ACTIVE_LOW  - RTS signal is active low.
 619:Generated_Source\PSoC4/mUART_UART.c ****         *   - mUART_UART_RTS_ACTIVE_HIGH - RTS signal is active high.
 620:Generated_Source\PSoC4/mUART_UART.c ****         *
 621:Generated_Source\PSoC4/mUART_UART.c ****         *******************************************************************************/
 622:Generated_Source\PSoC4/mUART_UART.c ****         void mUART_UartSetRtsPolarity(uint32 polarity)
 623:Generated_Source\PSoC4/mUART_UART.c ****         {
 481              		.loc 1 623 0
 482              		.cfi_startproc
 483              		@ args = 0, pretend = 0, frame = 0
 484              		@ frame_needed = 0, uses_anonymous_args = 0
 485              		@ link register save eliminated.
 486              	.LVL29:
 487 0000 064B     		ldr	r3, .L36
 624:Generated_Source\PSoC4/mUART_UART.c ****             if(0u != polarity)
 488              		.loc 1 624 0
 489 0002 0028     		cmp	r0, #0
 490 0004 04D0     		beq	.L33
 625:Generated_Source\PSoC4/mUART_UART.c ****             {
 626:Generated_Source\PSoC4/mUART_UART.c ****                 mUART_UART_FLOW_CTRL_REG |= (uint32)  mUART_UART_FLOW_CTRL_RTS_POLARITY;
 491              		.loc 1 626 0
 492 0006 8021     		movs	r1, #128
 493 0008 1A68     		ldr	r2, [r3]
 494 000a 4902     		lsls	r1, r1, #9
 495 000c 0A43     		orrs	r2, r1
 496 000e 02E0     		b	.L35
 497              	.L33:
 627:Generated_Source\PSoC4/mUART_UART.c ****             }
 628:Generated_Source\PSoC4/mUART_UART.c ****             else
 629:Generated_Source\PSoC4/mUART_UART.c ****             {
 630:Generated_Source\PSoC4/mUART_UART.c ****                 mUART_UART_FLOW_CTRL_REG &= (uint32) ~mUART_UART_FLOW_CTRL_RTS_POLARITY;
 498              		.loc 1 630 0
 499 0010 1968     		ldr	r1, [r3]
 500 0012 034A     		ldr	r2, .L36+4
 501 0014 0A40     		ands	r2, r1
 502              	.L35:
 503 0016 1A60     		str	r2, [r3]
 631:Generated_Source\PSoC4/mUART_UART.c ****             }
 632:Generated_Source\PSoC4/mUART_UART.c ****         }
 504              		.loc 1 632 0
 505              		@ sp needed
 506 0018 7047     		bx	lr
 507              	.L37:
 508 001a C046     		.align	2
 509              	.L36:
 510 001c 50000840 		.word	1074266192
 511 0020 FFFFFEFF 		.word	-65537
 512              		.cfi_endproc
 513              	.LFE8:
 514              		.size	mUART_UartSetRtsPolarity, .-mUART_UartSetRtsPolarity
 515              		.section	.text.mUART_UartSetRtsFifoLevel,"ax",%progbits
 516              		.align	1
 517              		.global	mUART_UartSetRtsFifoLevel
 518              		.code	16
 519              		.thumb_func
 520              		.type	mUART_UartSetRtsFifoLevel, %function
 521              	mUART_UartSetRtsFifoLevel:
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccCKGB6e.s 			page 22


 522              	.LFB9:
 633:Generated_Source\PSoC4/mUART_UART.c **** 
 634:Generated_Source\PSoC4/mUART_UART.c **** 
 635:Generated_Source\PSoC4/mUART_UART.c ****         /*******************************************************************************
 636:Generated_Source\PSoC4/mUART_UART.c ****         * Function Name: mUART_UartSetRtsFifoLevel
 637:Generated_Source\PSoC4/mUART_UART.c ****         ****************************************************************************//**
 638:Generated_Source\PSoC4/mUART_UART.c ****         *
 639:Generated_Source\PSoC4/mUART_UART.c ****         *  Sets level in the RX FIFO for RTS signal activation.
 640:Generated_Source\PSoC4/mUART_UART.c ****         *  While the RX FIFO has fewer entries than the RX FIFO level the RTS signal
 641:Generated_Source\PSoC4/mUART_UART.c ****         *  remains active, otherwise the RTS signal becomes inactive.
 642:Generated_Source\PSoC4/mUART_UART.c ****         *  Only available for PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4100M / PSoC 4200M /
 643:Generated_Source\PSoC4/mUART_UART.c ****         *  PSoC 4200L / PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices.
 644:Generated_Source\PSoC4/mUART_UART.c ****         *
 645:Generated_Source\PSoC4/mUART_UART.c ****         *  \param level: Level in the RX FIFO for RTS signal activation.
 646:Generated_Source\PSoC4/mUART_UART.c ****         *   The range of valid level values is between 0 and RX FIFO depth - 1.
 647:Generated_Source\PSoC4/mUART_UART.c ****         *   Setting level value to 0 disables RTS signal activation.
 648:Generated_Source\PSoC4/mUART_UART.c ****         *
 649:Generated_Source\PSoC4/mUART_UART.c ****         *******************************************************************************/
 650:Generated_Source\PSoC4/mUART_UART.c ****         void mUART_UartSetRtsFifoLevel(uint32 level)
 651:Generated_Source\PSoC4/mUART_UART.c ****         {
 523              		.loc 1 651 0
 524              		.cfi_startproc
 525              		@ args = 0, pretend = 0, frame = 0
 526              		@ frame_needed = 0, uses_anonymous_args = 0
 527              		@ link register save eliminated.
 528              	.LVL30:
 652:Generated_Source\PSoC4/mUART_UART.c ****             uint32 uartFlowCtrl;
 653:Generated_Source\PSoC4/mUART_UART.c **** 
 654:Generated_Source\PSoC4/mUART_UART.c ****             uartFlowCtrl = mUART_UART_FLOW_CTRL_REG;
 655:Generated_Source\PSoC4/mUART_UART.c **** 
 656:Generated_Source\PSoC4/mUART_UART.c ****             uartFlowCtrl &= ((uint32) ~mUART_UART_FLOW_CTRL_TRIGGER_LEVEL_MASK); /* Clear level mas
 529              		.loc 1 656 0
 530 0000 0F22     		movs	r2, #15
 654:Generated_Source\PSoC4/mUART_UART.c **** 
 531              		.loc 1 654 0
 532 0002 0349     		ldr	r1, .L39
 657:Generated_Source\PSoC4/mUART_UART.c ****             uartFlowCtrl |= ((uint32) (mUART_UART_FLOW_CTRL_TRIGGER_LEVEL_MASK & level));
 533              		.loc 1 657 0
 534 0004 1040     		ands	r0, r2
 535              	.LVL31:
 654:Generated_Source\PSoC4/mUART_UART.c **** 
 536              		.loc 1 654 0
 537 0006 0B68     		ldr	r3, [r1]
 538              	.LVL32:
 658:Generated_Source\PSoC4/mUART_UART.c **** 
 659:Generated_Source\PSoC4/mUART_UART.c ****             mUART_UART_FLOW_CTRL_REG = uartFlowCtrl;
 660:Generated_Source\PSoC4/mUART_UART.c ****         }
 539              		.loc 1 660 0
 540              		@ sp needed
 656:Generated_Source\PSoC4/mUART_UART.c ****             uartFlowCtrl |= ((uint32) (mUART_UART_FLOW_CTRL_TRIGGER_LEVEL_MASK & level));
 541              		.loc 1 656 0
 542 0008 9343     		bics	r3, r2
 543              	.LVL33:
 657:Generated_Source\PSoC4/mUART_UART.c ****             uartFlowCtrl |= ((uint32) (mUART_UART_FLOW_CTRL_TRIGGER_LEVEL_MASK & level));
 544              		.loc 1 657 0
 545 000a 1843     		orrs	r0, r3
 546              	.LVL34:
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccCKGB6e.s 			page 23


 659:Generated_Source\PSoC4/mUART_UART.c ****         }
 547              		.loc 1 659 0
 548 000c 0860     		str	r0, [r1]
 549              		.loc 1 660 0
 550 000e 7047     		bx	lr
 551              	.L40:
 552              		.align	2
 553              	.L39:
 554 0010 50000840 		.word	1074266192
 555              		.cfi_endproc
 556              	.LFE9:
 557              		.size	mUART_UartSetRtsFifoLevel, .-mUART_UartSetRtsFifoLevel
 558              		.section	.text.mUART_UartPutString,"ax",%progbits
 559              		.align	1
 560              		.global	mUART_UartPutString
 561              		.code	16
 562              		.thumb_func
 563              		.type	mUART_UartPutString, %function
 564              	mUART_UartPutString:
 565              	.LFB10:
 661:Generated_Source\PSoC4/mUART_UART.c ****     #endif /* !(mUART_CY_SCBIP_V0 || mUART_CY_SCBIP_V1) */
 662:Generated_Source\PSoC4/mUART_UART.c **** 
 663:Generated_Source\PSoC4/mUART_UART.c **** #endif /* (mUART_UART_RX_DIRECTION) */
 664:Generated_Source\PSoC4/mUART_UART.c **** 
 665:Generated_Source\PSoC4/mUART_UART.c **** 
 666:Generated_Source\PSoC4/mUART_UART.c **** #if(mUART_UART_TX_DIRECTION)
 667:Generated_Source\PSoC4/mUART_UART.c ****     /*******************************************************************************
 668:Generated_Source\PSoC4/mUART_UART.c ****     * Function Name: mUART_UartPutString
 669:Generated_Source\PSoC4/mUART_UART.c ****     ****************************************************************************//**
 670:Generated_Source\PSoC4/mUART_UART.c ****     *
 671:Generated_Source\PSoC4/mUART_UART.c ****     *  Places a NULL terminated string in the transmit buffer to be sent at the
 672:Generated_Source\PSoC4/mUART_UART.c ****     *  next available bus time.
 673:Generated_Source\PSoC4/mUART_UART.c ****     *  This function is blocking and waits until there is a space available to put
 674:Generated_Source\PSoC4/mUART_UART.c ****     *  requested data in transmit buffer.
 675:Generated_Source\PSoC4/mUART_UART.c ****     *
 676:Generated_Source\PSoC4/mUART_UART.c ****     *  \param string: pointer to the null terminated string array to be placed in the
 677:Generated_Source\PSoC4/mUART_UART.c ****     *   transmit buffer.
 678:Generated_Source\PSoC4/mUART_UART.c ****     *
 679:Generated_Source\PSoC4/mUART_UART.c ****     *******************************************************************************/
 680:Generated_Source\PSoC4/mUART_UART.c ****     void mUART_UartPutString(const char8 string[])
 681:Generated_Source\PSoC4/mUART_UART.c ****     {
 566              		.loc 1 681 0
 567              		.cfi_startproc
 568              		@ args = 0, pretend = 0, frame = 0
 569              		@ frame_needed = 0, uses_anonymous_args = 0
 570              	.LVL35:
 571 0000 10B5     		push	{r4, lr}
 572              		.cfi_def_cfa_offset 8
 573              		.cfi_offset 4, -8
 574              		.cfi_offset 14, -4
 575 0002 0400     		movs	r4, r0
 576              	.LVL36:
 577              	.L42:
 578 0004 0134     		adds	r4, r4, #1
 579              	.LVL37:
 682:Generated_Source\PSoC4/mUART_UART.c ****         uint32 bufIndex;
 683:Generated_Source\PSoC4/mUART_UART.c **** 
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccCKGB6e.s 			page 24


 684:Generated_Source\PSoC4/mUART_UART.c ****         bufIndex = 0u;
 685:Generated_Source\PSoC4/mUART_UART.c **** 
 686:Generated_Source\PSoC4/mUART_UART.c ****         /* Blocks the control flow until all data has been sent */
 687:Generated_Source\PSoC4/mUART_UART.c ****         while(string[bufIndex] != ((char8) 0))
 580              		.loc 1 687 0
 581 0006 631E     		subs	r3, r4, #1
 582 0008 1878     		ldrb	r0, [r3]
 583 000a 0028     		cmp	r0, #0
 584 000c 02D0     		beq	.L44
 688:Generated_Source\PSoC4/mUART_UART.c ****         {
 689:Generated_Source\PSoC4/mUART_UART.c ****             mUART_UartPutChar((uint32) string[bufIndex]);
 585              		.loc 1 689 0
 586 000e FFF7FEFF 		bl	mUART_SpiUartWriteTxData
 587              	.LVL38:
 588 0012 F7E7     		b	.L42
 589              	.LVL39:
 590              	.L44:
 690:Generated_Source\PSoC4/mUART_UART.c ****             bufIndex++;
 691:Generated_Source\PSoC4/mUART_UART.c ****         }
 692:Generated_Source\PSoC4/mUART_UART.c ****     }
 591              		.loc 1 692 0
 592              		@ sp needed
 593              	.LVL40:
 594 0014 10BD     		pop	{r4, pc}
 595              		.cfi_endproc
 596              	.LFE10:
 597              		.size	mUART_UartPutString, .-mUART_UartPutString
 598              		.section	.text.mUART_UartPutCRLF,"ax",%progbits
 599              		.align	1
 600              		.global	mUART_UartPutCRLF
 601              		.code	16
 602              		.thumb_func
 603              		.type	mUART_UartPutCRLF, %function
 604              	mUART_UartPutCRLF:
 605              	.LFB11:
 693:Generated_Source\PSoC4/mUART_UART.c **** 
 694:Generated_Source\PSoC4/mUART_UART.c **** 
 695:Generated_Source\PSoC4/mUART_UART.c ****     /*******************************************************************************
 696:Generated_Source\PSoC4/mUART_UART.c ****     * Function Name: mUART_UartPutCRLF
 697:Generated_Source\PSoC4/mUART_UART.c ****     ****************************************************************************//**
 698:Generated_Source\PSoC4/mUART_UART.c ****     *
 699:Generated_Source\PSoC4/mUART_UART.c ****     *  Places byte of data followed by a carriage return (0x0D) and line feed
 700:Generated_Source\PSoC4/mUART_UART.c ****     *  (0x0A) in the transmit buffer.
 701:Generated_Source\PSoC4/mUART_UART.c ****     *  This function is blocking and waits until there is a space available to put
 702:Generated_Source\PSoC4/mUART_UART.c ****     *  all requested data in transmit buffer.
 703:Generated_Source\PSoC4/mUART_UART.c ****     *
 704:Generated_Source\PSoC4/mUART_UART.c ****     *  \param txDataByte: the data to be transmitted.
 705:Generated_Source\PSoC4/mUART_UART.c ****     *
 706:Generated_Source\PSoC4/mUART_UART.c ****     *******************************************************************************/
 707:Generated_Source\PSoC4/mUART_UART.c ****     void mUART_UartPutCRLF(uint32 txDataByte)
 708:Generated_Source\PSoC4/mUART_UART.c ****     {
 606              		.loc 1 708 0
 607              		.cfi_startproc
 608              		@ args = 0, pretend = 0, frame = 0
 609              		@ frame_needed = 0, uses_anonymous_args = 0
 610              	.LVL41:
 611 0000 10B5     		push	{r4, lr}
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccCKGB6e.s 			page 25


 612              		.cfi_def_cfa_offset 8
 613              		.cfi_offset 4, -8
 614              		.cfi_offset 14, -4
 709:Generated_Source\PSoC4/mUART_UART.c ****         mUART_UartPutChar(txDataByte);  /* Blocks control flow until all data has been sent */
 615              		.loc 1 709 0
 616 0002 FFF7FEFF 		bl	mUART_SpiUartWriteTxData
 617              	.LVL42:
 710:Generated_Source\PSoC4/mUART_UART.c ****         mUART_UartPutChar(0x0Du);       /* Blocks control flow until all data has been sent */
 618              		.loc 1 710 0
 619 0006 0D20     		movs	r0, #13
 620 0008 FFF7FEFF 		bl	mUART_SpiUartWriteTxData
 621              	.LVL43:
 711:Generated_Source\PSoC4/mUART_UART.c ****         mUART_UartPutChar(0x0Au);       /* Blocks control flow until all data has been sent */
 622              		.loc 1 711 0
 623 000c 0A20     		movs	r0, #10
 624 000e FFF7FEFF 		bl	mUART_SpiUartWriteTxData
 625              	.LVL44:
 712:Generated_Source\PSoC4/mUART_UART.c ****     }
 626              		.loc 1 712 0
 627              		@ sp needed
 628 0012 10BD     		pop	{r4, pc}
 629              		.cfi_endproc
 630              	.LFE11:
 631              		.size	mUART_UartPutCRLF, .-mUART_UartPutCRLF
 632              		.section	.text.mUART_UartEnableCts,"ax",%progbits
 633              		.align	1
 634              		.global	mUART_UartEnableCts
 635              		.code	16
 636              		.thumb_func
 637              		.type	mUART_UartEnableCts, %function
 638              	mUART_UartEnableCts:
 639              	.LFB12:
 713:Generated_Source\PSoC4/mUART_UART.c **** 
 714:Generated_Source\PSoC4/mUART_UART.c **** 
 715:Generated_Source\PSoC4/mUART_UART.c ****     #if !(mUART_CY_SCBIP_V0 || mUART_CY_SCBIP_V1)
 716:Generated_Source\PSoC4/mUART_UART.c ****         /*******************************************************************************
 717:Generated_Source\PSoC4/mUART_UART.c ****         * Function Name: mUARTSCB_UartEnableCts
 718:Generated_Source\PSoC4/mUART_UART.c ****         ****************************************************************************//**
 719:Generated_Source\PSoC4/mUART_UART.c ****         *
 720:Generated_Source\PSoC4/mUART_UART.c ****         *  Enables usage of CTS input signal by the UART transmitter.
 721:Generated_Source\PSoC4/mUART_UART.c ****         *  Only available for PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4100M / PSoC 4200M /
 722:Generated_Source\PSoC4/mUART_UART.c ****         *  PSoC 4200L / PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices.
 723:Generated_Source\PSoC4/mUART_UART.c ****         *
 724:Generated_Source\PSoC4/mUART_UART.c ****         *******************************************************************************/
 725:Generated_Source\PSoC4/mUART_UART.c ****         void mUART_UartEnableCts(void)
 726:Generated_Source\PSoC4/mUART_UART.c ****         {
 640              		.loc 1 726 0
 641              		.cfi_startproc
 642              		@ args = 0, pretend = 0, frame = 0
 643              		@ frame_needed = 0, uses_anonymous_args = 0
 644              		@ link register save eliminated.
 727:Generated_Source\PSoC4/mUART_UART.c ****             mUART_UART_FLOW_CTRL_REG |= (uint32)  mUART_UART_FLOW_CTRL_CTS_ENABLE;
 645              		.loc 1 727 0
 646 0000 8021     		movs	r1, #128
 647 0002 034A     		ldr	r2, .L47
 648 0004 8904     		lsls	r1, r1, #18
 649 0006 1368     		ldr	r3, [r2]
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccCKGB6e.s 			page 26


 728:Generated_Source\PSoC4/mUART_UART.c ****         }
 650              		.loc 1 728 0
 651              		@ sp needed
 727:Generated_Source\PSoC4/mUART_UART.c ****             mUART_UART_FLOW_CTRL_REG |= (uint32)  mUART_UART_FLOW_CTRL_CTS_ENABLE;
 652              		.loc 1 727 0
 653 0008 0B43     		orrs	r3, r1
 654 000a 1360     		str	r3, [r2]
 655              		.loc 1 728 0
 656 000c 7047     		bx	lr
 657              	.L48:
 658 000e C046     		.align	2
 659              	.L47:
 660 0010 50000840 		.word	1074266192
 661              		.cfi_endproc
 662              	.LFE12:
 663              		.size	mUART_UartEnableCts, .-mUART_UartEnableCts
 664              		.section	.text.mUART_UartDisableCts,"ax",%progbits
 665              		.align	1
 666              		.global	mUART_UartDisableCts
 667              		.code	16
 668              		.thumb_func
 669              		.type	mUART_UartDisableCts, %function
 670              	mUART_UartDisableCts:
 671              	.LFB13:
 729:Generated_Source\PSoC4/mUART_UART.c **** 
 730:Generated_Source\PSoC4/mUART_UART.c **** 
 731:Generated_Source\PSoC4/mUART_UART.c ****         /*******************************************************************************
 732:Generated_Source\PSoC4/mUART_UART.c ****         * Function Name: mUART_UartDisableCts
 733:Generated_Source\PSoC4/mUART_UART.c ****         ****************************************************************************//**
 734:Generated_Source\PSoC4/mUART_UART.c ****         *
 735:Generated_Source\PSoC4/mUART_UART.c ****         *  Disables usage of CTS input signal by the UART transmitter.
 736:Generated_Source\PSoC4/mUART_UART.c ****         *  Only available for PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4100M / PSoC 4200M /
 737:Generated_Source\PSoC4/mUART_UART.c ****         *  PSoC 4200L / PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices.
 738:Generated_Source\PSoC4/mUART_UART.c ****         *
 739:Generated_Source\PSoC4/mUART_UART.c ****         *******************************************************************************/
 740:Generated_Source\PSoC4/mUART_UART.c ****         void mUART_UartDisableCts(void)
 741:Generated_Source\PSoC4/mUART_UART.c ****         {
 672              		.loc 1 741 0
 673              		.cfi_startproc
 674              		@ args = 0, pretend = 0, frame = 0
 675              		@ frame_needed = 0, uses_anonymous_args = 0
 676              		@ link register save eliminated.
 742:Generated_Source\PSoC4/mUART_UART.c ****             mUART_UART_FLOW_CTRL_REG &= (uint32) ~mUART_UART_FLOW_CTRL_CTS_ENABLE;
 677              		.loc 1 742 0
 678 0000 024A     		ldr	r2, .L50
 679 0002 034B     		ldr	r3, .L50+4
 680 0004 1168     		ldr	r1, [r2]
 743:Generated_Source\PSoC4/mUART_UART.c ****         }
 681              		.loc 1 743 0
 682              		@ sp needed
 742:Generated_Source\PSoC4/mUART_UART.c ****             mUART_UART_FLOW_CTRL_REG &= (uint32) ~mUART_UART_FLOW_CTRL_CTS_ENABLE;
 683              		.loc 1 742 0
 684 0006 0B40     		ands	r3, r1
 685 0008 1360     		str	r3, [r2]
 686              		.loc 1 743 0
 687 000a 7047     		bx	lr
 688              	.L51:
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccCKGB6e.s 			page 27


 689              		.align	2
 690              	.L50:
 691 000c 50000840 		.word	1074266192
 692 0010 FFFFFFFD 		.word	-33554433
 693              		.cfi_endproc
 694              	.LFE13:
 695              		.size	mUART_UartDisableCts, .-mUART_UartDisableCts
 696              		.section	.text.mUART_UartSetCtsPolarity,"ax",%progbits
 697              		.align	1
 698              		.global	mUART_UartSetCtsPolarity
 699              		.code	16
 700              		.thumb_func
 701              		.type	mUART_UartSetCtsPolarity, %function
 702              	mUART_UartSetCtsPolarity:
 703              	.LFB14:
 744:Generated_Source\PSoC4/mUART_UART.c **** 
 745:Generated_Source\PSoC4/mUART_UART.c **** 
 746:Generated_Source\PSoC4/mUART_UART.c ****         /*******************************************************************************
 747:Generated_Source\PSoC4/mUART_UART.c ****         * Function Name: mUART_UartSetCtsPolarity
 748:Generated_Source\PSoC4/mUART_UART.c ****         ****************************************************************************//**
 749:Generated_Source\PSoC4/mUART_UART.c ****         *
 750:Generated_Source\PSoC4/mUART_UART.c ****         *  Sets active polarity of CTS input signal.
 751:Generated_Source\PSoC4/mUART_UART.c ****         *  Only available for PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4100M / PSoC 4200M /
 752:Generated_Source\PSoC4/mUART_UART.c ****         *  PSoC 4200L / PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices.
 753:Generated_Source\PSoC4/mUART_UART.c ****         *
 754:Generated_Source\PSoC4/mUART_UART.c ****         * \param
 755:Generated_Source\PSoC4/mUART_UART.c ****         * polarity: Active polarity of CTS output signal.
 756:Generated_Source\PSoC4/mUART_UART.c ****         *   - mUART_UART_CTS_ACTIVE_LOW  - CTS signal is active low.
 757:Generated_Source\PSoC4/mUART_UART.c ****         *   - mUART_UART_CTS_ACTIVE_HIGH - CTS signal is active high.
 758:Generated_Source\PSoC4/mUART_UART.c ****         *
 759:Generated_Source\PSoC4/mUART_UART.c ****         *******************************************************************************/
 760:Generated_Source\PSoC4/mUART_UART.c ****         void mUART_UartSetCtsPolarity(uint32 polarity)
 761:Generated_Source\PSoC4/mUART_UART.c ****         {
 704              		.loc 1 761 0
 705              		.cfi_startproc
 706              		@ args = 0, pretend = 0, frame = 0
 707              		@ frame_needed = 0, uses_anonymous_args = 0
 708              		@ link register save eliminated.
 709              	.LVL45:
 710 0000 064B     		ldr	r3, .L56
 762:Generated_Source\PSoC4/mUART_UART.c ****             if (0u != polarity)
 711              		.loc 1 762 0
 712 0002 0028     		cmp	r0, #0
 713 0004 04D0     		beq	.L53
 763:Generated_Source\PSoC4/mUART_UART.c ****             {
 764:Generated_Source\PSoC4/mUART_UART.c ****                 mUART_UART_FLOW_CTRL_REG |= (uint32)  mUART_UART_FLOW_CTRL_CTS_POLARITY;
 714              		.loc 1 764 0
 715 0006 8021     		movs	r1, #128
 716 0008 1A68     		ldr	r2, [r3]
 717 000a 4904     		lsls	r1, r1, #17
 718 000c 0A43     		orrs	r2, r1
 719 000e 02E0     		b	.L55
 720              	.L53:
 765:Generated_Source\PSoC4/mUART_UART.c ****             }
 766:Generated_Source\PSoC4/mUART_UART.c ****             else
 767:Generated_Source\PSoC4/mUART_UART.c ****             {
 768:Generated_Source\PSoC4/mUART_UART.c ****                 mUART_UART_FLOW_CTRL_REG &= (uint32) ~mUART_UART_FLOW_CTRL_CTS_POLARITY;
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccCKGB6e.s 			page 28


 721              		.loc 1 768 0
 722 0010 1968     		ldr	r1, [r3]
 723 0012 034A     		ldr	r2, .L56+4
 724 0014 0A40     		ands	r2, r1
 725              	.L55:
 726 0016 1A60     		str	r2, [r3]
 769:Generated_Source\PSoC4/mUART_UART.c ****             }
 770:Generated_Source\PSoC4/mUART_UART.c ****         }
 727              		.loc 1 770 0
 728              		@ sp needed
 729 0018 7047     		bx	lr
 730              	.L57:
 731 001a C046     		.align	2
 732              	.L56:
 733 001c 50000840 		.word	1074266192
 734 0020 FFFFFFFE 		.word	-16777217
 735              		.cfi_endproc
 736              	.LFE14:
 737              		.size	mUART_UartSetCtsPolarity, .-mUART_UartSetCtsPolarity
 738              		.section	.text.mUART_UartSendBreakBlocking,"ax",%progbits
 739              		.align	1
 740              		.global	mUART_UartSendBreakBlocking
 741              		.code	16
 742              		.thumb_func
 743              		.type	mUART_UartSendBreakBlocking, %function
 744              	mUART_UartSendBreakBlocking:
 745              	.LFB15:
 771:Generated_Source\PSoC4/mUART_UART.c ****     #endif /* !(mUART_CY_SCBIP_V0 || mUART_CY_SCBIP_V1) */
 772:Generated_Source\PSoC4/mUART_UART.c **** 
 773:Generated_Source\PSoC4/mUART_UART.c **** 
 774:Generated_Source\PSoC4/mUART_UART.c ****     /*******************************************************************************
 775:Generated_Source\PSoC4/mUART_UART.c ****     * Function Name: mUART_UartSendBreakBlocking
 776:Generated_Source\PSoC4/mUART_UART.c ****     ****************************************************************************//**
 777:Generated_Source\PSoC4/mUART_UART.c ****     *
 778:Generated_Source\PSoC4/mUART_UART.c ****     * Sends a break condition (logic low) of specified width on UART TX line.
 779:Generated_Source\PSoC4/mUART_UART.c ****     * Blocks until break is completed. Only call this function when UART TX FIFO
 780:Generated_Source\PSoC4/mUART_UART.c ****     * and shifter are empty.
 781:Generated_Source\PSoC4/mUART_UART.c ****     *
 782:Generated_Source\PSoC4/mUART_UART.c ****     * \param breakWidth
 783:Generated_Source\PSoC4/mUART_UART.c ****     * Width of break condition. Valid range is 4 to 16 bits.
 784:Generated_Source\PSoC4/mUART_UART.c ****     *
 785:Generated_Source\PSoC4/mUART_UART.c ****     * \note
 786:Generated_Source\PSoC4/mUART_UART.c ****     * Before sending break all UART TX interrupt sources are disabled. The state
 787:Generated_Source\PSoC4/mUART_UART.c ****     * of UART TX interrupt sources is restored before function returns.
 788:Generated_Source\PSoC4/mUART_UART.c ****     *
 789:Generated_Source\PSoC4/mUART_UART.c ****     * \sideeffect
 790:Generated_Source\PSoC4/mUART_UART.c ****     * If this function is called while there is data in the TX FIFO or shifter that
 791:Generated_Source\PSoC4/mUART_UART.c ****     * data will be shifted out in packets the size of breakWidth.
 792:Generated_Source\PSoC4/mUART_UART.c ****     *
 793:Generated_Source\PSoC4/mUART_UART.c ****     *******************************************************************************/
 794:Generated_Source\PSoC4/mUART_UART.c ****     void mUART_UartSendBreakBlocking(uint32 breakWidth)
 795:Generated_Source\PSoC4/mUART_UART.c ****     {
 746              		.loc 1 795 0
 747              		.cfi_startproc
 748              		@ args = 0, pretend = 0, frame = 8
 749              		@ frame_needed = 0, uses_anonymous_args = 0
 750              	.LVL46:
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccCKGB6e.s 			page 29


 751 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 752              		.cfi_def_cfa_offset 32
 753              		.cfi_offset 0, -32
 754              		.cfi_offset 1, -28
 755              		.cfi_offset 2, -24
 756              		.cfi_offset 4, -20
 757              		.cfi_offset 5, -16
 758              		.cfi_offset 6, -12
 759              		.cfi_offset 7, -8
 760              		.cfi_offset 14, -4
 796:Generated_Source\PSoC4/mUART_UART.c ****         uint32 txCtrlReg;
 797:Generated_Source\PSoC4/mUART_UART.c ****         uint32 txIntrReg;
 798:Generated_Source\PSoC4/mUART_UART.c **** 
 799:Generated_Source\PSoC4/mUART_UART.c ****         /* Disable all UART TX interrupt source and clear UART TX Done history */
 800:Generated_Source\PSoC4/mUART_UART.c ****         txIntrReg = mUART_GetTxInterruptMode();
 801:Generated_Source\PSoC4/mUART_UART.c ****         mUART_SetTxInterruptMode(0u);
 802:Generated_Source\PSoC4/mUART_UART.c ****         mUART_ClearTxInterruptSource(mUART_INTR_TX_UART_DONE);
 761              		.loc 1 802 0
 762 0002 8024     		movs	r4, #128
 801:Generated_Source\PSoC4/mUART_UART.c ****         mUART_ClearTxInterruptSource(mUART_INTR_TX_UART_DONE);
 763              		.loc 1 801 0
 764 0004 0026     		movs	r6, #0
 803:Generated_Source\PSoC4/mUART_UART.c **** 
 804:Generated_Source\PSoC4/mUART_UART.c ****         /* Store TX CTRL configuration */
 805:Generated_Source\PSoC4/mUART_UART.c ****         txCtrlReg = mUART_TX_CTRL_REG;
 806:Generated_Source\PSoC4/mUART_UART.c **** 
 807:Generated_Source\PSoC4/mUART_UART.c ****         /* Set break width */
 808:Generated_Source\PSoC4/mUART_UART.c ****         mUART_TX_CTRL_REG = (mUART_TX_CTRL_REG & (uint32) ~mUART_TX_CTRL_DATA_WIDTH_MASK) |
 765              		.loc 1 808 0
 766 0006 0F27     		movs	r7, #15
 800:Generated_Source\PSoC4/mUART_UART.c ****         mUART_SetTxInterruptMode(0u);
 767              		.loc 1 800 0
 768 0008 0E4A     		ldr	r2, .L62
 802:Generated_Source\PSoC4/mUART_UART.c **** 
 769              		.loc 1 802 0
 770 000a 0F4D     		ldr	r5, .L62+4
 800:Generated_Source\PSoC4/mUART_UART.c ****         mUART_SetTxInterruptMode(0u);
 771              		.loc 1 800 0
 772 000c 1368     		ldr	r3, [r2]
 802:Generated_Source\PSoC4/mUART_UART.c **** 
 773              		.loc 1 802 0
 774 000e A400     		lsls	r4, r4, #2
 800:Generated_Source\PSoC4/mUART_UART.c ****         mUART_SetTxInterruptMode(0u);
 775              		.loc 1 800 0
 776 0010 0193     		str	r3, [sp, #4]
 777              	.LVL47:
 805:Generated_Source\PSoC4/mUART_UART.c **** 
 778              		.loc 1 805 0
 779 0012 0E4B     		ldr	r3, .L62+8
 780              	.LVL48:
 801:Generated_Source\PSoC4/mUART_UART.c ****         mUART_ClearTxInterruptSource(mUART_INTR_TX_UART_DONE);
 781              		.loc 1 801 0
 782 0014 1660     		str	r6, [r2]
 802:Generated_Source\PSoC4/mUART_UART.c **** 
 783              		.loc 1 802 0
 784 0016 2C60     		str	r4, [r5]
 805:Generated_Source\PSoC4/mUART_UART.c **** 
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccCKGB6e.s 			page 30


 785              		.loc 1 805 0
 786 0018 1968     		ldr	r1, [r3]
 787              		.loc 1 808 0
 788 001a 0138     		subs	r0, r0, #1
 789              	.LVL49:
 805:Generated_Source\PSoC4/mUART_UART.c **** 
 790              		.loc 1 805 0
 791 001c 8C46     		mov	ip, r1
 792              	.LVL50:
 793              		.loc 1 808 0
 794 001e 1968     		ldr	r1, [r3]
 795              	.LVL51:
 796 0020 3840     		ands	r0, r7
 797              	.LVL52:
 798 0022 B943     		bics	r1, r7
 799 0024 0843     		orrs	r0, r1
 809:Generated_Source\PSoC4/mUART_UART.c ****                                         mUART_GET_TX_CTRL_DATA_WIDTH(breakWidth);
 810:Generated_Source\PSoC4/mUART_UART.c **** 
 811:Generated_Source\PSoC4/mUART_UART.c ****         /* Generate break */
 812:Generated_Source\PSoC4/mUART_UART.c ****         mUART_TX_FIFO_WR_REG = 0u;
 800              		.loc 1 812 0
 801 0026 0A49     		ldr	r1, .L62+12
 808:Generated_Source\PSoC4/mUART_UART.c ****                                         mUART_GET_TX_CTRL_DATA_WIDTH(breakWidth);
 802              		.loc 1 808 0
 803 0028 1860     		str	r0, [r3]
 804              		.loc 1 812 0
 805 002a 0E60     		str	r6, [r1]
 806              	.L59:
 813:Generated_Source\PSoC4/mUART_UART.c **** 
 814:Generated_Source\PSoC4/mUART_UART.c ****         /* Wait for break completion */
 815:Generated_Source\PSoC4/mUART_UART.c ****         while (0u == (mUART_GetTxInterruptSource() & mUART_INTR_TX_UART_DONE))
 807              		.loc 1 815 0 discriminator 1
 808 002c 2968     		ldr	r1, [r5]
 809 002e 2142     		tst	r1, r4
 810 0030 FCD0     		beq	.L59
 816:Generated_Source\PSoC4/mUART_UART.c ****         {
 817:Generated_Source\PSoC4/mUART_UART.c ****         }
 818:Generated_Source\PSoC4/mUART_UART.c **** 
 819:Generated_Source\PSoC4/mUART_UART.c ****         /* Clear all UART TX interrupt sources to  */
 820:Generated_Source\PSoC4/mUART_UART.c ****         mUART_ClearTxInterruptSource(mUART_INTR_TX_ALL);
 811              		.loc 1 820 0
 812 0032 0848     		ldr	r0, .L62+16
 813 0034 0449     		ldr	r1, .L62+4
 821:Generated_Source\PSoC4/mUART_UART.c **** 
 822:Generated_Source\PSoC4/mUART_UART.c ****         /* Restore TX interrupt sources and data width */
 823:Generated_Source\PSoC4/mUART_UART.c ****         mUART_TX_CTRL_REG = txCtrlReg;
 824:Generated_Source\PSoC4/mUART_UART.c ****         mUART_SetTxInterruptMode(txIntrReg);
 825:Generated_Source\PSoC4/mUART_UART.c ****     }
 814              		.loc 1 825 0
 815              		@ sp needed
 820:Generated_Source\PSoC4/mUART_UART.c **** 
 816              		.loc 1 820 0
 817 0036 0860     		str	r0, [r1]
 823:Generated_Source\PSoC4/mUART_UART.c ****         mUART_SetTxInterruptMode(txIntrReg);
 818              		.loc 1 823 0
 819 0038 6146     		mov	r1, ip
 820 003a 1960     		str	r1, [r3]
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccCKGB6e.s 			page 31


 824:Generated_Source\PSoC4/mUART_UART.c ****     }
 821              		.loc 1 824 0
 822 003c 019B     		ldr	r3, [sp, #4]
 823 003e 1360     		str	r3, [r2]
 824              		.loc 1 825 0
 825 0040 F7BD     		pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 826              	.L63:
 827 0042 C046     		.align	2
 828              	.L62:
 829 0044 880F0840 		.word	1074270088
 830 0048 800F0840 		.word	1074270080
 831 004c 00020840 		.word	1074266624
 832 0050 40020840 		.word	1074266688
 833 0054 F3070000 		.word	2035
 834              		.cfi_endproc
 835              	.LFE15:
 836              		.size	mUART_UartSendBreakBlocking, .-mUART_UartSendBreakBlocking
 837              		.text
 838              	.Letext0:
 839              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 840              		.file 3 "Generated_Source\\PSoC4\\mUART_PVT.h"
 841              		.file 4 "Generated_Source\\PSoC4\\mUART_SPI_UART_PVT.h"
 842              		.file 5 "Generated_Source\\PSoC4/CyLib.h"
 843              		.file 6 "Generated_Source\\PSoC4\\mUART_SPI_UART.h"
 844              		.section	.debug_info,"",%progbits
 845              	.Ldebug_info0:
 846 0000 9C040000 		.4byte	0x49c
 847 0004 0400     		.2byte	0x4
 848 0006 00000000 		.4byte	.Ldebug_abbrev0
 849 000a 04       		.byte	0x4
 850 000b 01       		.uleb128 0x1
 851 000c 90000000 		.4byte	.LASF61
 852 0010 0C       		.byte	0xc
 853 0011 7A010000 		.4byte	.LASF62
 854 0015 D0030000 		.4byte	.LASF63
 855 0019 00000000 		.4byte	.Ldebug_ranges0+0
 856 001d 00000000 		.4byte	0
 857 0021 00000000 		.4byte	.Ldebug_line0
 858 0025 02       		.uleb128 0x2
 859 0026 01       		.byte	0x1
 860 0027 06       		.byte	0x6
 861 0028 59000000 		.4byte	.LASF0
 862 002c 02       		.uleb128 0x2
 863 002d 01       		.byte	0x1
 864 002e 08       		.byte	0x8
 865 002f 10030000 		.4byte	.LASF1
 866 0033 02       		.uleb128 0x2
 867 0034 02       		.byte	0x2
 868 0035 05       		.byte	0x5
 869 0036 33030000 		.4byte	.LASF2
 870 003a 02       		.uleb128 0x2
 871 003b 02       		.byte	0x2
 872 003c 07       		.byte	0x7
 873 003d FC010000 		.4byte	.LASF3
 874 0041 02       		.uleb128 0x2
 875 0042 04       		.byte	0x4
 876 0043 05       		.byte	0x5
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccCKGB6e.s 			page 32


 877 0044 7A000000 		.4byte	.LASF4
 878 0048 02       		.uleb128 0x2
 879 0049 04       		.byte	0x4
 880 004a 07       		.byte	0x7
 881 004b C7010000 		.4byte	.LASF5
 882 004f 02       		.uleb128 0x2
 883 0050 08       		.byte	0x8
 884 0051 05       		.byte	0x5
 885 0052 4B000000 		.4byte	.LASF6
 886 0056 02       		.uleb128 0x2
 887 0057 08       		.byte	0x8
 888 0058 07       		.byte	0x7
 889 0059 19000000 		.4byte	.LASF7
 890 005d 03       		.uleb128 0x3
 891 005e 04       		.byte	0x4
 892 005f 05       		.byte	0x5
 893 0060 696E7400 		.ascii	"int\000"
 894 0064 02       		.uleb128 0x2
 895 0065 04       		.byte	0x4
 896 0066 07       		.byte	0x7
 897 0067 BA010000 		.4byte	.LASF8
 898 006b 04       		.uleb128 0x4
 899 006c 22010000 		.4byte	.LASF9
 900 0070 02       		.byte	0x2
 901 0071 FB01     		.2byte	0x1fb
 902 0073 2C000000 		.4byte	0x2c
 903 0077 04       		.uleb128 0x4
 904 0078 00000000 		.4byte	.LASF10
 905 007c 02       		.byte	0x2
 906 007d FC01     		.2byte	0x1fc
 907 007f 3A000000 		.4byte	0x3a
 908 0083 04       		.uleb128 0x4
 909 0084 55010000 		.4byte	.LASF11
 910 0088 02       		.byte	0x2
 911 0089 FD01     		.2byte	0x1fd
 912 008b 48000000 		.4byte	0x48
 913 008f 02       		.uleb128 0x2
 914 0090 04       		.byte	0x4
 915 0091 04       		.byte	0x4
 916 0092 D3020000 		.4byte	.LASF12
 917 0096 02       		.uleb128 0x2
 918 0097 08       		.byte	0x8
 919 0098 04       		.byte	0x4
 920 0099 31010000 		.4byte	.LASF13
 921 009d 04       		.uleb128 0x4
 922 009e 9C030000 		.4byte	.LASF14
 923 00a2 02       		.byte	0x2
 924 00a3 0C02     		.2byte	0x20c
 925 00a5 A9000000 		.4byte	0xa9
 926 00a9 02       		.uleb128 0x2
 927 00aa 01       		.byte	0x1
 928 00ab 08       		.byte	0x8
 929 00ac 97030000 		.4byte	.LASF15
 930 00b0 05       		.uleb128 0x5
 931 00b1 6B000000 		.4byte	0x6b
 932 00b5 04       		.uleb128 0x4
 933 00b6 84020000 		.4byte	.LASF16
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccCKGB6e.s 			page 33


 934 00ba 02       		.byte	0x2
 935 00bb A702     		.2byte	0x2a7
 936 00bd C1000000 		.4byte	0xc1
 937 00c1 05       		.uleb128 0x5
 938 00c2 83000000 		.4byte	0x83
 939 00c6 02       		.uleb128 0x2
 940 00c7 08       		.byte	0x8
 941 00c8 04       		.byte	0x4
 942 00c9 AE020000 		.4byte	.LASF17
 943 00cd 02       		.uleb128 0x2
 944 00ce 04       		.byte	0x4
 945 00cf 07       		.byte	0x7
 946 00d0 A5020000 		.4byte	.LASF18
 947 00d4 06       		.uleb128 0x6
 948 00d5 5C010000 		.4byte	.LASF21
 949 00d9 01       		.byte	0x1
 950 00da F7       		.byte	0xf7
 951 00db 00000000 		.4byte	.LFB1
 952 00df EC000000 		.4byte	.LFE1-.LFB1
 953 00e3 01       		.uleb128 0x1
 954 00e4 9C       		.byte	0x9c
 955 00e5 27010000 		.4byte	0x127
 956 00e9 07       		.uleb128 0x7
 957 00ea 3E000000 		.4byte	.LVL0
 958 00ee 4F040000 		.4byte	0x44f
 959 00f2 FD000000 		.4byte	0xfd
 960 00f6 08       		.uleb128 0x8
 961 00f7 01       		.uleb128 0x1
 962 00f8 50       		.byte	0x50
 963 00f9 02       		.uleb128 0x2
 964 00fa 75       		.byte	0x75
 965 00fb 00       		.sleb128 0
 966 00fc 00       		.byte	0
 967 00fd 07       		.uleb128 0x7
 968 00fe 46000000 		.4byte	.LVL1
 969 0102 5A040000 		.4byte	0x45a
 970 0106 16010000 		.4byte	0x116
 971 010a 08       		.uleb128 0x8
 972 010b 01       		.uleb128 0x1
 973 010c 50       		.byte	0x50
 974 010d 02       		.uleb128 0x2
 975 010e 75       		.byte	0x75
 976 010f 00       		.sleb128 0
 977 0110 08       		.uleb128 0x8
 978 0111 01       		.uleb128 0x1
 979 0112 51       		.byte	0x51
 980 0113 01       		.uleb128 0x1
 981 0114 33       		.byte	0x33
 982 0115 00       		.byte	0
 983 0116 09       		.uleb128 0x9
 984 0117 4E000000 		.4byte	.LVL2
 985 011b 65040000 		.4byte	0x465
 986 011f 08       		.uleb128 0x8
 987 0120 01       		.uleb128 0x1
 988 0121 50       		.byte	0x50
 989 0122 02       		.uleb128 0x2
 990 0123 75       		.byte	0x75
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccCKGB6e.s 			page 34


 991 0124 00       		.sleb128 0
 992 0125 00       		.byte	0
 993 0126 00       		.byte	0
 994 0127 0A       		.uleb128 0xa
 995 0128 1E030000 		.4byte	.LASF19
 996 012c 01       		.byte	0x1
 997 012d 3D01     		.2byte	0x13d
 998 012f 00000000 		.4byte	.LFB2
 999 0133 24000000 		.4byte	.LFE2-.LFB2
 1000 0137 01       		.uleb128 0x1
 1001 0138 9C       		.byte	0x9c
 1002 0139 0A       		.uleb128 0xa
 1003 013a C1030000 		.4byte	.LASF20
 1004 013e 01       		.byte	0x1
 1005 013f 7101     		.2byte	0x171
 1006 0141 00000000 		.4byte	.LFB3
 1007 0145 28000000 		.4byte	.LFE3-.LFB3
 1008 0149 01       		.uleb128 0x1
 1009 014a 9C       		.byte	0x9c
 1010 014b 0B       		.uleb128 0xb
 1011 014c 26020000 		.4byte	.LASF22
 1012 0150 01       		.byte	0x1
 1013 0151 B101     		.2byte	0x1b1
 1014 0153 00000000 		.4byte	.LFB4
 1015 0157 14000000 		.4byte	.LFE4-.LFB4
 1016 015b 01       		.uleb128 0x1
 1017 015c 9C       		.byte	0x9c
 1018 015d 82010000 		.4byte	0x182
 1019 0161 0C       		.uleb128 0xc
 1020 0162 BA020000 		.4byte	.LASF24
 1021 0166 01       		.byte	0x1
 1022 0167 B101     		.2byte	0x1b1
 1023 0169 83000000 		.4byte	0x83
 1024 016d 00000000 		.4byte	.LLST0
 1025 0171 0D       		.uleb128 0xd
 1026 0172 28010000 		.4byte	.LASF26
 1027 0176 01       		.byte	0x1
 1028 0177 B301     		.2byte	0x1b3
 1029 0179 83000000 		.4byte	0x83
 1030 017d 21000000 		.4byte	.LLST1
 1031 0181 00       		.byte	0
 1032 0182 0B       		.uleb128 0xb
 1033 0183 8A020000 		.4byte	.LASF23
 1034 0187 01       		.byte	0x1
 1035 0188 CA01     		.2byte	0x1ca
 1036 018a 00000000 		.4byte	.LFB5
 1037 018e 18000000 		.4byte	.LFE5-.LFB5
 1038 0192 01       		.uleb128 0x1
 1039 0193 9C       		.byte	0x9c
 1040 0194 B9010000 		.4byte	0x1b9
 1041 0198 0C       		.uleb128 0xc
 1042 0199 8B030000 		.4byte	.LASF25
 1043 019d 01       		.byte	0x1
 1044 019e CA01     		.2byte	0x1ca
 1045 01a0 83000000 		.4byte	0x83
 1046 01a4 3F000000 		.4byte	.LLST2
 1047 01a8 0D       		.uleb128 0xd
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccCKGB6e.s 			page 35


 1048 01a9 28010000 		.4byte	.LASF26
 1049 01ad 01       		.byte	0x1
 1050 01ae CC01     		.2byte	0x1cc
 1051 01b0 83000000 		.4byte	0x83
 1052 01b4 60000000 		.4byte	.LLST3
 1053 01b8 00       		.byte	0
 1054 01b9 0E       		.uleb128 0xe
 1055 01ba 5F020000 		.4byte	.LASF28
 1056 01be 01       		.byte	0x1
 1057 01bf F201     		.2byte	0x1f2
 1058 01c1 83000000 		.4byte	0x83
 1059 01c5 00000000 		.4byte	.LFB6
 1060 01c9 28000000 		.4byte	.LFE6-.LFB6
 1061 01cd 01       		.uleb128 0x1
 1062 01ce 9C       		.byte	0x9c
 1063 01cf F6010000 		.4byte	0x1f6
 1064 01d3 0D       		.uleb128 0xd
 1065 01d4 68030000 		.4byte	.LASF27
 1066 01d8 01       		.byte	0x1
 1067 01d9 F401     		.2byte	0x1f4
 1068 01db 83000000 		.4byte	0x83
 1069 01df 89000000 		.4byte	.LLST4
 1070 01e3 0F       		.uleb128 0xf
 1071 01e4 06000000 		.4byte	.LVL14
 1072 01e8 70040000 		.4byte	0x470
 1073 01ec 0F       		.uleb128 0xf
 1074 01ed 12000000 		.4byte	.LVL15
 1075 01f1 7C040000 		.4byte	0x47c
 1076 01f5 00       		.byte	0
 1077 01f6 0E       		.uleb128 0xe
 1078 01f7 42040000 		.4byte	.LASF29
 1079 01fb 01       		.byte	0x1
 1080 01fc 2402     		.2byte	0x224
 1081 01fe 83000000 		.4byte	0x83
 1082 0202 00000000 		.4byte	.LFB7
 1083 0206 4C000000 		.4byte	.LFE7-.LFB7
 1084 020a 01       		.uleb128 0x1
 1085 020b 9C       		.byte	0x9c
 1086 020c 78020000 		.4byte	0x278
 1087 0210 0D       		.uleb128 0xd
 1088 0211 68030000 		.4byte	.LASF27
 1089 0215 01       		.byte	0x1
 1090 0216 2602     		.2byte	0x226
 1091 0218 83000000 		.4byte	0x83
 1092 021c BF000000 		.4byte	.LLST5
 1093 0220 0D       		.uleb128 0xd
 1094 0221 30000000 		.4byte	.LASF30
 1095 0225 01       		.byte	0x1
 1096 0226 2702     		.2byte	0x227
 1097 0228 83000000 		.4byte	0x83
 1098 022c F3000000 		.4byte	.LLST6
 1099 0230 07       		.uleb128 0x7
 1100 0231 08000000 		.4byte	.LVL18
 1101 0235 4F040000 		.4byte	0x44f
 1102 0239 43020000 		.4byte	0x243
 1103 023d 08       		.uleb128 0x8
 1104 023e 01       		.uleb128 0x1
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccCKGB6e.s 			page 36


 1105 023f 50       		.byte	0x50
 1106 0240 01       		.uleb128 0x1
 1107 0241 37       		.byte	0x37
 1108 0242 00       		.byte	0
 1109 0243 0F       		.uleb128 0xf
 1110 0244 0C000000 		.4byte	.LVL19
 1111 0248 70040000 		.4byte	0x470
 1112 024c 07       		.uleb128 0x7
 1113 024d 18000000 		.4byte	.LVL20
 1114 0251 88040000 		.4byte	0x488
 1115 0255 5F020000 		.4byte	0x25f
 1116 0259 08       		.uleb128 0x8
 1117 025a 01       		.uleb128 0x1
 1118 025b 50       		.byte	0x50
 1119 025c 01       		.uleb128 0x1
 1120 025d 37       		.byte	0x37
 1121 025e 00       		.byte	0
 1122 025f 0F       		.uleb128 0xf
 1123 0260 1C000000 		.4byte	.LVL21
 1124 0264 7C040000 		.4byte	0x47c
 1125 0268 09       		.uleb128 0x9
 1126 0269 2E000000 		.4byte	.LVL25
 1127 026d 88040000 		.4byte	0x488
 1128 0271 08       		.uleb128 0x8
 1129 0272 01       		.uleb128 0x1
 1130 0273 50       		.byte	0x50
 1131 0274 01       		.uleb128 0x1
 1132 0275 37       		.byte	0x37
 1133 0276 00       		.byte	0
 1134 0277 00       		.byte	0
 1135 0278 0B       		.uleb128 0xb
 1136 0279 F7020000 		.4byte	.LASF31
 1137 027d 01       		.byte	0x1
 1138 027e 6E02     		.2byte	0x26e
 1139 0280 00000000 		.4byte	.LFB8
 1140 0284 24000000 		.4byte	.LFE8-.LFB8
 1141 0288 01       		.uleb128 0x1
 1142 0289 9C       		.byte	0x9c
 1143 028a 9D020000 		.4byte	0x29d
 1144 028e 10       		.uleb128 0x10
 1145 028f 82030000 		.4byte	.LASF32
 1146 0293 01       		.byte	0x1
 1147 0294 6E02     		.2byte	0x26e
 1148 0296 83000000 		.4byte	0x83
 1149 029a 01       		.uleb128 0x1
 1150 029b 50       		.byte	0x50
 1151 029c 00       		.byte	0
 1152 029d 0B       		.uleb128 0xb
 1153 029e 0F040000 		.4byte	.LASF33
 1154 02a2 01       		.byte	0x1
 1155 02a3 8A02     		.2byte	0x28a
 1156 02a5 00000000 		.4byte	.LFB9
 1157 02a9 14000000 		.4byte	.LFE9-.LFB9
 1158 02ad 01       		.uleb128 0x1
 1159 02ae 9C       		.byte	0x9c
 1160 02af D4020000 		.4byte	0x2d4
 1161 02b3 0C       		.uleb128 0xc
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccCKGB6e.s 			page 37


 1162 02b4 F6010000 		.4byte	.LASF34
 1163 02b8 01       		.byte	0x1
 1164 02b9 8A02     		.2byte	0x28a
 1165 02bb 83000000 		.4byte	0x83
 1166 02bf 0C010000 		.4byte	.LLST7
 1167 02c3 0D       		.uleb128 0xd
 1168 02c4 5B030000 		.4byte	.LASF35
 1169 02c8 01       		.byte	0x1
 1170 02c9 8C02     		.2byte	0x28c
 1171 02cb 83000000 		.4byte	0x83
 1172 02cf 2D010000 		.4byte	.LLST8
 1173 02d3 00       		.byte	0
 1174 02d4 0B       		.uleb128 0xb
 1175 02d5 E3020000 		.4byte	.LASF36
 1176 02d9 01       		.byte	0x1
 1177 02da A802     		.2byte	0x2a8
 1178 02dc 00000000 		.4byte	.LFB10
 1179 02e0 16000000 		.4byte	.LFE10-.LFB10
 1180 02e4 01       		.uleb128 0x1
 1181 02e5 9C       		.byte	0x9c
 1182 02e6 14030000 		.4byte	0x314
 1183 02ea 0C       		.uleb128 0xc
 1184 02eb 12000000 		.4byte	.LASF37
 1185 02ef 01       		.byte	0x1
 1186 02f0 A802     		.2byte	0x2a8
 1187 02f2 14030000 		.4byte	0x314
 1188 02f6 4B010000 		.4byte	.LLST9
 1189 02fa 0D       		.uleb128 0xd
 1190 02fb 56020000 		.4byte	.LASF38
 1191 02ff 01       		.byte	0x1
 1192 0300 AA02     		.2byte	0x2aa
 1193 0302 83000000 		.4byte	0x83
 1194 0306 6C010000 		.4byte	.LLST10
 1195 030a 0F       		.uleb128 0xf
 1196 030b 12000000 		.4byte	.LVL38
 1197 030f 93040000 		.4byte	0x493
 1198 0313 00       		.byte	0
 1199 0314 11       		.uleb128 0x11
 1200 0315 04       		.byte	0x4
 1201 0316 1A030000 		.4byte	0x31a
 1202 031a 12       		.uleb128 0x12
 1203 031b 9D000000 		.4byte	0x9d
 1204 031f 0B       		.uleb128 0xb
 1205 0320 49030000 		.4byte	.LASF39
 1206 0324 01       		.byte	0x1
 1207 0325 C302     		.2byte	0x2c3
 1208 0327 00000000 		.4byte	.LFB11
 1209 032b 14000000 		.4byte	.LFE11-.LFB11
 1210 032f 01       		.uleb128 0x1
 1211 0330 9C       		.byte	0x9c
 1212 0331 7D030000 		.4byte	0x37d
 1213 0335 0C       		.uleb128 0xc
 1214 0336 07000000 		.4byte	.LASF40
 1215 033a 01       		.byte	0x1
 1216 033b C302     		.2byte	0x2c3
 1217 033d 83000000 		.4byte	0x83
 1218 0341 CB010000 		.4byte	.LLST11
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccCKGB6e.s 			page 38


 1219 0345 07       		.uleb128 0x7
 1220 0346 06000000 		.4byte	.LVL42
 1221 034a 93040000 		.4byte	0x493
 1222 034e 5A030000 		.4byte	0x35a
 1223 0352 08       		.uleb128 0x8
 1224 0353 01       		.uleb128 0x1
 1225 0354 50       		.byte	0x50
 1226 0355 03       		.uleb128 0x3
 1227 0356 F3       		.byte	0xf3
 1228 0357 01       		.uleb128 0x1
 1229 0358 50       		.byte	0x50
 1230 0359 00       		.byte	0
 1231 035a 07       		.uleb128 0x7
 1232 035b 0C000000 		.4byte	.LVL43
 1233 035f 93040000 		.4byte	0x493
 1234 0363 6D030000 		.4byte	0x36d
 1235 0367 08       		.uleb128 0x8
 1236 0368 01       		.uleb128 0x1
 1237 0369 50       		.byte	0x50
 1238 036a 01       		.uleb128 0x1
 1239 036b 3D       		.byte	0x3d
 1240 036c 00       		.byte	0
 1241 036d 09       		.uleb128 0x9
 1242 036e 12000000 		.4byte	.LVL44
 1243 0372 93040000 		.4byte	0x493
 1244 0376 08       		.uleb128 0x8
 1245 0377 01       		.uleb128 0x1
 1246 0378 50       		.byte	0x50
 1247 0379 01       		.uleb128 0x1
 1248 037a 3A       		.byte	0x3a
 1249 037b 00       		.byte	0
 1250 037c 00       		.byte	0
 1251 037d 0A       		.uleb128 0xa
 1252 037e AD030000 		.4byte	.LASF41
 1253 0382 01       		.byte	0x1
 1254 0383 D502     		.2byte	0x2d5
 1255 0385 00000000 		.4byte	.LFB12
 1256 0389 14000000 		.4byte	.LFE12-.LFB12
 1257 038d 01       		.uleb128 0x1
 1258 038e 9C       		.byte	0x9c
 1259 038f 0A       		.uleb128 0xa
 1260 0390 65000000 		.4byte	.LASF42
 1261 0394 01       		.byte	0x1
 1262 0395 E402     		.2byte	0x2e4
 1263 0397 00000000 		.4byte	.LFB13
 1264 039b 14000000 		.4byte	.LFE13-.LFB13
 1265 039f 01       		.uleb128 0x1
 1266 03a0 9C       		.byte	0x9c
 1267 03a1 0B       		.uleb128 0xb
 1268 03a2 3D020000 		.4byte	.LASF43
 1269 03a6 01       		.byte	0x1
 1270 03a7 F802     		.2byte	0x2f8
 1271 03a9 00000000 		.4byte	.LFB14
 1272 03ad 24000000 		.4byte	.LFE14-.LFB14
 1273 03b1 01       		.uleb128 0x1
 1274 03b2 9C       		.byte	0x9c
 1275 03b3 C6030000 		.4byte	0x3c6
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccCKGB6e.s 			page 39


 1276 03b7 10       		.uleb128 0x10
 1277 03b8 82030000 		.4byte	.LASF32
 1278 03bc 01       		.byte	0x1
 1279 03bd F802     		.2byte	0x2f8
 1280 03bf 83000000 		.4byte	0x83
 1281 03c3 01       		.uleb128 0x1
 1282 03c4 50       		.byte	0x50
 1283 03c5 00       		.byte	0
 1284 03c6 0B       		.uleb128 0xb
 1285 03c7 9E010000 		.4byte	.LASF44
 1286 03cb 01       		.byte	0x1
 1287 03cc 1A03     		.2byte	0x31a
 1288 03ce 00000000 		.4byte	.LFB15
 1289 03d2 58000000 		.4byte	.LFE15-.LFB15
 1290 03d6 01       		.uleb128 0x1
 1291 03d7 9C       		.byte	0x9c
 1292 03d8 0D040000 		.4byte	0x40d
 1293 03dc 0C       		.uleb128 0xc
 1294 03dd A2030000 		.4byte	.LASF45
 1295 03e1 01       		.byte	0x1
 1296 03e2 1A03     		.2byte	0x31a
 1297 03e4 83000000 		.4byte	0x83
 1298 03e8 EC010000 		.4byte	.LLST12
 1299 03ec 0D       		.uleb128 0xd
 1300 03ed D9020000 		.4byte	.LASF46
 1301 03f1 01       		.byte	0x1
 1302 03f2 1C03     		.2byte	0x31c
 1303 03f4 83000000 		.4byte	0x83
 1304 03f8 1A020000 		.4byte	.LLST13
 1305 03fc 0D       		.uleb128 0xd
 1306 03fd 38010000 		.4byte	.LASF47
 1307 0401 01       		.byte	0x1
 1308 0402 1D03     		.2byte	0x31d
 1309 0404 83000000 		.4byte	0x83
 1310 0408 38020000 		.4byte	.LLST14
 1311 040c 00       		.byte	0
 1312 040d 13       		.uleb128 0x13
 1313 040e 3A000000 		.4byte	.LASF48
 1314 0412 03       		.byte	0x3
 1315 0413 5B       		.byte	0x5b
 1316 0414 77000000 		.4byte	0x77
 1317 0418 13       		.uleb128 0x13
 1318 0419 42010000 		.4byte	.LASF49
 1319 041d 04       		.byte	0x4
 1320 041e 1F       		.byte	0x1f
 1321 041f C1000000 		.4byte	0xc1
 1322 0423 13       		.uleb128 0x13
 1323 0424 6F030000 		.4byte	.LASF50
 1324 0428 04       		.byte	0x4
 1325 0429 20       		.byte	0x20
 1326 042a C1000000 		.4byte	0xc1
 1327 042e 13       		.uleb128 0x13
 1328 042f 0F020000 		.4byte	.LASF51
 1329 0433 04       		.byte	0x4
 1330 0434 2A       		.byte	0x2a
 1331 0435 B0000000 		.4byte	0xb0
 1332 0439 13       		.uleb128 0x13
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccCKGB6e.s 			page 40


 1333 043a 54040000 		.4byte	.LASF52
 1334 043e 04       		.byte	0x4
 1335 043f 2F       		.byte	0x2f
 1336 0440 C1000000 		.4byte	0xc1
 1337 0444 13       		.uleb128 0x13
 1338 0445 71020000 		.4byte	.LASF53
 1339 0449 04       		.byte	0x4
 1340 044a 30       		.byte	0x30
 1341 044b C1000000 		.4byte	0xc1
 1342 044f 14       		.uleb128 0x14
 1343 0450 83000000 		.4byte	.LASF54
 1344 0454 83000000 		.4byte	.LASF54
 1345 0458 05       		.byte	0x5
 1346 0459 D8       		.byte	0xd8
 1347 045a 14       		.uleb128 0x14
 1348 045b C2020000 		.4byte	.LASF55
 1349 045f C2020000 		.4byte	.LASF55
 1350 0463 05       		.byte	0x5
 1351 0464 D3       		.byte	0xd3
 1352 0465 14       		.uleb128 0x14
 1353 0466 6B010000 		.4byte	.LASF56
 1354 046a 6B010000 		.4byte	.LASF56
 1355 046e 05       		.byte	0x5
 1356 046f D0       		.byte	0xd0
 1357 0470 15       		.uleb128 0x15
 1358 0471 D9010000 		.4byte	.LASF57
 1359 0475 D9010000 		.4byte	.LASF57
 1360 0479 06       		.byte	0x6
 1361 047a 3E03     		.2byte	0x33e
 1362 047c 15       		.uleb128 0x15
 1363 047d 67040000 		.4byte	.LASF58
 1364 0481 67040000 		.4byte	.LASF58
 1365 0485 06       		.byte	0x6
 1366 0486 3D03     		.2byte	0x33d
 1367 0488 14       		.uleb128 0x14
 1368 0489 3D030000 		.4byte	.LASF59
 1369 048d 3D030000 		.4byte	.LASF59
 1370 0491 05       		.byte	0x5
 1371 0492 D6       		.byte	0xd6
 1372 0493 15       		.uleb128 0x15
 1373 0494 29040000 		.4byte	.LASF60
 1374 0498 29040000 		.4byte	.LASF60
 1375 049c 06       		.byte	0x6
 1376 049d 4403     		.2byte	0x344
 1377 049f 00       		.byte	0
 1378              		.section	.debug_abbrev,"",%progbits
 1379              	.Ldebug_abbrev0:
 1380 0000 01       		.uleb128 0x1
 1381 0001 11       		.uleb128 0x11
 1382 0002 01       		.byte	0x1
 1383 0003 25       		.uleb128 0x25
 1384 0004 0E       		.uleb128 0xe
 1385 0005 13       		.uleb128 0x13
 1386 0006 0B       		.uleb128 0xb
 1387 0007 03       		.uleb128 0x3
 1388 0008 0E       		.uleb128 0xe
 1389 0009 1B       		.uleb128 0x1b
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccCKGB6e.s 			page 41


 1390 000a 0E       		.uleb128 0xe
 1391 000b 55       		.uleb128 0x55
 1392 000c 17       		.uleb128 0x17
 1393 000d 11       		.uleb128 0x11
 1394 000e 01       		.uleb128 0x1
 1395 000f 10       		.uleb128 0x10
 1396 0010 17       		.uleb128 0x17
 1397 0011 00       		.byte	0
 1398 0012 00       		.byte	0
 1399 0013 02       		.uleb128 0x2
 1400 0014 24       		.uleb128 0x24
 1401 0015 00       		.byte	0
 1402 0016 0B       		.uleb128 0xb
 1403 0017 0B       		.uleb128 0xb
 1404 0018 3E       		.uleb128 0x3e
 1405 0019 0B       		.uleb128 0xb
 1406 001a 03       		.uleb128 0x3
 1407 001b 0E       		.uleb128 0xe
 1408 001c 00       		.byte	0
 1409 001d 00       		.byte	0
 1410 001e 03       		.uleb128 0x3
 1411 001f 24       		.uleb128 0x24
 1412 0020 00       		.byte	0
 1413 0021 0B       		.uleb128 0xb
 1414 0022 0B       		.uleb128 0xb
 1415 0023 3E       		.uleb128 0x3e
 1416 0024 0B       		.uleb128 0xb
 1417 0025 03       		.uleb128 0x3
 1418 0026 08       		.uleb128 0x8
 1419 0027 00       		.byte	0
 1420 0028 00       		.byte	0
 1421 0029 04       		.uleb128 0x4
 1422 002a 16       		.uleb128 0x16
 1423 002b 00       		.byte	0
 1424 002c 03       		.uleb128 0x3
 1425 002d 0E       		.uleb128 0xe
 1426 002e 3A       		.uleb128 0x3a
 1427 002f 0B       		.uleb128 0xb
 1428 0030 3B       		.uleb128 0x3b
 1429 0031 05       		.uleb128 0x5
 1430 0032 49       		.uleb128 0x49
 1431 0033 13       		.uleb128 0x13
 1432 0034 00       		.byte	0
 1433 0035 00       		.byte	0
 1434 0036 05       		.uleb128 0x5
 1435 0037 35       		.uleb128 0x35
 1436 0038 00       		.byte	0
 1437 0039 49       		.uleb128 0x49
 1438 003a 13       		.uleb128 0x13
 1439 003b 00       		.byte	0
 1440 003c 00       		.byte	0
 1441 003d 06       		.uleb128 0x6
 1442 003e 2E       		.uleb128 0x2e
 1443 003f 01       		.byte	0x1
 1444 0040 3F       		.uleb128 0x3f
 1445 0041 19       		.uleb128 0x19
 1446 0042 03       		.uleb128 0x3
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccCKGB6e.s 			page 42


 1447 0043 0E       		.uleb128 0xe
 1448 0044 3A       		.uleb128 0x3a
 1449 0045 0B       		.uleb128 0xb
 1450 0046 3B       		.uleb128 0x3b
 1451 0047 0B       		.uleb128 0xb
 1452 0048 27       		.uleb128 0x27
 1453 0049 19       		.uleb128 0x19
 1454 004a 11       		.uleb128 0x11
 1455 004b 01       		.uleb128 0x1
 1456 004c 12       		.uleb128 0x12
 1457 004d 06       		.uleb128 0x6
 1458 004e 40       		.uleb128 0x40
 1459 004f 18       		.uleb128 0x18
 1460 0050 9742     		.uleb128 0x2117
 1461 0052 19       		.uleb128 0x19
 1462 0053 01       		.uleb128 0x1
 1463 0054 13       		.uleb128 0x13
 1464 0055 00       		.byte	0
 1465 0056 00       		.byte	0
 1466 0057 07       		.uleb128 0x7
 1467 0058 898201   		.uleb128 0x4109
 1468 005b 01       		.byte	0x1
 1469 005c 11       		.uleb128 0x11
 1470 005d 01       		.uleb128 0x1
 1471 005e 31       		.uleb128 0x31
 1472 005f 13       		.uleb128 0x13
 1473 0060 01       		.uleb128 0x1
 1474 0061 13       		.uleb128 0x13
 1475 0062 00       		.byte	0
 1476 0063 00       		.byte	0
 1477 0064 08       		.uleb128 0x8
 1478 0065 8A8201   		.uleb128 0x410a
 1479 0068 00       		.byte	0
 1480 0069 02       		.uleb128 0x2
 1481 006a 18       		.uleb128 0x18
 1482 006b 9142     		.uleb128 0x2111
 1483 006d 18       		.uleb128 0x18
 1484 006e 00       		.byte	0
 1485 006f 00       		.byte	0
 1486 0070 09       		.uleb128 0x9
 1487 0071 898201   		.uleb128 0x4109
 1488 0074 01       		.byte	0x1
 1489 0075 11       		.uleb128 0x11
 1490 0076 01       		.uleb128 0x1
 1491 0077 31       		.uleb128 0x31
 1492 0078 13       		.uleb128 0x13
 1493 0079 00       		.byte	0
 1494 007a 00       		.byte	0
 1495 007b 0A       		.uleb128 0xa
 1496 007c 2E       		.uleb128 0x2e
 1497 007d 00       		.byte	0
 1498 007e 3F       		.uleb128 0x3f
 1499 007f 19       		.uleb128 0x19
 1500 0080 03       		.uleb128 0x3
 1501 0081 0E       		.uleb128 0xe
 1502 0082 3A       		.uleb128 0x3a
 1503 0083 0B       		.uleb128 0xb
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccCKGB6e.s 			page 43


 1504 0084 3B       		.uleb128 0x3b
 1505 0085 05       		.uleb128 0x5
 1506 0086 27       		.uleb128 0x27
 1507 0087 19       		.uleb128 0x19
 1508 0088 11       		.uleb128 0x11
 1509 0089 01       		.uleb128 0x1
 1510 008a 12       		.uleb128 0x12
 1511 008b 06       		.uleb128 0x6
 1512 008c 40       		.uleb128 0x40
 1513 008d 18       		.uleb128 0x18
 1514 008e 9742     		.uleb128 0x2117
 1515 0090 19       		.uleb128 0x19
 1516 0091 00       		.byte	0
 1517 0092 00       		.byte	0
 1518 0093 0B       		.uleb128 0xb
 1519 0094 2E       		.uleb128 0x2e
 1520 0095 01       		.byte	0x1
 1521 0096 3F       		.uleb128 0x3f
 1522 0097 19       		.uleb128 0x19
 1523 0098 03       		.uleb128 0x3
 1524 0099 0E       		.uleb128 0xe
 1525 009a 3A       		.uleb128 0x3a
 1526 009b 0B       		.uleb128 0xb
 1527 009c 3B       		.uleb128 0x3b
 1528 009d 05       		.uleb128 0x5
 1529 009e 27       		.uleb128 0x27
 1530 009f 19       		.uleb128 0x19
 1531 00a0 11       		.uleb128 0x11
 1532 00a1 01       		.uleb128 0x1
 1533 00a2 12       		.uleb128 0x12
 1534 00a3 06       		.uleb128 0x6
 1535 00a4 40       		.uleb128 0x40
 1536 00a5 18       		.uleb128 0x18
 1537 00a6 9742     		.uleb128 0x2117
 1538 00a8 19       		.uleb128 0x19
 1539 00a9 01       		.uleb128 0x1
 1540 00aa 13       		.uleb128 0x13
 1541 00ab 00       		.byte	0
 1542 00ac 00       		.byte	0
 1543 00ad 0C       		.uleb128 0xc
 1544 00ae 05       		.uleb128 0x5
 1545 00af 00       		.byte	0
 1546 00b0 03       		.uleb128 0x3
 1547 00b1 0E       		.uleb128 0xe
 1548 00b2 3A       		.uleb128 0x3a
 1549 00b3 0B       		.uleb128 0xb
 1550 00b4 3B       		.uleb128 0x3b
 1551 00b5 05       		.uleb128 0x5
 1552 00b6 49       		.uleb128 0x49
 1553 00b7 13       		.uleb128 0x13
 1554 00b8 02       		.uleb128 0x2
 1555 00b9 17       		.uleb128 0x17
 1556 00ba 00       		.byte	0
 1557 00bb 00       		.byte	0
 1558 00bc 0D       		.uleb128 0xd
 1559 00bd 34       		.uleb128 0x34
 1560 00be 00       		.byte	0
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccCKGB6e.s 			page 44


 1561 00bf 03       		.uleb128 0x3
 1562 00c0 0E       		.uleb128 0xe
 1563 00c1 3A       		.uleb128 0x3a
 1564 00c2 0B       		.uleb128 0xb
 1565 00c3 3B       		.uleb128 0x3b
 1566 00c4 05       		.uleb128 0x5
 1567 00c5 49       		.uleb128 0x49
 1568 00c6 13       		.uleb128 0x13
 1569 00c7 02       		.uleb128 0x2
 1570 00c8 17       		.uleb128 0x17
 1571 00c9 00       		.byte	0
 1572 00ca 00       		.byte	0
 1573 00cb 0E       		.uleb128 0xe
 1574 00cc 2E       		.uleb128 0x2e
 1575 00cd 01       		.byte	0x1
 1576 00ce 3F       		.uleb128 0x3f
 1577 00cf 19       		.uleb128 0x19
 1578 00d0 03       		.uleb128 0x3
 1579 00d1 0E       		.uleb128 0xe
 1580 00d2 3A       		.uleb128 0x3a
 1581 00d3 0B       		.uleb128 0xb
 1582 00d4 3B       		.uleb128 0x3b
 1583 00d5 05       		.uleb128 0x5
 1584 00d6 27       		.uleb128 0x27
 1585 00d7 19       		.uleb128 0x19
 1586 00d8 49       		.uleb128 0x49
 1587 00d9 13       		.uleb128 0x13
 1588 00da 11       		.uleb128 0x11
 1589 00db 01       		.uleb128 0x1
 1590 00dc 12       		.uleb128 0x12
 1591 00dd 06       		.uleb128 0x6
 1592 00de 40       		.uleb128 0x40
 1593 00df 18       		.uleb128 0x18
 1594 00e0 9742     		.uleb128 0x2117
 1595 00e2 19       		.uleb128 0x19
 1596 00e3 01       		.uleb128 0x1
 1597 00e4 13       		.uleb128 0x13
 1598 00e5 00       		.byte	0
 1599 00e6 00       		.byte	0
 1600 00e7 0F       		.uleb128 0xf
 1601 00e8 898201   		.uleb128 0x4109
 1602 00eb 00       		.byte	0
 1603 00ec 11       		.uleb128 0x11
 1604 00ed 01       		.uleb128 0x1
 1605 00ee 31       		.uleb128 0x31
 1606 00ef 13       		.uleb128 0x13
 1607 00f0 00       		.byte	0
 1608 00f1 00       		.byte	0
 1609 00f2 10       		.uleb128 0x10
 1610 00f3 05       		.uleb128 0x5
 1611 00f4 00       		.byte	0
 1612 00f5 03       		.uleb128 0x3
 1613 00f6 0E       		.uleb128 0xe
 1614 00f7 3A       		.uleb128 0x3a
 1615 00f8 0B       		.uleb128 0xb
 1616 00f9 3B       		.uleb128 0x3b
 1617 00fa 05       		.uleb128 0x5
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccCKGB6e.s 			page 45


 1618 00fb 49       		.uleb128 0x49
 1619 00fc 13       		.uleb128 0x13
 1620 00fd 02       		.uleb128 0x2
 1621 00fe 18       		.uleb128 0x18
 1622 00ff 00       		.byte	0
 1623 0100 00       		.byte	0
 1624 0101 11       		.uleb128 0x11
 1625 0102 0F       		.uleb128 0xf
 1626 0103 00       		.byte	0
 1627 0104 0B       		.uleb128 0xb
 1628 0105 0B       		.uleb128 0xb
 1629 0106 49       		.uleb128 0x49
 1630 0107 13       		.uleb128 0x13
 1631 0108 00       		.byte	0
 1632 0109 00       		.byte	0
 1633 010a 12       		.uleb128 0x12
 1634 010b 26       		.uleb128 0x26
 1635 010c 00       		.byte	0
 1636 010d 49       		.uleb128 0x49
 1637 010e 13       		.uleb128 0x13
 1638 010f 00       		.byte	0
 1639 0110 00       		.byte	0
 1640 0111 13       		.uleb128 0x13
 1641 0112 34       		.uleb128 0x34
 1642 0113 00       		.byte	0
 1643 0114 03       		.uleb128 0x3
 1644 0115 0E       		.uleb128 0xe
 1645 0116 3A       		.uleb128 0x3a
 1646 0117 0B       		.uleb128 0xb
 1647 0118 3B       		.uleb128 0x3b
 1648 0119 0B       		.uleb128 0xb
 1649 011a 49       		.uleb128 0x49
 1650 011b 13       		.uleb128 0x13
 1651 011c 3F       		.uleb128 0x3f
 1652 011d 19       		.uleb128 0x19
 1653 011e 3C       		.uleb128 0x3c
 1654 011f 19       		.uleb128 0x19
 1655 0120 00       		.byte	0
 1656 0121 00       		.byte	0
 1657 0122 14       		.uleb128 0x14
 1658 0123 2E       		.uleb128 0x2e
 1659 0124 00       		.byte	0
 1660 0125 3F       		.uleb128 0x3f
 1661 0126 19       		.uleb128 0x19
 1662 0127 3C       		.uleb128 0x3c
 1663 0128 19       		.uleb128 0x19
 1664 0129 6E       		.uleb128 0x6e
 1665 012a 0E       		.uleb128 0xe
 1666 012b 03       		.uleb128 0x3
 1667 012c 0E       		.uleb128 0xe
 1668 012d 3A       		.uleb128 0x3a
 1669 012e 0B       		.uleb128 0xb
 1670 012f 3B       		.uleb128 0x3b
 1671 0130 0B       		.uleb128 0xb
 1672 0131 00       		.byte	0
 1673 0132 00       		.byte	0
 1674 0133 15       		.uleb128 0x15
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccCKGB6e.s 			page 46


 1675 0134 2E       		.uleb128 0x2e
 1676 0135 00       		.byte	0
 1677 0136 3F       		.uleb128 0x3f
 1678 0137 19       		.uleb128 0x19
 1679 0138 3C       		.uleb128 0x3c
 1680 0139 19       		.uleb128 0x19
 1681 013a 6E       		.uleb128 0x6e
 1682 013b 0E       		.uleb128 0xe
 1683 013c 03       		.uleb128 0x3
 1684 013d 0E       		.uleb128 0xe
 1685 013e 3A       		.uleb128 0x3a
 1686 013f 0B       		.uleb128 0xb
 1687 0140 3B       		.uleb128 0x3b
 1688 0141 05       		.uleb128 0x5
 1689 0142 00       		.byte	0
 1690 0143 00       		.byte	0
 1691 0144 00       		.byte	0
 1692              		.section	.debug_loc,"",%progbits
 1693              	.Ldebug_loc0:
 1694              	.LLST0:
 1695 0000 00000000 		.4byte	.LVL3
 1696 0004 06000000 		.4byte	.LVL4
 1697 0008 0100     		.2byte	0x1
 1698 000a 50       		.byte	0x50
 1699 000b 06000000 		.4byte	.LVL4
 1700 000f 14000000 		.4byte	.LFE4
 1701 0013 0400     		.2byte	0x4
 1702 0015 F3       		.byte	0xf3
 1703 0016 01       		.uleb128 0x1
 1704 0017 50       		.byte	0x50
 1705 0018 9F       		.byte	0x9f
 1706 0019 00000000 		.4byte	0
 1707 001d 00000000 		.4byte	0
 1708              	.LLST1:
 1709 0021 08000000 		.4byte	.LVL5
 1710 0025 0C000000 		.4byte	.LVL7
 1711 0029 0100     		.2byte	0x1
 1712 002b 53       		.byte	0x53
 1713 002c 0C000000 		.4byte	.LVL7
 1714 0030 14000000 		.4byte	.LFE4
 1715 0034 0100     		.2byte	0x1
 1716 0036 50       		.byte	0x50
 1717 0037 00000000 		.4byte	0
 1718 003b 00000000 		.4byte	0
 1719              	.LLST2:
 1720 003f 00000000 		.4byte	.LVL8
 1721 0043 08000000 		.4byte	.LVL10
 1722 0047 0100     		.2byte	0x1
 1723 0049 50       		.byte	0x50
 1724 004a 08000000 		.4byte	.LVL10
 1725 004e 18000000 		.4byte	.LFE5
 1726 0052 0400     		.2byte	0x4
 1727 0054 F3       		.byte	0xf3
 1728 0055 01       		.uleb128 0x1
 1729 0056 50       		.byte	0x50
 1730 0057 9F       		.byte	0x9f
 1731 0058 00000000 		.4byte	0
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccCKGB6e.s 			page 47


 1732 005c 00000000 		.4byte	0
 1733              	.LLST3:
 1734 0060 06000000 		.4byte	.LVL9
 1735 0064 0A000000 		.4byte	.LVL11
 1736 0068 0100     		.2byte	0x1
 1737 006a 51       		.byte	0x51
 1738 006b 0A000000 		.4byte	.LVL11
 1739 006f 0C000000 		.4byte	.LVL12
 1740 0073 0100     		.2byte	0x1
 1741 0075 53       		.byte	0x53
 1742 0076 0C000000 		.4byte	.LVL12
 1743 007a 18000000 		.4byte	.LFE5
 1744 007e 0100     		.2byte	0x1
 1745 0080 50       		.byte	0x50
 1746 0081 00000000 		.4byte	0
 1747 0085 00000000 		.4byte	0
 1748              	.LLST4:
 1749 0089 00000000 		.4byte	.LVL13
 1750 008d 12000000 		.4byte	.LVL15
 1751 0091 0200     		.2byte	0x2
 1752 0093 30       		.byte	0x30
 1753 0094 9F       		.byte	0x9f
 1754 0095 12000000 		.4byte	.LVL15
 1755 0099 1E000000 		.4byte	.LVL16
 1756 009d 0100     		.2byte	0x1
 1757 009f 50       		.byte	0x50
 1758 00a0 1E000000 		.4byte	.LVL16
 1759 00a4 22000000 		.4byte	.LVL17
 1760 00a8 0200     		.2byte	0x2
 1761 00aa 30       		.byte	0x30
 1762 00ab 9F       		.byte	0x9f
 1763 00ac 22000000 		.4byte	.LVL17
 1764 00b0 28000000 		.4byte	.LFE6
 1765 00b4 0100     		.2byte	0x1
 1766 00b6 50       		.byte	0x50
 1767 00b7 00000000 		.4byte	0
 1768 00bb 00000000 		.4byte	0
 1769              	.LLST5:
 1770 00bf 1E000000 		.4byte	.LVL22
 1771 00c3 20000000 		.4byte	.LVL23
 1772 00c7 0100     		.2byte	0x1
 1773 00c9 50       		.byte	0x50
 1774 00ca 26000000 		.4byte	.LVL24
 1775 00ce 36000000 		.4byte	.LVL27
 1776 00d2 0100     		.2byte	0x1
 1777 00d4 54       		.byte	0x54
 1778 00d5 36000000 		.4byte	.LVL27
 1779 00d9 3A000000 		.4byte	.LVL28
 1780 00dd 0C00     		.2byte	0xc
 1781 00df 70       		.byte	0x70
 1782 00e0 00       		.sleb128 0
 1783 00e1 38       		.byte	0x38
 1784 00e2 24       		.byte	0x24
 1785 00e3 4B       		.byte	0x4b
 1786 00e4 3D       		.byte	0x3d
 1787 00e5 24       		.byte	0x24
 1788 00e6 1A       		.byte	0x1a
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccCKGB6e.s 			page 48


 1789 00e7 74       		.byte	0x74
 1790 00e8 00       		.sleb128 0
 1791 00e9 21       		.byte	0x21
 1792 00ea 9F       		.byte	0x9f
 1793 00eb 00000000 		.4byte	0
 1794 00ef 00000000 		.4byte	0
 1795              	.LLST6:
 1796 00f3 34000000 		.4byte	.LVL26
 1797 00f7 3A000000 		.4byte	.LVL28
 1798 00fb 0700     		.2byte	0x7
 1799 00fd 70       		.byte	0x70
 1800 00fe 00       		.sleb128 0
 1801 00ff 0A       		.byte	0xa
 1802 0100 6003     		.2byte	0x360
 1803 0102 1A       		.byte	0x1a
 1804 0103 9F       		.byte	0x9f
 1805 0104 00000000 		.4byte	0
 1806 0108 00000000 		.4byte	0
 1807              	.LLST7:
 1808 010c 00000000 		.4byte	.LVL30
 1809 0110 06000000 		.4byte	.LVL31
 1810 0114 0100     		.2byte	0x1
 1811 0116 50       		.byte	0x50
 1812 0117 06000000 		.4byte	.LVL31
 1813 011b 14000000 		.4byte	.LFE9
 1814 011f 0400     		.2byte	0x4
 1815 0121 F3       		.byte	0xf3
 1816 0122 01       		.uleb128 0x1
 1817 0123 50       		.byte	0x50
 1818 0124 9F       		.byte	0x9f
 1819 0125 00000000 		.4byte	0
 1820 0129 00000000 		.4byte	0
 1821              	.LLST8:
 1822 012d 08000000 		.4byte	.LVL32
 1823 0131 0C000000 		.4byte	.LVL34
 1824 0135 0100     		.2byte	0x1
 1825 0137 53       		.byte	0x53
 1826 0138 0C000000 		.4byte	.LVL34
 1827 013c 14000000 		.4byte	.LFE9
 1828 0140 0100     		.2byte	0x1
 1829 0142 50       		.byte	0x50
 1830 0143 00000000 		.4byte	0
 1831 0147 00000000 		.4byte	0
 1832              	.LLST9:
 1833 014b 00000000 		.4byte	.LVL35
 1834 014f 04000000 		.4byte	.LVL36
 1835 0153 0100     		.2byte	0x1
 1836 0155 50       		.byte	0x50
 1837 0156 04000000 		.4byte	.LVL36
 1838 015a 16000000 		.4byte	.LFE10
 1839 015e 0400     		.2byte	0x4
 1840 0160 F3       		.byte	0xf3
 1841 0161 01       		.uleb128 0x1
 1842 0162 50       		.byte	0x50
 1843 0163 9F       		.byte	0x9f
 1844 0164 00000000 		.4byte	0
 1845 0168 00000000 		.4byte	0
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccCKGB6e.s 			page 49


 1846              	.LLST10:
 1847 016c 04000000 		.4byte	.LVL36
 1848 0170 06000000 		.4byte	.LVL37
 1849 0174 0700     		.2byte	0x7
 1850 0176 74       		.byte	0x74
 1851 0177 00       		.sleb128 0
 1852 0178 F3       		.byte	0xf3
 1853 0179 01       		.uleb128 0x1
 1854 017a 50       		.byte	0x50
 1855 017b 1C       		.byte	0x1c
 1856 017c 9F       		.byte	0x9f
 1857 017d 06000000 		.4byte	.LVL37
 1858 0181 12000000 		.4byte	.LVL38
 1859 0185 0800     		.2byte	0x8
 1860 0187 F3       		.byte	0xf3
 1861 0188 01       		.uleb128 0x1
 1862 0189 50       		.byte	0x50
 1863 018a 20       		.byte	0x20
 1864 018b 74       		.byte	0x74
 1865 018c 00       		.sleb128 0
 1866 018d 22       		.byte	0x22
 1867 018e 9F       		.byte	0x9f
 1868 018f 12000000 		.4byte	.LVL38
 1869 0193 14000000 		.4byte	.LVL39
 1870 0197 0700     		.2byte	0x7
 1871 0199 74       		.byte	0x74
 1872 019a 00       		.sleb128 0
 1873 019b F3       		.byte	0xf3
 1874 019c 01       		.uleb128 0x1
 1875 019d 50       		.byte	0x50
 1876 019e 1C       		.byte	0x1c
 1877 019f 9F       		.byte	0x9f
 1878 01a0 14000000 		.4byte	.LVL39
 1879 01a4 14000000 		.4byte	.LVL40
 1880 01a8 0800     		.2byte	0x8
 1881 01aa F3       		.byte	0xf3
 1882 01ab 01       		.uleb128 0x1
 1883 01ac 50       		.byte	0x50
 1884 01ad 20       		.byte	0x20
 1885 01ae 74       		.byte	0x74
 1886 01af 00       		.sleb128 0
 1887 01b0 22       		.byte	0x22
 1888 01b1 9F       		.byte	0x9f
 1889 01b2 14000000 		.4byte	.LVL40
 1890 01b6 16000000 		.4byte	.LFE10
 1891 01ba 0700     		.2byte	0x7
 1892 01bc 73       		.byte	0x73
 1893 01bd 00       		.sleb128 0
 1894 01be F3       		.byte	0xf3
 1895 01bf 01       		.uleb128 0x1
 1896 01c0 50       		.byte	0x50
 1897 01c1 1C       		.byte	0x1c
 1898 01c2 9F       		.byte	0x9f
 1899 01c3 00000000 		.4byte	0
 1900 01c7 00000000 		.4byte	0
 1901              	.LLST11:
 1902 01cb 00000000 		.4byte	.LVL41
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccCKGB6e.s 			page 50


 1903 01cf 05000000 		.4byte	.LVL42-1
 1904 01d3 0100     		.2byte	0x1
 1905 01d5 50       		.byte	0x50
 1906 01d6 05000000 		.4byte	.LVL42-1
 1907 01da 14000000 		.4byte	.LFE11
 1908 01de 0400     		.2byte	0x4
 1909 01e0 F3       		.byte	0xf3
 1910 01e1 01       		.uleb128 0x1
 1911 01e2 50       		.byte	0x50
 1912 01e3 9F       		.byte	0x9f
 1913 01e4 00000000 		.4byte	0
 1914 01e8 00000000 		.4byte	0
 1915              	.LLST12:
 1916 01ec 00000000 		.4byte	.LVL46
 1917 01f0 1C000000 		.4byte	.LVL49
 1918 01f4 0100     		.2byte	0x1
 1919 01f6 50       		.byte	0x50
 1920 01f7 1C000000 		.4byte	.LVL49
 1921 01fb 22000000 		.4byte	.LVL52
 1922 01ff 0300     		.2byte	0x3
 1923 0201 70       		.byte	0x70
 1924 0202 01       		.sleb128 1
 1925 0203 9F       		.byte	0x9f
 1926 0204 22000000 		.4byte	.LVL52
 1927 0208 58000000 		.4byte	.LFE15
 1928 020c 0400     		.2byte	0x4
 1929 020e F3       		.byte	0xf3
 1930 020f 01       		.uleb128 0x1
 1931 0210 50       		.byte	0x50
 1932 0211 9F       		.byte	0x9f
 1933 0212 00000000 		.4byte	0
 1934 0216 00000000 		.4byte	0
 1935              	.LLST13:
 1936 021a 1E000000 		.4byte	.LVL50
 1937 021e 20000000 		.4byte	.LVL51
 1938 0222 0100     		.2byte	0x1
 1939 0224 51       		.byte	0x51
 1940 0225 20000000 		.4byte	.LVL51
 1941 0229 58000000 		.4byte	.LFE15
 1942 022d 0100     		.2byte	0x1
 1943 022f 5C       		.byte	0x5c
 1944 0230 00000000 		.4byte	0
 1945 0234 00000000 		.4byte	0
 1946              	.LLST14:
 1947 0238 12000000 		.4byte	.LVL47
 1948 023c 14000000 		.4byte	.LVL48
 1949 0240 0100     		.2byte	0x1
 1950 0242 53       		.byte	0x53
 1951 0243 14000000 		.4byte	.LVL48
 1952 0247 58000000 		.4byte	.LFE15
 1953 024b 0200     		.2byte	0x2
 1954 024d 91       		.byte	0x91
 1955 024e 64       		.sleb128 -28
 1956 024f 00000000 		.4byte	0
 1957 0253 00000000 		.4byte	0
 1958              		.section	.debug_aranges,"",%progbits
 1959 0000 8C000000 		.4byte	0x8c
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccCKGB6e.s 			page 51


 1960 0004 0200     		.2byte	0x2
 1961 0006 00000000 		.4byte	.Ldebug_info0
 1962 000a 04       		.byte	0x4
 1963 000b 00       		.byte	0
 1964 000c 0000     		.2byte	0
 1965 000e 0000     		.2byte	0
 1966 0010 00000000 		.4byte	.LFB1
 1967 0014 EC000000 		.4byte	.LFE1-.LFB1
 1968 0018 00000000 		.4byte	.LFB2
 1969 001c 24000000 		.4byte	.LFE2-.LFB2
 1970 0020 00000000 		.4byte	.LFB3
 1971 0024 28000000 		.4byte	.LFE3-.LFB3
 1972 0028 00000000 		.4byte	.LFB4
 1973 002c 14000000 		.4byte	.LFE4-.LFB4
 1974 0030 00000000 		.4byte	.LFB5
 1975 0034 18000000 		.4byte	.LFE5-.LFB5
 1976 0038 00000000 		.4byte	.LFB6
 1977 003c 28000000 		.4byte	.LFE6-.LFB6
 1978 0040 00000000 		.4byte	.LFB7
 1979 0044 4C000000 		.4byte	.LFE7-.LFB7
 1980 0048 00000000 		.4byte	.LFB8
 1981 004c 24000000 		.4byte	.LFE8-.LFB8
 1982 0050 00000000 		.4byte	.LFB9
 1983 0054 14000000 		.4byte	.LFE9-.LFB9
 1984 0058 00000000 		.4byte	.LFB10
 1985 005c 16000000 		.4byte	.LFE10-.LFB10
 1986 0060 00000000 		.4byte	.LFB11
 1987 0064 14000000 		.4byte	.LFE11-.LFB11
 1988 0068 00000000 		.4byte	.LFB12
 1989 006c 14000000 		.4byte	.LFE12-.LFB12
 1990 0070 00000000 		.4byte	.LFB13
 1991 0074 14000000 		.4byte	.LFE13-.LFB13
 1992 0078 00000000 		.4byte	.LFB14
 1993 007c 24000000 		.4byte	.LFE14-.LFB14
 1994 0080 00000000 		.4byte	.LFB15
 1995 0084 58000000 		.4byte	.LFE15-.LFB15
 1996 0088 00000000 		.4byte	0
 1997 008c 00000000 		.4byte	0
 1998              		.section	.debug_ranges,"",%progbits
 1999              	.Ldebug_ranges0:
 2000 0000 00000000 		.4byte	.LFB1
 2001 0004 EC000000 		.4byte	.LFE1
 2002 0008 00000000 		.4byte	.LFB2
 2003 000c 24000000 		.4byte	.LFE2
 2004 0010 00000000 		.4byte	.LFB3
 2005 0014 28000000 		.4byte	.LFE3
 2006 0018 00000000 		.4byte	.LFB4
 2007 001c 14000000 		.4byte	.LFE4
 2008 0020 00000000 		.4byte	.LFB5
 2009 0024 18000000 		.4byte	.LFE5
 2010 0028 00000000 		.4byte	.LFB6
 2011 002c 28000000 		.4byte	.LFE6
 2012 0030 00000000 		.4byte	.LFB7
 2013 0034 4C000000 		.4byte	.LFE7
 2014 0038 00000000 		.4byte	.LFB8
 2015 003c 24000000 		.4byte	.LFE8
 2016 0040 00000000 		.4byte	.LFB9
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccCKGB6e.s 			page 52


 2017 0044 14000000 		.4byte	.LFE9
 2018 0048 00000000 		.4byte	.LFB10
 2019 004c 16000000 		.4byte	.LFE10
 2020 0050 00000000 		.4byte	.LFB11
 2021 0054 14000000 		.4byte	.LFE11
 2022 0058 00000000 		.4byte	.LFB12
 2023 005c 14000000 		.4byte	.LFE12
 2024 0060 00000000 		.4byte	.LFB13
 2025 0064 14000000 		.4byte	.LFE13
 2026 0068 00000000 		.4byte	.LFB14
 2027 006c 24000000 		.4byte	.LFE14
 2028 0070 00000000 		.4byte	.LFB15
 2029 0074 58000000 		.4byte	.LFE15
 2030 0078 00000000 		.4byte	0
 2031 007c 00000000 		.4byte	0
 2032              		.section	.debug_line,"",%progbits
 2033              	.Ldebug_line0:
 2034 0000 39020000 		.section	.debug_str,"MS",%progbits,1
 2034      02008D00 
 2034      00000201 
 2034      FB0E0D00 
 2034      01010101 
 2035              	.LASF10:
 2036 0000 75696E74 		.ascii	"uint16\000"
 2036      313600
 2037              	.LASF40:
 2038 0007 74784461 		.ascii	"txDataByte\000"
 2038      74614279 
 2038      746500
 2039              	.LASF37:
 2040 0012 73747269 		.ascii	"string\000"
 2040      6E6700
 2041              	.LASF7:
 2042 0019 6C6F6E67 		.ascii	"long long unsigned int\000"
 2042      206C6F6E 
 2042      6720756E 
 2042      7369676E 
 2042      65642069 
 2043              	.LASF30:
 2044 0030 746D7053 		.ascii	"tmpStatus\000"
 2044      74617475 
 2044      7300
 2045              	.LASF48:
 2046 003a 6D554152 		.ascii	"mUART_IntrTxMask\000"
 2046      545F496E 
 2046      74725478 
 2046      4D61736B 
 2046      00
 2047              	.LASF6:
 2048 004b 6C6F6E67 		.ascii	"long long int\000"
 2048      206C6F6E 
 2048      6720696E 
 2048      7400
 2049              	.LASF0:
 2050 0059 7369676E 		.ascii	"signed char\000"
 2050      65642063 
 2050      68617200 
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccCKGB6e.s 			page 53


 2051              	.LASF42:
 2052 0065 6D554152 		.ascii	"mUART_UartDisableCts\000"
 2052      545F5561 
 2052      72744469 
 2052      7361626C 
 2052      65437473 
 2053              	.LASF4:
 2054 007a 6C6F6E67 		.ascii	"long int\000"
 2054      20696E74 
 2054      00
 2055              	.LASF54:
 2056 0083 4379496E 		.ascii	"CyIntDisable\000"
 2056      74446973 
 2056      61626C65 
 2056      00
 2057              	.LASF61:
 2058 0090 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2058      43313120 
 2058      352E342E 
 2058      31203230 
 2058      31363036 
 2059 00c3 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 2059      20726576 
 2059      6973696F 
 2059      6E203233 
 2059      37373135 
 2060 00f6 67202D4F 		.ascii	"g -Os -ffunction-sections -ffat-lto-objects\000"
 2060      73202D66 
 2060      66756E63 
 2060      74696F6E 
 2060      2D736563 
 2061              	.LASF9:
 2062 0122 75696E74 		.ascii	"uint8\000"
 2062      3800
 2063              	.LASF26:
 2064 0128 6D617463 		.ascii	"matchReg\000"
 2064      68526567 
 2064      00
 2065              	.LASF13:
 2066 0131 646F7562 		.ascii	"double\000"
 2066      6C6500
 2067              	.LASF47:
 2068 0138 7478496E 		.ascii	"txIntrReg\000"
 2068      74725265 
 2068      6700
 2069              	.LASF49:
 2070 0142 6D554152 		.ascii	"mUART_rxBufferHead\000"
 2070      545F7278 
 2070      42756666 
 2070      65724865 
 2070      616400
 2071              	.LASF11:
 2072 0155 75696E74 		.ascii	"uint32\000"
 2072      333200
 2073              	.LASF21:
 2074 015c 6D554152 		.ascii	"mUART_UartInit\000"
 2074      545F5561 
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccCKGB6e.s 			page 54


 2074      7274496E 
 2074      697400
 2075              	.LASF56:
 2076 016b 4379496E 		.ascii	"CyIntSetVector\000"
 2076      74536574 
 2076      56656374 
 2076      6F7200
 2077              	.LASF62:
 2078 017a 47656E65 		.ascii	"Generated_Source\\PSoC4\\mUART_UART.c\000"
 2078      72617465 
 2078      645F536F 
 2078      75726365 
 2078      5C50536F 
 2079              	.LASF44:
 2080 019e 6D554152 		.ascii	"mUART_UartSendBreakBlocking\000"
 2080      545F5561 
 2080      72745365 
 2080      6E644272 
 2080      65616B42 
 2081              	.LASF8:
 2082 01ba 756E7369 		.ascii	"unsigned int\000"
 2082      676E6564 
 2082      20696E74 
 2082      00
 2083              	.LASF5:
 2084 01c7 6C6F6E67 		.ascii	"long unsigned int\000"
 2084      20756E73 
 2084      69676E65 
 2084      6420696E 
 2084      7400
 2085              	.LASF57:
 2086 01d9 6D554152 		.ascii	"mUART_SpiUartGetRxBufferSize\000"
 2086      545F5370 
 2086      69556172 
 2086      74476574 
 2086      52784275 
 2087              	.LASF34:
 2088 01f6 6C657665 		.ascii	"level\000"
 2088      6C00
 2089              	.LASF3:
 2090 01fc 73686F72 		.ascii	"short unsigned int\000"
 2090      7420756E 
 2090      7369676E 
 2090      65642069 
 2090      6E7400
 2091              	.LASF51:
 2092 020f 6D554152 		.ascii	"mUART_rxBufferOverflow\000"
 2092      545F7278 
 2092      42756666 
 2092      65724F76 
 2092      6572666C 
 2093              	.LASF22:
 2094 0226 6D554152 		.ascii	"mUART_UartSetRxAddress\000"
 2094      545F5561 
 2094      72745365 
 2094      74527841 
 2094      64647265 
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccCKGB6e.s 			page 55


 2095              	.LASF43:
 2096 023d 6D554152 		.ascii	"mUART_UartSetCtsPolarity\000"
 2096      545F5561 
 2096      72745365 
 2096      74437473 
 2096      506F6C61 
 2097              	.LASF38:
 2098 0256 62756649 		.ascii	"bufIndex\000"
 2098      6E646578 
 2098      00
 2099              	.LASF28:
 2100 025f 6D554152 		.ascii	"mUART_UartGetChar\000"
 2100      545F5561 
 2100      72744765 
 2100      74436861 
 2100      7200
 2101              	.LASF53:
 2102 0271 6D554152 		.ascii	"mUART_txBufferTail\000"
 2102      545F7478 
 2102      42756666 
 2102      65725461 
 2102      696C00
 2103              	.LASF16:
 2104 0284 72656733 		.ascii	"reg32\000"
 2104      3200
 2105              	.LASF23:
 2106 028a 6D554152 		.ascii	"mUART_UartSetRxAddressMask\000"
 2106      545F5561 
 2106      72745365 
 2106      74527841 
 2106      64647265 
 2107              	.LASF18:
 2108 02a5 73697A65 		.ascii	"sizetype\000"
 2108      74797065 
 2108      00
 2109              	.LASF17:
 2110 02ae 6C6F6E67 		.ascii	"long double\000"
 2110      20646F75 
 2110      626C6500 
 2111              	.LASF24:
 2112 02ba 61646472 		.ascii	"address\000"
 2112      65737300 
 2113              	.LASF55:
 2114 02c2 4379496E 		.ascii	"CyIntSetPriority\000"
 2114      74536574 
 2114      5072696F 
 2114      72697479 
 2114      00
 2115              	.LASF12:
 2116 02d3 666C6F61 		.ascii	"float\000"
 2116      7400
 2117              	.LASF46:
 2118 02d9 74784374 		.ascii	"txCtrlReg\000"
 2118      726C5265 
 2118      6700
 2119              	.LASF36:
 2120 02e3 6D554152 		.ascii	"mUART_UartPutString\000"
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccCKGB6e.s 			page 56


 2120      545F5561 
 2120      72745075 
 2120      74537472 
 2120      696E6700 
 2121              	.LASF31:
 2122 02f7 6D554152 		.ascii	"mUART_UartSetRtsPolarity\000"
 2122      545F5561 
 2122      72745365 
 2122      74527473 
 2122      506F6C61 
 2123              	.LASF1:
 2124 0310 756E7369 		.ascii	"unsigned char\000"
 2124      676E6564 
 2124      20636861 
 2124      7200
 2125              	.LASF19:
 2126 031e 6D554152 		.ascii	"mUART_UartPostEnable\000"
 2126      545F5561 
 2126      7274506F 
 2126      7374456E 
 2126      61626C65 
 2127              	.LASF2:
 2128 0333 73686F72 		.ascii	"short int\000"
 2128      7420696E 
 2128      7400
 2129              	.LASF59:
 2130 033d 4379496E 		.ascii	"CyIntEnable\000"
 2130      74456E61 
 2130      626C6500 
 2131              	.LASF39:
 2132 0349 6D554152 		.ascii	"mUART_UartPutCRLF\000"
 2132      545F5561 
 2132      72745075 
 2132      7443524C 
 2132      4600
 2133              	.LASF35:
 2134 035b 75617274 		.ascii	"uartFlowCtrl\000"
 2134      466C6F77 
 2134      4374726C 
 2134      00
 2135              	.LASF27:
 2136 0368 72784461 		.ascii	"rxData\000"
 2136      746100
 2137              	.LASF50:
 2138 036f 6D554152 		.ascii	"mUART_rxBufferTail\000"
 2138      545F7278 
 2138      42756666 
 2138      65725461 
 2138      696C00
 2139              	.LASF32:
 2140 0382 706F6C61 		.ascii	"polarity\000"
 2140      72697479 
 2140      00
 2141              	.LASF25:
 2142 038b 61646472 		.ascii	"addressMask\000"
 2142      6573734D 
 2142      61736B00 
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccCKGB6e.s 			page 57


 2143              	.LASF15:
 2144 0397 63686172 		.ascii	"char\000"
 2144      00
 2145              	.LASF14:
 2146 039c 63686172 		.ascii	"char8\000"
 2146      3800
 2147              	.LASF45:
 2148 03a2 62726561 		.ascii	"breakWidth\000"
 2148      6B576964 
 2148      746800
 2149              	.LASF41:
 2150 03ad 6D554152 		.ascii	"mUART_UartEnableCts\000"
 2150      545F5561 
 2150      7274456E 
 2150      61626C65 
 2150      43747300 
 2151              	.LASF20:
 2152 03c1 6D554152 		.ascii	"mUART_UartStop\000"
 2152      545F5561 
 2152      72745374 
 2152      6F7000
 2153              	.LASF63:
 2154 03d0 433A5C55 		.ascii	"C:\\Users\\PC\\Documents\\PSoC Creator\\yellowChip\\"
 2154      73657273 
 2154      5C50435C 
 2154      446F6375 
 2154      6D656E74 
 2155 03fe 626F6F74 		.ascii	"bootloader.cydsn\000"
 2155      6C6F6164 
 2155      65722E63 
 2155      7964736E 
 2155      00
 2156              	.LASF33:
 2157 040f 6D554152 		.ascii	"mUART_UartSetRtsFifoLevel\000"
 2157      545F5561 
 2157      72745365 
 2157      74527473 
 2157      4669666F 
 2158              	.LASF60:
 2159 0429 6D554152 		.ascii	"mUART_SpiUartWriteTxData\000"
 2159      545F5370 
 2159      69556172 
 2159      74577269 
 2159      74655478 
 2160              	.LASF29:
 2161 0442 6D554152 		.ascii	"mUART_UartGetByte\000"
 2161      545F5561 
 2161      72744765 
 2161      74427974 
 2161      6500
 2162              	.LASF52:
 2163 0454 6D554152 		.ascii	"mUART_txBufferHead\000"
 2163      545F7478 
 2163      42756666 
 2163      65724865 
 2163      616400
 2164              	.LASF58:
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccCKGB6e.s 			page 58


 2165 0467 6D554152 		.ascii	"mUART_SpiUartReadRxData\000"
 2165      545F5370 
 2165      69556172 
 2165      74526561 
 2165      64527844 
 2166              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
