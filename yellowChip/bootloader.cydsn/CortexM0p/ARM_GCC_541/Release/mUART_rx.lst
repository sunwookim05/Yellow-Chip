ARM GAS  C:\Users\PC\AppData\Local\Temp\ccV34sSd.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"mUART_rx.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.mUART_rx_SetDriveMode,"ax",%progbits
  20              		.align	1
  21              		.global	mUART_rx_SetDriveMode
  22              		.code	16
  23              		.thumb_func
  24              		.type	mUART_rx_SetDriveMode, %function
  25              	mUART_rx_SetDriveMode:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC4\\mUART_rx.c"
   1:Generated_Source\PSoC4/mUART_rx.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/mUART_rx.c **** * File Name: mUART_rx.c  
   3:Generated_Source\PSoC4/mUART_rx.c **** * Version 2.20
   4:Generated_Source\PSoC4/mUART_rx.c **** *
   5:Generated_Source\PSoC4/mUART_rx.c **** * Description:
   6:Generated_Source\PSoC4/mUART_rx.c **** *  This file contains API to enable firmware control of a Pins component.
   7:Generated_Source\PSoC4/mUART_rx.c **** *
   8:Generated_Source\PSoC4/mUART_rx.c **** ********************************************************************************
   9:Generated_Source\PSoC4/mUART_rx.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  10:Generated_Source\PSoC4/mUART_rx.c **** * You may use this file only in accordance with the license, terms, conditions, 
  11:Generated_Source\PSoC4/mUART_rx.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  12:Generated_Source\PSoC4/mUART_rx.c **** * the software package with which this file was provided.
  13:Generated_Source\PSoC4/mUART_rx.c **** *******************************************************************************/
  14:Generated_Source\PSoC4/mUART_rx.c **** 
  15:Generated_Source\PSoC4/mUART_rx.c **** #include "cytypes.h"
  16:Generated_Source\PSoC4/mUART_rx.c **** #include "mUART_rx.h"
  17:Generated_Source\PSoC4/mUART_rx.c **** 
  18:Generated_Source\PSoC4/mUART_rx.c **** 
  19:Generated_Source\PSoC4/mUART_rx.c **** #if defined(mUART_rx__PC)
  20:Generated_Source\PSoC4/mUART_rx.c ****     #define mUART_rx_SetP4PinDriveMode(shift, mode)  \
  21:Generated_Source\PSoC4/mUART_rx.c ****     do { \
  22:Generated_Source\PSoC4/mUART_rx.c ****         mUART_rx_PC =   (mUART_rx_PC & \
  23:Generated_Source\PSoC4/mUART_rx.c ****                                 (uint32)(~(uint32)(mUART_rx_DRIVE_MODE_IND_MASK << \
  24:Generated_Source\PSoC4/mUART_rx.c ****                                 (mUART_rx_DRIVE_MODE_BITS * (shift))))) | \
  25:Generated_Source\PSoC4/mUART_rx.c ****                                 (uint32)((uint32)(mode) << \
  26:Generated_Source\PSoC4/mUART_rx.c ****                                 (mUART_rx_DRIVE_MODE_BITS * (shift))); \
  27:Generated_Source\PSoC4/mUART_rx.c ****     } while (0)
  28:Generated_Source\PSoC4/mUART_rx.c **** #else
  29:Generated_Source\PSoC4/mUART_rx.c ****     #if (CY_PSOC4_4200L)
  30:Generated_Source\PSoC4/mUART_rx.c ****         #define mUART_rx_SetP4PinDriveMode(shift, mode)  \
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccV34sSd.s 			page 2


  31:Generated_Source\PSoC4/mUART_rx.c ****         do { \
  32:Generated_Source\PSoC4/mUART_rx.c ****             mUART_rx_USBIO_CTRL_REG = (mUART_rx_USBIO_CTRL_REG & \
  33:Generated_Source\PSoC4/mUART_rx.c ****                                     (uint32)(~(uint32)(mUART_rx_DRIVE_MODE_IND_MASK << \
  34:Generated_Source\PSoC4/mUART_rx.c ****                                     (mUART_rx_DRIVE_MODE_BITS * (shift))))) | \
  35:Generated_Source\PSoC4/mUART_rx.c ****                                     (uint32)((uint32)(mode) << \
  36:Generated_Source\PSoC4/mUART_rx.c ****                                     (mUART_rx_DRIVE_MODE_BITS * (shift))); \
  37:Generated_Source\PSoC4/mUART_rx.c ****         } while (0)
  38:Generated_Source\PSoC4/mUART_rx.c ****     #endif
  39:Generated_Source\PSoC4/mUART_rx.c **** #endif
  40:Generated_Source\PSoC4/mUART_rx.c ****   
  41:Generated_Source\PSoC4/mUART_rx.c **** 
  42:Generated_Source\PSoC4/mUART_rx.c **** #if defined(mUART_rx__PC) || (CY_PSOC4_4200L) 
  43:Generated_Source\PSoC4/mUART_rx.c ****     /*******************************************************************************
  44:Generated_Source\PSoC4/mUART_rx.c ****     * Function Name: mUART_rx_SetDriveMode
  45:Generated_Source\PSoC4/mUART_rx.c ****     ****************************************************************************//**
  46:Generated_Source\PSoC4/mUART_rx.c ****     *
  47:Generated_Source\PSoC4/mUART_rx.c ****     * \brief Sets the drive mode for each of the Pins component's pins.
  48:Generated_Source\PSoC4/mUART_rx.c ****     * 
  49:Generated_Source\PSoC4/mUART_rx.c ****     * <b>Note</b> This affects all pins in the Pins component instance. Use the
  50:Generated_Source\PSoC4/mUART_rx.c ****     * Per-Pin APIs if you wish to control individual pin's drive modes.
  51:Generated_Source\PSoC4/mUART_rx.c ****     *
  52:Generated_Source\PSoC4/mUART_rx.c ****     * <b>Note</b> USBIOs have limited drive functionality. Refer to the Drive Mode
  53:Generated_Source\PSoC4/mUART_rx.c ****     * parameter for more information.
  54:Generated_Source\PSoC4/mUART_rx.c ****     *
  55:Generated_Source\PSoC4/mUART_rx.c ****     * \param mode
  56:Generated_Source\PSoC4/mUART_rx.c ****     *  Mode for the selected signals. Valid options are documented in 
  57:Generated_Source\PSoC4/mUART_rx.c ****     *  \ref driveMode.
  58:Generated_Source\PSoC4/mUART_rx.c ****     *
  59:Generated_Source\PSoC4/mUART_rx.c ****     * \return
  60:Generated_Source\PSoC4/mUART_rx.c ****     *  None
  61:Generated_Source\PSoC4/mUART_rx.c ****     *
  62:Generated_Source\PSoC4/mUART_rx.c ****     * \sideeffect
  63:Generated_Source\PSoC4/mUART_rx.c ****     *  If you use read-modify-write operations that are not atomic, the ISR can
  64:Generated_Source\PSoC4/mUART_rx.c ****     *  cause corruption of this function. An ISR that interrupts this function 
  65:Generated_Source\PSoC4/mUART_rx.c ****     *  and performs writes to the Pins component Drive Mode registers can cause 
  66:Generated_Source\PSoC4/mUART_rx.c ****     *  corrupted port data. To avoid this issue, you should either use the Per-Pin
  67:Generated_Source\PSoC4/mUART_rx.c ****     *  APIs (primary method) or disable interrupts around this function.
  68:Generated_Source\PSoC4/mUART_rx.c ****     *
  69:Generated_Source\PSoC4/mUART_rx.c ****     * \funcusage
  70:Generated_Source\PSoC4/mUART_rx.c ****     *  \snippet mUART_rx_SUT.c usage_mUART_rx_SetDriveMode
  71:Generated_Source\PSoC4/mUART_rx.c ****     *******************************************************************************/
  72:Generated_Source\PSoC4/mUART_rx.c ****     void mUART_rx_SetDriveMode(uint8 mode)
  73:Generated_Source\PSoC4/mUART_rx.c ****     {
  28              		.loc 1 73 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  74:Generated_Source\PSoC4/mUART_rx.c **** 		mUART_rx_SetP4PinDriveMode(mUART_rx__0__SHIFT, mode);
  34              		.loc 1 74 0
  35 0000 0721     		movs	r1, #7
  36 0002 034A     		ldr	r2, .L2
  75:Generated_Source\PSoC4/mUART_rx.c ****     }
  37              		.loc 1 75 0
  38              		@ sp needed
  74:Generated_Source\PSoC4/mUART_rx.c **** 		mUART_rx_SetP4PinDriveMode(mUART_rx__0__SHIFT, mode);
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccV34sSd.s 			page 3


  39              		.loc 1 74 0
  40 0004 1368     		ldr	r3, [r2]
  41 0006 8B43     		bics	r3, r1
  42 0008 1843     		orrs	r0, r3
  43              	.LVL1:
  44 000a 1060     		str	r0, [r2]
  45              		.loc 1 75 0
  46 000c 7047     		bx	lr
  47              	.L3:
  48 000e C046     		.align	2
  49              	.L2:
  50 0010 08040440 		.word	1074005000
  51              		.cfi_endproc
  52              	.LFE0:
  53              		.size	mUART_rx_SetDriveMode, .-mUART_rx_SetDriveMode
  54              		.section	.text.mUART_rx_Write,"ax",%progbits
  55              		.align	1
  56              		.global	mUART_rx_Write
  57              		.code	16
  58              		.thumb_func
  59              		.type	mUART_rx_Write, %function
  60              	mUART_rx_Write:
  61              	.LFB1:
  76:Generated_Source\PSoC4/mUART_rx.c **** #endif
  77:Generated_Source\PSoC4/mUART_rx.c **** 
  78:Generated_Source\PSoC4/mUART_rx.c **** 
  79:Generated_Source\PSoC4/mUART_rx.c **** /*******************************************************************************
  80:Generated_Source\PSoC4/mUART_rx.c **** * Function Name: mUART_rx_Write
  81:Generated_Source\PSoC4/mUART_rx.c **** ****************************************************************************//**
  82:Generated_Source\PSoC4/mUART_rx.c **** *
  83:Generated_Source\PSoC4/mUART_rx.c **** * \brief Writes the value to the physical port (data output register), masking
  84:Generated_Source\PSoC4/mUART_rx.c **** *  and shifting the bits appropriately. 
  85:Generated_Source\PSoC4/mUART_rx.c **** *
  86:Generated_Source\PSoC4/mUART_rx.c **** * The data output register controls the signal applied to the physical pin in 
  87:Generated_Source\PSoC4/mUART_rx.c **** * conjunction with the drive mode parameter. This function avoids changing 
  88:Generated_Source\PSoC4/mUART_rx.c **** * other bits in the port by using the appropriate method (read-modify-write or
  89:Generated_Source\PSoC4/mUART_rx.c **** * bit banding).
  90:Generated_Source\PSoC4/mUART_rx.c **** *
  91:Generated_Source\PSoC4/mUART_rx.c **** * <b>Note</b> This function should not be used on a hardware digital output pin 
  92:Generated_Source\PSoC4/mUART_rx.c **** * as it is driven by the hardware signal attached to it.
  93:Generated_Source\PSoC4/mUART_rx.c **** *
  94:Generated_Source\PSoC4/mUART_rx.c **** * \param value
  95:Generated_Source\PSoC4/mUART_rx.c **** *  Value to write to the component instance.
  96:Generated_Source\PSoC4/mUART_rx.c **** *
  97:Generated_Source\PSoC4/mUART_rx.c **** * \return 
  98:Generated_Source\PSoC4/mUART_rx.c **** *  None 
  99:Generated_Source\PSoC4/mUART_rx.c **** *
 100:Generated_Source\PSoC4/mUART_rx.c **** * \sideeffect
 101:Generated_Source\PSoC4/mUART_rx.c **** *  If you use read-modify-write operations that are not atomic; the Interrupt 
 102:Generated_Source\PSoC4/mUART_rx.c **** *  Service Routines (ISR) can cause corruption of this function. An ISR that 
 103:Generated_Source\PSoC4/mUART_rx.c **** *  interrupts this function and performs writes to the Pins component data 
 104:Generated_Source\PSoC4/mUART_rx.c **** *  register can cause corrupted port data. To avoid this issue, you should 
 105:Generated_Source\PSoC4/mUART_rx.c **** *  either use the Per-Pin APIs (primary method) or disable interrupts around 
 106:Generated_Source\PSoC4/mUART_rx.c **** *  this function.
 107:Generated_Source\PSoC4/mUART_rx.c **** *
 108:Generated_Source\PSoC4/mUART_rx.c **** * \funcusage
 109:Generated_Source\PSoC4/mUART_rx.c **** *  \snippet mUART_rx_SUT.c usage_mUART_rx_Write
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccV34sSd.s 			page 4


 110:Generated_Source\PSoC4/mUART_rx.c **** *******************************************************************************/
 111:Generated_Source\PSoC4/mUART_rx.c **** void mUART_rx_Write(uint8 value)
 112:Generated_Source\PSoC4/mUART_rx.c **** {
  62              		.loc 1 112 0
  63              		.cfi_startproc
  64              		@ args = 0, pretend = 0, frame = 0
  65              		@ frame_needed = 0, uses_anonymous_args = 0
  66              		@ link register save eliminated.
  67              	.LVL2:
 113:Generated_Source\PSoC4/mUART_rx.c ****     uint8 drVal = (uint8)(mUART_rx_DR & (uint8)(~mUART_rx_MASK));
  68              		.loc 1 113 0
  69 0000 0123     		movs	r3, #1
  70 0002 0449     		ldr	r1, .L5
 114:Generated_Source\PSoC4/mUART_rx.c ****     drVal = (drVal | ((uint8)(value << mUART_rx_SHIFT) & mUART_rx_MASK));
 115:Generated_Source\PSoC4/mUART_rx.c ****     mUART_rx_DR = (uint32)drVal;
 116:Generated_Source\PSoC4/mUART_rx.c **** }
  71              		.loc 1 116 0
  72              		@ sp needed
 113:Generated_Source\PSoC4/mUART_rx.c ****     uint8 drVal = (uint8)(mUART_rx_DR & (uint8)(~mUART_rx_MASK));
  73              		.loc 1 113 0
  74 0004 0A68     		ldr	r2, [r1]
  75 0006 9A43     		bics	r2, r3
  76 0008 D2B2     		uxtb	r2, r2
  77              	.LVL3:
 115:Generated_Source\PSoC4/mUART_rx.c **** }
  78              		.loc 1 115 0
  79 000a 0340     		ands	r3, r0
  80 000c 1343     		orrs	r3, r2
  81 000e 0B60     		str	r3, [r1]
  82              		.loc 1 116 0
  83 0010 7047     		bx	lr
  84              	.L6:
  85 0012 C046     		.align	2
  86              	.L5:
  87 0014 00040440 		.word	1074004992
  88              		.cfi_endproc
  89              	.LFE1:
  90              		.size	mUART_rx_Write, .-mUART_rx_Write
  91              		.section	.text.mUART_rx_Read,"ax",%progbits
  92              		.align	1
  93              		.global	mUART_rx_Read
  94              		.code	16
  95              		.thumb_func
  96              		.type	mUART_rx_Read, %function
  97              	mUART_rx_Read:
  98              	.LFB2:
 117:Generated_Source\PSoC4/mUART_rx.c **** 
 118:Generated_Source\PSoC4/mUART_rx.c **** 
 119:Generated_Source\PSoC4/mUART_rx.c **** /*******************************************************************************
 120:Generated_Source\PSoC4/mUART_rx.c **** * Function Name: mUART_rx_Read
 121:Generated_Source\PSoC4/mUART_rx.c **** ****************************************************************************//**
 122:Generated_Source\PSoC4/mUART_rx.c **** *
 123:Generated_Source\PSoC4/mUART_rx.c **** * \brief Reads the associated physical port (pin status register) and masks 
 124:Generated_Source\PSoC4/mUART_rx.c **** *  the required bits according to the width and bit position of the component
 125:Generated_Source\PSoC4/mUART_rx.c **** *  instance. 
 126:Generated_Source\PSoC4/mUART_rx.c **** *
 127:Generated_Source\PSoC4/mUART_rx.c **** * The pin's status register returns the current logic level present on the 
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccV34sSd.s 			page 5


 128:Generated_Source\PSoC4/mUART_rx.c **** * physical pin.
 129:Generated_Source\PSoC4/mUART_rx.c **** *
 130:Generated_Source\PSoC4/mUART_rx.c **** * \return 
 131:Generated_Source\PSoC4/mUART_rx.c **** *  The current value for the pins in the component as a right justified number.
 132:Generated_Source\PSoC4/mUART_rx.c **** *
 133:Generated_Source\PSoC4/mUART_rx.c **** * \funcusage
 134:Generated_Source\PSoC4/mUART_rx.c **** *  \snippet mUART_rx_SUT.c usage_mUART_rx_Read  
 135:Generated_Source\PSoC4/mUART_rx.c **** *******************************************************************************/
 136:Generated_Source\PSoC4/mUART_rx.c **** uint8 mUART_rx_Read(void)
 137:Generated_Source\PSoC4/mUART_rx.c **** {
  99              		.loc 1 137 0
 100              		.cfi_startproc
 101              		@ args = 0, pretend = 0, frame = 0
 102              		@ frame_needed = 0, uses_anonymous_args = 0
 103              		@ link register save eliminated.
 138:Generated_Source\PSoC4/mUART_rx.c ****     return (uint8)((mUART_rx_PS & mUART_rx_MASK) >> mUART_rx_SHIFT);
 104              		.loc 1 138 0
 105 0000 024B     		ldr	r3, .L8
 139:Generated_Source\PSoC4/mUART_rx.c **** }
 106              		.loc 1 139 0
 107              		@ sp needed
 138:Generated_Source\PSoC4/mUART_rx.c ****     return (uint8)((mUART_rx_PS & mUART_rx_MASK) >> mUART_rx_SHIFT);
 108              		.loc 1 138 0
 109 0002 1868     		ldr	r0, [r3]
 110 0004 0123     		movs	r3, #1
 111 0006 1840     		ands	r0, r3
 112              		.loc 1 139 0
 113 0008 7047     		bx	lr
 114              	.L9:
 115 000a C046     		.align	2
 116              	.L8:
 117 000c 04040440 		.word	1074004996
 118              		.cfi_endproc
 119              	.LFE2:
 120              		.size	mUART_rx_Read, .-mUART_rx_Read
 121              		.section	.text.mUART_rx_ReadDataReg,"ax",%progbits
 122              		.align	1
 123              		.global	mUART_rx_ReadDataReg
 124              		.code	16
 125              		.thumb_func
 126              		.type	mUART_rx_ReadDataReg, %function
 127              	mUART_rx_ReadDataReg:
 128              	.LFB3:
 140:Generated_Source\PSoC4/mUART_rx.c **** 
 141:Generated_Source\PSoC4/mUART_rx.c **** 
 142:Generated_Source\PSoC4/mUART_rx.c **** /*******************************************************************************
 143:Generated_Source\PSoC4/mUART_rx.c **** * Function Name: mUART_rx_ReadDataReg
 144:Generated_Source\PSoC4/mUART_rx.c **** ****************************************************************************//**
 145:Generated_Source\PSoC4/mUART_rx.c **** *
 146:Generated_Source\PSoC4/mUART_rx.c **** * \brief Reads the associated physical port's data output register and masks 
 147:Generated_Source\PSoC4/mUART_rx.c **** *  the correct bits according to the width and bit position of the component 
 148:Generated_Source\PSoC4/mUART_rx.c **** *  instance. 
 149:Generated_Source\PSoC4/mUART_rx.c **** *
 150:Generated_Source\PSoC4/mUART_rx.c **** * The data output register controls the signal applied to the physical pin in 
 151:Generated_Source\PSoC4/mUART_rx.c **** * conjunction with the drive mode parameter. This is not the same as the 
 152:Generated_Source\PSoC4/mUART_rx.c **** * preferred mUART_rx_Read() API because the 
 153:Generated_Source\PSoC4/mUART_rx.c **** * mUART_rx_ReadDataReg() reads the data register instead of the status 
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccV34sSd.s 			page 6


 154:Generated_Source\PSoC4/mUART_rx.c **** * register. For output pins this is a useful function to determine the value 
 155:Generated_Source\PSoC4/mUART_rx.c **** * just written to the pin.
 156:Generated_Source\PSoC4/mUART_rx.c **** *
 157:Generated_Source\PSoC4/mUART_rx.c **** * \return 
 158:Generated_Source\PSoC4/mUART_rx.c **** *  The current value of the data register masked and shifted into a right 
 159:Generated_Source\PSoC4/mUART_rx.c **** *  justified number for the component instance.
 160:Generated_Source\PSoC4/mUART_rx.c **** *
 161:Generated_Source\PSoC4/mUART_rx.c **** * \funcusage
 162:Generated_Source\PSoC4/mUART_rx.c **** *  \snippet mUART_rx_SUT.c usage_mUART_rx_ReadDataReg 
 163:Generated_Source\PSoC4/mUART_rx.c **** *******************************************************************************/
 164:Generated_Source\PSoC4/mUART_rx.c **** uint8 mUART_rx_ReadDataReg(void)
 165:Generated_Source\PSoC4/mUART_rx.c **** {
 129              		.loc 1 165 0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 0
 132              		@ frame_needed = 0, uses_anonymous_args = 0
 133              		@ link register save eliminated.
 166:Generated_Source\PSoC4/mUART_rx.c ****     return (uint8)((mUART_rx_DR & mUART_rx_MASK) >> mUART_rx_SHIFT);
 134              		.loc 1 166 0
 135 0000 024B     		ldr	r3, .L11
 167:Generated_Source\PSoC4/mUART_rx.c **** }
 136              		.loc 1 167 0
 137              		@ sp needed
 166:Generated_Source\PSoC4/mUART_rx.c ****     return (uint8)((mUART_rx_DR & mUART_rx_MASK) >> mUART_rx_SHIFT);
 138              		.loc 1 166 0
 139 0002 1868     		ldr	r0, [r3]
 140 0004 0123     		movs	r3, #1
 141 0006 1840     		ands	r0, r3
 142              		.loc 1 167 0
 143 0008 7047     		bx	lr
 144              	.L12:
 145 000a C046     		.align	2
 146              	.L11:
 147 000c 00040440 		.word	1074004992
 148              		.cfi_endproc
 149              	.LFE3:
 150              		.size	mUART_rx_ReadDataReg, .-mUART_rx_ReadDataReg
 151              		.section	.text.mUART_rx_SetInterruptMode,"ax",%progbits
 152              		.align	1
 153              		.global	mUART_rx_SetInterruptMode
 154              		.code	16
 155              		.thumb_func
 156              		.type	mUART_rx_SetInterruptMode, %function
 157              	mUART_rx_SetInterruptMode:
 158              	.LFB4:
 168:Generated_Source\PSoC4/mUART_rx.c **** 
 169:Generated_Source\PSoC4/mUART_rx.c **** 
 170:Generated_Source\PSoC4/mUART_rx.c **** /*******************************************************************************
 171:Generated_Source\PSoC4/mUART_rx.c **** * Function Name: mUART_rx_SetInterruptMode
 172:Generated_Source\PSoC4/mUART_rx.c **** ****************************************************************************//**
 173:Generated_Source\PSoC4/mUART_rx.c **** *
 174:Generated_Source\PSoC4/mUART_rx.c **** * \brief Configures the interrupt mode for each of the Pins component's
 175:Generated_Source\PSoC4/mUART_rx.c **** *  pins. Alternatively you may set the interrupt mode for all the pins
 176:Generated_Source\PSoC4/mUART_rx.c **** *  specified in the Pins component.
 177:Generated_Source\PSoC4/mUART_rx.c **** *
 178:Generated_Source\PSoC4/mUART_rx.c **** *  <b>Note</b> The interrupt is port-wide and therefore any enabled pin
 179:Generated_Source\PSoC4/mUART_rx.c **** *  interrupt may trigger it.
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccV34sSd.s 			page 7


 180:Generated_Source\PSoC4/mUART_rx.c **** *
 181:Generated_Source\PSoC4/mUART_rx.c **** * \param position
 182:Generated_Source\PSoC4/mUART_rx.c **** *  The pin position as listed in the Pins component. You may OR these to be 
 183:Generated_Source\PSoC4/mUART_rx.c **** *  able to configure the interrupt mode of multiple pins within a Pins 
 184:Generated_Source\PSoC4/mUART_rx.c **** *  component. Or you may use mUART_rx_INTR_ALL to configure the
 185:Generated_Source\PSoC4/mUART_rx.c **** *  interrupt mode of all the pins in the Pins component.       
 186:Generated_Source\PSoC4/mUART_rx.c **** *  - mUART_rx_0_INTR       (First pin in the list)
 187:Generated_Source\PSoC4/mUART_rx.c **** *  - mUART_rx_1_INTR       (Second pin in the list)
 188:Generated_Source\PSoC4/mUART_rx.c **** *  - ...
 189:Generated_Source\PSoC4/mUART_rx.c **** *  - mUART_rx_INTR_ALL     (All pins in Pins component)
 190:Generated_Source\PSoC4/mUART_rx.c **** *
 191:Generated_Source\PSoC4/mUART_rx.c **** * \param mode
 192:Generated_Source\PSoC4/mUART_rx.c **** *  Interrupt mode for the selected pins. Valid options are documented in
 193:Generated_Source\PSoC4/mUART_rx.c **** *  \ref intrMode.
 194:Generated_Source\PSoC4/mUART_rx.c **** *
 195:Generated_Source\PSoC4/mUART_rx.c **** * \return 
 196:Generated_Source\PSoC4/mUART_rx.c **** *  None
 197:Generated_Source\PSoC4/mUART_rx.c **** *  
 198:Generated_Source\PSoC4/mUART_rx.c **** * \sideeffect
 199:Generated_Source\PSoC4/mUART_rx.c **** *  It is recommended that the interrupt be disabled before calling this 
 200:Generated_Source\PSoC4/mUART_rx.c **** *  function to avoid unintended interrupt requests. Note that the interrupt
 201:Generated_Source\PSoC4/mUART_rx.c **** *  type is port wide, and therefore will trigger for any enabled pin on the 
 202:Generated_Source\PSoC4/mUART_rx.c **** *  port.
 203:Generated_Source\PSoC4/mUART_rx.c **** *
 204:Generated_Source\PSoC4/mUART_rx.c **** * \funcusage
 205:Generated_Source\PSoC4/mUART_rx.c **** *  \snippet mUART_rx_SUT.c usage_mUART_rx_SetInterruptMode
 206:Generated_Source\PSoC4/mUART_rx.c **** *******************************************************************************/
 207:Generated_Source\PSoC4/mUART_rx.c **** void mUART_rx_SetInterruptMode(uint16 position, uint16 mode)
 208:Generated_Source\PSoC4/mUART_rx.c **** {
 159              		.loc 1 208 0
 160              		.cfi_startproc
 161              		@ args = 0, pretend = 0, frame = 0
 162              		@ frame_needed = 0, uses_anonymous_args = 0
 163              		@ link register save eliminated.
 164              	.LVL4:
 209:Generated_Source\PSoC4/mUART_rx.c ****     uint32 intrCfg;
 210:Generated_Source\PSoC4/mUART_rx.c ****     
 211:Generated_Source\PSoC4/mUART_rx.c ****     intrCfg =  mUART_rx_INTCFG & (uint32)(~(uint32)position);
 165              		.loc 1 211 0
 166 0000 034A     		ldr	r2, .L14
 212:Generated_Source\PSoC4/mUART_rx.c ****     mUART_rx_INTCFG = intrCfg | ((uint32)position & (uint32)mode);
 213:Generated_Source\PSoC4/mUART_rx.c **** }
 167              		.loc 1 213 0
 168              		@ sp needed
 211:Generated_Source\PSoC4/mUART_rx.c ****     mUART_rx_INTCFG = intrCfg | ((uint32)position & (uint32)mode);
 169              		.loc 1 211 0
 170 0002 1368     		ldr	r3, [r2]
 171              	.LVL5:
 212:Generated_Source\PSoC4/mUART_rx.c ****     mUART_rx_INTCFG = intrCfg | ((uint32)position & (uint32)mode);
 172              		.loc 1 212 0
 173 0004 8343     		bics	r3, r0
 174              	.LVL6:
 175 0006 0840     		ands	r0, r1
 176              	.LVL7:
 177 0008 1843     		orrs	r0, r3
 178 000a 1060     		str	r0, [r2]
 179              		.loc 1 213 0
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccV34sSd.s 			page 8


 180 000c 7047     		bx	lr
 181              	.L15:
 182 000e C046     		.align	2
 183              	.L14:
 184 0010 0C040440 		.word	1074005004
 185              		.cfi_endproc
 186              	.LFE4:
 187              		.size	mUART_rx_SetInterruptMode, .-mUART_rx_SetInterruptMode
 188              		.section	.text.mUART_rx_ClearInterrupt,"ax",%progbits
 189              		.align	1
 190              		.global	mUART_rx_ClearInterrupt
 191              		.code	16
 192              		.thumb_func
 193              		.type	mUART_rx_ClearInterrupt, %function
 194              	mUART_rx_ClearInterrupt:
 195              	.LFB5:
 214:Generated_Source\PSoC4/mUART_rx.c **** 
 215:Generated_Source\PSoC4/mUART_rx.c **** 
 216:Generated_Source\PSoC4/mUART_rx.c **** /*******************************************************************************
 217:Generated_Source\PSoC4/mUART_rx.c **** * Function Name: mUART_rx_ClearInterrupt
 218:Generated_Source\PSoC4/mUART_rx.c **** ****************************************************************************//**
 219:Generated_Source\PSoC4/mUART_rx.c **** *
 220:Generated_Source\PSoC4/mUART_rx.c **** * \brief Clears any active interrupts attached with the component and returns 
 221:Generated_Source\PSoC4/mUART_rx.c **** *  the value of the interrupt status register allowing determination of which
 222:Generated_Source\PSoC4/mUART_rx.c **** *  pins generated an interrupt event.
 223:Generated_Source\PSoC4/mUART_rx.c **** *
 224:Generated_Source\PSoC4/mUART_rx.c **** * \return 
 225:Generated_Source\PSoC4/mUART_rx.c **** *  The right-shifted current value of the interrupt status register. Each pin 
 226:Generated_Source\PSoC4/mUART_rx.c **** *  has one bit set if it generated an interrupt event. For example, bit 0 is 
 227:Generated_Source\PSoC4/mUART_rx.c **** *  for pin 0 and bit 1 is for pin 1 of the Pins component.
 228:Generated_Source\PSoC4/mUART_rx.c **** *  
 229:Generated_Source\PSoC4/mUART_rx.c **** * \sideeffect
 230:Generated_Source\PSoC4/mUART_rx.c **** *  Clears all bits of the physical port's interrupt status register, not just
 231:Generated_Source\PSoC4/mUART_rx.c **** *  those associated with the Pins component.
 232:Generated_Source\PSoC4/mUART_rx.c **** *
 233:Generated_Source\PSoC4/mUART_rx.c **** * \funcusage
 234:Generated_Source\PSoC4/mUART_rx.c **** *  \snippet mUART_rx_SUT.c usage_mUART_rx_ClearInterrupt
 235:Generated_Source\PSoC4/mUART_rx.c **** *******************************************************************************/
 236:Generated_Source\PSoC4/mUART_rx.c **** uint8 mUART_rx_ClearInterrupt(void)
 237:Generated_Source\PSoC4/mUART_rx.c **** {
 196              		.loc 1 237 0
 197              		.cfi_startproc
 198              		@ args = 0, pretend = 0, frame = 0
 199              		@ frame_needed = 0, uses_anonymous_args = 0
 200              		@ link register save eliminated.
 238:Generated_Source\PSoC4/mUART_rx.c **** 	uint8 maskedStatus = (uint8)(mUART_rx_INTSTAT & mUART_rx_MASK);
 201              		.loc 1 238 0
 202 0000 0123     		movs	r3, #1
 203 0002 024A     		ldr	r2, .L17
 239:Generated_Source\PSoC4/mUART_rx.c **** 	mUART_rx_INTSTAT = maskedStatus;
 240:Generated_Source\PSoC4/mUART_rx.c ****     return maskedStatus >> mUART_rx_SHIFT;
 241:Generated_Source\PSoC4/mUART_rx.c **** }
 204              		.loc 1 241 0
 205              		@ sp needed
 238:Generated_Source\PSoC4/mUART_rx.c **** 	uint8 maskedStatus = (uint8)(mUART_rx_INTSTAT & mUART_rx_MASK);
 206              		.loc 1 238 0
 207 0004 1068     		ldr	r0, [r2]
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccV34sSd.s 			page 9


 208 0006 1840     		ands	r0, r3
 209              	.LVL8:
 239:Generated_Source\PSoC4/mUART_rx.c **** 	mUART_rx_INTSTAT = maskedStatus;
 210              		.loc 1 239 0
 211 0008 1060     		str	r0, [r2]
 212              		.loc 1 241 0
 213 000a 7047     		bx	lr
 214              	.L18:
 215              		.align	2
 216              	.L17:
 217 000c 10040440 		.word	1074005008
 218              		.cfi_endproc
 219              	.LFE5:
 220              		.size	mUART_rx_ClearInterrupt, .-mUART_rx_ClearInterrupt
 221              		.text
 222              	.Letext0:
 223              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 224              		.section	.debug_info,"",%progbits
 225              	.Ldebug_info0:
 226 0000 9C010000 		.4byte	0x19c
 227 0004 0400     		.2byte	0x4
 228 0006 00000000 		.4byte	.Ldebug_abbrev0
 229 000a 04       		.byte	0x4
 230 000b 01       		.uleb128 0x1
 231 000c 4A000000 		.4byte	.LASF28
 232 0010 0C       		.byte	0xc
 233 0011 00000000 		.4byte	.LASF29
 234 0015 D0010000 		.4byte	.LASF30
 235 0019 00000000 		.4byte	.Ldebug_ranges0+0
 236 001d 00000000 		.4byte	0
 237 0021 00000000 		.4byte	.Ldebug_line0
 238 0025 02       		.uleb128 0x2
 239 0026 01       		.byte	0x1
 240 0027 06       		.byte	0x6
 241 0028 40020000 		.4byte	.LASF0
 242 002c 02       		.uleb128 0x2
 243 002d 01       		.byte	0x1
 244 002e 08       		.byte	0x8
 245 002f E2000000 		.4byte	.LASF1
 246 0033 02       		.uleb128 0x2
 247 0034 02       		.byte	0x2
 248 0035 05       		.byte	0x5
 249 0036 0F020000 		.4byte	.LASF2
 250 003a 02       		.uleb128 0x2
 251 003b 02       		.byte	0x2
 252 003c 07       		.byte	0x7
 253 003d 08010000 		.4byte	.LASF3
 254 0041 02       		.uleb128 0x2
 255 0042 04       		.byte	0x4
 256 0043 05       		.byte	0x5
 257 0044 37020000 		.4byte	.LASF4
 258 0048 02       		.uleb128 0x2
 259 0049 04       		.byte	0x4
 260 004a 07       		.byte	0x7
 261 004b F6000000 		.4byte	.LASF5
 262 004f 02       		.uleb128 0x2
 263 0050 08       		.byte	0x8
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccV34sSd.s 			page 10


 264 0051 05       		.byte	0x5
 265 0052 AF010000 		.4byte	.LASF6
 266 0056 02       		.uleb128 0x2
 267 0057 08       		.byte	0x8
 268 0058 07       		.byte	0x7
 269 0059 64010000 		.4byte	.LASF7
 270 005d 03       		.uleb128 0x3
 271 005e 04       		.byte	0x4
 272 005f 05       		.byte	0x5
 273 0060 696E7400 		.ascii	"int\000"
 274 0064 02       		.uleb128 0x2
 275 0065 04       		.byte	0x4
 276 0066 07       		.byte	0x7
 277 0067 57010000 		.4byte	.LASF8
 278 006b 04       		.uleb128 0x4
 279 006c 19020000 		.4byte	.LASF9
 280 0070 02       		.byte	0x2
 281 0071 FB01     		.2byte	0x1fb
 282 0073 2C000000 		.4byte	0x2c
 283 0077 04       		.uleb128 0x4
 284 0078 38010000 		.4byte	.LASF10
 285 007c 02       		.byte	0x2
 286 007d FC01     		.2byte	0x1fc
 287 007f 3A000000 		.4byte	0x3a
 288 0083 04       		.uleb128 0x4
 289 0084 48010000 		.4byte	.LASF11
 290 0088 02       		.byte	0x2
 291 0089 FD01     		.2byte	0x1fd
 292 008b 48000000 		.4byte	0x48
 293 008f 02       		.uleb128 0x2
 294 0090 04       		.byte	0x4
 295 0091 04       		.byte	0x4
 296 0092 DC000000 		.4byte	.LASF12
 297 0096 02       		.uleb128 0x2
 298 0097 08       		.byte	0x8
 299 0098 04       		.byte	0x4
 300 0099 31010000 		.4byte	.LASF13
 301 009d 02       		.uleb128 0x2
 302 009e 01       		.byte	0x1
 303 009f 08       		.byte	0x8
 304 00a0 CB010000 		.4byte	.LASF14
 305 00a4 04       		.uleb128 0x4
 306 00a5 22000000 		.4byte	.LASF15
 307 00a9 02       		.byte	0x2
 308 00aa A702     		.2byte	0x2a7
 309 00ac B0000000 		.4byte	0xb0
 310 00b0 05       		.uleb128 0x5
 311 00b1 83000000 		.4byte	0x83
 312 00b5 06       		.uleb128 0x6
 313 00b6 1B010000 		.4byte	.LASF16
 314 00ba 01       		.byte	0x1
 315 00bb 48       		.byte	0x48
 316 00bc 00000000 		.4byte	.LFB0
 317 00c0 14000000 		.4byte	.LFE0-.LFB0
 318 00c4 01       		.uleb128 0x1
 319 00c5 9C       		.byte	0x9c
 320 00c6 DA000000 		.4byte	0xda
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccV34sSd.s 			page 11


 321 00ca 07       		.uleb128 0x7
 322 00cb 7B010000 		.4byte	.LASF18
 323 00cf 01       		.byte	0x1
 324 00d0 48       		.byte	0x48
 325 00d1 6B000000 		.4byte	0x6b
 326 00d5 00000000 		.4byte	.LLST0
 327 00d9 00       		.byte	0
 328 00da 06       		.uleb128 0x6
 329 00db 3B000000 		.4byte	.LASF17
 330 00df 01       		.byte	0x1
 331 00e0 6F       		.byte	0x6f
 332 00e1 00000000 		.4byte	.LFB1
 333 00e5 18000000 		.4byte	.LFE1-.LFB1
 334 00e9 01       		.uleb128 0x1
 335 00ea 9C       		.byte	0x9c
 336 00eb 11010000 		.4byte	0x111
 337 00ef 08       		.uleb128 0x8
 338 00f0 35000000 		.4byte	.LASF19
 339 00f4 01       		.byte	0x1
 340 00f5 6F       		.byte	0x6f
 341 00f6 6B000000 		.4byte	0x6b
 342 00fa 01       		.uleb128 0x1
 343 00fb 50       		.byte	0x50
 344 00fc 09       		.uleb128 0x9
 345 00fd F0000000 		.4byte	.LASF24
 346 0101 01       		.byte	0x1
 347 0102 71       		.byte	0x71
 348 0103 6B000000 		.4byte	0x6b
 349 0107 08       		.uleb128 0x8
 350 0108 70       		.byte	0x70
 351 0109 00       		.sleb128 0
 352 010a 31       		.byte	0x31
 353 010b 1A       		.byte	0x1a
 354 010c 72       		.byte	0x72
 355 010d 00       		.sleb128 0
 356 010e 21       		.byte	0x21
 357 010f 9F       		.byte	0x9f
 358 0110 00       		.byte	0
 359 0111 0A       		.uleb128 0xa
 360 0112 BD010000 		.4byte	.LASF20
 361 0116 01       		.byte	0x1
 362 0117 88       		.byte	0x88
 363 0118 6B000000 		.4byte	0x6b
 364 011c 00000000 		.4byte	.LFB2
 365 0120 10000000 		.4byte	.LFE2-.LFB2
 366 0124 01       		.uleb128 0x1
 367 0125 9C       		.byte	0x9c
 368 0126 0A       		.uleb128 0xa
 369 0127 80010000 		.4byte	.LASF21
 370 012b 01       		.byte	0x1
 371 012c A4       		.byte	0xa4
 372 012d 6B000000 		.4byte	0x6b
 373 0131 00000000 		.4byte	.LFB3
 374 0135 10000000 		.4byte	.LFE3-.LFB3
 375 0139 01       		.uleb128 0x1
 376 013a 9C       		.byte	0x9c
 377 013b 06       		.uleb128 0x6
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccV34sSd.s 			page 12


 378 013c 95010000 		.4byte	.LASF22
 379 0140 01       		.byte	0x1
 380 0141 CF       		.byte	0xcf
 381 0142 00000000 		.4byte	.LFB4
 382 0146 14000000 		.4byte	.LFE4-.LFB4
 383 014a 01       		.uleb128 0x1
 384 014b 9C       		.byte	0x9c
 385 014c 7C010000 		.4byte	0x17c
 386 0150 07       		.uleb128 0x7
 387 0151 3F010000 		.4byte	.LASF23
 388 0155 01       		.byte	0x1
 389 0156 CF       		.byte	0xcf
 390 0157 77000000 		.4byte	0x77
 391 015b 21000000 		.4byte	.LLST1
 392 015f 08       		.uleb128 0x8
 393 0160 7B010000 		.4byte	.LASF18
 394 0164 01       		.byte	0x1
 395 0165 CF       		.byte	0xcf
 396 0166 77000000 		.4byte	0x77
 397 016a 01       		.uleb128 0x1
 398 016b 51       		.byte	0x51
 399 016c 0B       		.uleb128 0xb
 400 016d 4F010000 		.4byte	.LASF25
 401 0171 01       		.byte	0x1
 402 0172 D1       		.byte	0xd1
 403 0173 83000000 		.4byte	0x83
 404 0177 42000000 		.4byte	.LLST2
 405 017b 00       		.byte	0
 406 017c 0C       		.uleb128 0xc
 407 017d 1F020000 		.4byte	.LASF26
 408 0181 01       		.byte	0x1
 409 0182 EC       		.byte	0xec
 410 0183 6B000000 		.4byte	0x6b
 411 0187 00000000 		.4byte	.LFB5
 412 018b 10000000 		.4byte	.LFE5-.LFB5
 413 018f 01       		.uleb128 0x1
 414 0190 9C       		.byte	0x9c
 415 0191 09       		.uleb128 0x9
 416 0192 28000000 		.4byte	.LASF27
 417 0196 01       		.byte	0x1
 418 0197 EE       		.byte	0xee
 419 0198 6B000000 		.4byte	0x6b
 420 019c 01       		.uleb128 0x1
 421 019d 50       		.byte	0x50
 422 019e 00       		.byte	0
 423 019f 00       		.byte	0
 424              		.section	.debug_abbrev,"",%progbits
 425              	.Ldebug_abbrev0:
 426 0000 01       		.uleb128 0x1
 427 0001 11       		.uleb128 0x11
 428 0002 01       		.byte	0x1
 429 0003 25       		.uleb128 0x25
 430 0004 0E       		.uleb128 0xe
 431 0005 13       		.uleb128 0x13
 432 0006 0B       		.uleb128 0xb
 433 0007 03       		.uleb128 0x3
 434 0008 0E       		.uleb128 0xe
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccV34sSd.s 			page 13


 435 0009 1B       		.uleb128 0x1b
 436 000a 0E       		.uleb128 0xe
 437 000b 55       		.uleb128 0x55
 438 000c 17       		.uleb128 0x17
 439 000d 11       		.uleb128 0x11
 440 000e 01       		.uleb128 0x1
 441 000f 10       		.uleb128 0x10
 442 0010 17       		.uleb128 0x17
 443 0011 00       		.byte	0
 444 0012 00       		.byte	0
 445 0013 02       		.uleb128 0x2
 446 0014 24       		.uleb128 0x24
 447 0015 00       		.byte	0
 448 0016 0B       		.uleb128 0xb
 449 0017 0B       		.uleb128 0xb
 450 0018 3E       		.uleb128 0x3e
 451 0019 0B       		.uleb128 0xb
 452 001a 03       		.uleb128 0x3
 453 001b 0E       		.uleb128 0xe
 454 001c 00       		.byte	0
 455 001d 00       		.byte	0
 456 001e 03       		.uleb128 0x3
 457 001f 24       		.uleb128 0x24
 458 0020 00       		.byte	0
 459 0021 0B       		.uleb128 0xb
 460 0022 0B       		.uleb128 0xb
 461 0023 3E       		.uleb128 0x3e
 462 0024 0B       		.uleb128 0xb
 463 0025 03       		.uleb128 0x3
 464 0026 08       		.uleb128 0x8
 465 0027 00       		.byte	0
 466 0028 00       		.byte	0
 467 0029 04       		.uleb128 0x4
 468 002a 16       		.uleb128 0x16
 469 002b 00       		.byte	0
 470 002c 03       		.uleb128 0x3
 471 002d 0E       		.uleb128 0xe
 472 002e 3A       		.uleb128 0x3a
 473 002f 0B       		.uleb128 0xb
 474 0030 3B       		.uleb128 0x3b
 475 0031 05       		.uleb128 0x5
 476 0032 49       		.uleb128 0x49
 477 0033 13       		.uleb128 0x13
 478 0034 00       		.byte	0
 479 0035 00       		.byte	0
 480 0036 05       		.uleb128 0x5
 481 0037 35       		.uleb128 0x35
 482 0038 00       		.byte	0
 483 0039 49       		.uleb128 0x49
 484 003a 13       		.uleb128 0x13
 485 003b 00       		.byte	0
 486 003c 00       		.byte	0
 487 003d 06       		.uleb128 0x6
 488 003e 2E       		.uleb128 0x2e
 489 003f 01       		.byte	0x1
 490 0040 3F       		.uleb128 0x3f
 491 0041 19       		.uleb128 0x19
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccV34sSd.s 			page 14


 492 0042 03       		.uleb128 0x3
 493 0043 0E       		.uleb128 0xe
 494 0044 3A       		.uleb128 0x3a
 495 0045 0B       		.uleb128 0xb
 496 0046 3B       		.uleb128 0x3b
 497 0047 0B       		.uleb128 0xb
 498 0048 27       		.uleb128 0x27
 499 0049 19       		.uleb128 0x19
 500 004a 11       		.uleb128 0x11
 501 004b 01       		.uleb128 0x1
 502 004c 12       		.uleb128 0x12
 503 004d 06       		.uleb128 0x6
 504 004e 40       		.uleb128 0x40
 505 004f 18       		.uleb128 0x18
 506 0050 9742     		.uleb128 0x2117
 507 0052 19       		.uleb128 0x19
 508 0053 01       		.uleb128 0x1
 509 0054 13       		.uleb128 0x13
 510 0055 00       		.byte	0
 511 0056 00       		.byte	0
 512 0057 07       		.uleb128 0x7
 513 0058 05       		.uleb128 0x5
 514 0059 00       		.byte	0
 515 005a 03       		.uleb128 0x3
 516 005b 0E       		.uleb128 0xe
 517 005c 3A       		.uleb128 0x3a
 518 005d 0B       		.uleb128 0xb
 519 005e 3B       		.uleb128 0x3b
 520 005f 0B       		.uleb128 0xb
 521 0060 49       		.uleb128 0x49
 522 0061 13       		.uleb128 0x13
 523 0062 02       		.uleb128 0x2
 524 0063 17       		.uleb128 0x17
 525 0064 00       		.byte	0
 526 0065 00       		.byte	0
 527 0066 08       		.uleb128 0x8
 528 0067 05       		.uleb128 0x5
 529 0068 00       		.byte	0
 530 0069 03       		.uleb128 0x3
 531 006a 0E       		.uleb128 0xe
 532 006b 3A       		.uleb128 0x3a
 533 006c 0B       		.uleb128 0xb
 534 006d 3B       		.uleb128 0x3b
 535 006e 0B       		.uleb128 0xb
 536 006f 49       		.uleb128 0x49
 537 0070 13       		.uleb128 0x13
 538 0071 02       		.uleb128 0x2
 539 0072 18       		.uleb128 0x18
 540 0073 00       		.byte	0
 541 0074 00       		.byte	0
 542 0075 09       		.uleb128 0x9
 543 0076 34       		.uleb128 0x34
 544 0077 00       		.byte	0
 545 0078 03       		.uleb128 0x3
 546 0079 0E       		.uleb128 0xe
 547 007a 3A       		.uleb128 0x3a
 548 007b 0B       		.uleb128 0xb
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccV34sSd.s 			page 15


 549 007c 3B       		.uleb128 0x3b
 550 007d 0B       		.uleb128 0xb
 551 007e 49       		.uleb128 0x49
 552 007f 13       		.uleb128 0x13
 553 0080 02       		.uleb128 0x2
 554 0081 18       		.uleb128 0x18
 555 0082 00       		.byte	0
 556 0083 00       		.byte	0
 557 0084 0A       		.uleb128 0xa
 558 0085 2E       		.uleb128 0x2e
 559 0086 00       		.byte	0
 560 0087 3F       		.uleb128 0x3f
 561 0088 19       		.uleb128 0x19
 562 0089 03       		.uleb128 0x3
 563 008a 0E       		.uleb128 0xe
 564 008b 3A       		.uleb128 0x3a
 565 008c 0B       		.uleb128 0xb
 566 008d 3B       		.uleb128 0x3b
 567 008e 0B       		.uleb128 0xb
 568 008f 27       		.uleb128 0x27
 569 0090 19       		.uleb128 0x19
 570 0091 49       		.uleb128 0x49
 571 0092 13       		.uleb128 0x13
 572 0093 11       		.uleb128 0x11
 573 0094 01       		.uleb128 0x1
 574 0095 12       		.uleb128 0x12
 575 0096 06       		.uleb128 0x6
 576 0097 40       		.uleb128 0x40
 577 0098 18       		.uleb128 0x18
 578 0099 9742     		.uleb128 0x2117
 579 009b 19       		.uleb128 0x19
 580 009c 00       		.byte	0
 581 009d 00       		.byte	0
 582 009e 0B       		.uleb128 0xb
 583 009f 34       		.uleb128 0x34
 584 00a0 00       		.byte	0
 585 00a1 03       		.uleb128 0x3
 586 00a2 0E       		.uleb128 0xe
 587 00a3 3A       		.uleb128 0x3a
 588 00a4 0B       		.uleb128 0xb
 589 00a5 3B       		.uleb128 0x3b
 590 00a6 0B       		.uleb128 0xb
 591 00a7 49       		.uleb128 0x49
 592 00a8 13       		.uleb128 0x13
 593 00a9 02       		.uleb128 0x2
 594 00aa 17       		.uleb128 0x17
 595 00ab 00       		.byte	0
 596 00ac 00       		.byte	0
 597 00ad 0C       		.uleb128 0xc
 598 00ae 2E       		.uleb128 0x2e
 599 00af 01       		.byte	0x1
 600 00b0 3F       		.uleb128 0x3f
 601 00b1 19       		.uleb128 0x19
 602 00b2 03       		.uleb128 0x3
 603 00b3 0E       		.uleb128 0xe
 604 00b4 3A       		.uleb128 0x3a
 605 00b5 0B       		.uleb128 0xb
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccV34sSd.s 			page 16


 606 00b6 3B       		.uleb128 0x3b
 607 00b7 0B       		.uleb128 0xb
 608 00b8 27       		.uleb128 0x27
 609 00b9 19       		.uleb128 0x19
 610 00ba 49       		.uleb128 0x49
 611 00bb 13       		.uleb128 0x13
 612 00bc 11       		.uleb128 0x11
 613 00bd 01       		.uleb128 0x1
 614 00be 12       		.uleb128 0x12
 615 00bf 06       		.uleb128 0x6
 616 00c0 40       		.uleb128 0x40
 617 00c1 18       		.uleb128 0x18
 618 00c2 9742     		.uleb128 0x2117
 619 00c4 19       		.uleb128 0x19
 620 00c5 00       		.byte	0
 621 00c6 00       		.byte	0
 622 00c7 00       		.byte	0
 623              		.section	.debug_loc,"",%progbits
 624              	.Ldebug_loc0:
 625              	.LLST0:
 626 0000 00000000 		.4byte	.LVL0
 627 0004 0A000000 		.4byte	.LVL1
 628 0008 0100     		.2byte	0x1
 629 000a 50       		.byte	0x50
 630 000b 0A000000 		.4byte	.LVL1
 631 000f 14000000 		.4byte	.LFE0
 632 0013 0400     		.2byte	0x4
 633 0015 F3       		.byte	0xf3
 634 0016 01       		.uleb128 0x1
 635 0017 50       		.byte	0x50
 636 0018 9F       		.byte	0x9f
 637 0019 00000000 		.4byte	0
 638 001d 00000000 		.4byte	0
 639              	.LLST1:
 640 0021 00000000 		.4byte	.LVL4
 641 0025 08000000 		.4byte	.LVL7
 642 0029 0100     		.2byte	0x1
 643 002b 50       		.byte	0x50
 644 002c 08000000 		.4byte	.LVL7
 645 0030 14000000 		.4byte	.LFE4
 646 0034 0400     		.2byte	0x4
 647 0036 F3       		.byte	0xf3
 648 0037 01       		.uleb128 0x1
 649 0038 50       		.byte	0x50
 650 0039 9F       		.byte	0x9f
 651 003a 00000000 		.4byte	0
 652 003e 00000000 		.4byte	0
 653              	.LLST2:
 654 0042 04000000 		.4byte	.LVL5
 655 0046 06000000 		.4byte	.LVL6
 656 004a 0B00     		.2byte	0xb
 657 004c 70       		.byte	0x70
 658 004d 00       		.sleb128 0
 659 004e 0A       		.byte	0xa
 660 004f FFFF     		.2byte	0xffff
 661 0051 1A       		.byte	0x1a
 662 0052 20       		.byte	0x20
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccV34sSd.s 			page 17


 663 0053 73       		.byte	0x73
 664 0054 00       		.sleb128 0
 665 0055 1A       		.byte	0x1a
 666 0056 9F       		.byte	0x9f
 667 0057 00000000 		.4byte	0
 668 005b 00000000 		.4byte	0
 669              		.section	.debug_aranges,"",%progbits
 670 0000 44000000 		.4byte	0x44
 671 0004 0200     		.2byte	0x2
 672 0006 00000000 		.4byte	.Ldebug_info0
 673 000a 04       		.byte	0x4
 674 000b 00       		.byte	0
 675 000c 0000     		.2byte	0
 676 000e 0000     		.2byte	0
 677 0010 00000000 		.4byte	.LFB0
 678 0014 14000000 		.4byte	.LFE0-.LFB0
 679 0018 00000000 		.4byte	.LFB1
 680 001c 18000000 		.4byte	.LFE1-.LFB1
 681 0020 00000000 		.4byte	.LFB2
 682 0024 10000000 		.4byte	.LFE2-.LFB2
 683 0028 00000000 		.4byte	.LFB3
 684 002c 10000000 		.4byte	.LFE3-.LFB3
 685 0030 00000000 		.4byte	.LFB4
 686 0034 14000000 		.4byte	.LFE4-.LFB4
 687 0038 00000000 		.4byte	.LFB5
 688 003c 10000000 		.4byte	.LFE5-.LFB5
 689 0040 00000000 		.4byte	0
 690 0044 00000000 		.4byte	0
 691              		.section	.debug_ranges,"",%progbits
 692              	.Ldebug_ranges0:
 693 0000 00000000 		.4byte	.LFB0
 694 0004 14000000 		.4byte	.LFE0
 695 0008 00000000 		.4byte	.LFB1
 696 000c 18000000 		.4byte	.LFE1
 697 0010 00000000 		.4byte	.LFB2
 698 0014 10000000 		.4byte	.LFE2
 699 0018 00000000 		.4byte	.LFB3
 700 001c 10000000 		.4byte	.LFE3
 701 0020 00000000 		.4byte	.LFB4
 702 0024 14000000 		.4byte	.LFE4
 703 0028 00000000 		.4byte	.LFB5
 704 002c 10000000 		.4byte	.LFE5
 705 0030 00000000 		.4byte	0
 706 0034 00000000 		.4byte	0
 707              		.section	.debug_line,"",%progbits
 708              	.Ldebug_line0:
 709 0000 C6000000 		.section	.debug_str,"MS",%progbits,1
 709      02004500 
 709      00000201 
 709      FB0E0D00 
 709      01010101 
 710              	.LASF29:
 711 0000 47656E65 		.ascii	"Generated_Source\\PSoC4\\mUART_rx.c\000"
 711      72617465 
 711      645F536F 
 711      75726365 
 711      5C50536F 
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccV34sSd.s 			page 18


 712              	.LASF15:
 713 0022 72656733 		.ascii	"reg32\000"
 713      3200
 714              	.LASF27:
 715 0028 6D61736B 		.ascii	"maskedStatus\000"
 715      65645374 
 715      61747573 
 715      00
 716              	.LASF19:
 717 0035 76616C75 		.ascii	"value\000"
 717      6500
 718              	.LASF17:
 719 003b 6D554152 		.ascii	"mUART_rx_Write\000"
 719      545F7278 
 719      5F577269 
 719      746500
 720              	.LASF28:
 721 004a 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 721      43313120 
 721      352E342E 
 721      31203230 
 721      31363036 
 722 007d 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 722      20726576 
 722      6973696F 
 722      6E203233 
 722      37373135 
 723 00b0 67202D4F 		.ascii	"g -Os -ffunction-sections -ffat-lto-objects\000"
 723      73202D66 
 723      66756E63 
 723      74696F6E 
 723      2D736563 
 724              	.LASF12:
 725 00dc 666C6F61 		.ascii	"float\000"
 725      7400
 726              	.LASF1:
 727 00e2 756E7369 		.ascii	"unsigned char\000"
 727      676E6564 
 727      20636861 
 727      7200
 728              	.LASF24:
 729 00f0 64725661 		.ascii	"drVal\000"
 729      6C00
 730              	.LASF5:
 731 00f6 6C6F6E67 		.ascii	"long unsigned int\000"
 731      20756E73 
 731      69676E65 
 731      6420696E 
 731      7400
 732              	.LASF3:
 733 0108 73686F72 		.ascii	"short unsigned int\000"
 733      7420756E 
 733      7369676E 
 733      65642069 
 733      6E7400
 734              	.LASF16:
 735 011b 6D554152 		.ascii	"mUART_rx_SetDriveMode\000"
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccV34sSd.s 			page 19


 735      545F7278 
 735      5F536574 
 735      44726976 
 735      654D6F64 
 736              	.LASF13:
 737 0131 646F7562 		.ascii	"double\000"
 737      6C6500
 738              	.LASF10:
 739 0138 75696E74 		.ascii	"uint16\000"
 739      313600
 740              	.LASF23:
 741 013f 706F7369 		.ascii	"position\000"
 741      74696F6E 
 741      00
 742              	.LASF11:
 743 0148 75696E74 		.ascii	"uint32\000"
 743      333200
 744              	.LASF25:
 745 014f 696E7472 		.ascii	"intrCfg\000"
 745      43666700 
 746              	.LASF8:
 747 0157 756E7369 		.ascii	"unsigned int\000"
 747      676E6564 
 747      20696E74 
 747      00
 748              	.LASF7:
 749 0164 6C6F6E67 		.ascii	"long long unsigned int\000"
 749      206C6F6E 
 749      6720756E 
 749      7369676E 
 749      65642069 
 750              	.LASF18:
 751 017b 6D6F6465 		.ascii	"mode\000"
 751      00
 752              	.LASF21:
 753 0180 6D554152 		.ascii	"mUART_rx_ReadDataReg\000"
 753      545F7278 
 753      5F526561 
 753      64446174 
 753      61526567 
 754              	.LASF22:
 755 0195 6D554152 		.ascii	"mUART_rx_SetInterruptMode\000"
 755      545F7278 
 755      5F536574 
 755      496E7465 
 755      72727570 
 756              	.LASF6:
 757 01af 6C6F6E67 		.ascii	"long long int\000"
 757      206C6F6E 
 757      6720696E 
 757      7400
 758              	.LASF20:
 759 01bd 6D554152 		.ascii	"mUART_rx_Read\000"
 759      545F7278 
 759      5F526561 
 759      6400
 760              	.LASF14:
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccV34sSd.s 			page 20


 761 01cb 63686172 		.ascii	"char\000"
 761      00
 762              	.LASF30:
 763 01d0 433A5C55 		.ascii	"C:\\Users\\PC\\Documents\\PSoC Creator\\yellowChip\\"
 763      73657273 
 763      5C50435C 
 763      446F6375 
 763      6D656E74 
 764 01fe 626F6F74 		.ascii	"bootloader.cydsn\000"
 764      6C6F6164 
 764      65722E63 
 764      7964736E 
 764      00
 765              	.LASF2:
 766 020f 73686F72 		.ascii	"short int\000"
 766      7420696E 
 766      7400
 767              	.LASF9:
 768 0219 75696E74 		.ascii	"uint8\000"
 768      3800
 769              	.LASF26:
 770 021f 6D554152 		.ascii	"mUART_rx_ClearInterrupt\000"
 770      545F7278 
 770      5F436C65 
 770      6172496E 
 770      74657272 
 771              	.LASF4:
 772 0237 6C6F6E67 		.ascii	"long int\000"
 772      20696E74 
 772      00
 773              	.LASF0:
 774 0240 7369676E 		.ascii	"signed char\000"
 774      65642063 
 774      68617200 
 775              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
